{"https://unpkg.com/deck.gl@latest/dist.min.js": {"encoded_content": "(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === 'object' && typeof module === 'object')
    module.exports = factory();
  else if (typeof define === 'function' && define.amd) define([], factory);
        else if (typeof exports === 'object') exports['deck'] = factory();
  else root['deck'] = factory();})(globalThis, function () {
"use strict";var __exports__=(()=>{var Iz=Object.create;var Gl=Object.defineProperty;var Rz=Object.getOwnPropertyDescriptor;var Oz=Object.getOwnPropertyNames;var Lz=Object.getPrototypeOf,Bz=Object.prototype.hasOwnProperty;var Nz=(e,t,r)=>t in e?Gl(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var TE=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Le=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Wt=(e,t)=>{for(var r in t)Gl(e,r,{get:t[r],enumerable:!0})},vE=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of Oz(t))!Bz.call(e,s)&&s!==r&&Gl(e,s,{get:()=>t[s],enumerable:!(n=Rz(t,s))||n.enumerable});return e};var os=(e,t,r)=>(r=e!=null?Iz(Lz(e)):{},vE(t||!e||!e.__esModule?Gl(r,"default",{value:e,enumerable:!0}):r,e)),Fz=e=>vE(Gl({},"__esModule",{value:!0}),e);var Y=(e,t,r)=>(Nz(e,typeof t!="symbol"?t+"":t,r),r);var RR=Le((WFt,nb)=>{"use strict";nb.exports=e0;nb.exports.default=e0;function e0(e,t,r){r=r||2;var n=t&&t.length,s=n?t[0]*r:e.length,i=CR(e,0,s,r,!0),o=[];if(!i||i.next===i.prev)return o;var a,c,l,f,h,u,d;if(n&&(i=bK(e,t,i,r)),e.length>80*r){a=l=e[0],c=f=e[1];for(var p=r;p<s;p+=r)h=e[p],u=e[p+1],h<a&&(a=h),u<c&&(c=u),h>l&&(l=h),u>f&&(f=u);d=Math.max(l-a,f-c),d=d!==0?32767/d:0}return iu(i,o,r,a,c,d,0),o}function CR(e,t,r,n,s){var i,o;if(s===rb(e,t,r,n)>0)for(i=t;i<r;i+=n)o=wR(i,e[i],e[i+1],o);else for(i=r-n;i>=t;i-=n)o=wR(i,e[i],e[i+1],o);return o&&r0(o,o.next)&&(au(o),o=o.next),o}function Wo(e,t){if(!e)return e;t||(t=e);var r=e,n;do if(n=!1,!r.steiner&&(r0(r,r.next)||Kt(r.prev,r,r.next)===0)){if(au(r),r=t=r.prev,r===r.next)break;n=!0}else r=r.next;while(n||r!==t);return t}function iu(e,t,r,n,s,i,o){if(e){!o&&i&&SK(e,n,s,i);for(var a=e,c,l;e.prev!==e.next;){if(c=e.prev,l=e.next,i?_K(e,n,s,i):xK(e)){t.push(c.i/r|0),t.push(e.i/r|0),t.push(l.i/r|0),au(e),e=l.next,a=l.next;continue}if(e=l,e===a){o?o===1?(e=yK(Wo(e),t,r),iu(e,t,r,n,s,i,2)):o===2&&AK(e,t,r,n,s,i):iu(Wo(e),t,r,n,s,i,1);break}}}}function xK(e){var t=e.prev,r=e,n=e.next;if(Kt(t,r,n)>=0)return!1;for(var s=t.x,i=r.x,o=n.x,a=t.y,c=r.y,l=n.y,f=s<i?s<o?s:o:i<o?i:o,h=a<c?a<l?a:l:c<l?c:l,u=s>i?s>o?s:o:i>o?i:o,d=a>c?a>l?a:l:c>l?c:l,p=n.next;p!==t;){if(p.x>=f&&p.x<=u&&p.y>=h&&p.y<=d&&Sc(s,a,i,c,o,l,p.x,p.y)&&Kt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function _K(e,t,r,n){var s=e.prev,i=e,o=e.next;if(Kt(s,i,o)>=0)return!1;for(var a=s.x,c=i.x,l=o.x,f=s.y,h=i.y,u=o.y,d=a<c?a<l?a:l:c<l?c:l,p=f<h?f<u?f:u:h<u?h:u,m=a>c?a>l?a:l:c>l?c:l,g=f>h?f>u?f:u:h>u?h:u,x=tb(d,p,t,r,n),A=tb(m,g,t,r,n),_=e.prevZ,y=e.nextZ;_&&_.z>=x&&y&&y.z<=A;){if(_.x>=d&&_.x<=m&&_.y>=p&&_.y<=g&&_!==s&&_!==o&&Sc(a,f,c,h,l,u,_.x,_.y)&&Kt(_.prev,_,_.next)>=0||(_=_.prevZ,y.x>=d&&y.x<=m&&y.y>=p&&y.y<=g&&y!==s&&y!==o&&Sc(a,f,c,h,l,u,y.x,y.y)&&Kt(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;_&&_.z>=x;){if(_.x>=d&&_.x<=m&&_.y>=p&&_.y<=g&&_!==s&&_!==o&&Sc(a,f,c,h,l,u,_.x,_.y)&&Kt(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;y&&y.z<=A;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=g&&y!==s&&y!==o&&Sc(a,f,c,h,l,u,y.x,y.y)&&Kt(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function yK(e,t,r){var n=e;do{var s=n.prev,i=n.next.next;!r0(s,i)&&PR(s,n,n.next,i)&&ou(s,i)&&ou(i,s)&&(t.push(s.i/r|0),t.push(n.i/r|0),t.push(i.i/r|0),au(n),au(n.next),n=e=i),n=n.next}while(n!==e);return Wo(n)}function AK(e,t,r,n,s,i){var o=e;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&PK(o,a)){var c=IR(o,a);o=Wo(o,o.next),c=Wo(c,c.next),iu(o,t,r,n,s,i,0),iu(c,t,r,n,s,i,0);return}a=a.next}o=o.next}while(o!==e)}function bK(e,t,r,n){var s=[],i,o,a,c,l;for(i=0,o=t.length;i<o;i++)a=t[i]*n,c=i<o-1?t[i+1]*n:e.length,l=CR(e,a,c,n,!1),l===l.next&&(l.steiner=!0),s.push(CK(l));for(s.sort(TK),i=0;i<s.length;i++)r=vK(s[i],r);return r}function TK(e,t){return e.x-t.x}function vK(e,t){var r=EK(e,t);if(!r)return t;var n=IR(r,e);return Wo(n,n.next),Wo(r,r.next)}function EK(e,t){var r=t,n=e.x,s=e.y,i=-1/0,o;do{if(s<=r.y&&s>=r.next.y&&r.next.y!==r.y){var a=r.x+(s-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(a<=n&&a>i&&(i=a,o=r.x<r.next.x?r:r.next,a===n))return o}r=r.next}while(r!==t);if(!o)return null;var c=o,l=o.x,f=o.y,h=1/0,u;r=o;do n>=r.x&&r.x>=l&&n!==r.x&&Sc(s<f?n:i,s,l,f,s<f?i:n,s,r.x,r.y)&&(u=Math.abs(s-r.y)/(n-r.x),ou(r,e)&&(u<h||u===h&&(r.x>o.x||r.x===o.x&&MK(o,r)))&&(o=r,h=u)),r=r.next;while(r!==c);return o}function MK(e,t){return Kt(e.prev,e,t.prev)<0&&Kt(t.next,e,e.next)<0}function SK(e,t,r,n){var s=e;do s.z===0&&(s.z=tb(s.x,s.y,t,r,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==e);s.prevZ.nextZ=null,s.prevZ=null,wK(s)}function wK(e){var t,r,n,s,i,o,a,c,l=1;do{for(r=e,e=null,i=null,o=0;r;){for(o++,n=r,a=0,t=0;t<l&&(a++,n=n.nextZ,!!n);t++);for(c=l;a>0||c>0&&n;)a!==0&&(c===0||!n||r.z<=n.z)?(s=r,r=r.nextZ,a--):(s=n,n=n.nextZ,c--),i?i.nextZ=s:e=s,s.prevZ=i,i=s;r=n}i.nextZ=null,l*=2}while(o>1);return e}function tb(e,t,r,n,s){return e=(e-r)*s|0,t=(t-n)*s|0,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function CK(e){var t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e);return r}function Sc(e,t,r,n,s,i,o,a){return(s-o)*(t-a)>=(e-o)*(i-a)&&(e-o)*(n-a)>=(r-o)*(t-a)&&(r-o)*(i-a)>=(s-o)*(n-a)}function PK(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!IK(e,t)&&(ou(e,t)&&ou(t,e)&&RK(e,t)&&(Kt(e.prev,e,t.prev)||Kt(e,t.prev,t))||r0(e,t)&&Kt(e.prev,e,e.next)>0&&Kt(t.prev,t,t.next)>0)}function Kt(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function r0(e,t){return e.x===t.x&&e.y===t.y}function PR(e,t,r,n){var s=t0(Kt(e,t,r)),i=t0(Kt(e,t,n)),o=t0(Kt(r,n,e)),a=t0(Kt(r,n,t));return!!(s!==i&&o!==a||s===0&&Qg(e,r,t)||i===0&&Qg(e,n,t)||o===0&&Qg(r,e,n)||a===0&&Qg(r,t,n))}function Qg(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function t0(e){return e>0?1:e<0?-1:0}function IK(e,t){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&PR(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function ou(e,t){return Kt(e.prev,e,e.next)<0?Kt(e,t,e.next)>=0&&Kt(e,e.prev,t)>=0:Kt(e,t,e.prev)<0||Kt(e,e.next,t)<0}function RK(e,t){var r=e,n=!1,s=(e.x+t.x)/2,i=(e.y+t.y)/2;do r.y>i!=r.next.y>i&&r.next.y!==r.y&&s<(r.next.x-r.x)*(i-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next;while(r!==e);return n}function IR(e,t){var r=new eb(e.i,e.x,e.y),n=new eb(t.i,t.x,t.y),s=e.next,i=t.prev;return e.next=t,t.prev=e,r.next=s,s.prev=r,n.next=r,r.prev=n,i.next=n,n.prev=i,n}function wR(e,t,r,n){var s=new eb(e,t,r);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function au(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function eb(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}e0.deviation=function(e,t,r,n){var s=t&&t.length,i=s?t[0]*r:e.length,o=Math.abs(rb(e,0,i,r));if(s)for(var a=0,c=t.length;a<c;a++){var l=t[a]*r,f=a<c-1?t[a+1]*r:e.length;o-=Math.abs(rb(e,l,f,r))}var h=0;for(a=0;a<n.length;a+=3){var u=n[a]*r,d=n[a+1]*r,p=n[a+2]*r;h+=Math.abs((e[u]-e[p])*(e[d+1]-e[u+1])-(e[u]-e[d])*(e[p+1]-e[u+1]))}return o===0&&h===0?0:Math.abs((h-o)/o)};function rb(e,t,r,n){for(var s=0,i=t,o=r-n;i<r;i+=n)s+=(e[o]-e[i])*(e[i+1]+e[o+1]),o=i;return s}e0.flatten=function(e){for(var t=e[0][0].length,r={vertices:[],holes:[],dimensions:t},n=0,s=0;s<e.length;s++){for(var i=0;i<e[s].length;i++)for(var o=0;o<t;o++)r.vertices.push(e[s][i][o]);s>0&&(n+=e[s-1].length,r.holes.push(n))}return r}});var x0=Le(Ps=>{"use strict";var TO=":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",iZ=TO+"\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040",vO="["+TO+"]["+iZ+"]*",oZ=new RegExp("^"+vO+"$"),aZ=function(e,t){let r=[],n=t.exec(e);for(;n;){let s=[];s.startIndex=t.lastIndex-n[0].length;let i=n.length;for(let o=0;o<i;o++)s.push(n[o]);r.push(s),n=t.exec(e)}return r},cZ=function(e){let t=oZ.exec(e);return!(t===null||typeof t>"u")};Ps.isExist=function(e){return typeof e<"u"};Ps.isEmptyObject=function(e){return Object.keys(e).length===0};Ps.merge=function(e,t,r){if(t){let n=Object.keys(t),s=n.length;for(let i=0;i<s;i++)r==="strict"?e[n[i]]=[t[n[i]]]:e[n[i]]=t[n[i]]}};Ps.getValue=function(e){return Ps.isExist(e)?e:""};Ps.isName=cZ;Ps.getAllMatches=aZ;Ps.nameRegexp=vO});var lb=Le(CO=>{"use strict";var cb=x0(),lZ={allowBooleanAttributes:!1,unpairedTags:[]};CO.validate=function(e,t){t=Object.assign({},lZ,t);let r=[],n=!1,s=!1;e[0]==="\uFEFF"&&(e=e.substr(1));for(let i=0;i<e.length;i++)if(e[i]==="<"&&e[i+1]==="?"){if(i+=2,i=MO(e,i),i.err)return i}else if(e[i]==="<"){let o=i;if(i++,e[i]==="!"){i=SO(e,i);continue}else{let a=!1;e[i]==="/"&&(a=!0,i++);let c="";for(;i<e.length&&e[i]!==">"&&e[i]!==" "&&e[i]!=="	"&&e[i]!==`
`&&e[i]!=="\r";i++)c+=e[i];if(c=c.trim(),c[c.length-1]==="/"&&(c=c.substring(0,c.length-1),i--),!xZ(c)){let h;return c.trim().length===0?h="Invalid space after '<'.":h="Tag '"+c+"' is an invalid name.",ce("InvalidTag",h,ar(e,i))}let l=uZ(e,i);if(l===!1)return ce("InvalidAttr","Attributes for '"+c+"' have open quote.",ar(e,i));let f=l.value;if(i=l.index,f[f.length-1]==="/"){let h=i-f.length;f=f.substring(0,f.length-1);let u=wO(f,t);if(u===!0)n=!0;else return ce(u.err.code,u.err.msg,ar(e,h+u.err.line))}else if(a)if(l.tagClosed){if(f.trim().length>0)return ce("InvalidTag","Closing tag '"+c+"' can't have attributes or invalid starting.",ar(e,o));if(r.length===0)return ce("InvalidTag","Closing tag '"+c+"' has not been opened.",ar(e,o));{let h=r.pop();if(c!==h.tagName){let u=ar(e,h.tagStartPos);return ce("InvalidTag","Expected closing tag '"+h.tagName+"' (opened in line "+u.line+", col "+u.col+") instead of closing tag '"+c+"'.",ar(e,o))}r.length==0&&(s=!0)}}else return ce("InvalidTag","Closing tag '"+c+"' doesn't have proper closing.",ar(e,i));else{let h=wO(f,t);if(h!==!0)return ce(h.err.code,h.err.msg,ar(e,i-f.length+h.err.line));if(s===!0)return ce("InvalidXml","Multiple possible root nodes found.",ar(e,i));t.unpairedTags.indexOf(c)!==-1||r.push({tagName:c,tagStartPos:o}),n=!0}for(i++;i<e.length;i++)if(e[i]==="<")if(e[i+1]==="!"){i++,i=SO(e,i);continue}else if(e[i+1]==="?"){if(i=MO(e,++i),i.err)return i}else break;else if(e[i]==="&"){let h=mZ(e,i);if(h==-1)return ce("InvalidChar","char '&' is not expected.",ar(e,i));i=h}else if(s===!0&&!EO(e[i]))return ce("InvalidXml","Extra text at the end",ar(e,i));e[i]==="<"&&i--}}else{if(EO(e[i]))continue;return ce("InvalidChar","char '"+e[i]+"' is not expected.",ar(e,i))}if(n){if(r.length==1)return ce("InvalidTag","Unclosed tag '"+r[0].tagName+"'.",ar(e,r[0].tagStartPos));if(r.length>0)return ce("InvalidXml","Invalid '"+JSON.stringify(r.map(i=>i.tagName),null,4).replace(/\r?\n/g,"")+"' found.",{line:1,col:1})}else return ce("InvalidXml","Start tag expected.",1);return!0};function EO(e){return e===" "||e==="	"||e===`
`||e==="\r"}function MO(e,t){let r=t;for(;t<e.length;t++)if(e[t]=="?"||e[t]==" "){let n=e.substr(r,t-r);if(t>5&&n==="xml")return ce("InvalidXml","XML declaration allowed only at the start of the document.",ar(e,t));if(e[t]=="?"&&e[t+1]==">"){t++;break}else continue}return t}function SO(e,t){if(e.length>t+5&&e[t+1]==="-"&&e[t+2]==="-"){for(t+=3;t<e.length;t++)if(e[t]==="-"&&e[t+1]==="-"&&e[t+2]===">"){t+=2;break}}else if(e.length>t+8&&e[t+1]==="D"&&e[t+2]==="O"&&e[t+3]==="C"&&e[t+4]==="T"&&e[t+5]==="Y"&&e[t+6]==="P"&&e[t+7]==="E"){let r=1;for(t+=8;t<e.length;t++)if(e[t]==="<")r++;else if(e[t]===">"&&(r--,r===0))break}else if(e.length>t+9&&e[t+1]==="["&&e[t+2]==="C"&&e[t+3]==="D"&&e[t+4]==="A"&&e[t+5]==="T"&&e[t+6]==="A"&&e[t+7]==="["){for(t+=8;t<e.length;t++)if(e[t]==="]"&&e[t+1]==="]"&&e[t+2]===">"){t+=2;break}}return t}var fZ='"',hZ="'";function uZ(e,t){let r="",n="",s=!1;for(;t<e.length;t++){if(e[t]===fZ||e[t]===hZ)n===""?n=e[t]:n!==e[t]||(n="");else if(e[t]===">"&&n===""){s=!0;break}r+=e[t]}return n!==""?!1:{value:r,index:t,tagClosed:s}}var dZ=new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`,"g");function wO(e,t){let r=cb.getAllMatches(e,dZ),n={};for(let s=0;s<r.length;s++){if(r[s][1].length===0)return ce("InvalidAttr","Attribute '"+r[s][2]+"' has no space in starting.",Au(r[s]));if(r[s][3]!==void 0&&r[s][4]===void 0)return ce("InvalidAttr","Attribute '"+r[s][2]+"' is without value.",Au(r[s]));if(r[s][3]===void 0&&!t.allowBooleanAttributes)return ce("InvalidAttr","boolean attribute '"+r[s][2]+"' is not allowed.",Au(r[s]));let i=r[s][2];if(!gZ(i))return ce("InvalidAttr","Attribute '"+i+"' is an invalid name.",Au(r[s]));if(!n.hasOwnProperty(i))n[i]=1;else return ce("InvalidAttr","Attribute '"+i+"' is repeated.",Au(r[s]))}return!0}function pZ(e,t){let r=/\d/;for(e[t]==="x"&&(t++,r=/[\da-fA-F]/);t<e.length;t++){if(e[t]===";")return t;if(!e[t].match(r))break}return-1}function mZ(e,t){if(t++,e[t]===";")return-1;if(e[t]==="#")return t++,pZ(e,t);let r=0;for(;t<e.length;t++,r++)if(!(e[t].match(/\w/)&&r<20)){if(e[t]===";")break;return-1}return t}function ce(e,t,r){return{err:{code:e,msg:t,line:r.line||r,col:r.col}}}function gZ(e){return cb.isName(e)}function xZ(e){return cb.isName(e)}function ar(e,t){let r=e.substring(0,t).split(/\r?\n/);return{line:r.length,col:r[r.length-1].length+1}}function Au(e){return e.startIndex+e[1].length}});var IO=Le(fb=>{var PO={preserveOrder:!1,attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,removeNSPrefix:!1,allowBooleanAttributes:!1,parseTagValue:!0,parseAttributeValue:!1,trimValues:!0,cdataPropName:!1,numberParseOptions:{hex:!0,leadingZeros:!0,eNotation:!0},tagValueProcessor:function(e,t){return t},attributeValueProcessor:function(e,t){return t},stopNodes:[],alwaysCreateTextNode:!1,isArray:()=>!1,commentPropName:!1,unpairedTags:[],processEntities:!0,htmlEntities:!1,ignoreDeclaration:!1,ignorePiTags:!1,transformTagName:!1,transformAttributeName:!1,updateTag:function(e,t,r){return e}},_Z=function(e){return Object.assign({},PO,e)};fb.buildOptions=_Z;fb.defaultOptions=PO});var OO=Le((Rkt,RO)=>{"use strict";var hb=class{constructor(t){this.tagname=t,this.child=[],this[":@"]={}}add(t,r){t==="__proto__"&&(t="#__proto__"),this.child.push({[t]:r})}addChild(t){t.tagname==="__proto__"&&(t.tagname="#__proto__"),t[":@"]&&Object.keys(t[":@"]).length>0?this.child.push({[t.tagname]:t.child,[":@"]:t[":@"]}):this.child.push({[t.tagname]:t.child})}};RO.exports=hb});var BO=Le((Okt,LO)=>{var yZ=x0();function AZ(e,t){let r={};if(e[t+3]==="O"&&e[t+4]==="C"&&e[t+5]==="T"&&e[t+6]==="Y"&&e[t+7]==="P"&&e[t+8]==="E"){t=t+9;let n=1,s=!1,i=!1,o="";for(;t<e.length;t++)if(e[t]==="<"&&!i){if(s&&vZ(e,t))t+=7,[entityName,val,t]=bZ(e,t+1),val.indexOf("&")===-1&&(r[wZ(entityName)]={regx:RegExp(`&${entityName};`,"g"),val});else if(s&&EZ(e,t))t+=8;else if(s&&MZ(e,t))t+=8;else if(s&&SZ(e,t))t+=9;else if(TZ)i=!0;else throw new Error("Invalid DOCTYPE");n++,o=""}else if(e[t]===">"){if(i?e[t-1]==="-"&&e[t-2]==="-"&&(i=!1,n--):n--,n===0)break}else e[t]==="["?s=!0:o+=e[t];if(n!==0)throw new Error("Unclosed DOCTYPE")}else throw new Error("Invalid Tag instead of DOCTYPE");return{entities:r,i:t}}function bZ(e,t){let r="";for(;t<e.length&&e[t]!=="'"&&e[t]!=='"';t++)r+=e[t];if(r=r.trim(),r.indexOf(" ")!==-1)throw new Error("External entites are not supported");let n=e[t++],s="";for(;t<e.length&&e[t]!==n;t++)s+=e[t];return[r,s,t]}function TZ(e,t){return e[t+1]==="!"&&e[t+2]==="-"&&e[t+3]==="-"}function vZ(e,t){return e[t+1]==="!"&&e[t+2]==="E"&&e[t+3]==="N"&&e[t+4]==="T"&&e[t+5]==="I"&&e[t+6]==="T"&&e[t+7]==="Y"}function EZ(e,t){return e[t+1]==="!"&&e[t+2]==="E"&&e[t+3]==="L"&&e[t+4]==="E"&&e[t+5]==="M"&&e[t+6]==="E"&&e[t+7]==="N"&&e[t+8]==="T"}function MZ(e,t){return e[t+1]==="!"&&e[t+2]==="A"&&e[t+3]==="T"&&e[t+4]==="T"&&e[t+5]==="L"&&e[t+6]==="I"&&e[t+7]==="S"&&e[t+8]==="T"}function SZ(e,t){return e[t+1]==="!"&&e[t+2]==="N"&&e[t+3]==="O"&&e[t+4]==="T"&&e[t+5]==="A"&&e[t+6]==="T"&&e[t+7]==="I"&&e[t+8]==="O"&&e[t+9]==="N"}function wZ(e){if(yZ.isName(e))return e;throw new Error(`Invalid entity name ${e}`)}LO.exports=AZ});var FO=Le((Lkt,NO)=>{var CZ=/^[-+]?0x[a-fA-F0-9]+$/,PZ=/^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt);!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);var IZ={hex:!0,leadingZeros:!0,decimalPoint:".",eNotation:!0};function RZ(e,t={}){if(t=Object.assign({},IZ,t),!e||typeof e!="string")return e;let r=e.trim();if(t.skipLike!==void 0&&t.skipLike.test(r))return e;if(t.hex&&CZ.test(r))return Number.parseInt(r,16);{let n=PZ.exec(r);if(n){let s=n[1],i=n[2],o=OZ(n[3]),a=n[4]||n[6];if(!t.leadingZeros&&i.length>0&&s&&r[2]!==".")return e;if(!t.leadingZeros&&i.length>0&&!s&&r[1]!==".")return e;{let c=Number(r),l=""+c;return l.search(/[eE]/)!==-1||a?t.eNotation?c:e:r.indexOf(".")!==-1?l==="0"&&o===""||l===o||s&&l==="-"+o?c:e:i?o===l||s+o===l?c:e:r===l||r===s+l?c:e}}else return e}}function OZ(e){return e&&e.indexOf(".")!==-1&&(e=e.replace(/0+$/,""),e==="."?e="0":e[0]==="."?e="0"+e:e[e.length-1]==="."&&(e=e.substr(0,e.length-1))),e}NO.exports=RZ});var UO=Le((Bkt,kO)=>{"use strict";var DO=x0(),bu=OO(),LZ=BO(),BZ=FO(),ub=class{constructor(t){this.options=t,this.currentNode=null,this.tagsNodeStack=[],this.docTypeEntities={},this.lastEntities={apos:{regex:/&(apos|#39|#x27);/g,val:"'"},gt:{regex:/&(gt|#62|#x3E);/g,val:">"},lt:{regex:/&(lt|#60|#x3C);/g,val:"<"},quot:{regex:/&(quot|#34|#x22);/g,val:'"'}},this.ampEntity={regex:/&(amp|#38|#x26);/g,val:"&"},this.htmlEntities={space:{regex:/&(nbsp|#160);/g,val:" "},cent:{regex:/&(cent|#162);/g,val:"\xA2"},pound:{regex:/&(pound|#163);/g,val:"\xA3"},yen:{regex:/&(yen|#165);/g,val:"\xA5"},euro:{regex:/&(euro|#8364);/g,val:"\u20AC"},copyright:{regex:/&(copy|#169);/g,val:"\xA9"},reg:{regex:/&(reg|#174);/g,val:"\xAE"},inr:{regex:/&(inr|#8377);/g,val:"\u20B9"},num_dec:{regex:/&#([0-9]{1,7});/g,val:(r,n)=>String.fromCharCode(Number.parseInt(n,10))},num_hex:{regex:/&#x([0-9a-fA-F]{1,6});/g,val:(r,n)=>String.fromCharCode(Number.parseInt(n,16))}},this.addExternalEntities=NZ,this.parseXml=zZ,this.parseTextData=FZ,this.resolveNameSpace=DZ,this.buildAttributesMap=UZ,this.isItStopNode=GZ,this.replaceEntitiesValue=WZ,this.readStopNodeData=qZ,this.saveTextToParentTag=HZ,this.addChild=VZ}};function NZ(e){let t=Object.keys(e);for(let r=0;r<t.length;r++){let n=t[r];this.lastEntities[n]={regex:new RegExp("&"+n+";","g"),val:e[n]}}}function FZ(e,t,r,n,s,i,o){if(e!==void 0&&(this.options.trimValues&&!n&&(e=e.trim()),e.length>0)){o||(e=this.replaceEntitiesValue(e));let a=this.options.tagValueProcessor(t,e,r,s,i);return a==null?e:typeof a!=typeof e||a!==e?a:this.options.trimValues?pb(e,this.options.parseTagValue,this.options.numberParseOptions):e.trim()===e?pb(e,this.options.parseTagValue,this.options.numberParseOptions):e}}function DZ(e){if(this.options.removeNSPrefix){let t=e.split(":"),r=e.charAt(0)==="/"?"/":"";if(t[0]==="xmlns")return"";t.length===2&&(e=r+t[1])}return e}var kZ=new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`,"gm");function UZ(e,t,r){if(!this.options.ignoreAttributes&&typeof e=="string"){let n=DO.getAllMatches(e,kZ),s=n.length,i={};for(let o=0;o<s;o++){let a=this.resolveNameSpace(n[o][1]),c=n[o][4],l=this.options.attributeNamePrefix+a;if(a.length)if(this.options.transformAttributeName&&(l=this.options.transformAttributeName(l)),l==="__proto__"&&(l="#__proto__"),c!==void 0){this.options.trimValues&&(c=c.trim()),c=this.replaceEntitiesValue(c);let f=this.options.attributeValueProcessor(a,c,t);f==null?i[l]=c:typeof f!=typeof c||f!==c?i[l]=f:i[l]=pb(c,this.options.parseAttributeValue,this.options.numberParseOptions)}else this.options.allowBooleanAttributes&&(i[l]=!0)}if(!Object.keys(i).length)return;if(this.options.attributesGroupName){let o={};return o[this.options.attributesGroupName]=i,o}return i}}var zZ=function(e){e=e.replace(/\r\n?/g,`
`);let t=new bu("!xml"),r=t,n="",s="";for(let i=0;i<e.length;i++)if(e[i]==="<")if(e[i+1]==="/"){let a=jo(e,">",i,"Closing Tag is not closed."),c=e.substring(i+2,a).trim();if(this.options.removeNSPrefix){let h=c.indexOf(":");h!==-1&&(c=c.substr(h+1))}this.options.transformTagName&&(c=this.options.transformTagName(c)),r&&(n=this.saveTextToParentTag(n,r,s));let l=s.substring(s.lastIndexOf(".")+1);if(c&&this.options.unpairedTags.indexOf(c)!==-1)throw new Error(`Unpaired tag can not be used as closing tag: </${c}>`);let f=0;l&&this.options.unpairedTags.indexOf(l)!==-1?(f=s.lastIndexOf(".",s.lastIndexOf(".")-1),this.tagsNodeStack.pop()):f=s.lastIndexOf("."),s=s.substring(0,f),r=this.tagsNodeStack.pop(),n="",i=a}else if(e[i+1]==="?"){let a=db(e,i,!1,"?>");if(!a)throw new Error("Pi Tag is not closed.");if(n=this.saveTextToParentTag(n,r,s),!(this.options.ignoreDeclaration&&a.tagName==="?xml"||this.options.ignorePiTags)){let c=new bu(a.tagName);c.add(this.options.textNodeName,""),a.tagName!==a.tagExp&&a.attrExpPresent&&(c[":@"]=this.buildAttributesMap(a.tagExp,s,a.tagName)),this.addChild(r,c,s)}i=a.closeIndex+1}else if(e.substr(i+1,3)==="!--"){let a=jo(e,"-->",i+4,"Comment is not closed.");if(this.options.commentPropName){let c=e.substring(i+4,a-2);n=this.saveTextToParentTag(n,r,s),r.add(this.options.commentPropName,[{[this.options.textNodeName]:c}])}i=a}else if(e.substr(i+1,2)==="!D"){let a=LZ(e,i);this.docTypeEntities=a.entities,i=a.i}else if(e.substr(i+1,2)==="!["){let a=jo(e,"]]>",i,"CDATA is not closed.")-2,c=e.substring(i+9,a);n=this.saveTextToParentTag(n,r,s);let l=this.parseTextData(c,r.tagname,s,!0,!1,!0,!0);l==null&&(l=""),this.options.cdataPropName?r.add(this.options.cdataPropName,[{[this.options.textNodeName]:c}]):r.add(this.options.textNodeName,l),i=a+2}else{let a=db(e,i,this.options.removeNSPrefix),c=a.tagName,l=a.rawTagName,f=a.tagExp,h=a.attrExpPresent,u=a.closeIndex;this.options.transformTagName&&(c=this.options.transformTagName(c)),r&&n&&r.tagname!=="!xml"&&(n=this.saveTextToParentTag(n,r,s,!1));let d=r;if(d&&this.options.unpairedTags.indexOf(d.tagname)!==-1&&(r=this.tagsNodeStack.pop(),s=s.substring(0,s.lastIndexOf("."))),c!==t.tagname&&(s+=s?"."+c:c),this.isItStopNode(this.options.stopNodes,s,c)){let p="";if(f.length>0&&f.lastIndexOf("/")===f.length-1)c[c.length-1]==="/"?(c=c.substr(0,c.length-1),s=s.substr(0,s.length-1),f=c):f=f.substr(0,f.length-1),i=a.closeIndex;else if(this.options.unpairedTags.indexOf(c)!==-1)i=a.closeIndex;else{let g=this.readStopNodeData(e,l,u+1);if(!g)throw new Error(`Unexpected end of ${l}`);i=g.i,p=g.tagContent}let m=new bu(c);c!==f&&h&&(m[":@"]=this.buildAttributesMap(f,s,c)),p&&(p=this.parseTextData(p,c,s,!0,h,!0,!0)),s=s.substr(0,s.lastIndexOf(".")),m.add(this.options.textNodeName,p),this.addChild(r,m,s)}else{if(f.length>0&&f.lastIndexOf("/")===f.length-1){c[c.length-1]==="/"?(c=c.substr(0,c.length-1),s=s.substr(0,s.length-1),f=c):f=f.substr(0,f.length-1),this.options.transformTagName&&(c=this.options.transformTagName(c));let p=new bu(c);c!==f&&h&&(p[":@"]=this.buildAttributesMap(f,s,c)),this.addChild(r,p,s),s=s.substr(0,s.lastIndexOf("."))}else{let p=new bu(c);this.tagsNodeStack.push(r),c!==f&&h&&(p[":@"]=this.buildAttributesMap(f,s,c)),this.addChild(r,p,s),r=p}n="",i=u}}else n+=e[i];return t.child};function VZ(e,t,r){let n=this.options.updateTag(t.tagname,r,t[":@"]);n===!1||(typeof n=="string"&&(t.tagname=n),e.addChild(t))}var WZ=function(e){if(this.options.processEntities){for(let t in this.docTypeEntities){let r=this.docTypeEntities[t];e=e.replace(r.regx,r.val)}for(let t in this.lastEntities){let r=this.lastEntities[t];e=e.replace(r.regex,r.val)}if(this.options.htmlEntities)for(let t in this.htmlEntities){let r=this.htmlEntities[t];e=e.replace(r.regex,r.val)}e=e.replace(this.ampEntity.regex,this.ampEntity.val)}return e};function HZ(e,t,r,n){return e&&(n===void 0&&(n=Object.keys(t.child).length===0),e=this.parseTextData(e,t.tagname,r,!1,t[":@"]?Object.keys(t[":@"]).length!==0:!1,n),e!==void 0&&e!==""&&t.add(this.options.textNodeName,e),e=""),e}function GZ(e,t,r){let n="*."+r;for(let s in e){let i=e[s];if(n===i||t===i)return!0}return!1}function jZ(e,t,r=">"){let n,s="";for(let i=t;i<e.length;i++){let o=e[i];if(n)o===n&&(n="");else if(o==='"'||o==="'")n=o;else if(o===r[0])if(r[1]){if(e[i+1]===r[1])return{data:s,index:i}}else return{data:s,index:i};else o==="	"&&(o=" ");s+=o}}function jo(e,t,r,n){let s=e.indexOf(t,r);if(s===-1)throw new Error(n);return s+t.length-1}function db(e,t,r,n=">"){let s=jZ(e,t+1,n);if(!s)return;let i=s.data,o=s.index,a=i.search(/\s/),c=i,l=!0;a!==-1&&(c=i.substring(0,a),i=i.substring(a+1).trimStart());let f=c;if(r){let h=c.indexOf(":");h!==-1&&(c=c.substr(h+1),l=c!==s.data.substr(h+1))}return{tagName:c,tagExp:i,closeIndex:o,attrExpPresent:l,rawTagName:f}}function qZ(e,t,r){let n=r,s=1;for(;r<e.length;r++)if(e[r]==="<")if(e[r+1]==="/"){let i=jo(e,">",r,`${t} is not closed`);if(e.substring(r+2,i).trim()===t&&(s--,s===0))return{tagContent:e.substring(n,r),i};r=i}else if(e[r+1]==="?")r=jo(e,"?>",r+1,"StopNode is not closed.");else if(e.substr(r+1,3)==="!--")r=jo(e,"-->",r+3,"StopNode is not closed.");else if(e.substr(r+1,2)==="![")r=jo(e,"]]>",r,"StopNode is not closed.")-2;else{let i=db(e,r,">");i&&((i&&i.tagName)===t&&i.tagExp[i.tagExp.length-1]!=="/"&&s++,r=i.closeIndex)}}function pb(e,t,r){if(t&&typeof e=="string"){let n=e.trim();return n==="true"?!0:n==="false"?!1:BZ(e,r)}else return DO.isExist(e)?e:""}kO.exports=ub});var WO=Le(VO=>{"use strict";function XZ(e,t){return zO(e,t)}function zO(e,t,r){let n,s={};for(let i=0;i<e.length;i++){let o=e[i],a=YZ(o),c="";if(r===void 0?c=a:c=r+"."+a,a===t.textNodeName)n===void 0?n=o[a]:n+=""+o[a];else{if(a===void 0)continue;if(o[a]){let l=zO(o[a],t,c),f=KZ(l,t);o[":@"]?$Z(l,o[":@"],c,t):Object.keys(l).length===1&&l[t.textNodeName]!==void 0&&!t.alwaysCreateTextNode?l=l[t.textNodeName]:Object.keys(l).length===0&&(t.alwaysCreateTextNode?l[t.textNodeName]="":l=""),s[a]!==void 0&&s.hasOwnProperty(a)?(Array.isArray(s[a])||(s[a]=[s[a]]),s[a].push(l)):t.isArray(a,c,f)?s[a]=[l]:s[a]=l}}}return typeof n=="string"?n.length>0&&(s[t.textNodeName]=n):n!==void 0&&(s[t.textNodeName]=n),s}function YZ(e){let t=Object.keys(e);for(let r=0;r<t.length;r++){let n=t[r];if(n!==":@")return n}}function $Z(e,t,r,n){if(t){let s=Object.keys(t),i=s.length;for(let o=0;o<i;o++){let a=s[o];n.isArray(a,r+"."+a,!0,!0)?e[a]=[t[a]]:e[a]=t[a]}}}function KZ(e,t){let{textNodeName:r}=t,n=Object.keys(e).length;return!!(n===0||n===1&&(e[r]||typeof e[r]=="boolean"||e[r]===0))}VO.prettify=XZ});var GO=Le((Fkt,HO)=>{var{buildOptions:ZZ}=IO(),JZ=UO(),{prettify:QZ}=WO(),tJ=lb(),mb=class{constructor(t){this.externalEntities={},this.options=ZZ(t)}parse(t,r){if(typeof t!="string")if(t.toString)t=t.toString();else throw new Error("XML data is accepted in String or Bytes[] form.");if(r){r===!0&&(r={});let i=tJ.validate(t,r);if(i!==!0)throw Error(`${i.err.msg}:${i.err.line}:${i.err.col}`)}let n=new JZ(this.options);n.addExternalEntities(this.externalEntities);let s=n.parseXml(t);return this.options.preserveOrder||s===void 0?s:QZ(s,this.options)}addEntity(t,r){if(r.indexOf("&")!==-1)throw new Error("Entity value can't have '&'");if(t.indexOf("&")!==-1||t.indexOf(";")!==-1)throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");if(r==="&")throw new Error("An entity with value '&' is not permitted");this.externalEntities[t]=r}};HO.exports=mb});var $O=Le((Dkt,YO)=>{var eJ=`
`;function rJ(e,t){let r="";return t.format&&t.indentBy.length>0&&(r=eJ),qO(e,t,"",r)}function qO(e,t,r,n){let s="",i=!1;for(let o=0;o<e.length;o++){let a=e[o],c=nJ(a);if(c===void 0)continue;let l="";if(r.length===0?l=c:l=`${r}.${c}`,c===t.textNodeName){let p=a[c];sJ(l,t)||(p=t.tagValueProcessor(c,p),p=XO(p,t)),i&&(s+=n),s+=p,i=!1;continue}else if(c===t.cdataPropName){i&&(s+=n),s+=`<![CDATA[${a[c][0][t.textNodeName]}]]>`,i=!1;continue}else if(c===t.commentPropName){s+=n+`<!--${a[c][0][t.textNodeName]}-->`,i=!0;continue}else if(c[0]==="?"){let p=jO(a[":@"],t),m=c==="?xml"?"":n,g=a[c][0][t.textNodeName];g=g.length!==0?" "+g:"",s+=m+`<${c}${g}${p}?>`,i=!0;continue}let f=n;f!==""&&(f+=t.indentBy);let h=jO(a[":@"],t),u=n+`<${c}${h}`,d=qO(a[c],t,l,f);t.unpairedTags.indexOf(c)!==-1?t.suppressUnpairedNode?s+=u+">":s+=u+"/>":(!d||d.length===0)&&t.suppressEmptyNode?s+=u+"/>":d&&d.endsWith(">")?s+=u+`>${d}${n}</${c}>`:(s+=u+">",d&&n!==""&&(d.includes("/>")||d.includes("</"))?s+=n+t.indentBy+d+n:s+=d,s+=`</${c}>`),i=!0}return s}function nJ(e){let t=Object.keys(e);for(let r=0;r<t.length;r++){let n=t[r];if(e.hasOwnProperty(n)&&n!==":@")return n}}function jO(e,t){let r="";if(e&&!t.ignoreAttributes)for(let n in e){if(!e.hasOwnProperty(n))continue;let s=t.attributeValueProcessor(n,e[n]);s=XO(s,t),s===!0&&t.suppressBooleanAttributes?r+=` ${n.substr(t.attributeNamePrefix.length)}`:r+=` ${n.substr(t.attributeNamePrefix.length)}="${s}"`}return r}function sJ(e,t){e=e.substr(0,e.length-t.textNodeName.length-1);let r=e.substr(e.lastIndexOf(".")+1);for(let n in t.stopNodes)if(t.stopNodes[n]===e||t.stopNodes[n]==="*."+r)return!0;return!1}function XO(e,t){if(e&&e.length>0&&t.processEntities)for(let r=0;r<t.entities.length;r++){let n=t.entities[r];e=e.replace(n.regex,n.val)}return e}YO.exports=rJ});var ZO=Le((kkt,KO)=>{"use strict";var iJ=$O(),oJ={attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,cdataPropName:!1,format:!1,indentBy:"  ",suppressEmptyNode:!1,suppressUnpairedNode:!0,suppressBooleanAttributes:!0,tagValueProcessor:function(e,t){return t},attributeValueProcessor:function(e,t){return t},preserveOrder:!1,commentPropName:!1,unpairedTags:[],entities:[{regex:new RegExp("&","g"),val:"&amp;"},{regex:new RegExp(">","g"),val:"&gt;"},{regex:new RegExp("<","g"),val:"&lt;"},{regex:new RegExp("'","g"),val:"&apos;"},{regex:new RegExp('"',"g"),val:"&quot;"}],processEntities:!0,stopNodes:[],oneListGroup:!1};function Si(e){this.options=Object.assign({},oJ,e),this.options.ignoreAttributes||this.options.attributesGroupName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=lJ),this.processTextOrObjNode=aJ,this.options.format?(this.indentate=cJ,this.tagEndChar=`>
`,this.newLine=`
`):(this.indentate=function(){return""},this.tagEndChar=">",this.newLine="")}Si.prototype.build=function(e){return this.options.preserveOrder?iJ(e,this.options):(Array.isArray(e)&&this.options.arrayNodeName&&this.options.arrayNodeName.length>1&&(e={[this.options.arrayNodeName]:e}),this.j2x(e,0).val)};Si.prototype.j2x=function(e,t){let r="",n="";for(let s in e)if(Object.prototype.hasOwnProperty.call(e,s))if(typeof e[s]>"u")this.isAttribute(s)&&(n+="");else if(e[s]===null)this.isAttribute(s)?n+="":s[0]==="?"?n+=this.indentate(t)+"<"+s+"?"+this.tagEndChar:n+=this.indentate(t)+"<"+s+"/"+this.tagEndChar;else if(e[s]instanceof Date)n+=this.buildTextValNode(e[s],s,"",t);else if(typeof e[s]!="object"){let i=this.isAttribute(s);if(i)r+=this.buildAttrPairStr(i,""+e[s]);else if(s===this.options.textNodeName){let o=this.options.tagValueProcessor(s,""+e[s]);n+=this.replaceEntitiesValue(o)}else n+=this.buildTextValNode(e[s],s,"",t)}else if(Array.isArray(e[s])){let i=e[s].length,o="",a="";for(let c=0;c<i;c++){let l=e[s][c];if(!(typeof l>"u"))if(l===null)s[0]==="?"?n+=this.indentate(t)+"<"+s+"?"+this.tagEndChar:n+=this.indentate(t)+"<"+s+"/"+this.tagEndChar;else if(typeof l=="object")if(this.options.oneListGroup){let f=this.j2x(l,t+1);o+=f.val,this.options.attributesGroupName&&l.hasOwnProperty(this.options.attributesGroupName)&&(a+=f.attrStr)}else o+=this.processTextOrObjNode(l,s,t);else if(this.options.oneListGroup){let f=this.options.tagValueProcessor(s,l);f=this.replaceEntitiesValue(f),o+=f}else o+=this.buildTextValNode(l,s,"",t)}this.options.oneListGroup&&(o=this.buildObjectNode(o,s,a,t)),n+=o}else if(this.options.attributesGroupName&&s===this.options.attributesGroupName){let i=Object.keys(e[s]),o=i.length;for(let a=0;a<o;a++)r+=this.buildAttrPairStr(i[a],""+e[s][i[a]])}else n+=this.processTextOrObjNode(e[s],s,t);return{attrStr:r,val:n}};Si.prototype.buildAttrPairStr=function(e,t){return t=this.options.attributeValueProcessor(e,""+t),t=this.replaceEntitiesValue(t),this.options.suppressBooleanAttributes&&t==="true"?" "+e:" "+e+'="'+t+'"'};function aJ(e,t,r){let n=this.j2x(e,r+1);return e[this.options.textNodeName]!==void 0&&Object.keys(e).length===1?this.buildTextValNode(e[this.options.textNodeName],t,n.attrStr,r):this.buildObjectNode(n.val,t,n.attrStr,r)}Si.prototype.buildObjectNode=function(e,t,r,n){if(e==="")return t[0]==="?"?this.indentate(n)+"<"+t+r+"?"+this.tagEndChar:this.indentate(n)+"<"+t+r+this.closeTag(t)+this.tagEndChar;{let s="</"+t+this.tagEndChar,i="";return t[0]==="?"&&(i="?",s=""),(r||r==="")&&e.indexOf("<")===-1?this.indentate(n)+"<"+t+r+i+">"+e+s:this.options.commentPropName!==!1&&t===this.options.commentPropName&&i.length===0?this.indentate(n)+`<!--${e}-->`+this.newLine:this.indentate(n)+"<"+t+r+i+this.tagEndChar+e+this.indentate(n)+s}};Si.prototype.closeTag=function(e){let t="";return this.options.unpairedTags.indexOf(e)!==-1?this.options.suppressUnpairedNode||(t="/"):this.options.suppressEmptyNode?t="/":t=`></${e}`,t};Si.prototype.buildTextValNode=function(e,t,r,n){if(this.options.cdataPropName!==!1&&t===this.options.cdataPropName)return this.indentate(n)+`<![CDATA[${e}]]>`+this.newLine;if(this.options.commentPropName!==!1&&t===this.options.commentPropName)return this.indentate(n)+`<!--${e}-->`+this.newLine;if(t[0]==="?")return this.indentate(n)+"<"+t+r+"?"+this.tagEndChar;{let s=this.options.tagValueProcessor(t,e);return s=this.replaceEntitiesValue(s),s===""?this.indentate(n)+"<"+t+r+this.closeTag(t)+this.tagEndChar:this.indentate(n)+"<"+t+r+">"+s+"</"+t+this.tagEndChar}};Si.prototype.replaceEntitiesValue=function(e){if(e&&e.length>0&&this.options.processEntities)for(let t=0;t<this.options.entities.length;t++){let r=this.options.entities[t];e=e.replace(r.regex,r.val)}return e};function cJ(e){return this.options.indentBy.repeat(e)}function lJ(e){return e.startsWith(this.options.attributeNamePrefix)&&e!==this.options.textNodeName?e.substr(this.attrPrefixLen):!1}KO.exports=Si});var QO=Le((Ukt,JO)=>{"use strict";var fJ=lb(),hJ=GO(),uJ=ZO();JO.exports={XMLParser:hJ,XMLValidator:fJ,XMLBuilder:uJ}});var Mb=Le((hL,wu)=>{(function(e,t){typeof define=="function"&&define.amd?define([],t):typeof TE=="function"&&typeof wu=="object"&&wu&&wu.exports?wu.exports=t():(e.dcodeIO=e.dcodeIO||{}).Long=t()})(hL,function(){"use strict";function e(E,b,R){this.low=E|0,this.high=b|0,this.unsigned=!!R}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0,enumerable:!1,configurable:!1});function t(E){return(E&&E.__isLong__)===!0}e.isLong=t;var r={},n={};function s(E,b){var R,k,D;return b?(E>>>=0,(D=0<=E&&E<256)&&(k=n[E],k)?k:(R=o(E,(E|0)<0?-1:0,!0),D&&(n[E]=R),R)):(E|=0,(D=-128<=E&&E<128)&&(k=r[E],k)?k:(R=o(E,E<0?-1:0,!1),D&&(r[E]=R),R))}e.fromInt=s;function i(E,b){if(isNaN(E)||!isFinite(E))return b?x:g;if(b){if(E<0)return x;if(E>=d)return v}else{if(E<=-p)return C;if(E+1>=p)return T}return E<0?i(-E,b).neg():o(E%u|0,E/u|0,b)}e.fromNumber=i;function o(E,b,R){return new e(E,b,R)}e.fromBits=o;var a=Math.pow;function c(E,b,R){if(E.length===0)throw Error("empty string");if(E==="NaN"||E==="Infinity"||E==="+Infinity"||E==="-Infinity")return g;if(typeof b=="number"?(R=b,b=!1):b=!!b,R=R||10,R<2||36<R)throw RangeError("radix");var k;if((k=E.indexOf("-"))>0)throw Error("interior hyphen");if(k===0)return c(E.substring(1),b,R).neg();for(var D=i(a(R,8)),P=g,j=0;j<E.length;j+=8){var ot=Math.min(8,E.length-j),st=parseInt(E.substring(j,j+ot),R);if(ot<8){var Bt=i(a(R,ot));P=P.mul(Bt).add(i(st))}else P=P.mul(D),P=P.add(i(st))}return P.unsigned=b,P}e.fromString=c;function l(E){return E instanceof e?E:typeof E=="number"?i(E):typeof E=="string"?c(E):o(E.low,E.high,E.unsigned)}e.fromValue=l;var f=1<<16,h=1<<24,u=f*f,d=u*u,p=d/2,m=s(h),g=s(0);e.ZERO=g;var x=s(0,!0);e.UZERO=x;var A=s(1);e.ONE=A;var _=s(1,!0);e.UONE=_;var y=s(-1);e.NEG_ONE=y;var T=o(-1,2147483647,!1);e.MAX_VALUE=T;var v=o(-1,-1,!0);e.MAX_UNSIGNED_VALUE=v;var C=o(0,-2147483648,!1);e.MIN_VALUE=C;var w=e.prototype;return w.toInt=function(){return this.unsigned?this.low>>>0:this.low},w.toNumber=function(){return this.unsigned?(this.high>>>0)*u+(this.low>>>0):this.high*u+(this.low>>>0)},w.toString=function(b){if(b=b||10,b<2||36<b)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(C)){var R=i(b),k=this.div(R),D=k.mul(R).sub(this);return k.toString(b)+D.toInt().toString(b)}else return"-"+this.neg().toString(b);for(var P=i(a(b,6),this.unsigned),j=this,ot="";;){var st=j.div(P),Bt=j.sub(st.mul(P)).toInt()>>>0,gt=Bt.toString(b);if(j=st,j.isZero())return gt+ot;for(;gt.length<6;)gt="0"+gt;ot=""+gt+ot}},w.getHighBits=function(){return this.high},w.getHighBitsUnsigned=function(){return this.high>>>0},w.getLowBits=function(){return this.low},w.getLowBitsUnsigned=function(){return this.low>>>0},w.getNumBitsAbs=function(){if(this.isNegative())return this.eq(C)?64:this.neg().getNumBitsAbs();for(var b=this.high!=0?this.high:this.low,R=31;R>0&&!(b&1<<R);R--);return this.high!=0?R+33:R+1},w.isZero=function(){return this.high===0&&this.low===0},w.isNegative=function(){return!this.unsigned&&this.high<0},w.isPositive=function(){return this.unsigned||this.high>=0},w.isOdd=function(){return(this.low&1)===1},w.isEven=function(){return(this.low&1)===0},w.equals=function(b){return t(b)||(b=l(b)),this.unsigned!==b.unsigned&&this.high>>>31===1&&b.high>>>31===1?!1:this.high===b.high&&this.low===b.low},w.eq=w.equals,w.notEquals=function(b){return!this.eq(b)},w.neq=w.notEquals,w.lessThan=function(b){return this.comp(b)<0},w.lt=w.lessThan,w.lessThanOrEqual=function(b){return this.comp(b)<=0},w.lte=w.lessThanOrEqual,w.greaterThan=function(b){return this.comp(b)>0},w.gt=w.greaterThan,w.greaterThanOrEqual=function(b){return this.comp(b)>=0},w.gte=w.greaterThanOrEqual,w.compare=function(b){if(t(b)||(b=l(b)),this.eq(b))return 0;var R=this.isNegative(),k=b.isNegative();return R&&!k?-1:!R&&k?1:this.unsigned?b.high>>>0>this.high>>>0||b.high===this.high&&b.low>>>0>this.low>>>0?-1:1:this.sub(b).isNegative()?-1:1},w.comp=w.compare,w.negate=function(){return!this.unsigned&&this.eq(C)?C:this.not().add(A)},w.neg=w.negate,w.add=function(b){t(b)||(b=l(b));var R=this.high>>>16,k=this.high&65535,D=this.low>>>16,P=this.low&65535,j=b.high>>>16,ot=b.high&65535,st=b.low>>>16,Bt=b.low&65535,gt=0,Nt=0,Xt=0,fr=0;return fr+=P+Bt,Xt+=fr>>>16,fr&=65535,Xt+=D+st,Nt+=Xt>>>16,Xt&=65535,Nt+=k+ot,gt+=Nt>>>16,Nt&=65535,gt+=R+j,gt&=65535,o(Xt<<16|fr,gt<<16|Nt,this.unsigned)},w.subtract=function(b){return t(b)||(b=l(b)),this.add(b.neg())},w.sub=w.subtract,w.multiply=function(b){if(this.isZero()||(t(b)||(b=l(b)),b.isZero()))return g;if(this.eq(C))return b.isOdd()?C:g;if(b.eq(C))return this.isOdd()?C:g;if(this.isNegative())return b.isNegative()?this.neg().mul(b.neg()):this.neg().mul(b).neg();if(b.isNegative())return this.mul(b.neg()).neg();if(this.lt(m)&&b.lt(m))return i(this.toNumber()*b.toNumber(),this.unsigned);var R=this.high>>>16,k=this.high&65535,D=this.low>>>16,P=this.low&65535,j=b.high>>>16,ot=b.high&65535,st=b.low>>>16,Bt=b.low&65535,gt=0,Nt=0,Xt=0,fr=0;return fr+=P*Bt,Xt+=fr>>>16,fr&=65535,Xt+=D*Bt,Nt+=Xt>>>16,Xt&=65535,Xt+=P*st,Nt+=Xt>>>16,Xt&=65535,Nt+=k*Bt,gt+=Nt>>>16,Nt&=65535,Nt+=D*st,gt+=Nt>>>16,Nt&=65535,Nt+=P*ot,gt+=Nt>>>16,Nt&=65535,gt+=R*Bt+k*st+D*ot+P*j,gt&=65535,o(Xt<<16|fr,gt<<16|Nt,this.unsigned)},w.mul=w.multiply,w.divide=function(b){if(t(b)||(b=l(b)),b.isZero())throw Error("division by zero");if(this.isZero())return this.unsigned?x:g;var R,k,D;if(this.unsigned){if(b.unsigned||(b=b.toUnsigned()),b.gt(this))return x;if(b.gt(this.shru(1)))return _;D=x}else{if(this.eq(C)){if(b.eq(A)||b.eq(y))return C;if(b.eq(C))return A;var P=this.shr(1);return R=P.div(b).shl(1),R.eq(g)?b.isNegative()?A:y:(k=this.sub(b.mul(R)),D=R.add(k.div(b)),D)}else if(b.eq(C))return this.unsigned?x:g;if(this.isNegative())return b.isNegative()?this.neg().div(b.neg()):this.neg().div(b).neg();if(b.isNegative())return this.div(b.neg()).neg();D=g}for(k=this;k.gte(b);){R=Math.max(1,Math.floor(k.toNumber()/b.toNumber()));for(var j=Math.ceil(Math.log(R)/Math.LN2),ot=j<=48?1:a(2,j-48),st=i(R),Bt=st.mul(b);Bt.isNegative()||Bt.gt(k);)R-=ot,st=i(R,this.unsigned),Bt=st.mul(b);st.isZero()&&(st=A),D=D.add(st),k=k.sub(Bt)}return D},w.div=w.divide,w.modulo=function(b){return t(b)||(b=l(b)),this.sub(this.div(b).mul(b))},w.mod=w.modulo,w.not=function(){return o(~this.low,~this.high,this.unsigned)},w.and=function(b){return t(b)||(b=l(b)),o(this.low&b.low,this.high&b.high,this.unsigned)},w.or=function(b){return t(b)||(b=l(b)),o(this.low|b.low,this.high|b.high,this.unsigned)},w.xor=function(b){return t(b)||(b=l(b)),o(this.low^b.low,this.high^b.high,this.unsigned)},w.shiftLeft=function(b){return t(b)&&(b=b.toInt()),(b&=63)===0?this:b<32?o(this.low<<b,this.high<<b|this.low>>>32-b,this.unsigned):o(0,this.low<<b-32,this.unsigned)},w.shl=w.shiftLeft,w.shiftRight=function(b){return t(b)&&(b=b.toInt()),(b&=63)===0?this:b<32?o(this.low>>>b|this.high<<32-b,this.high>>b,this.unsigned):o(this.high>>b-32,this.high>=0?0:-1,this.unsigned)},w.shr=w.shiftRight,w.shiftRightUnsigned=function(b){if(t(b)&&(b=b.toInt()),b&=63,b===0)return this;var R=this.high;if(b<32){var k=this.low;return o(k>>>b|R<<32-b,R>>>b,this.unsigned)}else return b===32?o(R,0,this.unsigned):o(R>>>b-32,0,this.unsigned)},w.shru=w.shiftRightUnsigned,w.toSigned=function(){return this.unsigned?o(this.low,this.high,!1):this},w.toUnsigned=function(){return this.unsigned?this:o(this.low,this.high,!0)},w.toBytes=function(E){return E?this.toBytesLE():this.toBytesBE()},w.toBytesLE=function(){var E=this.high,b=this.low;return[b&255,b>>>8&255,b>>>16&255,b>>>24&255,E&255,E>>>8&255,E>>>16&255,E>>>24&255]},w.toBytesBE=function(){var E=this.high,b=this.low;return[E>>>24&255,E>>>16&255,E>>>8&255,E&255,b>>>24&255,b>>>16&255,b>>>8&255,b&255]},e})});var Bu=Le((H8t,qL)=>{qL.exports=globalThis.h3||{}});var n8=Le(Fv=>{Fv.read=function(e,t,r,n,s){var i,o,a=s*8-n-1,c=(1<<a)-1,l=c>>1,f=-7,h=r?s-1:0,u=r?-1:1,d=e[t+h];for(h+=u,i=d&(1<<-f)-1,d>>=-f,f+=a;f>0;i=i*256+e[t+h],h+=u,f-=8);for(o=i&(1<<-f)-1,i>>=-f,f+=n;f>0;o=o*256+e[t+h],h+=u,f-=8);if(i===0)i=1-l;else{if(i===c)return o?NaN:(d?-1:1)*(1/0);o=o+Math.pow(2,n),i=i-l}return(d?-1:1)*o*Math.pow(2,i-n)};Fv.write=function(e,t,r,n,s,i){var o,a,c,l=i*8-s-1,f=(1<<l)-1,h=f>>1,u=s===23?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:i-1,p=n?1:-1,m=t<0||t===0&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,o=f):(o=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-o))<1&&(o--,c*=2),o+h>=1?t+=u/c:t+=u*Math.pow(2,1-h),t*c>=2&&(o++,c/=2),o+h>=f?(a=0,o=f):o+h>=1?(a=(t*c-1)*Math.pow(2,s),o=o+h):(a=t*Math.pow(2,h-1)*Math.pow(2,s),o=0));s>=8;e[r+d]=a&255,d+=p,a/=256,s-=8);for(o=o<<s|a,l+=s;l>0;e[r+d]=o&255,d+=p,o/=256,l-=8);e[r+d-p]|=m*128}});var l8=Le((dre,c8)=>{"use strict";c8.exports=Et;var Bx=n8();function Et(e){this.buf=ArrayBuffer.isView&&ArrayBuffer.isView(e)?e:new Uint8Array(e||0),this.pos=0,this.type=0,this.length=this.buf.length}Et.Varint=0;Et.Fixed64=1;Et.Bytes=2;Et.Fixed32=5;var Dv=(1<<16)*(1<<16),s8=1/Dv,Pft=12,a8=typeof TextDecoder>"u"?null:new TextDecoder("utf-8");Et.prototype={destroy:function(){this.buf=null},readFields:function(e,t,r){for(r=r||this.length;this.pos<r;){var n=this.readVarint(),s=n>>3,i=this.pos;this.type=n&7,e(s,t,this),this.pos===i&&this.skip(n)}return t},readMessage:function(e,t){return this.readFields(e,t,this.readVarint()+this.pos)},readFixed32:function(){var e=Nx(this.buf,this.pos);return this.pos+=4,e},readSFixed32:function(){var e=o8(this.buf,this.pos);return this.pos+=4,e},readFixed64:function(){var e=Nx(this.buf,this.pos)+Nx(this.buf,this.pos+4)*Dv;return this.pos+=8,e},readSFixed64:function(){var e=Nx(this.buf,this.pos)+o8(this.buf,this.pos+4)*Dv;return this.pos+=8,e},readFloat:function(){var e=Bx.read(this.buf,this.pos,!0,23,4);return this.pos+=4,e},readDouble:function(){var e=Bx.read(this.buf,this.pos,!0,52,8);return this.pos+=8,e},readVarint:function(e){var t=this.buf,r,n;return n=t[this.pos++],r=n&127,n<128||(n=t[this.pos++],r|=(n&127)<<7,n<128)||(n=t[this.pos++],r|=(n&127)<<14,n<128)||(n=t[this.pos++],r|=(n&127)<<21,n<128)?r:(n=t[this.pos],r|=(n&15)<<28,Ift(r,e,this))},readVarint64:function(){return this.readVarint(!0)},readSVarint:function(){var e=this.readVarint();return e%2===1?(e+1)/-2:e/2},readBoolean:function(){return Boolean(this.readVarint())},readString:function(){var e=this.readVarint()+this.pos,t=this.pos;return this.pos=e,e-t>=Pft&&a8?Gft(this.buf,t,e):Hft(this.buf,t,e)},readBytes:function(){var e=this.readVarint()+this.pos,t=this.buf.subarray(this.pos,e);return this.pos=e,t},readPackedVarint:function(e,t){if(this.type!==Et.Bytes)return e.push(this.readVarint(t));var r=Gs(this);for(e=e||[];this.pos<r;)e.push(this.readVarint(t));return e},readPackedSVarint:function(e){if(this.type!==Et.Bytes)return e.push(this.readSVarint());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readSVarint());return e},readPackedBoolean:function(e){if(this.type!==Et.Bytes)return e.push(this.readBoolean());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readBoolean());return e},readPackedFloat:function(e){if(this.type!==Et.Bytes)return e.push(this.readFloat());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readFloat());return e},readPackedDouble:function(e){if(this.type!==Et.Bytes)return e.push(this.readDouble());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readDouble());return e},readPackedFixed32:function(e){if(this.type!==Et.Bytes)return e.push(this.readFixed32());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readFixed32());return e},readPackedSFixed32:function(e){if(this.type!==Et.Bytes)return e.push(this.readSFixed32());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readSFixed32());return e},readPackedFixed64:function(e){if(this.type!==Et.Bytes)return e.push(this.readFixed64());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readFixed64());return e},readPackedSFixed64:function(e){if(this.type!==Et.Bytes)return e.push(this.readSFixed64());var t=Gs(this);for(e=e||[];this.pos<t;)e.push(this.readSFixed64());return e},skip:function(e){var t=e&7;if(t===Et.Varint)for(;this.buf[this.pos++]>127;);else if(t===Et.Bytes)this.pos=this.readVarint()+this.pos;else if(t===Et.Fixed32)this.pos+=4;else if(t===Et.Fixed64)this.pos+=8;else throw new Error("Unimplemented type: "+t)},writeTag:function(e,t){this.writeVarint(e<<3|t)},realloc:function(e){for(var t=this.length||16;t<this.pos+e;)t*=2;if(t!==this.length){var r=new Uint8Array(t);r.set(this.buf),this.buf=r,this.length=t}},finish:function(){return this.length=this.pos,this.pos=0,this.buf.subarray(0,this.length)},writeFixed32:function(e){this.realloc(4),wl(this.buf,e,this.pos),this.pos+=4},writeSFixed32:function(e){this.realloc(4),wl(this.buf,e,this.pos),this.pos+=4},writeFixed64:function(e){this.realloc(8),wl(this.buf,e&-1,this.pos),wl(this.buf,Math.floor(e*s8),this.pos+4),this.pos+=8},writeSFixed64:function(e){this.realloc(8),wl(this.buf,e&-1,this.pos),wl(this.buf,Math.floor(e*s8),this.pos+4),this.pos+=8},writeVarint:function(e){if(e=+e||0,e>268435455||e<0){Rft(e,this);return}this.realloc(4),this.buf[this.pos++]=e&127|(e>127?128:0),!(e<=127)&&(this.buf[this.pos++]=(e>>>=7)&127|(e>127?128:0),!(e<=127)&&(this.buf[this.pos++]=(e>>>=7)&127|(e>127?128:0),!(e<=127)&&(this.buf[this.pos++]=e>>>7&127)))},writeSVarint:function(e){this.writeVarint(e<0?-e*2-1:e*2)},writeBoolean:function(e){this.writeVarint(Boolean(e))},writeString:function(e){e=String(e),this.realloc(e.length*4),this.pos++;var t=this.pos;this.pos=jft(this.buf,e,this.pos);var r=this.pos-t;r>=128&&i8(t,r,this),this.pos=t-1,this.writeVarint(r),this.pos+=r},writeFloat:function(e){this.realloc(4),Bx.write(this.buf,e,this.pos,!0,23,4),this.pos+=4},writeDouble:function(e){this.realloc(8),Bx.write(this.buf,e,this.pos,!0,52,8),this.pos+=8},writeBytes:function(e){var t=e.length;this.writeVarint(t),this.realloc(t);for(var r=0;r<t;r++)this.buf[this.pos++]=e[r]},writeRawMessage:function(e,t){this.pos++;var r=this.pos;e(t,this);var n=this.pos-r;n>=128&&i8(r,n,this),this.pos=r-1,this.writeVarint(n),this.pos+=n},writeMessage:function(e,t,r){this.writeTag(e,Et.Bytes),this.writeRawMessage(t,r)},writePackedVarint:function(e,t){t.length&&this.writeMessage(e,Bft,t)},writePackedSVarint:function(e,t){t.length&&this.writeMessage(e,Nft,t)},writePackedBoolean:function(e,t){t.length&&this.writeMessage(e,kft,t)},writePackedFloat:function(e,t){t.length&&this.writeMessage(e,Fft,t)},writePackedDouble:function(e,t){t.length&&this.writeMessage(e,Dft,t)},writePackedFixed32:function(e,t){t.length&&this.writeMessage(e,Uft,t)},writePackedSFixed32:function(e,t){t.length&&this.writeMessage(e,zft,t)},writePackedFixed64:function(e,t){t.length&&this.writeMessage(e,Vft,t)},writePackedSFixed64:function(e,t){t.length&&this.writeMessage(e,Wft,t)},writeBytesField:function(e,t){this.writeTag(e,Et.Bytes),this.writeBytes(t)},writeFixed32Field:function(e,t){this.writeTag(e,Et.Fixed32),this.writeFixed32(t)},writeSFixed32Field:function(e,t){this.writeTag(e,Et.Fixed32),this.writeSFixed32(t)},writeFixed64Field:function(e,t){this.writeTag(e,Et.Fixed64),this.writeFixed64(t)},writeSFixed64Field:function(e,t){this.writeTag(e,Et.Fixed64),this.writeSFixed64(t)},writeVarintField:function(e,t){this.writeTag(e,Et.Varint),this.writeVarint(t)},writeSVarintField:function(e,t){this.writeTag(e,Et.Varint),this.writeSVarint(t)},writeStringField:function(e,t){this.writeTag(e,Et.Bytes),this.writeString(t)},writeFloatField:function(e,t){this.writeTag(e,Et.Fixed32),this.writeFloat(t)},writeDoubleField:function(e,t){this.writeTag(e,Et.Fixed64),this.writeDouble(t)},writeBooleanField:function(e,t){this.writeVarintField(e,Boolean(t))}};function Ift(e,t,r){var n=r.buf,s,i;if(i=n[r.pos++],s=(i&112)>>4,i<128||(i=n[r.pos++],s|=(i&127)<<3,i<128)||(i=n[r.pos++],s|=(i&127)<<10,i<128)||(i=n[r.pos++],s|=(i&127)<<17,i<128)||(i=n[r.pos++],s|=(i&127)<<24,i<128)||(i=n[r.pos++],s|=(i&1)<<31,i<128))return Sl(e,s,t);throw new Error("Expected varint not more than 10 bytes")}function Gs(e){return e.type===Et.Bytes?e.readVarint()+e.pos:e.pos+1}function Sl(e,t,r){return r?t*4294967296+(e>>>0):(t>>>0)*4294967296+(e>>>0)}function Rft(e,t){var r,n;if(e>=0?(r=e%4294967296|0,n=e/4294967296|0):(r=~(-e%4294967296),n=~(-e/4294967296),r^4294967295?r=r+1|0:(r=0,n=n+1|0)),e>=18446744073709552e3||e<-18446744073709552e3)throw new Error("Given varint doesn't fit into 10 bytes");t.realloc(10),Oft(r,n,t),Lft(n,t)}function Oft(e,t,r){r.buf[r.pos++]=e&127|128,e>>>=7,r.buf[r.pos++]=e&127|128,e>>>=7,r.buf[r.pos++]=e&127|128,e>>>=7,r.buf[r.pos++]=e&127|128,e>>>=7,r.buf[r.pos]=e&127}function Lft(e,t){var r=(e&7)<<4;t.buf[t.pos++]|=r|((e>>>=3)?128:0),e&&(t.buf[t.pos++]=e&127|((e>>>=7)?128:0),e&&(t.buf[t.pos++]=e&127|((e>>>=7)?128:0),e&&(t.buf[t.pos++]=e&127|((e>>>=7)?128:0),e&&(t.buf[t.pos++]=e&127|((e>>>=7)?128:0),e&&(t.buf[t.pos++]=e&127)))))}function i8(e,t,r){var n=t<=16383?1:t<=2097151?2:t<=268435455?3:Math.floor(Math.log(t)/(Math.LN2*7));r.realloc(n);for(var s=r.pos-1;s>=e;s--)r.buf[s+n]=r.buf[s]}function Bft(e,t){for(var r=0;r<e.length;r++)t.writeVarint(e[r])}function Nft(e,t){for(var r=0;r<e.length;r++)t.writeSVarint(e[r])}function Fft(e,t){for(var r=0;r<e.length;r++)t.writeFloat(e[r])}function Dft(e,t){for(var r=0;r<e.length;r++)t.writeDouble(e[r])}function kft(e,t){for(var r=0;r<e.length;r++)t.writeBoolean(e[r])}function Uft(e,t){for(var r=0;r<e.length;r++)t.writeFixed32(e[r])}function zft(e,t){for(var r=0;r<e.length;r++)t.writeSFixed32(e[r])}function Vft(e,t){for(var r=0;r<e.length;r++)t.writeFixed64(e[r])}function Wft(e,t){for(var r=0;r<e.length;r++)t.writeSFixed64(e[r])}function Nx(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16)+e[t+3]*16777216}function wl(e,t,r){e[r]=t,e[r+1]=t>>>8,e[r+2]=t>>>16,e[r+3]=t>>>24}function o8(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16)+(e[t+3]<<24)}function Hft(e,t,r){for(var n="",s=t;s<r;){var i=e[s],o=null,a=i>239?4:i>223?3:i>191?2:1;if(s+a>r)break;var c,l,f;a===1?i<128&&(o=i):a===2?(c=e[s+1],(c&192)===128&&(o=(i&31)<<6|c&63,o<=127&&(o=null))):a===3?(c=e[s+1],l=e[s+2],(c&192)===128&&(l&192)===128&&(o=(i&15)<<12|(c&63)<<6|l&63,(o<=2047||o>=55296&&o<=57343)&&(o=null))):a===4&&(c=e[s+1],l=e[s+2],f=e[s+3],(c&192)===128&&(l&192)===128&&(f&192)===128&&(o=(i&15)<<18|(c&63)<<12|(l&63)<<6|f&63,(o<=65535||o>=1114112)&&(o=null))),o===null?(o=65533,a=1):o>65535&&(o-=65536,n+=String.fromCharCode(o>>>10&1023|55296),o=56320|o&1023),n+=String.fromCharCode(o),s+=a}return n}function Gft(e,t,r){return a8.decode(e.subarray(t,r))}function jft(e,t,r){for(var n=0,s,i;n<t.length;n++){if(s=t.charCodeAt(n),s>55295&&s<57344)if(i)if(s<56320){e[r++]=239,e[r++]=191,e[r++]=189,i=s;continue}else s=i-55296<<10|s-56320|65536,i=null;else{s>56319||n+1===t.length?(e[r++]=239,e[r++]=191,e[r++]=189):i=s;continue}else i&&(e[r++]=239,e[r++]=191,e[r++]=189,i=null);s<128?e[r++]=s:(s<2048?e[r++]=s>>6|192:(s<65536?e[r++]=s>>12|224:(e[r++]=s>>18|240,e[r++]=s>>12&63|128),e[r++]=s>>6&63|128),e[r++]=s&63|128)}return r}});var zut={};Wt(zut,{AmbientLight:()=>cc,ArcLayer:()=>jg,Attribute:()=>Ms,AttributeManager:()=>Or,BitmapLayer:()=>qg,BrushingExtension:()=>gU,COORDINATE_SYSTEM:()=>q,CPUAggregator:()=>lr,ClipExtension:()=>vx,CollisionFilterExtension:()=>zU,ColumnLayer:()=>qn,CompassWidget:()=>g_,CompositeLayer:()=>qt,ContourLayer:()=>F5,Controller:()=>or,DarkGlassTheme:()=>Uut,DarkTheme:()=>Dut,DataFilterExtension:()=>PU,Deck:()=>pn,DeckGL:()=>Fd,DeckRenderer:()=>Po,DirectionalLight:()=>_s,FillStyleExtension:()=>DU,FirstPersonController:()=>Do,FirstPersonView:()=>MI,FirstPersonViewport:()=>No,FlyToInterpolator:()=>ws,Fp64Extension:()=>RU,FullscreenWidget:()=>m_,GeoJsonLayer:()=>Go,GeohashLayer:()=>P8,GoogleMapsOverlay:()=>jd,GreatCircleLayer:()=>fL,GridCellLayer:()=>yR,GridLayer:()=>V5,H3ClusterLayer:()=>KL,H3HexagonLayer:()=>Bc,HeatmapLayer:()=>iz,HexagonLayer:()=>n5,IconLayer:()=>Ec,Layer:()=>_t,LayerExtension:()=>ye,LayerManager:()=>So,LightGlassTheme:()=>kut,LightTheme:()=>Fut,LightingEffect:()=>di,LineLayer:()=>KI,LinearInterpolator:()=>ve,MVTLayer:()=>M8,MapController:()=>Co,MapView:()=>xi,MapboxOverlay:()=>$d,MaskExtension:()=>HU,OPERATION:()=>cC,OrbitController:()=>ko,OrbitView:()=>SI,OrbitViewport:()=>Bo,OrthographicController:()=>Uo,OrthographicView:()=>wI,OrthographicViewport:()=>Ss,PathLayer:()=>Xn,PathStyleExtension:()=>BU,PointCloudLayer:()=>Xg,PointLight:()=>dc,PolygonLayer:()=>Mi,PostProcessEffect:()=>fh,QuadkeyLayer:()=>EL,ResetViewWidget:()=>Ea,S2Layer:()=>TL,ScatterplotLayer:()=>Yg,ScenegraphLayer:()=>t1,ScreenGridLayer:()=>q8,ScreenshotWidget:()=>va,SimpleMeshLayer:()=>Jo,SolidPolygonLayer:()=>Ei,TRANSITION_EVENTS:()=>ph,TerrainLayer:()=>dU,Tesselator:()=>Cs,TextLayer:()=>u0,Tile3DLayer:()=>oU,TileLayer:()=>Zo,TransitionInterpolator:()=>vs,TripsLayer:()=>jL,UNIT:()=>Lt,VERSION:()=>pp,View:()=>ir,Viewport:()=>xe,WebGLAggregator:()=>pe,WebMercatorViewport:()=>We,ZoomWidget:()=>Ta,_AggregationLayer:()=>ss,_CameraLight:()=>eh,_Component:()=>Tc,_ComponentState:()=>Lo,_GeoCellLayer:()=>Yn,_GlobeController:()=>zo,_GlobeView:()=>Hg,_GlobeViewport:()=>gn,_LayersPass:()=>Fe,_MultiIconLayer:()=>l0,_PickLayersPass:()=>cn,_SunLight:()=>rh,_TerrainExtension:()=>XU,_TextBackgroundLayer:()=>h0,_Tile2DHeader:()=>Yo,_Tileset2D:()=>Ko,_WMSLayer:()=>Oc,_WidgetImpl:()=>Mn,_applyStyles:()=>xr,_compareProps:()=>bc,_components:()=>bE,_count:()=>Bg,_deepEqual:()=>it,_fillArray:()=>eg,_flatten:()=>sr,_getURLFromTemplate:()=>Kn,_memoize:()=>mr,_mergeShaders:()=>bi,_registerLoggers:()=>dp,_removeStyles:()=>jn,assert:()=>wt,createIterable:()=>ie,fp64LowPart:()=>hc,getShaderAssembler:()=>Gm,gouraudLighting:()=>Em,log:()=>W,phongLighting:()=>Mm,picking:()=>Pt,project:()=>ne,project32:()=>ft,project64:()=>bx,shadow:()=>ac});async function vr(e,t,r,n){return n._parse(e,t,r,n)}function lt(e,t){if(!e)throw new Error(t||"loader assertion failed.")}var Sn={self:typeof self<"u"&&self,window:typeof window<"u"&&window,global:typeof global<"u"&&global,document:typeof document<"u"&&document},Dz=Sn.self||Sn.window||Sn.global||{},kz=Sn.window||Sn.self||Sn.global||{},Uz=Sn.global||Sn.self||Sn.window||{},zz=Sn.document||{};var as=Boolean(typeof process!="object"||String(process)!=="[object process]"||process.browser);var EE=typeof process<"u"&&process.version&&/v([0-9]*)/.exec(process.version),Vz=EE&&parseFloat(EE[1])||0;var Jd=globalThis,Wz=globalThis.document||{},Qd=globalThis.process||{},Hz=globalThis.console,ME=globalThis.navigator||{};function tp(e){if(typeof window<"u"&&window.process?.type==="renderer"||typeof process<"u"&&Boolean(process.versions?.electron))return!0;let t=typeof navigator<"u"&&navigator.userAgent,r=e||t;return Boolean(r&&r.indexOf("Electron")>=0)}function Qe(){return!(typeof process=="object"&&String(process)==="[object process]"&&!process?.browser)||tp()}function x_(e){return!e&&!Qe()?"Node":tp(e)?"Electron":(e||ME.userAgent||"").indexOf("Edge")>-1?"Edge":globalThis.chrome?"Chrome":globalThis.safari?"Safari":globalThis.mozInnerScreenX?"Firefox":"Unknown"}var __="4.1.0";function jz(e){try{let t=window[e],r="__storage_test__";return t.setItem(r,r),t.removeItem(r),t}catch{return null}}var ep=class{constructor(t,r,n="sessionStorage"){this.storage=jz(n),this.id=t,this.config=r,this._loadConfiguration()}getConfiguration(){return this.config}setConfiguration(t){if(Object.assign(this.config,t),this.storage){let r=JSON.stringify(this.config);this.storage.setItem(this.id,r)}}_loadConfiguration(){let t={};if(this.storage){let r=this.storage.getItem(this.id);t=r?JSON.parse(r):{}}return Object.assign(this.config,t),this}};function SE(e){let t;return e<10?t=`${e.toFixed(2)}ms`:e<100?t=`${e.toFixed(1)}ms`:e<1e3?t=`${e.toFixed(0)}ms`:t=`${(e/1e3).toFixed(2)}s`,t}function wE(e,t=8){let r=Math.max(t-e.length,0);return`${" ".repeat(r)}${e}`}var rp;(function(e){e[e.BLACK=30]="BLACK",e[e.RED=31]="RED",e[e.GREEN=32]="GREEN",e[e.YELLOW=33]="YELLOW",e[e.BLUE=34]="BLUE",e[e.MAGENTA=35]="MAGENTA",e[e.CYAN=36]="CYAN",e[e.WHITE=37]="WHITE",e[e.BRIGHT_BLACK=90]="BRIGHT_BLACK",e[e.BRIGHT_RED=91]="BRIGHT_RED",e[e.BRIGHT_GREEN=92]="BRIGHT_GREEN",e[e.BRIGHT_YELLOW=93]="BRIGHT_YELLOW",e[e.BRIGHT_BLUE=94]="BRIGHT_BLUE",e[e.BRIGHT_MAGENTA=95]="BRIGHT_MAGENTA",e[e.BRIGHT_CYAN=96]="BRIGHT_CYAN",e[e.BRIGHT_WHITE=97]="BRIGHT_WHITE"})(rp||(rp={}));var qz=10;function CE(e){return typeof e!="string"?e:(e=e.toUpperCase(),rp[e]||rp.WHITE)}function PE(e,t,r){return!Qe&&typeof e=="string"&&(t&&(e=`\x1B[${CE(t)}m${e}\x1B[39m`),r&&(e=`\x1B[${CE(r)+qz}m${e}\x1B[49m`)),e}function IE(e,t=["constructor"]){let r=Object.getPrototypeOf(e),n=Object.getOwnPropertyNames(r),s=e;for(let i of n){let o=s[i];typeof o=="function"&&(t.find(a=>i===a)||(s[i]=o.bind(e)))}}function jl(e,t){if(!e)throw new Error(t||"Assertion failed")}function Zi(){let e;if(Qe()&&Jd.performance)e=Jd?.performance?.now?.();else if("hrtime"in Qd){let t=Qd?.hrtime?.();e=t[0]*1e3+t[1]/1e6}else e=Date.now();return e}var Ma={debug:Qe()&&console.debug||console.log,log:console.log,info:console.info,warn:console.warn,error:console.error},Xz={enabled:!0,level:0};function Sa(){}var RE={},OE={once:!0},hr=class{constructor({id:t}={id:""}){this.VERSION=__,this._startTs=Zi(),this._deltaTs=Zi(),this.userData={},this.LOG_THROTTLE_TIMEOUT=0,this.id=t,this.userData={},this._storage=new ep(`__probe-${this.id}__`,Xz),this.timeStamp(`${this.id} started`),IE(this),Object.seal(this)}set level(t){this.setLevel(t)}get level(){return this.getLevel()}isEnabled(){return this._storage.config.enabled}getLevel(){return this._storage.config.level}getTotal(){return Number((Zi()-this._startTs).toPrecision(10))}getDelta(){return Number((Zi()-this._deltaTs).toPrecision(10))}set priority(t){this.level=t}get priority(){return this.level}getPriority(){return this.level}enable(t=!0){return this._storage.setConfiguration({enabled:t}),this}setLevel(t){return this._storage.setConfiguration({level:t}),this}get(t){return this._storage.config[t]}set(t,r){this._storage.setConfiguration({[t]:r})}settings(){console.table?console.table(this._storage.config):console.log(this._storage.config)}assert(t,r){if(!t)throw new Error(r||"Assertion failed")}warn(t){return this._getLogFunction(0,t,Ma.warn,arguments,OE)}error(t){return this._getLogFunction(0,t,Ma.error,arguments)}deprecated(t,r){return this.warn(`\`${t}\` is deprecated and will be removed in a later version. Use \`${r}\` instead`)}removed(t,r){return this.error(`\`${t}\` has been removed. Use \`${r}\` instead`)}probe(t,r){return this._getLogFunction(t,r,Ma.log,arguments,{time:!0,once:!0})}log(t,r){return this._getLogFunction(t,r,Ma.debug,arguments)}info(t,r){return this._getLogFunction(t,r,console.info,arguments)}once(t,r){return this._getLogFunction(t,r,Ma.debug||Ma.info,arguments,OE)}table(t,r,n){return r?this._getLogFunction(t,r,console.table||Sa,n&&[n],{tag:$z(r)}):Sa}time(t,r){return this._getLogFunction(t,r,console.time?console.time:console.info)}timeEnd(t,r){return this._getLogFunction(t,r,console.timeEnd?console.timeEnd:console.info)}timeStamp(t,r){return this._getLogFunction(t,r,console.timeStamp||Sa)}group(t,r,n={collapsed:!1}){let s=LE({logLevel:t,message:r,opts:n}),{collapsed:i}=n;return s.method=(i?console.groupCollapsed:console.group)||console.info,this._getLogFunction(s)}groupCollapsed(t,r,n={}){return this.group(t,r,Object.assign({},n,{collapsed:!0}))}groupEnd(t){return this._getLogFunction(t,"",console.groupEnd||Sa)}withGroup(t,r,n){this.group(t,r)();try{n()}finally{this.groupEnd(t)()}}trace(){console.trace&&console.trace()}_shouldLog(t){return this.isEnabled()&&this.getLevel()>=BE(t)}_getLogFunction(t,r,n,s,i){if(this._shouldLog(t)){i=LE({logLevel:t,message:r,args:s,opts:i}),n=n||i.method,jl(n),i.total=this.getTotal(),i.delta=this.getDelta(),this._deltaTs=Zi();let o=i.tag||i.message;if(i.once&&o)if(!RE[o])RE[o]=Zi();else return Sa;return r=Yz(this.id,i.message,i),n.bind(console,r,...i.args)}return Sa}};hr.VERSION=__;function BE(e){if(!e)return 0;let t;switch(typeof e){case"number":t=e;break;case"object":t=e.logLevel||e.priority||0;break;default:return 0}return jl(Number.isFinite(t)&&t>=0),t}function LE(e){let{logLevel:t,message:r}=e;e.logLevel=BE(t);let n=e.args?Array.from(e.args):[];for(;n.length&&n.shift()!==r;);switch(typeof t){case"string":case"function":r!==void 0&&n.unshift(r),e.message=t;break;case"object":Object.assign(e,t);break;default:}typeof e.message=="function"&&(e.message=e.message());let s=typeof e.message;return jl(s==="string"||s==="object"),Object.assign(e,{args:n},e.opts)}function Yz(e,t,r){if(typeof t=="string"){let n=r.time?wE(SE(r.total)):"";t=r.time?`${e}: ${n}  ${t}`:`${e}: ${t}`,t=PE(t,r.color,r.background)}return t}function $z(e){for(let t in e)for(let r in e[t])return r||"untitled";return"empty"}globalThis.probe={};var y_=new hr({id:"@probe.gl/log"});function ql(e,t){return NE(e||{},t)}function NE(e,t,r=0){if(r>3)return t;let n={...e};for(let[s,i]of Object.entries(t))i&&typeof i=="object"&&!Array.isArray(i)?n[s]=NE(n[s]||{},t[s],r+1):n[s]=t[s];return n}function A_(e){globalThis.loaders||={},globalThis.loaders.modules||={},Object.assign(globalThis.loaders.modules,e)}function b_(e){return globalThis.loaders?.modules?.[e]||null}var FE="latest";function Kz(){return globalThis._loadersgl_?.version||(globalThis._loadersgl_=globalThis._loadersgl_||{},globalThis._loadersgl_.version="4.2.1"),globalThis._loadersgl_.version}var Xl=Kz();function Be(e,t){if(!e)throw new Error(t||"loaders.gl assertion failed.")}var wn={self:typeof self<"u"&&self,window:typeof window<"u"&&window,global:typeof global<"u"&&global,document:typeof document<"u"&&document},Pdt=wn.self||wn.window||wn.global||{},Idt=wn.window||wn.self||wn.global||{},Rdt=wn.global||wn.self||wn.window||{},Odt=wn.document||{};var Se=typeof process!="object"||String(process)!=="[object process]"||process.browser,Yl=typeof importScripts=="function",kE=typeof window<"u"&&typeof window.orientation<"u",DE=typeof process<"u"&&process.version&&/v([0-9]*)/.exec(process.version),Ldt=DE&&parseFloat(DE[1])||0;var $l=class{name;workerThread;isRunning=!0;result;_resolve=()=>{};_reject=()=>{};constructor(t,r){this.name=t,this.workerThread=r,this.result=new Promise((n,s)=>{this._resolve=n,this._reject=s})}postMessage(t,r){this.workerThread.postMessage({source:"loaders.gl",type:t,payload:r})}done(t){Be(this.isRunning),this.isRunning=!1,this._resolve(t)}error(t){Be(this.isRunning),this.isRunning=!1,this._reject(t)}};var wa=class{terminate(){}};var T_=new Map;function UE(e){Be(e.source&&!e.url||!e.source&&e.url);let t=T_.get(e.source||e.url);return t||(e.url&&(t=Zz(e.url),T_.set(e.url,t)),e.source&&(t=zE(e.source),T_.set(e.source,t))),Be(t),t}function Zz(e){if(!e.startsWith("http"))return e;let t=Jz(e);return zE(t)}function zE(e){let t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}function Jz(e){return`try {
  importScripts('${e}');
} catch (error) {
  console.error(error);
  throw error;
}`}function v_(e,t=!0,r){let n=r||new Set;if(e){if(VE(e))n.add(e);else if(VE(e.buffer))n.add(e.buffer);else if(!ArrayBuffer.isView(e)){if(t&&typeof e=="object")for(let s in e)v_(e[s],t,n)}}return r===void 0?Array.from(n):[]}function VE(e){return e?e instanceof ArrayBuffer||typeof MessagePort<"u"&&e instanceof MessagePort||typeof ImageBitmap<"u"&&e instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas:!1}var E_=()=>{},js=class{name;source;url;terminated=!1;worker;onMessage;onError;_loadableURL="";static isSupported(){return typeof Worker<"u"&&Se||typeof wa<"u"&&!Se}constructor(t){let{name:r,source:n,url:s}=t;Be(n||s),this.name=r,this.source=n,this.url=s,this.onMessage=E_,this.onError=i=>console.log(i),this.worker=Se?this._createBrowserWorker():this._createNodeWorker()}destroy(){this.onMessage=E_,this.onError=E_,this.worker.terminate(),this.terminated=!0}get isRunning(){return Boolean(this.onMessage)}postMessage(t,r){r=r||v_(t),this.worker.postMessage(t,r)}_getErrorFromErrorEvent(t){let r="Failed to load ";return r+=`worker ${this.name} from ${this.url}. `,t.message&&(r+=`${t.message} in `),t.lineno&&(r+=`:${t.lineno}:${t.colno}`),new Error(r)}_createBrowserWorker(){this._loadableURL=UE({source:this.source,url:this.url});let t=new Worker(this._loadableURL,{name:this.name});return t.onmessage=r=>{r.data?this.onMessage(r.data):this.onError(new Error("No data received"))},t.onerror=r=>{this.onError(this._getErrorFromErrorEvent(r)),this.terminated=!0},t.onmessageerror=r=>console.error(r),t}_createNodeWorker(){let t;if(this.url){let n=this.url.includes(":/")||this.url.startsWith("/")?this.url:`./${this.url}`;t=new wa(n,{eval:!1})}else if(this.source)t=new wa(this.source,{eval:!0});else throw new Error("no worker");return t.on("message",r=>{this.onMessage(r)}),t.on("error",r=>{this.onError(r)}),t.on("exit",r=>{}),t}};var Kl=class{name="unnamed";source;url;maxConcurrency=1;maxMobileConcurrency=1;onDebug=()=>{};reuseWorkers=!0;props={};jobQueue=[];idleQueue=[];count=0;isDestroyed=!1;static isSupported(){return js.isSupported()}constructor(t){this.source=t.source,this.url=t.url,this.setProps(t)}destroy(){this.idleQueue.forEach(t=>t.destroy()),this.isDestroyed=!0}setProps(t){this.props={...this.props,...t},t.name!==void 0&&(this.name=t.name),t.maxConcurrency!==void 0&&(this.maxConcurrency=t.maxConcurrency),t.maxMobileConcurrency!==void 0&&(this.maxMobileConcurrency=t.maxMobileConcurrency),t.reuseWorkers!==void 0&&(this.reuseWorkers=t.reuseWorkers),t.onDebug!==void 0&&(this.onDebug=t.onDebug)}async startJob(t,r=(s,i,o)=>s.done(o),n=(s,i)=>s.error(i)){let s=new Promise(i=>(this.jobQueue.push({name:t,onMessage:r,onError:n,onStart:i}),this));return this._startQueuedJob(),await s}async _startQueuedJob(){if(!this.jobQueue.length)return;let t=this._getAvailableWorker();if(!t)return;let r=this.jobQueue.shift();if(r){this.onDebug({message:"Starting job",name:r.name,workerThread:t,backlog:this.jobQueue.length});let n=new $l(r.name,t);t.onMessage=s=>r.onMessage(n,s.type,s.payload),t.onError=s=>r.onError(n,s),r.onStart(n);try{await n.result}catch(s){console.error(`Worker exception: ${s}`)}finally{this.returnWorkerToQueue(t)}}}returnWorkerToQueue(t){!Se||this.isDestroyed||!this.reuseWorkers||this.count>this._getMaxConcurrency()?(t.destroy(),this.count--):this.idleQueue.push(t),this.isDestroyed||this._startQueuedJob()}_getAvailableWorker(){if(this.idleQueue.length>0)return this.idleQueue.shift()||null;if(this.count<this._getMaxConcurrency()){this.count++;let t=`${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;return new js({name:t,source:this.source,url:this.url})}return null}_getMaxConcurrency(){return kE?this.maxMobileConcurrency:this.maxConcurrency}};var Qz={maxConcurrency:3,maxMobileConcurrency:1,reuseWorkers:!0,onDebug:()=>{}},Ji=class{props;workerPools=new Map;static isSupported(){return js.isSupported()}static getWorkerFarm(t={}){return Ji._workerFarm=Ji._workerFarm||new Ji({}),Ji._workerFarm.setProps(t),Ji._workerFarm}constructor(t){this.props={...Qz},this.setProps(t),this.workerPools=new Map}destroy(){for(let t of this.workerPools.values())t.destroy();this.workerPools=new Map}setProps(t){this.props={...this.props,...t};for(let r of this.workerPools.values())r.setProps(this._getWorkerPoolProps())}getWorkerPool(t){let{name:r,source:n,url:s}=t,i=this.workerPools.get(r);return i||(i=new Kl({name:r,source:n,url:s}),i.setProps(this._getWorkerPoolProps()),this.workerPools.set(r,i)),i}_getWorkerPoolProps(){return{maxConcurrency:this.props.maxConcurrency,maxMobileConcurrency:this.props.maxMobileConcurrency,reuseWorkers:this.props.reuseWorkers,onDebug:this.props.onDebug}}},qs=Ji;Y(qs,"_workerFarm");function M_(e,t={}){let r=t[e.id]||{},n=Se?`${e.id}-worker.js`:`${e.id}-worker-node.js`,s=r.workerUrl;if(!s&&e.id==="compression"&&(s=t.workerUrl),t._workerType==="test"&&(Se?s=`modules/${e.module}/dist/${n}`:s=`modules/${e.module}/src/workers/${e.id}-worker-node.ts`),!s){let i=e.version;i==="latest"&&(i=FE);let o=i?`@${i}`:"";s=`https://unpkg.com/@loaders.gl/${e.module}${o}/dist/${n}`}return Be(s),s}function S_(e,t=Xl){Be(e,"no worker provided");let r=e.version;return!(!t||!r)}var w_={};async function Cn(e,t=null,r={},n=null){return t&&(e=WE(e,t,r,n)),w_[e]=w_[e]||tV(e),await w_[e]}function WE(e,t,r={},n=null){if(!r.useLocalLibraries&&e.startsWith("http"))return e;n=n||e;let s=r.modules||{};return s[n]?s[n]:Se?r.CDN?(Be(r.CDN.startsWith("http")),`${r.CDN}/${t}@${Xl}/dist/libs/${n}`):Yl?`../src/libs/${n}`:`modules/${t}/src/libs/${n}`:`modules/${t}/dist/libs/${n}`}async function tV(e){if(e.endsWith("wasm"))return await rV(e);if(!Se)try{let{requireFromFile:r}=globalThis.loaders||{};return await r?.(e)}catch(r){return console.error(r),null}if(Yl)return importScripts(e);let t=await nV(e);return eV(t,e)}function eV(e,t){if(!Se){let{requireFromString:n}=globalThis.loaders||{};return n?.(e,t)}if(Yl)return eval.call(globalThis,e),null;let r=document.createElement("script");r.id=t;try{r.appendChild(document.createTextNode(e))}catch{r.text=e}return document.body.appendChild(r),null}async function rV(e){let{readFileAsArrayBuffer:t}=globalThis.loaders||{};return Se||!t||e.startsWith("http")?await(await fetch(e)).arrayBuffer():await t(e)}async function nV(e){let{readFileAsText:t}=globalThis.loaders||{};return Se||!t||e.startsWith("http")?await(await fetch(e)).text():await t(e)}function C_(e,t){return!qs.isSupported()||!Se&&!t?._nodeWorkers?!1:e.worker&&t?.worker}async function P_(e,t,r,n,s){let i=e.id,o=M_(e,r),c=qs.getWorkerFarm(r).getWorkerPool({name:i,url:o});r=JSON.parse(JSON.stringify(r)),n=JSON.parse(JSON.stringify(n||{}));let l=await c.startJob("process-on-worker",sV.bind(null,s));return l.postMessage("process",{input:t,options:r,context:n}),await(await l.result).result}async function sV(e,t,r,n){switch(r){case"done":t.done(n);break;case"error":t.error(new Error(n.error));break;case"process":let{id:s,input:i,options:o}=n;try{let a=await e(i,o);t.postMessage("done",{id:s,result:a})}catch(a){let c=a instanceof Error?a.message:"unknown error";t.postMessage("error",{id:s,error:c})}break;default:console.warn(`parse-with-worker unknown message ${r}`)}}function GE(e,t=5){return typeof e=="string"?e.slice(0,t):ArrayBuffer.isView(e)?HE(e.buffer,e.byteOffset,t):e instanceof ArrayBuffer?HE(e,0,t):""}function HE(e,t,r){if(e.byteLength<=t+r)return"";let n=new DataView(e),s="";for(let i=0;i<r;i++)s+=String.fromCharCode(n.getUint8(t+i));return s}function I_(e){try{return JSON.parse(e)}catch{throw new Error(`Failed to parse JSON from data starting with "${GE(e)}"`)}}function R_(e,t,r){if(r=r||e.byteLength,e.byteLength<r||t.byteLength<r)return!1;let n=new Uint8Array(e),s=new Uint8Array(t);for(let i=0;i<n.length;++i)if(n[i]!==s[i])return!1;return!0}function O_(...e){return jE(e)}function jE(e){let t=e.map(i=>i instanceof ArrayBuffer?new Uint8Array(i):i),r=t.reduce((i,o)=>i+o.byteLength,0),n=new Uint8Array(r),s=0;for(let i of t)n.set(i,s),s+=i.byteLength;return n.buffer}function Zl(...e){let t=e,r=t&&t.length>1&&t[0].constructor||null;if(!r)throw new Error('"concatenateTypedArrays" - incorrect quantity of arguments or arguments have incompatible data types');let n=t.reduce((o,a)=>o+a.length,0),s=new r(n),i=0;for(let o of t)s.set(o,i),i+=o.length;return s}function Qi(e,t,r){let n=r!==void 0?new Uint8Array(e).subarray(t,t+r):new Uint8Array(e).subarray(t);return new Uint8Array(n).buffer}function Xs(e,t){return lt(e>=0),lt(t>0),e+(t-1)&~(t-1)}function L_(e,t,r){let n;if(e instanceof ArrayBuffer)n=new Uint8Array(e);else{let s=e.byteOffset,i=e.byteLength;n=new Uint8Array(e.buffer||e.arrayBuffer,s,i)}return t.set(n,r),r+Xs(n.byteLength,4)}async function B_(e){let t=[];for await(let r of e)t.push(r);return O_(...t)}function Jl(){let e;if(typeof window<"u"&&window.performance)e=window.performance.now();else if(typeof process<"u"&&process.hrtime){let t=process.hrtime();e=t[0]*1e3+t[1]/1e6}else e=Date.now();return e}var to=class{constructor(t,r){this.sampleSize=1,this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this.name=t,this.type=r,this.reset()}reset(){return this.time=0,this.count=0,this.samples=0,this.lastTiming=0,this.lastSampleTime=0,this.lastSampleCount=0,this._count=0,this._time=0,this._samples=0,this._startTime=0,this._timerPending=!1,this}setSampleSize(t){return this.sampleSize=t,this}incrementCount(){return this.addCount(1),this}decrementCount(){return this.subtractCount(1),this}addCount(t){return this._count+=t,this._samples++,this._checkSampling(),this}subtractCount(t){return this._count-=t,this._samples++,this._checkSampling(),this}addTime(t){return this._time+=t,this.lastTiming=t,this._samples++,this._checkSampling(),this}timeStart(){return this._startTime=Jl(),this._timerPending=!0,this}timeEnd(){return this._timerPending?(this.addTime(Jl()-this._startTime),this._timerPending=!1,this._checkSampling(),this):this}getSampleAverageCount(){return this.sampleSize>0?this.lastSampleCount/this.sampleSize:0}getSampleAverageTime(){return this.sampleSize>0?this.lastSampleTime/this.sampleSize:0}getSampleHz(){return this.lastSampleTime>0?this.sampleSize/(this.lastSampleTime/1e3):0}getAverageCount(){return this.samples>0?this.count/this.samples:0}getAverageTime(){return this.samples>0?this.time/this.samples:0}getHz(){return this.time>0?this.samples/(this.time/1e3):0}_checkSampling(){this._samples===this.sampleSize&&(this.lastSampleTime=this._time,this.lastSampleCount=this._count,this.count+=this._count,this.time+=this._time,this.samples+=this._samples,this._time=0,this._count=0,this._samples=0)}};var Ue=class{constructor(t){this.stats={},this.id=t.id,this.stats={},this._initializeStats(t.stats),Object.seal(this)}get(t,r="count"){return this._getOrCreate({name:t,type:r})}get size(){return Object.keys(this.stats).length}reset(){for(let t of Object.values(this.stats))t.reset();return this}forEach(t){for(let r of Object.values(this.stats))t(r)}getTable(){let t={};return this.forEach(r=>{t[r.name]={time:r.time||0,count:r.count||0,average:r.getAverageTime()||0,hz:r.getHz()||0}}),t}_initializeStats(t=[]){t.forEach(r=>this._getOrCreate(r))}_getOrCreate(t){let{name:r,type:n}=t,s=this.stats[r];return s||(t instanceof to?s=t:s=new to(r,n),this.stats[r]=s),s}};var iV="Queued Requests",oV="Active Requests",aV="Cancelled Requests",cV="Queued Requests Ever",lV="Active Requests Ever",fV={id:"request-scheduler",throttleRequests:!0,maxRequests:6,debounceTime:0},Ys=class{props;stats;activeRequestCount=0;requestQueue=[];requestMap=new Map;updateTimer=null;constructor(t={}){this.props={...fV,...t},this.stats=new Ue({id:this.props.id}),this.stats.get(iV),this.stats.get(oV),this.stats.get(aV),this.stats.get(cV),this.stats.get(lV)}scheduleRequest(t,r=()=>0){if(!this.props.throttleRequests)return Promise.resolve({done:()=>{}});if(this.requestMap.has(t))return this.requestMap.get(t);let n={handle:t,priority:0,getPriority:r},s=new Promise(i=>(n.resolve=i,n));return this.requestQueue.push(n),this.requestMap.set(t,s),this._issueNewRequests(),s}_issueRequest(t){let{handle:r,resolve:n}=t,s=!1,i=()=>{s||(s=!0,this.requestMap.delete(r),this.activeRequestCount--,this._issueNewRequests())};return this.activeRequestCount++,n?n({done:i}):Promise.resolve({done:i})}_issueNewRequests(){this.updateTimer!==null&&clearTimeout(this.updateTimer),this.updateTimer=setTimeout(()=>this._issueNewRequestsAsync(),this.props.debounceTime)}_issueNewRequestsAsync(){this.updateTimer!==null&&clearTimeout(this.updateTimer),this.updateTimer=null;let t=Math.max(this.props.maxRequests-this.activeRequestCount,0);if(t!==0){this._updateAllRequests();for(let r=0;r<t;++r){let n=this.requestQueue.shift();n&&this._issueRequest(n)}}}_updateAllRequests(){let t=this.requestQueue;for(let r=0;r<t.length;++r){let n=t[r];this._updateRequest(n)||(t.splice(r,1),this.requestMap.delete(n.handle),r--)}t.sort((r,n)=>r.priority-n.priority)}_updateRequest(t){return t.priority=t.getPriority(t.handle),t.priority<0?(t.resolve(null),!1):!0}};var hV="",qE={};function N_(e){for(let t in qE)if(e.startsWith(t)){let r=qE[t];e=e.replace(t,r)}return!e.startsWith("http://")&&!e.startsWith("https://")&&(e=`${hV}${e}`),e}function XE(e){return e&&typeof e=="object"&&e.isBuffer}function np(e){if(XE(e))return e;if(e instanceof ArrayBuffer)return e;if(ArrayBuffer.isView(e))return e.byteOffset===0&&e.byteLength===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);if(typeof e=="string"){let t=e;return new TextEncoder().encode(t).buffer}if(e&&typeof e=="object"&&e._toArrayBuffer)return e._toArrayBuffer();throw new Error("toArrayBuffer")}var Er={};Wt(Er,{dirname:()=>dV,filename:()=>uV,join:()=>pV,resolve:()=>mV});function YE(){if(typeof process<"u"&&typeof process.cwd<"u")return process.cwd();let e=window.location?.pathname;return e?.slice(0,e.lastIndexOf("/")+1)||""}function uV(e){let t=e?e.lastIndexOf("/"):-1;return t>=0?e.substr(t+1):""}function dV(e){let t=e?e.lastIndexOf("/"):-1;return t>=0?e.substr(0,t):""}function pV(...e){let t="/";return e=e.map((r,n)=>(n&&(r=r.replace(new RegExp(`^${t}`),"")),n!==e.length-1&&(r=r.replace(new RegExp(`${t}$`),"")),r)),e.join(t)}function mV(...e){let t=[];for(let i=0;i<e.length;i++)t[i]=e[i];let r="",n=!1,s;for(let i=t.length-1;i>=-1&&!n;i--){let o;i>=0?o=t[i]:(s===void 0&&(s=YE()),o=s),o.length!==0&&(r=`${o}/${r}`,n=o.charCodeAt(0)===Ql)}return r=gV(r,!n),n?`/${r}`:r.length>0?r:"."}var Ql=47,F_=46;function gV(e,t){let r="",n=-1,s=0,i,o=!1;for(let a=0;a<=e.length;++a){if(a<e.length)i=e.charCodeAt(a);else{if(i===Ql)break;i=Ql}if(i===Ql){if(!(n===a-1||s===1))if(n!==a-1&&s===2){if(r.length<2||!o||r.charCodeAt(r.length-1)!==F_||r.charCodeAt(r.length-2)!==F_){if(r.length>2){let c=r.length-1,l=c;for(;l>=0&&r.charCodeAt(l)!==Ql;--l);if(l!==c){r=l===-1?"":r.slice(0,l),n=a,s=0,o=!1;continue}}else if(r.length===2||r.length===1){r="",n=a,s=0,o=!1;continue}}t&&(r.length>0?r+="/..":r="..",o=!0)}else{let c=e.slice(n+1,a);r.length>0?r+=`/${c}`:r=c,o=!1}n=a,s=0}else i===F_&&s!==-1?++s:s=-1}return r}var sp=class{fetch;loadOptions;_needsRefresh=!0;props;constructor(t){this.props={...t},this.loadOptions={...t.loadOptions},this.fetch=xV(this.loadOptions)}setProps(t){this.props=Object.assign(this.props,t),this.setNeedsRefresh()}setNeedsRefresh(){this._needsRefresh=!0}getNeedsRefresh(t=!0){let r=this._needsRefresh;return t&&(this._needsRefresh=!1),r}};function xV(e){let t=e?.fetch;if(t&&typeof t=="function")return(n,s)=>t(n,s);let r=e?.fetch;return r&&typeof r!="function"?n=>fetch(n,r):n=>fetch(n)}var Br=class extends sp{};Y(Br,"type","template"),Y(Br,"testURL",t=>!1);var _V=e=>typeof e=="boolean",tf=e=>typeof e=="function",eo=e=>e!==null&&typeof e=="object",D_=e=>eo(e)&&e.constructor==={}.constructor;var $E=e=>Boolean(e)&&typeof e[Symbol.iterator]=="function",KE=e=>e&&typeof e[Symbol.asyncIterator]=="function";var Nr=e=>typeof Response<"u"&&e instanceof Response||e&&e.arrayBuffer&&e.text&&e.json;var Fr=e=>typeof Blob<"u"&&e instanceof Blob,ZE=e=>e&&typeof e=="object"&&e.isBuffer;var yV=e=>typeof ReadableStream<"u"&&e instanceof ReadableStream||eo(e)&&tf(e.tee)&&tf(e.cancel)&&tf(e.getReader);var AV=e=>eo(e)&&tf(e.read)&&tf(e.pipe)&&_V(e.readable),ip=e=>yV(e)||AV(e);var op=class extends Error{constructor(t,r){super(t),this.reason=r.reason,this.url=r.url,this.response=r.response}reason;url;response};var bV=/^data:([-\w.]+\/[-\w.+]+)(;|,)/,TV=/^([-\w.]+\/[-\w.+]+)/;function k_(e,t){return e.toLowerCase()===t.toLowerCase()}function JE(e){let t=TV.exec(e);return t?t[1]:e}function U_(e){let t=bV.exec(e);return t?t[1]:""}var QE=/\?.*/;function tM(e){let t=e.match(QE);return t&&t[0]}function Ca(e){return e.replace(QE,"")}function eM(e){if(e.length<50)return e;let t=e.slice(e.length-15);return`${e.substr(0,32)}...${t}`}function ro(e){return Nr(e)?e.url:Fr(e)?e.name||"":typeof e=="string"?e:""}function ef(e){if(Nr(e)){let t=e,r=t.headers.get("content-type")||"",n=Ca(t.url);return JE(r)||U_(n)}return Fr(e)?e.type||"":typeof e=="string"?U_(e):""}function rM(e){return Nr(e)?e.headers["content-length"]||-1:Fr(e)?e.size:typeof e=="string"?e.length:e instanceof ArrayBuffer||ArrayBuffer.isView(e)?e.byteLength:-1}async function ap(e){if(Nr(e))return e;let t={},r=rM(e);r>=0&&(t["content-length"]=String(r));let n=ro(e),s=ef(e);s&&(t["content-type"]=s);let i=await EV(e);i&&(t["x-first-bytes"]=i),typeof e=="string"&&(e=new TextEncoder().encode(e));let o=new Response(e,{headers:t});return Object.defineProperty(o,"url",{value:n}),o}async function nM(e){if(!e.ok)throw await vV(e)}async function vV(e){let t=eM(e.url),r=`Failed to fetch resource (${e.status}) ${e.statusText}: ${t}`;r=r.length>100?`${r.slice(0,100)}...`:r;let n={reason:e.statusText,url:e.url,response:e};try{let s=e.headers.get("Content-Type");n.reason=s?.includes("application/json")?await e.json():e.text()}catch{}return new op(r,n)}async function EV(e){if(typeof e=="string")return`data:,${e.slice(0,5)}`;if(e instanceof Blob){let r=e.slice(0,5);return await new Promise(n=>{let s=new FileReader;s.onload=i=>n(i?.target?.result),s.readAsDataURL(r)})}if(e instanceof ArrayBuffer){let r=e.slice(0,5);return`data:base64,${MV(r)}`}return null}function MV(e){let t="",r=new Uint8Array(e);for(let n=0;n<r.byteLength;n++)t+=String.fromCharCode(r[n]);return btoa(t)}function SV(e){return!wV(e)&&!CV(e)}function wV(e){return e.startsWith("http:")||e.startsWith("https:")}function CV(e){return e.startsWith("data:")}async function Pa(e,t){if(typeof e=="string"){let r=N_(e);return SV(r)&&globalThis.loaders?.fetchNode?globalThis.loaders?.fetchNode(r,t):await fetch(r,t)}return await ap(e)}var z_=new hr({id:"loaders.gl"}),cp=class{log(){return()=>{}}info(){return()=>{}}warn(){return()=>{}}error(){return()=>{}}},lp=class{console;constructor(){this.console=console}log(...t){return this.console.log.bind(this.console,...t)}info(...t){return this.console.info.bind(this.console,...t)}warn(...t){return this.console.warn.bind(this.console,...t)}error(...t){return this.console.error.bind(this.console,...t)}};var V_={fetch:null,mimeType:void 0,nothrow:!1,log:new lp,useLocalLibraries:!1,CDN:"https://unpkg.com/@loaders.gl",worker:!0,maxConcurrency:3,maxMobileConcurrency:1,reuseWorkers:as,_nodeWorkers:!1,_workerType:"",limit:0,_limitMB:0,batchSize:"auto",batchDebounceMs:0,metadata:!1,transforms:[]},sM={throws:"nothrow",dataType:"(no longer used)",uri:"baseUri",method:"fetch.method",headers:"fetch.headers",body:"fetch.body",mode:"fetch.mode",credentials:"fetch.credentials",cache:"fetch.cache",redirect:"fetch.redirect",referrer:"fetch.referrer",referrerPolicy:"fetch.referrerPolicy",integrity:"fetch.integrity",keepalive:"fetch.keepalive",signal:"fetch.signal"};function W_(){globalThis.loaders=globalThis.loaders||{};let{loaders:e}=globalThis;return e._state||(e._state={}),e._state}function H_(){let e=W_();return e.globalOptions=e.globalOptions||{...V_},e.globalOptions}function aM(e,t,r,n){return r=r||[],r=Array.isArray(r)?r:[r],PV(e,r),RV(t,e,n)}function PV(e,t){iM(e,null,V_,sM,t);for(let r of t){let n=e&&e[r.id]||{},s=r.options&&r.options[r.id]||{},i=r.deprecatedOptions&&r.deprecatedOptions[r.id]||{};iM(n,r.id,s,i,t)}}function iM(e,t,r,n,s){let i=t||"Top level",o=t?`${t}.`:"";for(let a in e){let c=!t&&eo(e[a]),l=a==="baseUri"&&!t,f=a==="workerUrl"&&t;if(!(a in r)&&!l&&!f){if(a in n)z_.warn(`${i} loader option '${o}${a}' no longer supported, use '${n[a]}'`)();else if(!c){let h=IV(a,s);z_.warn(`${i} loader option '${o}${a}' not recognized. ${h}`)()}}}}function IV(e,t){let r=e.toLowerCase(),n="";for(let s of t)for(let i in s.options){if(e===i)return`Did you mean '${s.id}.${i}'?`;let o=i.toLowerCase();(r.startsWith(o)||o.startsWith(r))&&(n=n||`Did you mean '${s.id}.${i}'?`)}return n}function RV(e,t,r){let s={...e.options||{}};return OV(s,r),s.log===null&&(s.log=new cp),oM(s,H_()),oM(s,t),s}function oM(e,t){for(let r in t)if(r in t){let n=t[r];D_(n)&&D_(e[r])?e[r]={...e[r],...t[r]}:e[r]=t[r]}}function OV(e,t){t&&!("baseUri"in e)&&(e.baseUri=t)}function rf(e){return e?(Array.isArray(e)&&(e=e[0]),Array.isArray(e?.extensions)):!1}function nf(e){lt(e,"null loader"),lt(rf(e),"invalid loader");let t;return Array.isArray(e)&&(t=e[1],e=e[0],e={...e,options:{...e.options,...t}}),(e?.parseTextSync||e?.parseText)&&(e.text=!0),e.text||(e.binary=!0),e}var cM=()=>{let e=W_();return e.loaderRegistry=e.loaderRegistry||[],e.loaderRegistry};function sf(e){let t=cM();e=Array.isArray(e)?e:[e];for(let r of e){let n=nf(r);t.find(s=>n===s)||t.unshift(n)}}function lM(){return cM()}var fM=new hr({id:"loaders.gl"});var LV=/\.([^.]+)$/;async function dM(e,t=[],r,n){if(!pM(e))return null;let s=hM(e,t,{...r,nothrow:!0},n);if(s)return s;if(Fr(e)&&(e=await e.slice(0,10).arrayBuffer(),s=hM(e,t,r,n)),!s&&!r?.nothrow)throw new Error(mM(e));return s}function hM(e,t=[],r,n){if(!pM(e))return null;if(t&&!Array.isArray(t))return nf(t);let s=[];t&&(s=s.concat(t)),r?.ignoreRegisteredLoaders||s.push(...lM()),NV(s);let i=BV(e,s,r,n);if(!i&&!r?.nothrow)throw new Error(mM(e));return i}function BV(e,t,r,n){let s=ro(e),i=ef(e),o=Ca(s)||n?.url,a=null,c="";return r?.mimeType&&(a=G_(t,r?.mimeType),c=`match forced by supplied MIME type ${r?.mimeType}`),a=a||FV(t,o),c=c||(a?`matched url ${o}`:""),a=a||G_(t,i),c=c||(a?`matched MIME type ${i}`:""),a=a||kV(t,e),c=c||(a?`matched initial data ${gM(e)}`:""),r?.fallbackMimeType&&(a=a||G_(t,r?.fallbackMimeType),c=c||(a?`matched fallback MIME type ${i}`:"")),c&&fM.log(1,`selectLoader selected ${a?.name}: ${c}.`),a}function pM(e){return!(e instanceof Response&&e.status===204)}function mM(e){let t=ro(e),r=ef(e),n="No valid loader found (";n+=t?`${Er.filename(t)}, `:"no url provided, ",n+=`MIME type: ${r?`"${r}"`:"not provided"}, `;let s=e?gM(e):"";return n+=s?` first bytes: "${s}"`:"first bytes: not available",n+=")",n}function NV(e){for(let t of e)nf(t)}function FV(e,t){let r=t&&LV.exec(t),n=r&&r[1];return n?DV(e,n):null}function DV(e,t){t=t.toLowerCase();for(let r of e)for(let n of r.extensions)if(n.toLowerCase()===t)return r;return null}function G_(e,t){for(let r of e)if(r.mimeTypes?.some(n=>k_(t,n))||k_(t,`application/x.${r.id}`))return r;return null}function kV(e,t){if(!t)return null;for(let r of e)if(typeof t=="string"){if(UV(t,r))return r}else if(ArrayBuffer.isView(t)){if(uM(t.buffer,t.byteOffset,r))return r}else if(t instanceof ArrayBuffer&&uM(t,0,r))return r;return null}function UV(e,t){return t.testText?t.testText(e):(Array.isArray(t.tests)?t.tests:[t.tests]).some(n=>e.startsWith(n))}function uM(e,t,r){return(Array.isArray(r.tests)?r.tests:[r.tests]).some(s=>zV(e,t,r,s))}function zV(e,t,r,n){if(n instanceof ArrayBuffer)return R_(n,e,n.byteLength);switch(typeof n){case"function":return n(e);case"string":let s=j_(e,t,n.length);return n===s;default:return!1}}function gM(e,t=5){return typeof e=="string"?e.slice(0,t):ArrayBuffer.isView(e)?j_(e.buffer,e.byteOffset,t):e instanceof ArrayBuffer?j_(e,0,t):""}function j_(e,t,r){if(e.byteLength<t+r)return"";let n=new DataView(e),s="";for(let i=0;i<r;i++)s+=String.fromCharCode(n.getUint8(t+i));return s}function*xM(e,t){let r=t?.chunkSize||262144,n=0,s=new TextEncoder;for(;n<e.length;){let i=Math.min(e.length-n,r),o=e.slice(n,n+i);n+=i,yield s.encode(o)}}function*_M(e,t={}){let{chunkSize:r=262144}=t,n=0;for(;n<e.byteLength;){let s=Math.min(e.byteLength-n,r),i=new ArrayBuffer(s),o=new Uint8Array(e,n,s);new Uint8Array(i).set(o),n+=s,yield i}}async function*yM(e,t){let r=t?.chunkSize||1048576,n=0;for(;n<e.size;){let s=n+r,i=await e.slice(n,s).arrayBuffer();n=s,yield i}}function q_(e,t){return as?VV(e,t):WV(e,t)}async function*VV(e,t){let r=e.getReader(),n;try{for(;;){let s=n||r.read();t?._streamReadAhead&&(n=r.read());let{done:i,value:o}=await s;if(i)return;yield np(o)}}catch{r.releaseLock()}}async function*WV(e,t){for await(let r of e)yield np(r)}function AM(e,t){if(typeof e=="string")return xM(e,t);if(e instanceof ArrayBuffer)return _M(e,t);if(Fr(e))return yM(e,t);if(ip(e))return q_(e,t);if(Nr(e))return q_(e.body,t);throw new Error("makeIterator")}var bM="Cannot convert supplied data type";function HV(e,t,r){if(t.text&&typeof e=="string")return e;if(ZE(e)&&(e=e.buffer),e instanceof ArrayBuffer){let n=e;return t.text&&!t.binary?new TextDecoder("utf8").decode(n):n}if(ArrayBuffer.isView(e)){if(t.text&&!t.binary)return new TextDecoder("utf8").decode(e);let n=e.buffer,s=e.byteLength||e.length;return(e.byteOffset!==0||s!==n.byteLength)&&(n=n.slice(e.byteOffset,e.byteOffset+s)),n}throw new Error(bM)}async function TM(e,t,r){let n=e instanceof ArrayBuffer||ArrayBuffer.isView(e);if(typeof e=="string"||n)return HV(e,t,r);if(Fr(e)&&(e=await ap(e)),Nr(e)){let s=e;return await nM(s),t.binary?await s.arrayBuffer():await s.text()}if(ip(e)&&(e=AM(e,r)),$E(e)||KE(e))return B_(e);throw new Error(bM)}function fp(e,t){let r=H_(),n=e||r;return typeof n.fetch=="function"?n.fetch:eo(n.fetch)?s=>Pa(s,n.fetch):t?.fetch?t?.fetch:Pa}function vM(e,t,r){if(r)return r;let n={fetch:fp(t,e),...e};if(n.url){let s=Ca(n.url);n.baseUrl=s,n.queryString=tM(n.url),n.filename=Er.filename(s),n.baseUrl=Er.dirname(s)}return Array.isArray(n.loaders)||(n.loaders=null),n}function EM(e,t){if(e&&!Array.isArray(e))return e;let r;if(e&&(r=Array.isArray(e)?e:[e]),t&&t.loaders){let n=Array.isArray(t.loaders)?t.loaders:[t.loaders];r=r?[...r,...n]:n}return r&&r.length?r:void 0}async function $s(e,t,r,n){t&&!Array.isArray(t)&&!rf(t)&&(n=void 0,r=t,t=void 0),e=await e,r=r||{};let s=ro(e),o=EM(t,n),a=await dM(e,o,r);return a?(r=aM(r,a,o,s),n=vM({url:s,_parse:$s,loaders:o},r,n||null),await GV(a,e,r,n)):null}async function GV(e,t,r,n){if(S_(e),r=ql(e.options,r),Nr(t)){let i=t,{ok:o,redirected:a,status:c,statusText:l,type:f,url:h}=i,u=Object.fromEntries(i.headers.entries());n.response={headers:u,ok:o,redirected:a,status:c,statusText:l,type:f,url:h}}t=await TM(t,e,r);let s=e;if(s.parseTextSync&&typeof t=="string")return s.parseTextSync(t,r,n);if(C_(e,r))return await P_(e,t,r,n,$s);if(s.parseText&&typeof t=="string")return await s.parseText(t,r,n);if(s.parse)return await s.parse(t,r,n);throw Be(!s.parseSync),new Error(`${e.id} loader - no parser found and worker is disabled`)}function MM(e){switch(e.constructor){case Int8Array:return"int8";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int16Array:return"int16";case Uint16Array:return"uint16";case Int32Array:return"int32";case Uint32Array:return"uint32";case Float32Array:return"float32";case Float64Array:return"float64";default:return"null"}}function cs(e){let t=1/0,r=1/0,n=1/0,s=-1/0,i=-1/0,o=-1/0,a=e.POSITION?e.POSITION.value:[],c=a&&a.length;for(let l=0;l<c;l+=3){let f=a[l],h=a[l+1],u=a[l+2];t=f<t?f:t,r=h<r?h:r,n=u<n?u:n,s=f>s?f:s,i=h>i?h:i,o=u>o?u:o}return[[t,r,n],[s,i,o]]}function X_(e,t,r){let n=MM(t.value),s=r||SM(t);return{name:e,type:{type:"fixed-size-list",listSize:t.size,children:[{name:"value",type:n}]},nullable:!1,metadata:s}}function SM(e){let t={};return"byteOffset"in e&&(t.byteOffset=e.byteOffset.toString(10)),"byteStride"in e&&(t.byteStride=e.byteStride.toString(10)),"normalized"in e&&(t.normalized=e.normalized.toString()),t}async function me(e,t,r,n){let s,i;!Array.isArray(t)&&!rf(t)?(s=[],i=t,n=void 0):(s=t,i=r);let o=fp(i),a=e;return typeof e=="string"&&(a=await o(e)),Fr(e)&&(a=await o(e)),Array.isArray(s)?await $s(a,s,i):await $s(a,s,i)}var wM="4.2.1";var jV=globalThis.loaders?.parseImageNode,Y_=typeof Image<"u",$_=typeof ImageBitmap<"u",qV=Boolean(jV),K_=as?!0:qV;function CM(e){switch(e){case"auto":return $_||Y_||K_;case"imagebitmap":return $_;case"image":return Y_;case"data":return K_;default:throw new Error(`@loaders.gl/images: image ${e} not supported in this environment`)}}function PM(){if($_)return"imagebitmap";if(Y_)return"image";if(K_)return"data";throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js")}function IM(e){let t=XV(e);if(!t)throw new Error("Not an image");return t}function of(e){switch(IM(e)){case"data":return e;case"image":case"imagebitmap":let t=document.createElement("canvas"),r=t.getContext("2d");if(!r)throw new Error("getImageData");return t.width=e.width,t.height=e.height,r.drawImage(e,0,0),r.getImageData(0,0,e.width,e.height);default:throw new Error("getImageData")}}function XV(e){return typeof ImageBitmap<"u"&&e instanceof ImageBitmap?"imagebitmap":typeof Image<"u"&&e instanceof Image?"image":e&&typeof e=="object"&&e.data&&e.width&&e.height?"data":null}var YV=/^data:image\/svg\+xml/,$V=/\.svg((\?|#).*)?$/;function hp(e){return e&&(YV.test(e)||$V.test(e))}function RM(e,t){if(hp(t)){let n=new TextDecoder().decode(e);try{typeof unescape=="function"&&typeof encodeURIComponent=="function"&&(n=unescape(encodeURIComponent(n)))}catch(i){throw new Error(i.message)}return`data:image/svg+xml;base64,${btoa(n)}`}return Z_(e,t)}function Z_(e,t){if(hp(t))throw new Error("SVG cannot be parsed directly to imagebitmap");return new Blob([new Uint8Array(e)])}async function up(e,t,r){let n=RM(e,r),s=self.URL||self.webkitURL,i=typeof n!="string"&&s.createObjectURL(n);try{return await KV(i||n,t)}finally{i&&s.revokeObjectURL(i)}}async function KV(e,t){let r=new Image;return r.src=e,t.image&&t.image.decode&&r.decode?(await r.decode(),r):await new Promise((n,s)=>{try{r.onload=()=>n(r),r.onerror=i=>{let o=i instanceof Error?i.message:"error";s(new Error(o))}}catch(i){s(i)}})}var ZV={},OM=!0;async function LM(e,t,r){let n;hp(r)?n=await up(e,t,r):n=Z_(e,r);let s=t&&t.imagebitmap;return await JV(n,s)}async function JV(e,t=null){if((QV(t)||!OM)&&(t=null),t)try{return await createImageBitmap(e,t)}catch(r){console.warn(r),OM=!1}return await createImageBitmap(e)}function QV(e){for(let t in e||ZV)return!1;return!0}function BM(e){return!n9(e,"ftyp",4)||!(e[8]&96)?null:t9(e)}function t9(e){switch(e9(e,8,12).replace("\0"," ").trim()){case"avif":case"avis":return{extension:"avif",mimeType:"image/avif"};default:return null}}function e9(e,t,r){return String.fromCharCode(...e.slice(t,r))}function r9(e){return[...e].map(t=>t.charCodeAt(0))}function n9(e,t,r=0){let n=r9(t);for(let s=0;s<n.length;++s)if(n[s]!==e[s+r])return!1;return!0}var Pn=!1,af=!0;function no(e){let t=cf(e);return i9(t)||c9(t)||o9(t)||a9(t)||s9(t)}function s9(e){let t=new Uint8Array(e instanceof DataView?e.buffer:e),r=BM(t);return r?{mimeType:r.mimeType,width:0,height:0}:null}function i9(e){let t=cf(e);return t.byteLength>=24&&t.getUint32(0,Pn)===2303741511?{mimeType:"image/png",width:t.getUint32(16,Pn),height:t.getUint32(20,Pn)}:null}function o9(e){let t=cf(e);return t.byteLength>=10&&t.getUint32(0,Pn)===1195984440?{mimeType:"image/gif",width:t.getUint16(6,af),height:t.getUint16(8,af)}:null}function a9(e){let t=cf(e);return t.byteLength>=14&&t.getUint16(0,Pn)===16973&&t.getUint32(2,af)===t.byteLength?{mimeType:"image/bmp",width:t.getUint32(18,af),height:t.getUint32(22,af)}:null}function c9(e){let t=cf(e);if(!(t.byteLength>=3&&t.getUint16(0,Pn)===65496&&t.getUint8(2)===255))return null;let{tableMarkers:n,sofMarkers:s}=l9(),i=2;for(;i+9<t.byteLength;){let o=t.getUint16(i,Pn);if(s.has(o))return{mimeType:"image/jpeg",height:t.getUint16(i+5,Pn),width:t.getUint16(i+7,Pn)};if(!n.has(o))return null;i+=2,i+=t.getUint16(i,Pn)}return null}function l9(){let e=new Set([65499,65476,65484,65501,65534]);for(let r=65504;r<65520;++r)e.add(r);return{tableMarkers:e,sofMarkers:new Set([65472,65473,65474,65475,65477,65478,65479,65481,65482,65483,65485,65486,65487,65502])}}function cf(e){if(e instanceof DataView)return e;if(ArrayBuffer.isView(e))return new DataView(e.buffer);if(e instanceof ArrayBuffer)return new DataView(e);throw new Error("toDataView")}async function NM(e,t){let{mimeType:r}=no(e)||{},n=globalThis.loaders?.parseImageNode;return lt(n),await n(e,r)}async function FM(e,t,r){t=t||{};let s=(t.image||{}).type||"auto",{url:i}=r||{},o=f9(s),a;switch(o){case"imagebitmap":a=await LM(e,t,i);break;case"image":a=await up(e,t,i);break;case"data":a=await NM(e,t);break;default:lt(!1)}return s==="data"&&(a=of(a)),a}function f9(e){switch(e){case"auto":case"data":return PM();default:return CM(e),e}}var h9=["png","jpg","jpeg","gif","webp","bmp","ico","svg","avif"],u9=["image/png","image/jpeg","image/gif","image/webp","image/avif","image/bmp","image/vnd.microsoft.icon","image/svg+xml"],d9={image:{type:"auto",decode:!0}},In={dataType:null,batchType:null,id:"image",module:"images",name:"Images",version:wM,mimeTypes:u9,extensions:h9,parse:FM,tests:[e=>Boolean(no(new DataView(e)))],options:d9};var J_={};function Q_(e){if(J_[e]===void 0){let t=as?m9(e):p9(e);J_[e]=t}return J_[e]}function p9(e){let t=["image/png","image/jpeg","image/gif"],r=globalThis.loaders?.imageFormatsNode||t,n=globalThis.loaders?.parseImageNode;return Boolean(n)&&r.includes(e)}function m9(e){switch(e){case"image/avif":case"image/webp":return g9(e);default:return!0}}function g9(e){try{return document.createElement("canvas").toDataURL(e).indexOf(`data:${e}`)===0}catch{return!1}}var x9=new hr({id:"deck"}),W=x9;var ty={};function dp(e){ty=e}function te(e,t,r,n){W.level>0&&ty[e]&&ty[e].call(null,t,r,n)}function _9(e){let t=e[0],r=e[e.length-1];return t==="{"&&r==="}"||t==="["&&r==="]"}var DM={dataType:null,batchType:null,id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:_9,parseTextSync:JSON.parse};function y9(){let e="9.1.14",t=globalThis.deck&&globalThis.deck.VERSION;if(t&&t!==e)throw new Error(`deck.gl - multiple versions detected: ${t} vs ${e}`);return t||(W.log(1,`deck.gl ${e}`)(),globalThis.deck={...globalThis.deck,VERSION:e,version:e,log:W,_registerLoggers:dp},sf([DM,[In,{imagebitmap:{premultiplyAlpha:"none"}}]])),e}var pp=y9();function mp(e,t){if(!e)throw new Error(t||"shadertools: assertion failed.")}var ey={number:{type:"number",validate(e,t){return Number.isFinite(e)&&typeof t=="object"&&(t.max===void 0||e<=t.max)&&(t.min===void 0||e>=t.min)}},array:{type:"array",validate(e,t){return Array.isArray(e)||ArrayBuffer.isView(e)}}};function UM(e){let t={};for(let[r,n]of Object.entries(e))t[r]=A9(n);return t}function A9(e){let t=kM(e);if(t!=="object")return{value:e,...ey[t],type:t};if(typeof e=="object")return e?e.type!==void 0?{...e,...ey[e.type],type:e.type}:e.value===void 0?{type:"object",value:e}:(t=kM(e.value),{...e,...ey[t],type:t}):{type:"object",value:null};throw new Error("props")}function kM(e){return Array.isArray(e)||ArrayBuffer.isView(e)?"array":typeof e}var zM=`#ifdef MODULE_LOGDEPTH
  logdepth_adjustPosition(gl_Position);
#endif
`,VM=`#ifdef MODULE_MATERIAL
  fragColor = material_filterColor(fragColor);
#endif

#ifdef MODULE_LIGHTING
  fragColor = lighting_filterColor(fragColor);
#endif

#ifdef MODULE_FOG
  fragColor = fog_filterColor(fragColor);
#endif

#ifdef MODULE_PICKING
  fragColor = picking_filterHighlightColor(fragColor);
  fragColor = picking_filterPickingColor(fragColor);
#endif

#ifdef MODULE_LOGDEPTH
  logdepth_setFragDepth();
#endif
`;var b9={vertex:zM,fragment:VM},WM=/void\s+main\s*\([^)]*\)\s*\{\n?/,HM=/}\n?[^{}]*$/,ry=[],lf="__LUMA_INJECT_DECLARATIONS__";function GM(e){let t={vertex:{},fragment:{}};for(let r in e){let n=e[r],s=T9(r);typeof n=="string"&&(n={order:0,injection:n}),t[s][r]=n}return t}function T9(e){let t=e.slice(0,2);switch(t){case"vs":return"vertex";case"fs":return"fragment";default:throw new Error(t)}}function ff(e,t,r,n=!1){let s=t==="vertex";for(let i in r){let o=r[i];o.sort((c,l)=>c.order-l.order),ry.length=o.length;for(let c=0,l=o.length;c<l;++c)ry[c]=o[c].injection;let a=`${ry.join(`
`)}
`;switch(i){case"vs:#decl":s&&(e=e.replace(lf,a));break;case"vs:#main-start":s&&(e=e.replace(WM,c=>c+a));break;case"vs:#main-end":s&&(e=e.replace(HM,c=>a+c));break;case"fs:#decl":s||(e=e.replace(lf,a));break;case"fs:#main-start":s||(e=e.replace(WM,c=>c+a));break;case"fs:#main-end":s||(e=e.replace(HM,c=>a+c));break;default:e=e.replace(i,c=>c+a)}}return e=e.replace(lf,""),n&&(e=e.replace(/\}\s*$/,i=>i+b9[t])),e}function so(e){e.map(t=>gp(t))}function gp(e){if(e.instance)return;so(e.dependencies||[]);let{propTypes:t={},deprecations:r=[],inject:n={}}=e,s={normalizedInjections:GM(n),parsedDeprecations:v9(r)};t&&(s.propValidators=UM(t)),e.instance=s;let i={};t&&(i=Object.entries(t).reduce((o,[a,c])=>{let l=c?.value;return l&&(o[a]=l),o},{})),e.defaultUniforms={...e.defaultUniforms,...i}}function ny(e,t,r){e.deprecations?.forEach(n=>{n.regex?.test(t)&&(n.deprecated?r.deprecated(n.old,n.new)():r.removed(n.old,n.new)())})}function v9(e){return e.forEach(t=>{switch(t.type){case"function":t.regex=new RegExp(`\\b${t.old}\\(`);break;default:t.regex=new RegExp(`${t.type} ${t.old};`)}}),e}function Ia(e){so(e);let t={},r={};jM({modules:e,level:0,moduleMap:t,moduleDepth:r});let n=Object.keys(r).sort((s,i)=>r[i]-r[s]).map(s=>t[s]);return so(n),n}function jM(e){let{modules:t,level:r,moduleMap:n,moduleDepth:s}=e;if(r>=5)throw new Error("Possible loop in shader dependency graph");for(let i of t)n[i.name]=i,(s[i.name]===void 0||s[i.name]<r)&&(s[i.name]=r);for(let i of t)i.dependencies&&jM({modules:i.dependencies,level:r+1,moduleMap:n,moduleDepth:s})}function qM(e){switch(e?.gpu.toLowerCase()){case"apple":return`#define APPLE_GPU
// Apple optimizes away the calculation necessary for emulated fp64
#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1
#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1
// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow
#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1
`;case"nvidia":return`#define NVIDIA_GPU
// Nvidia optimizes away the calculation necessary for emulated fp64
#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1
`;case"intel":return`#define INTEL_GPU
// Intel optimizes away the calculation necessary for emulated fp64
#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1
// Intel's built-in 'tan' function doesn't have acceptable precision
#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1
// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow
#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1
`;case"amd":return`#define AMD_GPU
`;default:return`#define DEFAULT_GPU
// Prevent driver from optimizing away the calculation necessary for emulated fp64
#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1
// Headless Chrome's software shader 'tan' function doesn't have acceptable precision
#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1
// If the GPU doesn't have full 32 bits precision, will causes overflow
#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1
`}}function YM(e,t){if(Number(e.match(/^#version[ \t]+(\d+)/m)?.[1]||100)!==300)throw new Error("luma.gl v9 only supports GLSL 3.00 shader sources");switch(t){case"vertex":return e=XM(e,E9),e;case"fragment":return e=XM(e,M9),e;default:throw new Error(t)}}var $M=[[/^(#version[ \t]+(100|300[ \t]+es))?[ \t]*\n/,`#version 300 es
`],[/\btexture(2D|2DProj|Cube)Lod(EXT)?\(/g,"textureLod("],[/\btexture(2D|2DProj|Cube)(EXT)?\(/g,"texture("]],E9=[...$M,[sy("attribute"),"in $1"],[sy("varying"),"out $1"]],M9=[...$M,[sy("varying"),"in $1"]];function XM(e,t){for(let[r,n]of t)e=e.replace(r,n);return e}function sy(e){return new RegExp(`\\b${e}[ \\t]+(\\w+[ \\t]+\\w+(\\[\\w+\\])?;)`,"g")}function iy(e,t){let r="";for(let n in e){let s=e[n];if(r+=`void ${s.signature} {
`,s.header&&(r+=`  ${s.header}`),t[n]){let i=t[n];i.sort((o,a)=>o.order-a.order);for(let o of i)r+=`  ${o.injection}
`}s.footer&&(r+=`  ${s.footer}`),r+=`}
`}return r}function oy(e){let t={vertex:{},fragment:{}};for(let r of e){let n,s;typeof r!="string"?(n=r,s=n.hook):(n={},s=r),s=s.trim();let[i,o]=s.split(":"),a=s.replace(/\(.+/,""),c=Object.assign(n,{signature:o});switch(i){case"vs":t.vertex[a]=c;break;case"fs":t.fragment[a]=c;break;default:throw new Error(i)}}return t}function KM(e,t){return{name:S9(e,t),language:"glsl",version:w9(e)}}function S9(e,t="unnamed"){let n=/#define[^\S\r\n]*SHADER_NAME[^\S\r\n]*([A-Za-z0-9_-]+)\s*/.exec(e);return n?n[1]:t}function w9(e){let t=100,r=e.match(/[^\s]+/g);if(r&&r.length>=2&&r[0]==="#version"){let n=parseInt(r[1],10);Number.isFinite(n)&&(t=n)}if(t!==100&&t!==300)throw new Error(`Invalid GLSL version ${t}`);return t}var JM=`

${lf}
`,C9=`precision highp float;
`;function QM(e){let t=Ia(e.modules||[]);return{source:P9(e.platformInfo,{...e,source:e.source,stage:"vertex",modules:t}),getUniforms:eS(t)}}function tS(e){let{vs:t,fs:r}=e,n=Ia(e.modules||[]);return{vs:ZM(e.platformInfo,{...e,source:t,stage:"vertex",modules:n}),fs:ZM(e.platformInfo,{...e,source:r,stage:"fragment",modules:n}),getUniforms:eS(n)}}function P9(e,t){let{source:r,stage:n,modules:s,hookFunctions:i=[],inject:o={},log:a}=t;mp(typeof r=="string","shader source must be a string");let c=r,l="",f=oy(i),h={},u={},d={};for(let m in o){let g=typeof o[m]=="string"?{injection:o[m],order:0}:o[m],x=/^(v|f)s:(#)?([\w-]+)$/.exec(m);if(x){let A=x[2],_=x[3];A?_==="decl"?u[m]=[g]:d[m]=[g]:h[m]=[g]}else d[m]=[g]}let p=s;for(let m of p){a&&ny(m,c,a);let g=rS(m,"wgsl");l+=g;let x=m.injections?.[n]||{};for(let A in x){let _=/^(v|f)s:#([\w-]+)$/.exec(A);if(_){let T=_[2]==="decl"?u:d;T[A]=T[A]||[],T[A].push(x[A])}else h[A]=h[A]||[],h[A].push(x[A])}}return l+=JM,l=ff(l,n,u),l+=iy(f[n],h),l+=c,l=ff(l,n,d),l}function ZM(e,t){let{id:r,source:n,stage:s,language:i="glsl",modules:o,defines:a={},hookFunctions:c=[],inject:l={},prologue:f=!0,log:h}=t;mp(typeof n=="string","shader source must be a string");let u=i==="glsl"?KM(n).version:-1,d=e.shaderLanguageVersion,p=u===100?"#version 100":"#version 300 es",g=n.split(`
`).slice(1).join(`
`),x={};o.forEach(C=>{Object.assign(x,C.defines)}),Object.assign(x,a);let A="";switch(i){case"wgsl":break;case"glsl":A=f?`${p}

// ----- PROLOGUE -------------------------
${I9({id:r,source:n,stage:s})}
${`#define SHADER_TYPE_${s.toUpperCase()}`}

${qM(e)}
${s==="fragment"?C9:""}

// ----- APPLICATION DEFINES -------------------------

${R9(x)}

`:`${p}
`;break}let _=oy(c),y={},T={},v={};for(let C in l){let w=typeof l[C]=="string"?{injection:l[C],order:0}:l[C],E=/^(v|f)s:(#)?([\w-]+)$/.exec(C);if(E){let b=E[2],R=E[3];b?R==="decl"?T[C]=[w]:v[C]=[w]:y[C]=[w]}else v[C]=[w]}for(let C of o){h&&ny(C,g,h);let w=rS(C,s);A+=w;let E=C.instance?.normalizedInjections[s]||{};for(let b in E){let R=/^(v|f)s:#([\w-]+)$/.exec(b);if(R){let D=R[2]==="decl"?T:v;D[b]=D[b]||[],D[b].push(E[b])}else y[b]=y[b]||[],y[b].push(E[b])}}return A+="// ----- MAIN SHADER SOURCE -------------------------",A+=JM,A=ff(A,s,T),A+=iy(_[s],y),A+=g,A=ff(A,s,v),i==="glsl"&&u!==d&&(A=YM(A,s)),A.trim()}function eS(e){return function(r){let n={};for(let s of e){let i=s.getUniforms?.(r,n);Object.assign(n,i)}return n}}function I9(e){let{id:t,source:r,stage:n}=e;return t&&r.indexOf("SHADER_NAME")===-1?`
#define SHADER_NAME ${t}_${n}`:""}function R9(e={}){let t="";for(let r in e){let n=e[r];(n||Number.isFinite(n))&&(t+=`#define ${r.toUpperCase()} ${e[r]}
`)}return t}function rS(e,t){let r;switch(t){case"vertex":r=e.vs||"";break;case"fragment":r=e.fs||"";break;case"wgsl":r=e.source||"";break;default:mp(!1)}if(!e.name)throw new Error("Shader module must have a name");let n=e.name.toUpperCase().replace(/[^0-9a-z]/gi,"_"),s=`// ----- MODULE ${e.name} ---------------

`;return t!=="wgsl"&&(s+=`#define MODULE_${n}
`),s+=`${r}
`,s}var O9=/^\s*\#\s*ifdef\s*([a-zA-Z_]+)\s*$/,L9=/^\s*\#\s*endif\s*$/;function nS(e,t){let r=e.split(`
`),n=[],s=!0,i=null;for(let o of r){let a=o.match(O9),c=o.match(L9);a?(i=a[1],s=Boolean(t?.defines?.[i])):c?s=!0:s&&n.push(o)}return n.join(`
`)}var Ra=class{_hookFunctions=[];_defaultModules=[];static getDefaultShaderAssembler(){return Ra.defaultShaderAssembler=Ra.defaultShaderAssembler||new Ra,Ra.defaultShaderAssembler}addDefaultModule(t){this._defaultModules.find(r=>r.name===(typeof t=="string"?t:t.name))||this._defaultModules.push(t)}removeDefaultModule(t){let r=typeof t=="string"?t:t.name;this._defaultModules=this._defaultModules.filter(n=>n.name!==r)}addShaderHook(t,r){r&&(t=Object.assign(r,{hook:t})),this._hookFunctions.push(t)}assembleWGSLShader(t){let r=this._getModuleList(t.modules),n=this._hookFunctions,{source:s,getUniforms:i}=QM({...t,source:t.source,modules:r,hookFunctions:n});return{source:t.platformInfo.shaderLanguage==="wgsl"?nS(s):s,getUniforms:i,modules:r}}assembleGLSLShaderPair(t){let r=this._getModuleList(t.modules),n=this._hookFunctions;return{...tS({...t,vs:t.vs,fs:t.fs,modules:r,hookFunctions:n}),modules:r}}_getModuleList(t=[]){let r=new Array(this._defaultModules.length+t.length),n={},s=0;for(let i=0,o=this._defaultModules.length;i<o;++i){let a=this._defaultModules[i],c=a.name;r[s++]=a,n[c]=!0}for(let i=0,o=t.length;i<o;++i){let a=t[i],c=a.name;n[c]||(r[s++]=a,n[c]=!0)}return r.length=s,so(r),r}},Ks=Ra;Y(Ks,"defaultShaderAssembler");var B9=`out vec4 transform_output;
void main() {
  transform_output = vec4(0);
}`,N9=`#version 300 es
${B9}`;function hf(e){let{input:t,inputChannels:r,output:n}=e||{};if(!t)return N9;if(!r)throw new Error("inputChannels");let s=F9(r),i=sS(t,r);return`#version 300 es
in ${s} ${t};
out vec4 ${n};
void main() {
  ${n} = ${i};
}`}function F9(e){switch(e){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`invalid channels: ${e}`)}}function sS(e,t){switch(t){case 1:return`vec4(${e}, 0.0, 0.0, 1.0)`;case 2:return`vec4(${e}, 0.0, 1.0)`;case 3:return`vec4(${e}, 1.0)`;case 4:return e;default:throw new Error(`invalid channels: ${t}`)}}var ay=class{stats=new Map;getStats(t){return this.get(t)}get(t){return this.stats.has(t)||this.stats.set(t,new Ue({id:t})),this.stats.get(t)}},xp=new ay;var U=new hr({id:"luma.gl"});var cy={};function Zs(e="id"){cy[e]=cy[e]||1;let t=cy[e]++;return`${e}-${t}`}var nt=class{toString(){return`${this[Symbol.toStringTag]||this.constructor.name}:"${this.id}"`}id;props;userData={};_device;destroyed=!1;allocatedBytes=0;_attachedResources=new Set;constructor(t,r,n){if(!t)throw new Error("no device");this._device=t,this.props=D9(r,n);let s=this.props.id!=="undefined"?this.props.id:Zs(this[Symbol.toStringTag]);this.props.id=s,this.id=s,this.userData=this.props.userData||{},this.addStats()}destroy(){this.destroyResource()}delete(){return this.destroy(),this}getProps(){return this.props}attachResource(t){this._attachedResources.add(t)}detachResource(t){this._attachedResources.delete(t)}destroyAttachedResource(t){this._attachedResources.delete(t)&&t.destroy()}destroyAttachedResources(){for(let t of Object.values(this._attachedResources))t.destroy();this._attachedResources=new Set}destroyResource(){this.destroyAttachedResources(),this.removeStats(),this.destroyed=!0}removeStats(){let t=this._device.statsManager.getStats("Resource Counts"),r=this[Symbol.toStringTag];t.get(`${r}s Active`).decrementCount()}trackAllocatedMemory(t,r=this[Symbol.toStringTag]){let n=this._device.statsManager.getStats("Resource Counts");n.get("GPU Memory").addCount(t),n.get(`${r} Memory`).addCount(t),this.allocatedBytes=t}trackDeallocatedMemory(t=this[Symbol.toStringTag]){let r=this._device.statsManager.getStats("Resource Counts");r.get("GPU Memory").subtractCount(this.allocatedBytes),r.get(`${t} Memory`).subtractCount(this.allocatedBytes),this.allocatedBytes=0}addStats(){let t=this._device.statsManager.getStats("Resource Counts"),r=this[Symbol.toStringTag];t.get("Resources Created").incrementCount(),t.get(`${r}s Created`).incrementCount(),t.get(`${r}s Active`).incrementCount()}};Y(nt,"defaultProps",{id:"undefined",handle:void 0,userData:void 0});function D9(e,t){let r={...t};for(let n in e)e[n]!==void 0&&(r[n]=e[n]);return r}var uf=class extends nt{get[Symbol.toStringTag](){return"Buffer"}usage;indexType;updateTimestamp;constructor(t,r){let n={...r};(r.usage||0)&uf.INDEX&&!r.indexType&&(r.data instanceof Uint32Array?n.indexType="uint32":r.data instanceof Uint16Array&&(n.indexType="uint16")),delete n.data,super(t,n,uf.defaultProps),this.usage=n.usage||0,this.indexType=n.indexType,this.updateTimestamp=t.incrementTimestamp()}clone(t){return this.device.createBuffer({...this.props,...t})}readSyncWebGL(t,r){throw new Error("not implemented")}debugData=new ArrayBuffer(0);_setDebugData(t,r,n){let s=ArrayBuffer.isView(t)?t.buffer:t,i=Math.min(t?t.byteLength:n,uf.DEBUG_DATA_MAX_LENGTH);s===null?this.debugData=new ArrayBuffer(i):r===0&&n===s.byteLength?this.debugData=s.slice(0,i):this.debugData=s.slice(r,r+i)}},et=uf;Y(et,"defaultProps",{...nt.defaultProps,usage:0,byteLength:0,byteOffset:0,data:null,indexType:"uint16",mappedAtCreation:!1}),Y(et,"MAP_READ",1),Y(et,"MAP_WRITE",2),Y(et,"COPY_SRC",4),Y(et,"COPY_DST",8),Y(et,"INDEX",16),Y(et,"VERTEX",32),Y(et,"UNIFORM",64),Y(et,"STORAGE",128),Y(et,"INDIRECT",256),Y(et,"QUERY_RESOLVE",512),Y(et,"DEBUG_DATA_MAX_LENGTH",32);function _p(e){let t=iS[e],r=k9(t),n=e.includes("norm"),s=!n&&!e.startsWith("float"),i=e.startsWith("s");return{dataType:iS[e],byteLength:r,integer:s,signed:i,normalized:n}}function k9(e){return U9[e]}var iS={uint8:"uint8",sint8:"sint8",unorm8:"uint8",snorm8:"sint8",uint16:"uint16",sint16:"sint16",unorm16:"uint16",snorm16:"sint16",float16:"float16",float32:"float32",uint32:"uint32",sint32:"sint32"},U9={uint8:1,sint8:1,uint16:2,sint16:2,float16:2,float32:4,uint32:4,sint32:4};var ze="texture-compression-bc",Rt="texture-compression-astc",Rn="texture-compression-etc2",z9="texture-compression-etc1-webgl",yp="texture-compression-pvrtc-webgl",ly="texture-compression-atc-webgl",Ap="float32-renderable-webgl",fy="float16-renderable-webgl",V9="rgb9e5ufloat-renderable-webgl",hy="snorm8-renderable-webgl",df="norm16-renderable-webgl",uy="snorm16-renderable-webgl",bp="float32-filterable",oS="float16-filterable-webgl";function Tp(e){let t=W9[e];if(!t)throw new Error(`Unsupported texture format ${e}`);return t}var W9={r8unorm:{},r8snorm:{render:hy},r8uint:{},r8sint:{},rg8unorm:{},rg8snorm:{render:hy},rg8uint:{},rg8sint:{},r16uint:{},r16sint:{},r16float:{render:fy,filter:"float16-filterable-webgl"},"r16unorm-webgl":{f:df},"r16snorm-webgl":{f:uy},"rgba4unorm-webgl":{channels:"rgba",bitsPerChannel:[4,4,4,4],packed:!0},"rgb565unorm-webgl":{channels:"rgb",bitsPerChannel:[5,6,5,0],packed:!0},"rgb5a1unorm-webgl":{channels:"rgba",bitsPerChannel:[5,5,5,1],packed:!0},"rgb8unorm-webgl":{},"rgb8snorm-webgl":{},rgba8unorm:{},"rgba8unorm-srgb":{},rgba8snorm:{render:hy},rgba8uint:{},rgba8sint:{},bgra8unorm:{},"bgra8unorm-srgb":{},rg16uint:{},rg16sint:{},rg16float:{render:fy,filter:oS},"rg16unorm-webgl":{render:df},"rg16snorm-webgl":{render:uy},r32uint:{},r32sint:{},r32float:{render:Ap,filter:bp},rgb9e5ufloat:{channels:"rgb",packed:!0,render:V9},rg11b10ufloat:{channels:"rgb",bitsPerChannel:[11,11,10,0],packed:!0,p:1,render:Ap},rgb10a2unorm:{channels:"rgba",bitsPerChannel:[10,10,10,2],packed:!0,p:1},"rgb10a2uint-webgl":{channels:"rgba",bitsPerChannel:[10,10,10,2],packed:!0,p:1,wgpu:!1},"rgb16unorm-webgl":{f:df},"rgb16snorm-webgl":{f:df},rg32uint:{},rg32sint:{},rg32float:{render:!1,filter:bp},rgba16uint:{},rgba16sint:{},rgba16float:{render:fy,filter:oS},"rgba16unorm-webgl":{render:df},"rgba16snorm-webgl":{render:uy},"rgb32float-webgl":{render:Ap,filter:bp},rgba32uint:{},rgba32sint:{},rgba32float:{render:Ap,filter:bp},stencil8:{attachment:"stencil",bitsPerChannel:[8,0,0,0],dataType:"uint8"},depth16unorm:{attachment:"depth",bitsPerChannel:[16,0,0,0],dataType:"uint16"},depth24plus:{attachment:"depth",bitsPerChannel:[24,0,0,0],dataType:"uint32"},depth32float:{attachment:"depth",bitsPerChannel:[32,0,0,0],dataType:"float32"},"depth24plus-stencil8":{attachment:"depth-stencil",bitsPerChannel:[24,8,0,0],packed:!0},"depth32float-stencil8":{attachment:"depth-stencil",bitsPerChannel:[32,8,0,0],packed:!0},"bc1-rgb-unorm-webgl":{f:ze},"bc1-rgb-unorm-srgb-webgl":{f:ze},"bc1-rgba-unorm":{f:ze},"bc1-rgba-unorm-srgb":{f:ze},"bc2-rgba-unorm":{f:ze},"bc2-rgba-unorm-srgb":{f:ze},"bc3-rgba-unorm":{f:ze},"bc3-rgba-unorm-srgb":{f:ze},"bc4-r-unorm":{f:ze},"bc4-r-snorm":{f:ze},"bc5-rg-unorm":{f:ze},"bc5-rg-snorm":{f:ze},"bc6h-rgb-ufloat":{f:ze},"bc6h-rgb-float":{f:ze},"bc7-rgba-unorm":{f:ze},"bc7-rgba-unorm-srgb":{f:ze},"etc2-rgb8unorm":{f:Rn},"etc2-rgb8unorm-srgb":{f:Rn},"etc2-rgb8a1unorm":{f:Rn},"etc2-rgb8a1unorm-srgb":{f:Rn},"etc2-rgba8unorm":{f:Rn},"etc2-rgba8unorm-srgb":{f:Rn},"eac-r11unorm":{f:Rn},"eac-r11snorm":{f:Rn},"eac-rg11unorm":{f:Rn},"eac-rg11snorm":{f:Rn},"astc-4x4-unorm":{f:Rt},"astc-4x4-unorm-srgb":{f:Rt},"astc-5x4-unorm":{f:Rt},"astc-5x4-unorm-srgb":{f:Rt},"astc-5x5-unorm":{f:Rt},"astc-5x5-unorm-srgb":{f:Rt},"astc-6x5-unorm":{f:Rt},"astc-6x5-unorm-srgb":{f:Rt},"astc-6x6-unorm":{f:Rt},"astc-6x6-unorm-srgb":{f:Rt},"astc-8x5-unorm":{f:Rt},"astc-8x5-unorm-srgb":{f:Rt},"astc-8x6-unorm":{f:Rt},"astc-8x6-unorm-srgb":{f:Rt},"astc-8x8-unorm":{f:Rt},"astc-8x8-unorm-srgb":{f:Rt},"astc-10x5-unorm":{f:Rt},"astc-10x5-unorm-srgb":{f:Rt},"astc-10x6-unorm":{f:Rt},"astc-10x6-unorm-srgb":{f:Rt},"astc-10x8-unorm":{f:Rt},"astc-10x8-unorm-srgb":{f:Rt},"astc-10x10-unorm":{f:Rt},"astc-10x10-unorm-srgb":{f:Rt},"astc-12x10-unorm":{f:Rt},"astc-12x10-unorm-srgb":{f:Rt},"astc-12x12-unorm":{f:Rt},"astc-12x12-unorm-srgb":{f:Rt},"pvrtc-rgb4unorm-webgl":{f:yp},"pvrtc-rgba4unorm-webgl":{f:yp},"pvrtc-rbg2unorm-webgl":{f:yp},"pvrtc-rgba2unorm-webgl":{f:yp},"etc1-rbg-unorm-webgl":{f:z9},"atc-rgb-unorm-webgl":{f:ly},"atc-rgba-unorm-webgl":{f:ly},"atc-rgbai-unorm-webgl":{f:ly}};var H9=["bc1","bc2","bc3","bc4","bc5","bc6","bc7","etc1","etc2","eac","atc","astc","pvrtc"],G9=/^(r|rg|rgb|rgba|bgra)([0-9]*)([a-z]*)(-srgb)?(-webgl)?$/;function dy(e){return H9.some(t=>e.startsWith(t))}function Oa(e){let t=j9(e);if(dy(e)){t.channels="rgb",t.components=3,t.bytesPerPixel=1,t.srgb=!1,t.compressed=!0;let n=q9(e);n&&(t.blockWidth=n.blockWidth,t.blockHeight=n.blockHeight)}let r=G9.exec(e);if(r){let[,n,s,i,o,a]=r,c=`${i}${s}`,l=_p(c),f=l.byteLength*8,h=n.length,u=[f,h>=2?f:0,h>=3?f:0,h>=4?f:0];t={format:e,attachment:t.attachment,dataType:l.dataType,components:h,channels:n,integer:l.integer,signed:l.signed,normalized:l.normalized,bitsPerChannel:u,bytesPerPixel:l.byteLength*n.length,packed:t.packed,srgb:t.srgb},a==="-webgl"&&(t.webgl=!0),o==="-srgb"&&(t.srgb=!0)}return e.endsWith("-webgl")&&(t.webgl=!0),e.endsWith("-srgb")&&(t.srgb=!0),t}function j9(e){let t=Tp(e),r=t.bytesPerPixel||1,n=t.bitsPerChannel||[8,8,8,8];return delete t.bitsPerChannel,delete t.bytesPerPixel,delete t.f,delete t.render,delete t.filter,delete t.blend,delete t.store,{...t,format:e,attachment:t.attachment||"color",channels:t.channels||"r",components:t.components||t.channels?.length||1,bytesPerPixel:r,bitsPerChannel:n,dataType:t.dataType||"uint8",srgb:t.srgb??!1,packed:t.packed??!1,webgl:t.webgl??!1,integer:t.integer??!1,signed:t.signed??!1,normalized:t.normalized??!1,compressed:t.compressed??!1}}function q9(e){let r=/.*-(\d+)x(\d+)-.*/.exec(e);if(r){let[,n,s]=r;return{blockWidth:Number(n),blockHeight:Number(s)}}return null}function aS(e){let t=Tp(e),r={format:e,create:t.f??!0,render:t.render??!0,filter:t.filter??!0,blend:t.blend??!0,store:t.store??!0},n=Oa(e),s=e.startsWith("depth")||e.startsWith("stencil"),i=n?.signed,o=n?.integer,a=n?.webgl;return r.render&&=!i,r.filter&&=!s&&!i&&!o&&!a,r}var pf=class{},mf=class{features;disabledFeatures;constructor(t=[],r){this.features=new Set(t),this.disabledFeatures=r||{}}*[Symbol.iterator](){yield*this.features}has(t){return!this.disabledFeatures?.[t]&&this.features.has(t)}},py=class{get[Symbol.toStringTag](){return"Device"}constructor(t){this.props={...py.defaultProps,...t},this.id=this.props.id||Zs(this[Symbol.toStringTag].toLowerCase())}id;props;userData={};statsManager=xp;timestamp=0;_reused=!1;_lumaData={};getTextureFormatCapabilities(t){let r=aS(t),n=o=>(typeof o=="string"?this.features.has(o):o)??!0,s=n(r.create),i={format:t,create:s,render:s&&n(r.render),filter:s&&n(r.filter),blend:s&&n(r.blend),store:s&&n(r.store)};return this._getDeviceSpecificTextureFormatCapabilities(i)}isTextureFormatSupported(t,r){return this.getTextureFormatCapabilities(t).create}isTextureFormatFilterable(t){return this.getTextureFormatCapabilities(t).filter}isTextureFormatRenderable(t){return this.getTextureFormatCapabilities(t).render}isTextureFormatCompressed(t){return dy(t)}loseDevice(){return!1}reportError(t){this.props.onError(t)}getDefaultCanvasContext(){if(!this.canvasContext)throw new Error("Device has no default CanvasContext. See props.createCanvasContext");return this.canvasContext}createCommandEncoder(t={}){throw new Error("not implemented")}incrementTimestamp(){return this.timestamp++}onError(t){this.props.onError(t)}getCanvasContext(){return this.getDefaultCanvasContext()}readPixelsToArrayWebGL(t,r){throw new Error("not implemented")}readPixelsToBufferWebGL(t,r){throw new Error("not implemented")}setParametersWebGL(t){throw new Error("not implemented")}getParametersWebGL(t){throw new Error("not implemented")}withParametersWebGL(t,r){throw new Error("not implemented")}clearWebGL(t){throw new Error("not implemented")}resetWebGL(){throw new Error("not implemented")}static _getCanvasContextProps(t){return t.createCanvasContext===!0?{}:t.createCanvasContext}_normalizeBufferProps(t){(t instanceof ArrayBuffer||ArrayBuffer.isView(t))&&(t={data:t});let r={...t};return(t.usage||0)&et.INDEX&&!t.indexType&&(t.data instanceof Uint32Array?r.indexType="uint32":t.data instanceof Uint16Array?r.indexType="uint16":U.warn("indices buffer content must be of integer type")()),r}},tr=py;Y(tr,"defaultProps",{id:null,powerPreference:"high-performance",failIfMajorPerformanceCaveat:!1,createCanvasContext:void 0,onError:t=>U.error(t.message)(),_reuseDevices:!1,_requestMaxLimits:!0,_factoryDestroyPolicy:"unused",_initializeFeatures:!0,_disabledFeatures:{"compilation-status-async-webgl":!0},_resourceDefaults:{},webgl:{},debug:U.get("debug")||void 0,debugShaders:U.get("debug-shaders")||void 0,debugFramebuffers:Boolean(U.get("debug-framebuffers")),debugWebGL:Boolean(U.get("debug-webgl")),debugSpectorJS:void 0,debugSpectorJSUrl:void 0,_handle:void 0});var X9=Qe()&&typeof document<"u",Y9=()=>X9&&document.readyState==="complete",$9="set luma.log.level=1 (or higher) to trace rendering",cS="No matching device found. Ensure `@luma.gl/webgl` and/or `@luma.gl/webgpu` modules are imported.",La=class{stats=xp;log=U;VERSION="9.1.9";spector;preregisteredAdapters=new Map;constructor(){if(globalThis.luma){if(globalThis.luma.VERSION!==this.VERSION)throw U.error(`Found luma.gl ${globalThis.luma.VERSION} while initialzing ${this.VERSION}`)(),U.error("'yarn why @luma.gl/core' can help identify the source of the conflict")(),new Error("luma.gl - multiple versions detected: see console log");U.error("This version of luma.gl has already been initialized")()}U.log(1,`${this.VERSION} - ${$9}`)(),globalThis.luma=this}registerAdapters(t){for(let r of t)this.preregisteredAdapters.set(r.type,r)}getSupportedAdapters(t=[]){let r=this.getAdapterMap(t);return Array.from(r).map(([,n])=>n).filter(n=>n.isSupported?.()).map(n=>n.type)}getBestAvailableAdapter(t=[]){let r=this.getAdapterMap(t);return r.get("webgpu")?.isSupported?.()?"webgpu":r.get("webgl")?.isSupported?.()?"webgl":null}setDefaultDeviceProps(t){Object.assign(La.defaultProps,t)}async createDevice(t={}){t={...La.defaultProps,...t},t.waitForPageLoad&&await La.pageLoaded;let r=this.getAdapterMap(t.adapters),n=t.type||"";n==="best-available"&&(n=this.getBestAvailableAdapter(t.adapters)||n);let o=await(this.getAdapterMap(t.adapters)||r).get(n)?.create?.(t);if(o)return o;throw new Error(cS)}async attachDevice(t){let r=this.getAdapterMap(t.adapters),n="";t.handle instanceof WebGL2RenderingContext&&(n="webgl"),t.createCanvasContext&&await La.pageLoaded,t.handle===null&&(n="unknown");let i=await r.get(n)?.attach?.(null);if(i)return i;throw new Error(cS)}enforceWebGL2(t=!0,r=[]){let s=this.getAdapterMap(r).get("webgl");s||U.warn("enforceWebGL2: webgl adapter not found")(),s?.enforceWebGL2?.(t)}getAdapterMap(t=[]){let r=new Map(this.preregisteredAdapters);for(let n of t)r.set(n.type,n);return r}registerDevices(t){U.warn("luma.registerDevices() is deprecated, use luma.registerAdapters() instead");for(let r of t){let n=r.adapter;n&&this.preregisteredAdapters.set(n.type,n)}}},gf=La;Y(gf,"defaultProps",{...tr.defaultProps,type:"best-available",adapters:void 0,waitForPageLoad:!0}),Y(gf,"pageLoaded",K9().then(()=>{U.probe(2,"DOM is loaded")()}));var Js=new gf;function K9(){return Y9()||typeof window>"u"?Promise.resolve():new Promise(e=>{window.addEventListener("load",()=>e())})}var xf=class{};var my=class{id;props;canvas;htmlCanvas;offscreenCanvas;type;width=1;height=1;resizeObserver;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};toString(){return`${this[Symbol.toStringTag]}(${this.id})`}constructor(t){if(this.props={...my.defaultProps,...t},t=this.props,!Qe()){this.id="node-canvas-context",this.type="node",this.width=this.props.width,this.height=this.props.height,this.canvas=null;return}if(t.canvas)typeof t.canvas=="string"?this.canvas=J9(t.canvas):this.canvas=t.canvas;else{let r=Q9(t),n=Z9(t?.container||null);n.insertBefore(r,n.firstChild),this.canvas=r,t?.visible||(this.canvas.style.visibility="hidden")}this.canvas instanceof HTMLCanvasElement?(this.id=this.canvas.id,this.type="html-canvas",this.htmlCanvas=this.canvas):(this.id="offscreen-canvas",this.type="offscreen-canvas",this.offscreenCanvas=this.canvas),this.canvas instanceof HTMLCanvasElement&&t.autoResize&&(this.resizeObserver=new ResizeObserver(r=>{for(let n of r)n.target===this.canvas&&this.update()}),this.resizeObserver.observe(this.canvas))}getDevicePixelRatio(t){return typeof OffscreenCanvas<"u"&&this.canvas instanceof OffscreenCanvas||(t=t===void 0?this.props.useDevicePixels:t,!t||t<=0)?1:t===!0?typeof window<"u"&&window.devicePixelRatio||1:t}getPixelSize(){switch(this.type){case"node":return[this.width,this.height];case"offscreen-canvas":return[this.canvas.width,this.canvas.height];case"html-canvas":let t=this.getDevicePixelRatio(),r=this.canvas;return r.parentElement?[r.clientWidth*t,r.clientHeight*t]:[this.canvas.width,this.canvas.height];default:throw new Error(this.type)}}getAspect(){let[t,r]=this.getPixelSize();return t/r}cssToDeviceRatio(){try{let[t]=this.getDrawingBufferSize(),r=this._canvasSizeInfo.clientWidth||this.htmlCanvas?.clientWidth;return r?t/r:1}catch{return 1}}cssToDevicePixels(t,r=!0){let n=this.cssToDeviceRatio(),[s,i]=this.getDrawingBufferSize();return tW(t,n,s,i,r)}setDevicePixelRatio(t,r={}){if(!this.htmlCanvas)return;let n="width"in r?r.width:this.htmlCanvas.clientWidth,s="height"in r?r.height:this.htmlCanvas.clientHeight;(!n||!s)&&(U.log(1,"Canvas clientWidth/clientHeight is 0")(),t=1,n=this.htmlCanvas.width||1,s=this.htmlCanvas.height||1);let i=this._canvasSizeInfo;if(i.clientWidth!==n||i.clientHeight!==s||i.devicePixelRatio!==t){let o=t,a=Math.floor(n*o),c=Math.floor(s*o);if(this.htmlCanvas.width=a,this.htmlCanvas.height=c,this.device.gl){let[f,h]=this.getDrawingBufferSize();(f!==a||h!==c)&&(o=Math.min(f/n,h/s),this.htmlCanvas.width=Math.floor(n*o),this.htmlCanvas.height=Math.floor(s*o),U.warn("Device pixel ratio clamped")()),this._canvasSizeInfo.clientWidth=n,this._canvasSizeInfo.clientHeight=s,this._canvasSizeInfo.devicePixelRatio=t}}}getDrawingBufferSize(){let t=this.device.gl;return t?[t.drawingBufferWidth,t.drawingBufferHeight]:this.getPixelSize()}_setAutoCreatedCanvasId(t){this.htmlCanvas?.id==="lumagl-auto-created-canvas"&&(this.htmlCanvas.id=t)}},Ba=my;Y(Ba,"defaultProps",{canvas:null,width:800,height:600,useDevicePixels:!0,autoResize:!0,container:null,visible:!0,alphaMode:"opaque",colorSpace:"srgb"});function Z9(e){if(typeof e=="string"){let t=document.getElementById(e);if(!t)throw new Error(`${e} is not an HTML element`);return t}else if(e)return e;return document.body}function J9(e){let t=document.getElementById(e);if(!(t instanceof HTMLCanvasElement))throw new Error("Object is not a canvas element");return t}function Q9(e){let{width:t,height:r}=e,n=document.createElement("canvas");return n.id=Zs("lumagl-auto-created-canvas"),n.width=t||1,n.height=r||1,n.style.width=Number.isFinite(t)?`${t}px`:"100%",n.style.height=Number.isFinite(r)?`${r}px`:"100%",n}function tW(e,t,r,n,s){let i=e,o=lS(i[0],t,r),a=fS(i[1],t,n,s),c=lS(i[0]+1,t,r),l=c===r-1?c:c-1;c=fS(i[1]+1,t,n,s);let f;return s?(c=c===0?c:c+1,f=a,a=c):f=c===n-1?c:c-1,{x:o,y:a,width:Math.max(l-o+1,1),height:Math.max(f-a+1,1)}}function lS(e,t,r){return Math.min(Math.round(e*t),r-1)}function fS(e,t,r,n){return n?Math.max(0,r-1-Math.round(e*t)):Math.min(Math.round(e*t),r-1)}var ls=class extends nt{get[Symbol.toStringTag](){return"Texture"}toString(){return`Texture(${this.id},${this.format},${this.width}x${this.height})`}dimension;format;width;height;depth;mipLevels;updateTimestamp;constructor(t,r){if(r=ls.normalizeProps(t,r),super(t,r,ls.defaultProps),this.dimension=this.props.dimension,this.format=this.props.format,this.width=this.props.width,this.height=this.props.height,this.depth=this.props.depth,this.props.width===void 0||this.props.height===void 0){let n=ls.getTextureDataSize(this.props.data);this.width=n?.width||1,this.height=n?.height||1}this.props.mipmaps&&this.props.mipLevels===void 0&&(this.props.mipLevels="pyramid"),this.mipLevels=this.props.mipLevels==="pyramid"?ls.getMipLevelCount(this.width,this.height):this.props.mipLevels||1,this.updateTimestamp=t.incrementTimestamp()}clone(t){return this.device.createTexture({...this.props,...t})}static isExternalImage(t){return typeof ImageData<"u"&&t instanceof ImageData||typeof ImageBitmap<"u"&&t instanceof ImageBitmap||typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement||typeof VideoFrame<"u"&&t instanceof VideoFrame||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&t instanceof OffscreenCanvas}static getExternalImageSize(t){if(typeof ImageData<"u"&&t instanceof ImageData||typeof ImageBitmap<"u"&&t instanceof ImageBitmap||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&t instanceof OffscreenCanvas)return{width:t.width,height:t.height};if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement)return{width:t.naturalWidth,height:t.naturalHeight};if(typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement)return{width:t.videoWidth,height:t.videoHeight};if(typeof VideoFrame<"u"&&t instanceof VideoFrame)return{width:t.displayWidth,height:t.displayHeight};throw new Error("Unknown image type")}static isTextureLevelData(t){let r=t?.data;return ArrayBuffer.isView(r)}static getTextureDataSize(t){if(!t||ArrayBuffer.isView(t))return null;if(Array.isArray(t))return ls.getTextureDataSize(t[0]);if(ls.isExternalImage(t))return ls.getExternalImageSize(t);if(t&&typeof t=="object"&&t.constructor===Object){let n=Object.values(t)[0];return{width:n.width,height:n.height}}throw new Error("texture size deduction failed")}static normalizeTextureData(t,r){let n;return ArrayBuffer.isView(t)?n=[{data:t,width:r.width,height:r.height}]:Array.isArray(t)?n=t:n=[t],n}static getMipLevelCount(t,r){return Math.floor(Math.log2(Math.max(t,r)))+1}static getCubeFaceDepth(t){switch(t){case"+X":return 0;case"-X":return 1;case"+Y":return 2;case"-Y":return 3;case"+Z":return 4;case"-Z":return 5;default:throw new Error(t)}}static normalizeProps(t,r){let n={...r},s=t?.props?._resourceDefaults?.texture||{};Object.assign(n,s);let{width:i,height:o}=n;return typeof i=="number"&&(n.width=Math.max(1,Math.ceil(i))),typeof o=="number"&&(n.height=Math.max(1,Math.ceil(o))),n}},at=ls;Y(at,"COPY_SRC",1),Y(at,"COPY_DST",2),Y(at,"TEXTURE",4),Y(at,"STORAGE",8),Y(at,"RENDER_ATTACHMENT",16),Y(at,"CubeFaces",["+X","-X","+Y","-Y","+Z","-Z"]),Y(at,"defaultProps",{...nt.defaultProps,data:null,dimension:"2d",format:"rgba8unorm",width:void 0,height:void 0,depth:1,mipmaps:!1,compressed:!1,usage:0,mipLevels:void 0,samples:void 0,sampler:{},view:void 0,flipY:void 0}),Y(at,"defaultCopyExternalImageOptions",{image:void 0,sourceX:0,sourceY:0,width:void 0,height:void 0,depth:1,mipLevel:0,x:0,y:0,z:0,aspect:"all",colorSpace:"srgb",premultipliedAlpha:!1,flipY:!1});var gy=class extends nt{get[Symbol.toStringTag](){return"TextureView"}constructor(t,r){super(t,r,gy.defaultProps)}},Qs=gy;Y(Qs,"defaultProps",{...nt.defaultProps,format:void 0,dimension:void 0,aspect:"all",baseMipLevel:0,mipLevelCount:void 0,baseArrayLayer:0,arrayLayerCount:void 0});function uS(e,t,r){let n="",s=t.split(/\r?\n/),i=e.slice().sort((o,a)=>o.lineNum-a.lineNum);switch(r?.showSourceCode||"no"){case"all":let o=0;for(let a=1;a<=s.length;a++)for(n+=dS(s[a-1],a,r);i.length>o&&i[o].lineNum===a;){let c=i[o++];n+=hS(c,s,c.lineNum,{...r,inlineSource:!1})}return n;case"issues":case"no":for(let a of e)n+=hS(a,s,a.lineNum,{inlineSource:r?.showSourceCode!=="no"});return n}}function hS(e,t,r,n){if(n?.inlineSource){let i=eW(t,r),o=e.linePos>0?`${" ".repeat(e.linePos+5)}^^^
`:"";return`
${i}${o}${e.type.toUpperCase()}: ${e.message}

`}let s=e.type==="error"?"red":"#8B4000";return n?.html?`<div class='luma-compiler-log-error' style="color:${s};"><b> ${e.type.toUpperCase()}: ${e.message}</b></div>`:`${e.type.toUpperCase()}: ${e.message}`}function eW(e,t,r){let n="";for(let s=t-2;s<=t;s++){let i=e[s-1];i!==void 0&&(n+=dS(i,t,r))}return n}function dS(e,t,r){let n=r?.html?nW(e):e;return`${rW(String(t),4)}: ${n}${r?.html?"<br/>":`
`}`}function rW(e,t){let r="";for(let n=e.length;n<t;++n)r+=" ";return r+e}function nW(e){return e.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}var xy=class extends nt{get[Symbol.toStringTag](){return"Shader"}stage;source;compilationStatus="pending";constructor(t,r){r={...r,debugShaders:r.debugShaders||t.props.debugShaders||"errors"},super(t,{id:sW(r),...r},xy.defaultProps),this.stage=this.props.stage,this.source=this.props.source}getCompilationInfoSync(){return null}getTranslatedSource(){return null}async debugShader(){let t=this.props.debugShaders;switch(t){case"never":return;case"errors":if(this.compilationStatus==="success")return;break;case"warnings":case"always":break}let r=await this.getCompilationInfo();t==="warnings"&&r?.length===0||this._displayShaderLog(r)}_displayShaderLog(t){if(typeof document>"u"||!document?.createElement)return;let r=pS(this.source),n=`${this.stage} ${r}`,s=uS(t,this.source,{showSourceCode:"all",html:!0}),i=this.getTranslatedSource();i&&(s+=`<br /><br /><h1>Translated Source</h1><br /><br /><code style="user-select:text;"><pre>${i}</pre></code>`);let o=document.createElement("Button");o.innerHTML=`
<h1>Shader Compilation Error in ${n}</h1><br /><br />
<code style="user-select:text;"><pre>
${s}
</pre></code>`,o.style.top="10px",o.style.left="10px",o.style.position="absolute",o.style.zIndex="9999",o.style.width="100%",o.style.textAlign="left",document.body.appendChild(o),document.getElementsByClassName("luma-compiler-log-error")[0]?.scrollIntoView(),o.onclick=()=>{let c=`data:text/plain,${encodeURIComponent(this.source)}`;navigator.clipboard.writeText(c)}}},ti=xy;Y(ti,"defaultProps",{...nt.defaultProps,language:"auto",stage:void 0,source:"",sourceMap:null,entryPoint:"main",debugShaders:void 0});function sW(e){return pS(e.source)||e.id||Zs(`unnamed ${e.stage}-shader`)}function pS(e,t="unnamed"){let n=/#define[\s*]SHADER_NAME[\s*]([A-Za-z0-9_-]+)[\s*]/.exec(e);return n?n[1]:t}var vp=class extends nt{get[Symbol.toStringTag](){return"Sampler"}constructor(t,r){r=vp.normalizeProps(t,r),super(t,r,vp.defaultProps)}static normalizeProps(t,r){let n=t?.props?._resourceDefaults?.sampler||{};return{...r,...n}}},ei=vp;Y(ei,"defaultProps",{...nt.defaultProps,type:"color-sampler",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"none",lodMinClamp:0,lodMaxClamp:32,compare:"less-equal",maxAnisotropy:1});var _y=class extends nt{get[Symbol.toStringTag](){return"Framebuffer"}width;height;constructor(t,r={}){super(t,r,_y.defaultProps),this.width=this.props.width,this.height=this.props.height}clone(t){let r=this.colorAttachments.map(s=>s.texture.clone(t)),n=this.depthStencilAttachment&&this.depthStencilAttachment.texture.clone(t);return this.device.createFramebuffer({...this.props,colorAttachments:r,depthStencilAttachment:n})}resize(t){let r=!t;if(t){let[n,s]=Array.isArray(t)?t:[t.width,t.height];r=r||s!==this.height||n!==this.width,this.width=n,this.height=s}r&&(U.log(2,`Resizing framebuffer ${this.id} to ${this.width}x${this.height}`)(),this.resizeAttachments(this.width,this.height))}autoCreateAttachmentTextures(){if(this.props.colorAttachments.length===0&&!this.props.depthStencilAttachment)throw new Error("Framebuffer has noattachments");this.colorAttachments=this.props.colorAttachments.map((r,n)=>{if(typeof r=="string"){let s=this.createColorTexture(r,n);return this.attachResource(s),s.view}return r instanceof at?r.view:r});let t=this.props.depthStencilAttachment;if(t)if(typeof t=="string"){let r=this.createDepthStencilTexture(t);this.attachResource(r),this.depthStencilAttachment=r.view}else t instanceof at?this.depthStencilAttachment=t.view:this.depthStencilAttachment=t}createColorTexture(t,r){return this.device.createTexture({id:`${this.id}-color-attachment-${r}`,usage:at.RENDER_ATTACHMENT,format:t,width:this.width,height:this.height,sampler:{magFilter:"linear",minFilter:"linear"}})}createDepthStencilTexture(t){return this.device.createTexture({id:`${this.id}-depth-stencil-attachment`,usage:at.RENDER_ATTACHMENT,format:t,width:this.width,height:this.height,mipmaps:!1})}resizeAttachments(t,r){for(let n=0;n<this.colorAttachments.length;++n)if(this.colorAttachments[n]){let s=this.colorAttachments[n].texture.clone({width:t,height:r});this.destroyAttachedResource(this.colorAttachments[n]),this.colorAttachments[n]=s.view,this.attachResource(s.view)}if(this.depthStencilAttachment){let n=this.depthStencilAttachment.texture.clone({width:t,height:r});this.destroyAttachedResource(this.depthStencilAttachment),this.depthStencilAttachment=n.view,this.attachResource(n)}this.updateAttachments()}},On=_y;Y(On,"defaultProps",{...nt.defaultProps,width:1,height:1,colorAttachments:[],depthStencilAttachment:null});var yy=class extends nt{get[Symbol.toStringTag](){return"RenderPipeline"}shaderLayout;bufferLayout;linkStatus="pending";hash="";constructor(t,r){super(t,r,yy.defaultProps),this.shaderLayout=this.props.shaderLayout,this.bufferLayout=this.props.bufferLayout||[]}setUniformsWebGL(t){throw new Error("Use uniform blocks")}},Qr=yy;Y(Qr,"defaultProps",{...nt.defaultProps,vs:null,vertexEntryPoint:"vertexMain",vsConstants:{},fs:null,fragmentEntryPoint:"fragmentMain",fsConstants:{},shaderLayout:null,bufferLayout:[],topology:"triangle-list",parameters:{},bindings:{},uniforms:{}});var io=class extends nt{get[Symbol.toStringTag](){return"RenderPass"}constructor(t,r){r=io.normalizeProps(t,r),super(t,r,io.defaultProps)}static normalizeProps(t,r){return{...t.props._resourceDefaults?.renderPass,...r}}},fs=io;Y(fs,"defaultClearColor",[0,0,0,1]),Y(fs,"defaultClearDepth",1),Y(fs,"defaultClearStencil",0),Y(fs,"defaultProps",{...nt.defaultProps,framebuffer:null,parameters:void 0,clearColor:io.defaultClearColor,clearColors:void 0,clearDepth:io.defaultClearDepth,clearStencil:io.defaultClearStencil,depthReadOnly:!1,stencilReadOnly:!1,discard:!1,occlusionQuerySet:void 0,timestampQuerySet:void 0,beginTimestampIndex:void 0,endTimestampIndex:void 0});var Ay=class extends nt{get[Symbol.toStringTag](){return"ComputePipeline"}hash="";shaderLayout;constructor(t,r){super(t,r,Ay.defaultProps),this.shaderLayout=r.shaderLayout}},oo=Ay;Y(oo,"defaultProps",{...nt.defaultProps,shader:void 0,entryPoint:void 0,constants:{},shaderLayout:void 0});var by=class extends nt{get[Symbol.toStringTag](){return"CommandEncoder"}constructor(t,r){super(t,r,by.defaultProps)}},Na=by;Y(Na,"defaultProps",{...nt.defaultProps,measureExecutionTime:void 0});var Ty=class extends nt{get[Symbol.toStringTag](){return"CommandBuffer"}constructor(t,r){super(t,r,Ty.defaultProps)}},Fa=Ty;Y(Fa,"defaultProps",{...nt.defaultProps});function mS(e){let[t,r]=oW[e],n=t==="i32"||t==="u32",s=t!=="u32",i=aW[t]*r,o=iW(t,r);return{dataType:t,components:r,defaultVertexFormat:o,byteLength:i,integer:n,signed:s}}function iW(e,t){let r;switch(e){case"f32":r="float32";break;case"i32":r="sint32";break;case"u32":r="uint32";break;case"f16":return t<=2?"float16x2":"float16x4"}return t===1?r:`${r}x${t}`}var oW={f32:["f32",1],"vec2<f32>":["f32",2],"vec3<f32>":["f32",3],"vec4<f32>":["f32",4],f16:["f16",1],"vec2<f16>":["f16",2],"vec3<f16>":["f16",3],"vec4<f16>":["f16",4],i32:["i32",1],"vec2<i32>":["i32",2],"vec3<i32>":["i32",3],"vec4<i32>":["i32",4],u32:["u32",1],"vec2<u32>":["u32",2],"vec3<u32>":["u32",3],"vec4<u32>":["u32",4]},aW={f32:4,f16:2,i32:4,u32:4};function vy(e){let t;e.endsWith("-webgl")&&(e.replace("-webgl",""),t=!0);let[r,n]=e.split("x"),s=r,i=n?parseInt(n):1,o=_p(s),a={type:s,components:i,byteLength:o.byteLength*i,integer:o.integer,signed:o.signed,normalized:o.normalized};return t&&(a.webglOnly=!0),a}function Ep(e,t){let r={};for(let n of e.attributes){let s=cW(e,t,n.name);s&&(r[n.name]=s)}return r}function gS(e,t,r=16){let n=Ep(e,t),s=new Array(r).fill(null);for(let i of Object.values(n))s[i.location]=i;return s}function cW(e,t,r){let n=lW(e,r),s=fW(t,r);if(!n)return null;let i=mS(n.type),o=s?.vertexFormat||i.defaultVertexFormat,a=vy(o);return{attributeName:s?.attributeName||n.name,bufferName:s?.bufferName||n.name,location:n.location,shaderType:n.type,shaderDataType:i.dataType,shaderComponents:i.components,vertexFormat:o,bufferDataType:a.type,bufferComponents:a.components,normalized:a.normalized,integer:i.integer,stepMode:s?.stepMode||n.stepMode||"vertex",byteOffset:s?.byteOffset||0,byteStride:s?.byteStride||0}}function lW(e,t){let r=e.attributes.find(n=>n.name===t);return r||U.warn(`shader layout attribute "${t}" not present in shader`),r||null}function fW(e,t){hW(e);let r=uW(e,t);return r||(r=dW(e,t),r)?r:(U.warn(`layout for attribute "${t}" not present in buffer layout`),null)}function hW(e){for(let t of e)(t.attributes&&t.format||!t.attributes&&!t.format)&&U.warn(`BufferLayout ${name} must have either 'attributes' or 'format' field`)}function uW(e,t){for(let r of e)if(r.format&&r.name===t)return{attributeName:r.name,bufferName:t,stepMode:r.stepMode,vertexFormat:r.format,byteOffset:0,byteStride:r.byteStride||0};return null}function dW(e,t){for(let r of e){let n=r.byteStride;if(typeof r.byteStride!="number")for(let i of r.attributes||[]){let o=vy(i.format);n+=o.byteLength}let s=r.attributes?.find(i=>i.attribute===t);if(s)return{attributeName:s.attribute,bufferName:r.name,stepMode:r.stepMode,vertexFormat:s.format,byteOffset:s.byteOffset,byteStride:n}}return null}var Ey=class extends nt{get[Symbol.toStringTag](){return"VertexArray"}maxVertexAttributes;attributeInfos;indexBuffer=null;attributes;constructor(t,r){super(t,r,Ey.defaultProps),this.maxVertexAttributes=t.limits.maxVertexAttributes,this.attributes=new Array(this.maxVertexAttributes).fill(null);let{shaderLayout:n,bufferLayout:s}=r.renderPipeline||{};if(!n||!s)throw new Error("VertexArray");this.attributeInfos=gS(n,s,this.maxVertexAttributes)}setConstantWebGL(t,r){this.device.reportError(new Error("constant attributes not supported"))}},Da=Ey;Y(Da,"defaultProps",{...nt.defaultProps,renderPipeline:null});var My=class extends nt{get[Symbol.toStringTag](){return"TransformFeedback"}constructor(t,r){super(t,r,My.defaultProps)}},ka=My;Y(ka,"defaultProps",{...nt.defaultProps,layout:void 0,buffers:{}});var Sy=class extends nt{get[Symbol.toStringTag](){return"QuerySet"}constructor(t,r){super(t,r,Sy.defaultProps)}},Ua=Sy;Y(Ua,"defaultProps",{...nt.defaultProps,type:void 0,count:void 0});var pW={f32:{type:"f32",components:1},i32:{type:"i32",components:1},u32:{type:"u32",components:1},"vec2<f32>":{type:"f32",components:2},"vec3<f32>":{type:"f32",components:3},"vec4<f32>":{type:"f32",components:4},"vec2<i32>":{type:"i32",components:2},"vec3<i32>":{type:"i32",components:3},"vec4<i32>":{type:"i32",components:4},"vec2<u32>":{type:"u32",components:2},"vec3<u32>":{type:"u32",components:3},"vec4<u32>":{type:"u32",components:4},"mat2x2<f32>":{type:"f32",components:4},"mat2x3<f32>":{type:"f32",components:6},"mat2x4<f32>":{type:"f32",components:8},"mat3x2<f32>":{type:"f32",components:6},"mat3x3<f32>":{type:"f32",components:9},"mat3x4<f32>":{type:"f32",components:12},"mat4x2<f32>":{type:"f32",components:8},"mat4x3<f32>":{type:"f32",components:12},"mat4x4<f32>":{type:"f32",components:16}};function xS(e){return pW[e]}function _S(e,t){switch(t){case 1:return e;case 2:return e+e%2;default:return e+(4-e%4)%4}}var Mp;function wy(e){return(!Mp||Mp.byteLength<e)&&(Mp=new ArrayBuffer(e)),Mp}function Cy(e,t){let r=wy(e.BYTES_PER_ELEMENT*t);return new e(r,0,t)}function mW(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function za(e){return Array.isArray(e)?e.length===0||typeof e[0]=="number":mW(e)}var yS=1024,Sp=class{layout={};byteLength;constructor(t){let r=0;for(let[s,i]of Object.entries(t)){let o=xS(i),{type:a,components:c}=o;r=_S(r,c);let l=r;r+=c,this.layout[s]={type:a,size:c,offset:l}}r+=(4-r%4)%4;let n=r*4;this.byteLength=Math.max(n,yS)}getData(t){let r=Math.max(this.byteLength,yS),n=wy(r),s={i32:new Int32Array(n),u32:new Uint32Array(n),f32:new Float32Array(n),f16:new Uint16Array(n)};for(let[i,o]of Object.entries(t)){let a=this.layout[i];if(!a){U.warn(`Supplied uniform value ${i} not present in uniform block layout`)();continue}let{type:c,size:l,offset:f}=a,h=s[c];if(l===1){if(typeof o!="number"&&typeof o!="boolean"){U.warn(`Supplied value for single component uniform ${i} is not a number: ${o}`)();continue}h[f]=Number(o)}else{if(!za(o)){U.warn(`Supplied value for multi component / array uniform ${i} is not a numeric array: ${o}`)();continue}h.set(o,f)}}return new Uint8Array(n)}has(t){return Boolean(this.layout[t])}get(t){return this.layout[t]}};function AS(e,t,r=16){if(e!==t)return!1;let n=e,s=t;if(!za(n))return!1;if(za(s)&&n.length===s.length){for(let i=0;i<n.length;++i)if(s[i]!==n[i])return!1}return!0}function bS(e){return za(e)?e.slice():e}var wp=class{name;uniforms={};modifiedUniforms={};modified=!0;bindingLayout={};needsRedraw="initialized";constructor(t){if(this.name=t?.name||"unnamed",t?.name&&t?.shaderLayout){let r=t?.shaderLayout.bindings?.find(s=>s.type==="uniform"&&s.name===t?.name);if(!r)throw new Error(t?.name);let n=r;for(let s of n.uniforms||[])this.bindingLayout[s.name]=s}}setUniforms(t){for(let[r,n]of Object.entries(t))this._setUniform(r,n),this.needsRedraw||this.setNeedsRedraw(`${this.name}.${r}=${n}`)}setNeedsRedraw(t){this.needsRedraw=this.needsRedraw||t}getAllUniforms(){return this.modifiedUniforms={},this.needsRedraw=!1,this.uniforms||{}}_setUniform(t,r){AS(this.uniforms[t],r)||(this.uniforms[t]=bS(r),this.modifiedUniforms[t]=!0,this.modified=!0)}};var _f=class{uniformBlocks=new Map;uniformBufferLayouts=new Map;uniformBuffers=new Map;constructor(t){for(let[r,n]of Object.entries(t)){let s=r,i=new Sp(n.uniformTypes||{});this.uniformBufferLayouts.set(s,i);let o=new wp({name:r});o.setUniforms(n.defaultUniforms||{}),this.uniformBlocks.set(s,o)}}destroy(){for(let t of this.uniformBuffers.values())t.destroy()}setUniforms(t){for(let[r,n]of Object.entries(t))this.uniformBlocks.get(r)?.setUniforms(n);this.updateUniformBuffers()}getUniformBufferByteLength(t){return this.uniformBufferLayouts.get(t)?.byteLength||0}getUniformBufferData(t){let r=this.uniformBlocks.get(t)?.getAllUniforms()||{};return this.uniformBufferLayouts.get(t)?.getData(r)}createUniformBuffer(t,r,n){n&&this.setUniforms(n);let s=this.getUniformBufferByteLength(r),i=t.createBuffer({usage:et.UNIFORM|et.COPY_DST,byteLength:s}),o=this.getUniformBufferData(r);return i.write(o),i}getManagedUniformBuffer(t,r){if(!this.uniformBuffers.get(r)){let n=this.getUniformBufferByteLength(r),s=t.createBuffer({usage:et.UNIFORM|et.COPY_DST,byteLength:n});this.uniformBuffers.set(r,s)}return this.uniformBuffers.get(r)}updateUniformBuffers(){let t=!1;for(let r of this.uniformBlocks.keys()){let n=this.updateUniformBuffer(r);t||=n}return t&&U.log(3,`UniformStore.updateUniformBuffers(): ${t}`)(),t}updateUniformBuffer(t){let r=this.uniformBlocks.get(t),n=this.uniformBuffers.get(t),s=!1;if(n&&r?.needsRedraw){s||=r.needsRedraw;let i=this.getUniformBufferData(t);n=this.uniformBuffers.get(t),n?.write(i);let o=this.uniformBlocks.get(t)?.getAllUniforms();U.log(4,`Writing to uniform buffer ${String(t)}`,i,o)()}return s}};function Cp(e){let t=ArrayBuffer.isView(e)?e.constructor:e;switch(t){case Float32Array:return"float32";case Uint16Array:return"uint16";case Uint32Array:return"uint32";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int8Array:return"sint8";case Int16Array:return"sint16";case Int32Array:return"sint32";default:throw new Error(t.constructor.name)}}function yf(e){switch(e){case"float32":return Float32Array;case"uint32":return Uint32Array;case"sint32":return Int32Array;case"uint16":case"unorm16":return Uint16Array;case"sint16":case"snorm16":return Int16Array;case"uint8":case"unorm8":return Uint8Array;case"sint8":case"snorm8":return Int8Array;default:throw new Error(e)}}function Py(e,t,r){if(!t||t>4)throw new Error(`size ${t}`);let n=t,s=Cp(e);if(s==="uint8"&&r&&n===1)return"unorm8-webgl";if(s==="uint8"&&r&&n===3)return"unorm8x3-webgl";if(s==="uint8"||s==="sint8"){if(n===1||n===3)throw new Error(`size: ${t}`);return r&&(s=s.replace("int","norm")),`${s}x${n}`}if(s==="uint16"||s==="sint16"){if(n===1||n===3)throw new Error(`size: ${t}`);return r&&(s=s.replace("int","norm")),`${s}x${n}`}return n===1?s:`${s}x${n}`}var ao=class{bufferLayouts;constructor(t){this.bufferLayouts=t}getBufferLayout(t){return this.bufferLayouts.find(r=>r.name===t)||null}getAttributeNamesForBuffer(t){return t.attributes?t.attributes?.map(r=>r.attribute):[t.name]}mergeBufferLayouts(t,r){let n=[...t];for(let s of r){let i=n.findIndex(o=>o.name===s.name);i<0?n.push(s):n[i]=s}return n}getBufferIndex(t){let r=this.bufferLayouts.findIndex(n=>n.name===t);return r===-1&&U.warn(`BufferLayout: Missing buffer for "${t}".`)(),r}};function Iy(e,t){let r=Object.fromEntries(e.attributes.map(s=>[s.name,s.location])),n=t.slice();return n.sort((s,i)=>{let o=s.attributes?s.attributes.map(f=>f.attribute):[s.name],a=i.attributes?i.attributes.map(f=>f.attribute):[i.name],c=Math.min(...o.map(f=>r[f])),l=Math.min(...a.map(f=>r[f]));return c-l}),n}var ur=class{constructor(t,r){this.name=t,this.attributes=r,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}get isPointer(){return!1}getTypeName(){return this.name}},Pp=class{constructor(t,r,n){this.name=t,this.type=r,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}},Ln=class extends ur{constructor(t,r){super(t,r),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}},Bn=class extends ur{constructor(t,r){super(t,r),this.count=0,this.stride=0}get isArray(){return!0}getTypeName(){return`array<${this.format.getTypeName()}, ${this.count}>`}},bf=class extends ur{constructor(t,r,n){super(t,n),this.format=r}get isPointer(){return!0}getTypeName(){return`&${this.format.getTypeName()}`}},hs=class extends ur{constructor(t,r,n,s){super(t,n),this.format=r,this.access=s}get isTemplate(){return!0}getTypeName(){let t=this.name;if(this.format!==null){if(t==="vec2"||t==="vec3"||t==="vec4"||t==="mat2x2"||t==="mat2x3"||t==="mat2x4"||t==="mat3x2"||t==="mat3x3"||t==="mat3x4"||t==="mat4x2"||t==="mat4x3"||t==="mat4x4"){if(this.format.name==="f32")return t+="f",t;if(this.format.name==="i32")return t+="i",t;if(this.format.name==="u32")return t+="u",t;if(this.format.name==="bool")return t+="b",t;if(this.format.name==="f16")return t+="h",t}t+=`<${this.format.name}>`}else if(t==="vec2"||t==="vec3"||t==="vec4")return t;return t}},ri;(e=>{e[e.Uniform=0]="Uniform",e[e.Storage=1]="Storage",e[e.Texture=2]="Texture",e[e.Sampler=3]="Sampler",e[e.StorageTexture=4]="StorageTexture"})(ri||(ri={}));var Va=class{constructor(t,r,n,s,i,o,a){this.name=t,this.type=r,this.group=n,this.binding=s,this.attributes=i,this.resourceType=o,this.access=a}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}},Ly=class{constructor(t,r){this.name=t,this.type=r}},By=class{constructor(t,r,n,s){this.name=t,this.type=r,this.locationType=n,this.location=s,this.interpolation=null}},Ip=class{constructor(t,r,n,s){this.name=t,this.type=r,this.locationType=n,this.location=s}},Ny=class{constructor(t,r,n,s){this.name=t,this.type=r,this.attributes=n,this.id=s}},Fy=class{constructor(t,r,n){this.name=t,this.type=r,this.attributes=n}},Dy=class{constructor(t,r=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=t,this.stage=r,this.attributes=n}},ky=class{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}};function gW(e){var t=(32768&e)>>15,r=(31744&e)>>10,n=1023&e;return r==0?(t?-1:1)*Math.pow(2,-14)*(n/Math.pow(2,10)):r==31?n?NaN:1/0*(t?-1:1):(t?-1:1)*Math.pow(2,r-15)*(1+n/Math.pow(2,10))}var ES=new Float32Array(1),xW=new Int32Array(ES.buffer),Ve=new Uint16Array(1);function _W(e){ES[0]=e;let t=xW[0],r=t>>31&1,n=t>>23&255,s=8388607&t;if(n===255)return Ve[0]=r<<15|31744|(s!==0?512:0),Ve[0];if(n===0){if(s===0)return Ve[0]=r<<15,Ve[0];s|=8388608;let i=113;for(;!(8388608&s);)s<<=1,i--;return n=127-i,s&=8388607,n>0?(s=(s>>126-n)+(s>>127-n&1),Ve[0]=r<<15|n<<10|s>>13,Ve[0]):(Ve[0]=r<<15,Ve[0])}return n=n-127+15,n>=31?(Ve[0]=r<<15|31744,Ve[0]):n<=0?n<-10?(Ve[0]=r<<15,Ve[0]):(s=(8388608|s)>>1-n,Ve[0]=r<<15|s>>13,Ve[0]):(s>>=13,Ve[0]=r<<15|n<<10|s,Ve[0])}var Ky=new Uint32Array(1),MS=new Float32Array(Ky.buffer,0,1);function TS(e){let t=112+(e>>6&31)<<23|(63&e)<<17;return Ky[0]=t,MS[0]}function yW(e,t,r,n,s,i,o,a,c){let l=n*(o>>=s)*(i>>=s)+r*o+t*a;switch(c){case"r8unorm":return[vt(e,l,"8unorm",1)[0]];case"r8snorm":return[vt(e,l,"8snorm",1)[0]];case"r8uint":return[vt(e,l,"8uint",1)[0]];case"r8sint":return[vt(e,l,"8sint",1)[0]];case"rg8unorm":{let f=vt(e,l,"8unorm",2);return[f[0],f[1]]}case"rg8snorm":{let f=vt(e,l,"8snorm",2);return[f[0],f[1]]}case"rg8uint":{let f=vt(e,l,"8uint",2);return[f[0],f[1]]}case"rg8sint":{let f=vt(e,l,"8sint",2);return[f[0],f[1]]}case"rgba8unorm-srgb":case"rgba8unorm":{let f=vt(e,l,"8unorm",4);return[f[0],f[1],f[2],f[3]]}case"rgba8snorm":{let f=vt(e,l,"8snorm",4);return[f[0],f[1],f[2],f[3]]}case"rgba8uint":{let f=vt(e,l,"8uint",4);return[f[0],f[1],f[2],f[3]]}case"rgba8sint":{let f=vt(e,l,"8sint",4);return[f[0],f[1],f[2],f[3]]}case"bgra8unorm-srgb":case"bgra8unorm":{let f=vt(e,l,"8unorm",4);return[f[2],f[1],f[0],f[3]]}case"r16uint":return[vt(e,l,"16uint",1)[0]];case"r16sint":return[vt(e,l,"16sint",1)[0]];case"r16float":return[vt(e,l,"16float",1)[0]];case"rg16uint":{let f=vt(e,l,"16uint",2);return[f[0],f[1]]}case"rg16sint":{let f=vt(e,l,"16sint",2);return[f[0],f[1]]}case"rg16float":{let f=vt(e,l,"16float",2);return[f[0],f[1]]}case"rgba16uint":{let f=vt(e,l,"16uint",4);return[f[0],f[1],f[2],f[3]]}case"rgba16sint":{let f=vt(e,l,"16sint",4);return[f[0],f[1],f[2],f[3]]}case"rgba16float":{let f=vt(e,l,"16float",4);return[f[0],f[1],f[2],f[3]]}case"r32uint":return[vt(e,l,"32uint",1)[0]];case"r32sint":return[vt(e,l,"32sint",1)[0]];case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return[vt(e,l,"32float",1)[0]];case"rg32uint":{let f=vt(e,l,"32uint",2);return[f[0],f[1]]}case"rg32sint":{let f=vt(e,l,"32sint",2);return[f[0],f[1]]}case"rg32float":{let f=vt(e,l,"32float",2);return[f[0],f[1]]}case"rgba32uint":{let f=vt(e,l,"32uint",4);return[f[0],f[1],f[2],f[3]]}case"rgba32sint":{let f=vt(e,l,"32sint",4);return[f[0],f[1],f[2],f[3]]}case"rgba32float":{let f=vt(e,l,"32float",4);return[f[0],f[1],f[2],f[3]]}case"rg11b10ufloat":{let f=new Uint32Array(e.buffer,l,1)[0],h=(4192256&f)>>11,u=(4290772992&f)>>22;return[TS(2047&f),TS(h),function(d){let p=112+(d>>5&31)<<23|(31&d)<<18;return Ky[0]=p,MS[0]}(u),1]}}return null}function vt(e,t,r,n){let s=[0,0,0,0];for(let i=0;i<n;++i)switch(r){case"8unorm":s[i]=e[t]/255,t++;break;case"8snorm":s[i]=e[t]/255*2-1,t++;break;case"8uint":s[i]=e[t],t++;break;case"8sint":s[i]=e[t]-127,t++;break;case"16uint":s[i]=e[t]|e[t+1]<<8,t+=2;break;case"16sint":s[i]=(e[t]|e[t+1]<<8)-32768,t+=2;break;case"16float":s[i]=gW(e[t]|e[t+1]<<8),t+=2;break;case"32uint":case"32sint":s[i]=e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24,t+=4;break;case"32float":s[i]=new Float32Array(e.buffer,t,1)[0],t+=4}return s}function Mt(e,t,r,n,s){for(let i=0;i<n;++i)switch(r){case"8unorm":e[t]=255*s[i],t++;break;case"8snorm":e[t]=.5*(s[i]+1)*255,t++;break;case"8uint":e[t]=s[i],t++;break;case"8sint":e[t]=s[i]+127,t++;break;case"16uint":new Uint16Array(e.buffer,t,1)[0]=s[i],t+=2;break;case"16sint":new Int16Array(e.buffer,t,1)[0]=s[i],t+=2;break;case"16float":{let o=_W(s[i]);new Uint16Array(e.buffer,t,1)[0]=o,t+=2;break}case"32uint":new Uint32Array(e.buffer,t,1)[0]=s[i],t+=4;break;case"32sint":new Int32Array(e.buffer,t,1)[0]=s[i],t+=4;break;case"32float":new Float32Array(e.buffer,t,1)[0]=s[i],t+=4}return s}var Ry={r8unorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8snorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8uint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8sint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg8unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8snorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"rgba8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8snorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},bgra8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bgra8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r16uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16float:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg16uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba16uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r32uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg32uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba32uint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32sint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32float:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rg11b10ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},stencil8:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!1,hasStencil:!0,channels:1},depth16unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},depth24plus:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,depthOnlyFormat:"depth32float",channels:1},"depth24plus-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,depthOnlyFormat:"depth32float",channels:1},depth32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},"depth32float-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,stencilOnlyFormat:"depth32float",channels:1},rgb9e5ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bc1-rgba-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc1-rgba-unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc4-r-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc4-r-snorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc5-rg-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc5-rg-snorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc6h-rgb-ufloat":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc6h-rgb-float":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"eac-r11unorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-r11snorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-rg11unorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"eac-rg11snorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"astc-4x4-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-4x4-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x5-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-5x5-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x6-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-6x6-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-8x5-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x5-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x6-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x6-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x8-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-8x8-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-10x5-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x5-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x6-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x6-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x8-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x8-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x10-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-10x10-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x12-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4},"astc-12x12-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4}},dr=class{constructor(){this.id=dr._id++,this.line=0}get isAstNode(){return!0}get astNodeType(){return""}search(t){t(this)}searchBlock(t,r){if(t){r(Xa.instance);for(let n of t)n instanceof Array?this.searchBlock(n,r):n.search(r);r(Ya.instance)}}constEvaluate(t,r){throw new Error("Cannot evaluate node")}constEvaluateString(t){return this.constEvaluate(t).toString()}};dr._id=0;var Xa=class extends dr{};Xa.instance=new Xa;var Ya=class extends dr{};Ya.instance=new Ya;var SS=new Set(["all","all","any","select","arrayLength","abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","clamp","cos","cosh","countLeadingZeros","countOneBits","countTrailingZeros","cross","degrees","determinant","distance","dot","dot4U8Packed","dot4I8Packed","exp","exp2","extractBits","faceForward","firstLeadingBit","firstTrailingBit","floor","fma","fract","frexp","insertBits","inverseSqrt","ldexp","length","log","log2","max","min","mix","modf","normalize","pow","quantizeToF16","radians","reflect","refract","reverseBits","round","saturate","sign","sin","sinh","smoothStep","sqrt","step","tan","tanh","transpose","trunc","dpdx","dpdxCoarse","dpdxFine","dpdy","dpdyCoarse","dpdyFine","fwidth","fwidthCoarse","fwidthFine","textureDimensions","textureGather","textureGatherCompare","textureLoad","textureNumLayers","textureNumLevels","textureNumSamples","textureSample","textureSampleBias","textureSampleCompare","textureSampleCompareLevel","textureSampleGrad","textureSampleLevel","textureSampleBaseClampToEdge","textureStore","atomicLoad","atomicStore","atomicAdd","atomicSub","atomicMax","atomicMin","atomicAnd","atomicOr","atomicXor","atomicExchange","atomicCompareExchangeWeak","pack4x8snorm","pack4x8unorm","pack4xI8","pack4xU8","pack4x8Clamp","pack4xU8Clamp","pack2x16snorm","pack2x16unorm","pack2x16float","unpack4x8snorm","unpack4x8unorm","unpack4xI8","unpack4xU8","unpack2x16snorm","unpack2x16unorm","unpack2x16float","storageBarrier","textureBarrier","workgroupBarrier","workgroupUniformLoad","subgroupAdd","subgroupExclusiveAdd","subgroupInclusiveAdd","subgroupAll","subgroupAnd","subgroupAny","subgroupBallot","subgroupBroadcast","subgroupBroadcastFirst","subgroupElect","subgroupMax","subgroupMin","subgroupMul","subgroupExclusiveMul","subgroupInclusiveMul","subgroupOr","subgroupShuffle","subgroupShuffleDown","subgroupShuffleUp","subgroupShuffleXor","subgroupXor","quadBroadcast","quadSwapDiagonal","quadSwapX","quadSwapY"]),kt=class extends dr{constructor(){super()}},ho=class extends kt{constructor(t,r,n,s,i,o){super(),this.calls=new Set,this.name=t,this.args=r,this.returnType=n,this.body=s,this.startLine=i,this.endLine=o}get astNodeType(){return"function"}search(t){if(this.attributes)for(let r of this.attributes)t(r);t(this);for(let r of this.args)t(r);this.searchBlock(this.body,t)}},Uy=class extends kt{constructor(t){super(),this.expression=t}get astNodeType(){return"staticAssert"}search(t){this.expression.search(t)}},Rp=class extends kt{constructor(t,r){super(),this.condition=t,this.body=r}get astNodeType(){return"while"}search(t){this.condition.search(t),this.searchBlock(this.body,t)}},Tf=class extends kt{constructor(t,r){super(),this.body=t,this.loopId=r}get astNodeType(){return"continuing"}search(t){this.searchBlock(this.body,t)}},Op=class extends kt{constructor(t,r,n,s){super(),this.init=t,this.condition=r,this.increment=n,this.body=s}get astNodeType(){return"for"}search(t){var r,n,s;(r=this.init)===null||r===void 0||r.search(t),(n=this.condition)===null||n===void 0||n.search(t),(s=this.increment)===null||s===void 0||s.search(t),this.searchBlock(this.body,t)}},rn=class extends kt{constructor(t,r,n,s,i){super(),this.attributes=null,this.name=t,this.type=r,this.storage=n,this.access=s,this.value=i}get astNodeType(){return"var"}search(t){var r;t(this),(r=this.value)===null||r===void 0||r.search(t)}},vf=class extends kt{constructor(t,r,n){super(),this.attributes=null,this.name=t,this.type=r,this.value=n}get astNodeType(){return"override"}search(t){var r;(r=this.value)===null||r===void 0||r.search(t)}},lo=class extends kt{constructor(t,r,n,s,i){super(),this.attributes=null,this.name=t,this.type=r,this.storage=n,this.access=s,this.value=i}get astNodeType(){return"let"}search(t){var r;t(this),(r=this.value)===null||r===void 0||r.search(t)}},Ga=class extends kt{constructor(t,r,n,s,i){super(),this.attributes=null,this.name=t,this.type=r,this.storage=n,this.access=s,this.value=i}get astNodeType(){return"const"}constEvaluate(t,r){return this.value.constEvaluate(t,r)}search(t){var r;t(this),(r=this.value)===null||r===void 0||r.search(t)}},Wa,Af,N,L;(e=>{e.increment="++",e.decrement="--"})(Wa||(Wa={})),(e=>{e.parse=function(t){let r=t;if(r=="parse")throw new Error("Invalid value for IncrementOperator");return e[r]}})(Wa||(Wa={}));var Lp=class extends kt{constructor(t,r){super(),this.operator=t,this.variable=r}get astNodeType(){return"increment"}search(t){this.variable.search(t)}};(e=>{e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="})(Af||(Af={})),(e=>{e.parse=function(t){let r=t;if(r=="parse")throw new Error("Invalid value for AssignOperator");return r}})(Af||(Af={}));var Bp=class extends kt{constructor(t,r,n){super(),this.operator=t,this.variable=r,this.value=n}get astNodeType(){return"assign"}search(t){this.variable.search(t),this.value.search(t)}},Ef=class extends kt{constructor(t,r){super(),this.name=t,this.args=r}get astNodeType(){return"call"}isBuiltin(){return SS.has(this.name)}search(t){for(let r of this.args)r.search(t);t(this)}},Np=class extends kt{constructor(t,r){super(),this.body=t,this.continuing=r}get astNodeType(){return"loop"}search(t){var r;this.searchBlock(this.body,t),(r=this.continuing)===null||r===void 0||r.search(t)}},Fp=class extends kt{constructor(t,r){super(),this.condition=t,this.cases=r}get astNodeType(){return"switch"}search(t){t(this);for(let r of this.cases)r.search(t)}},Dp=class extends kt{constructor(t,r,n,s){super(),this.condition=t,this.body=r,this.elseif=n,this.else=s}get astNodeType(){return"if"}search(t){this.condition.search(t),this.searchBlock(this.body,t),this.searchBlock(this.elseif,t),this.searchBlock(this.else,t)}},kp=class extends kt{constructor(t){super(),this.value=t}get astNodeType(){return"return"}search(t){var r;(r=this.value)===null||r===void 0||r.search(t)}},zy=class extends kt{constructor(t){super(),this.name=t}get astNodeType(){return"enable"}},Vy=class extends kt{constructor(t){super(),this.extensions=t}get astNodeType(){return"requires"}},Up=class extends kt{constructor(t,r){super(),this.severity=t,this.rule=r}get astNodeType(){return"diagnostic"}},Mf=class extends kt{constructor(t,r){super(),this.name=t,this.type=r}get astNodeType(){return"alias"}},Wy=class extends kt{constructor(){super()}get astNodeType(){return"discard"}},zp=class extends kt{constructor(){super(),this.condition=null,this.loopId=-1}get astNodeType(){return"break"}},Vp=class extends kt{constructor(){super(),this.loopId=-1}get astNodeType(){return"continue"}},z=class extends kt{constructor(t){super(),this.attributes=null,this.name=t}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}static maxFormatType(t){let r=t[0];if(r.name==="f32")return r;for(let n=1;n<t.length;++n){let s=z._priority.get(r.name);z._priority.get(t[n].name)<s&&(r=t[n])}return r.name==="x32"?z.i32:r}getTypeName(){return this.name}};z.x32=new z("x32"),z.f32=new z("f32"),z.i32=new z("i32"),z.u32=new z("u32"),z.f16=new z("f16"),z.bool=new z("bool"),z.void=new z("void"),z._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);var Wp=class extends z{constructor(t){super(t)}},tn=class extends z{constructor(t,r,n,s){super(t),this.members=r,this.startLine=n,this.endLine=s}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(t){for(let r=0;r<this.members.length;r++)if(this.members[r].name==t)return r;return-1}search(t){for(let r of this.members)t(r)}},B=class extends z{constructor(t,r,n){super(t),this.format=r,this.access=n}get astNodeType(){return"template"}getTypeName(){let t=this.name;if(this.format!==null){if(t==="vec2"||t==="vec3"||t==="vec4"||t==="mat2x2"||t==="mat2x3"||t==="mat2x4"||t==="mat3x2"||t==="mat3x3"||t==="mat3x4"||t==="mat4x2"||t==="mat4x3"||t==="mat4x4"){if(this.format.name==="f32")return t+="f",t;if(this.format.name==="i32")return t+="i",t;if(this.format.name==="u32")return t+="u",t;if(this.format.name==="bool")return t+="b",t;if(this.format.name==="f16")return t+="h",t}t+=`<${this.format.name}>`}else if(t==="vec2"||t==="vec3"||t==="vec4")return t;return t}};B.vec2f=new B("vec2",z.f32,null),B.vec3f=new B("vec3",z.f32,null),B.vec4f=new B("vec4",z.f32,null),B.vec2i=new B("vec2",z.i32,null),B.vec3i=new B("vec3",z.i32,null),B.vec4i=new B("vec4",z.i32,null),B.vec2u=new B("vec2",z.u32,null),B.vec3u=new B("vec3",z.u32,null),B.vec4u=new B("vec4",z.u32,null),B.vec2h=new B("vec2",z.f16,null),B.vec3h=new B("vec3",z.f16,null),B.vec4h=new B("vec4",z.f16,null),B.vec2b=new B("vec2",z.bool,null),B.vec3b=new B("vec3",z.bool,null),B.vec4b=new B("vec4",z.bool,null),B.mat2x2f=new B("mat2x2",z.f32,null),B.mat2x3f=new B("mat2x3",z.f32,null),B.mat2x4f=new B("mat2x4",z.f32,null),B.mat3x2f=new B("mat3x2",z.f32,null),B.mat3x3f=new B("mat3x3",z.f32,null),B.mat3x4f=new B("mat3x4",z.f32,null),B.mat4x2f=new B("mat4x2",z.f32,null),B.mat4x3f=new B("mat4x3",z.f32,null),B.mat4x4f=new B("mat4x4",z.f32,null),B.mat2x2h=new B("mat2x2",z.f16,null),B.mat2x3h=new B("mat2x3",z.f16,null),B.mat2x4h=new B("mat2x4",z.f16,null),B.mat3x2h=new B("mat3x2",z.f16,null),B.mat3x3h=new B("mat3x3",z.f16,null),B.mat3x4h=new B("mat3x4",z.f16,null),B.mat4x2h=new B("mat4x2",z.f16,null),B.mat4x3h=new B("mat4x3",z.f16,null),B.mat4x4h=new B("mat4x4",z.f16,null),B.mat2x2i=new B("mat2x2",z.i32,null),B.mat2x3i=new B("mat2x3",z.i32,null),B.mat2x4i=new B("mat2x4",z.i32,null),B.mat3x2i=new B("mat3x2",z.i32,null),B.mat3x3i=new B("mat3x3",z.i32,null),B.mat3x4i=new B("mat3x4",z.i32,null),B.mat4x2i=new B("mat4x2",z.i32,null),B.mat4x3i=new B("mat4x3",z.i32,null),B.mat4x4i=new B("mat4x4",z.i32,null),B.mat2x2u=new B("mat2x2",z.u32,null),B.mat2x3u=new B("mat2x3",z.u32,null),B.mat2x4u=new B("mat2x4",z.u32,null),B.mat3x2u=new B("mat3x2",z.u32,null),B.mat3x3u=new B("mat3x3",z.u32,null),B.mat3x4u=new B("mat3x4",z.u32,null),B.mat4x2u=new B("mat4x2",z.u32,null),B.mat4x3u=new B("mat4x3",z.u32,null),B.mat4x4u=new B("mat4x4",z.u32,null);var ja=class extends z{constructor(t,r,n,s){super(t),this.storage=r,this.type=n,this.access=s}get astNodeType(){return"pointer"}},fo=class extends z{constructor(t,r,n,s){super(t),this.attributes=r,this.format=n,this.count=s}get astNodeType(){return"array"}get isArray(){return!0}},co=class extends z{constructor(t,r,n){super(t),this.format=r,this.access=n}get astNodeType(){return"sampler"}},Sr=class extends dr{constructor(){super(),this.postfix=null}},us=class extends Sr{constructor(t){super(),this.value=t}get astNodeType(){return"stringExpr"}toString(){return this.value}constEvaluateString(){return this.value}},Dr=class extends Sr{constructor(t,r){super(),this.type=t,this.args=r}get astNodeType(){return"createExpr"}search(t){if(t(this),this.args)for(let r of this.args)r.search(t)}constEvaluate(t,r){return r&&(r[0]=this.type),t.evalExpression(this,t.context)}},Sf=class extends Sr{constructor(t,r){super(),this.cachedReturnValue=null,this.name=t,this.args=r}get astNodeType(){return"callExpr"}setCachedReturnValue(t){this.cachedReturnValue=t}get isBuiltin(){return SS.has(this.name)}constEvaluate(t,r){return t.evalExpression(this,t.context)}search(t){for(let r of this.args)r.search(t);t(this)}},rr=class extends Sr{constructor(t){super(),this.name=t}get astNodeType(){return"varExpr"}search(t){t(this),this.postfix&&this.postfix.search(t)}constEvaluate(t,r){return t.evalExpression(this,t.context)}},Hp=class extends Sr{constructor(t,r){super(),this.name=t,this.initializer=r}get astNodeType(){return"constExpr"}constEvaluate(t,r){if(this.initializer){let n=t.evalExpression(this.initializer,t.context);return n!==null&&this.postfix?n.getSubData(t,this.postfix,t.context):n}return null}search(t){this.initializer.search(t)}},oe=class extends Sr{constructor(t,r){super(),this.value=t,this.type=r}get astNodeType(){return"literalExpr"}constEvaluate(t,r){return r!==void 0&&(r[0]=this.type),this.value}get isScalar(){return this.value instanceof I}get isVector(){return this.value instanceof S||this.value instanceof Q}get scalarValue(){return this.value instanceof I?this.value.value:(console.error("Value is not scalar."),0)}get vectorValue(){return this.value instanceof S||this.value instanceof Q?this.value.data:(console.error("Value is not a vector or matrix."),new Float32Array(0))}},Gp=class extends Sr{constructor(t,r){super(),this.type=t,this.value=r}get astNodeType(){return"bitcastExpr"}search(t){this.value.search(t)}};var si=class extends Sr{constructor(t){super(),this.index=t}search(t){this.index.search(t)}},jp=class extends Sr{constructor(){super()}},ee=class extends jp{constructor(t,r){super(),this.operator=t,this.right=r}get astNodeType(){return"unaryOp"}constEvaluate(t,r){return t.evalExpression(this,t.context)}search(t){this.right.search(t)}},Mr=class extends jp{constructor(t,r,n){super(),this.operator=t,this.left=r,this.right=n}get astNodeType(){return"binaryOp"}_getPromotedType(t,r){return t.name===r.name?t:t.name==="f32"||r.name==="f32"?z.f32:t.name==="u32"||r.name==="u32"?z.u32:z.i32}constEvaluate(t,r){return t.evalExpression(this,t.context)}search(t){this.left.search(t),this.right.search(t)}},qp=class extends dr{constructor(t){super(),this.body=t}search(t){t(this),this.searchBlock(this.body,t)}},qa=class extends Sr{constructor(){super()}get astNodeType(){return"default"}},Xp=class extends qp{constructor(t,r){super(r),this.selectors=t}get astNodeType(){return"case"}search(t){this.searchBlock(this.body,t)}},Yp=class extends qp{constructor(t){super(t)}get astNodeType(){return"default"}search(t){this.searchBlock(this.body,t)}},$p=class extends dr{constructor(t,r,n){super(),this.name=t,this.type=r,this.attributes=n}get astNodeType(){return"argument"}},Hy=class extends dr{constructor(t,r){super(),this.condition=t,this.body=r}get astNodeType(){return"elseif"}search(t){this.condition.search(t),this.searchBlock(this.body,t)}},Kp=class extends dr{constructor(t,r,n){super(),this.name=t,this.type=r,this.attributes=n}get astNodeType(){return"member"}},Zp=class extends dr{constructor(t,r){super(),this.name=t,this.value=r}get astNodeType(){return"attribute"}},pr=class{constructor(t,r){this.parent=null,this.typeInfo=t,this.parent=r,this.id=pr._id++}clone(){throw`Clone: Not implemented for ${this.constructor.name}`}setDataValue(t,r,n,s){console.error(`SetDataValue: Not implemented for ${this.constructor.name}`)}getSubData(t,r,n){return console.error(`GetDataValue: Not implemented for ${this.constructor.name}`),null}toString(){return`<${this.typeInfo.getTypeName()}>`}};pr._id=0;var wf=class extends pr{constructor(){super(new ur("void",null),null)}toString(){return"void"}};wf.void=new wf;var ni=class extends pr{constructor(t){super(new bf("pointer",t.typeInfo,null),null),this.reference=t}clone(){return this}setDataValue(t,r,n,s){this.reference.setDataValue(t,r,n,s)}getSubData(t,r,n){return r?this.reference.getSubData(t,r,n):this}toString(){return`&${this.reference.toString()}`}},I=class extends pr{constructor(t,r,n=null){super(r,n),t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array?this.data=t:this.typeInfo.name==="x32"?t-Math.floor(t)!==0?this.data=new Float32Array([t]):this.data=t>=0?new Uint32Array([t]):new Int32Array([t]):this.typeInfo.name==="i32"||this.typeInfo.name==="bool"?this.data=new Int32Array([t]):this.typeInfo.name==="u32"?this.data=new Uint32Array([t]):this.typeInfo.name==="f32"||this.typeInfo.name==="f16"?this.data=new Float32Array([t]):console.error("ScalarData2: Invalid type",r)}clone(){if(this.data instanceof Float32Array)return new I(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new I(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new I(new Uint32Array(this.data),this.typeInfo,null);throw"ScalarData: Invalid data type"}get value(){return this.data[0]}set value(t){this.data[0]=t}setDataValue(t,r,n,s){if(n)return void console.error("SetDataValue: Scalar data does not support postfix",n);if(!(r instanceof I))return void console.error("SetDataValue: Invalid value",r);let i=r.data[0];this.typeInfo.name==="i32"||this.typeInfo.name==="u32"?i=Math.floor(i):this.typeInfo.name==="bool"&&(i=i?1:0),this.data[0]=i}getSubData(t,r,n){return r?(console.error("getSubData: Scalar data does not support postfix",r),null):this}toString(){return`${this.value}`}};function AW(e,t,r){let n=t.length;return n===2?r==="f32"?new S(new Float32Array(t),e.getTypeInfo("vec2f")):r==="i32"||r==="bool"?new S(new Int32Array(t),e.getTypeInfo("vec2i")):r==="u32"?new S(new Uint32Array(t),e.getTypeInfo("vec2u")):r==="f16"?new S(new Float32Array(t),e.getTypeInfo("vec2h")):(console.error(`getSubData: Unknown format ${r}`),null):n===3?r==="f32"?new S(new Float32Array(t),e.getTypeInfo("vec3f")):r==="i32"||r==="bool"?new S(new Int32Array(t),e.getTypeInfo("vec3i")):r==="u32"?new S(new Uint32Array(t),e.getTypeInfo("vec3u")):r==="f16"?new S(new Float32Array(t),e.getTypeInfo("vec3h")):(console.error(`getSubData: Unknown format ${r}`),null):n===4?r==="f32"?new S(new Float32Array(t),e.getTypeInfo("vec4f")):r==="i32"||r==="bool"?new S(new Int32Array(t),e.getTypeInfo("vec4i")):r==="u32"?new S(new Uint32Array(t),e.getTypeInfo("vec4u")):r==="f16"?new S(new Float32Array(t),e.getTypeInfo("vec4h")):(console.error(`getSubData: Unknown format ${r}`),null):(console.error(`getSubData: Invalid vector size ${t.length}`),null)}var S=class extends pr{constructor(t,r,n=null){if(super(r,n),t instanceof Float32Array||t instanceof Uint32Array||t instanceof Int32Array)this.data=t;else{let s=this.typeInfo.name;s==="vec2f"||s==="vec3f"||s==="vec4f"?this.data=new Float32Array(t):s==="vec2i"||s==="vec3i"||s==="vec4i"?this.data=new Int32Array(t):s==="vec2u"||s==="vec3u"||s==="vec4u"?this.data=new Uint32Array(t):s==="vec2h"||s==="vec3h"||s==="vec4h"?this.data=new Float32Array(t):s==="vec2b"||s==="vec3b"||s==="vec4b"?this.data=new Int32Array(t):s==="vec2"||s==="vec3"||s==="vec4"?this.data=new Float32Array(t):console.error(`VectorData: Invalid type ${s}`)}}clone(){if(this.data instanceof Float32Array)return new S(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new S(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new S(new Uint32Array(this.data),this.typeInfo,null);throw"VectorData: Invalid data type"}setDataValue(t,r,n,s){n instanceof us?console.error("TODO: Set vector postfix"):r instanceof S?this.data=r.data:console.error("SetDataValue: Invalid value",r)}getSubData(t,r,n){if(r===null)return this;let s=t.getTypeInfo("f32");if(this.typeInfo instanceof hs)s=this.typeInfo.format||s;else{let o=this.typeInfo.name;o==="vec2f"||o==="vec3f"||o==="vec4f"?s=t.getTypeInfo("f32"):o==="vec2i"||o==="vec3i"||o==="vec4i"?s=t.getTypeInfo("i32"):o==="vec2b"||o==="vec3b"||o==="vec4b"?s=t.getTypeInfo("bool"):o==="vec2u"||o==="vec3u"||o==="vec4u"?s=t.getTypeInfo("u32"):o==="vec2h"||o==="vec3h"||o==="vec4h"?s=t.getTypeInfo("f16"):console.error(`GetSubData: Unknown type ${o}`)}let i=this;for(;r!==null&&i!==null;){if(r instanceof si){let o=r.index,a=-1;if(o instanceof oe){if(!(o.value instanceof I))return console.error(`GetSubData: Invalid array index ${o.value}`),null;a=o.value.value}else{let c=t.evalExpression(o,n);if(!(c instanceof I))return console.error("GetSubData: Unknown index type",o),null;a=c.value}if(a<0||a>=i.data.length)return console.error("GetSubData: Index out of range",a),null;if(i.data instanceof Float32Array){let c=new Float32Array(i.data.buffer,i.data.byteOffset+4*a,1);return new I(c,s)}if(i.data instanceof Int32Array){let c=new Int32Array(i.data.buffer,i.data.byteOffset+4*a,1);return new I(c,s)}if(i.data instanceof Uint32Array){let c=new Uint32Array(i.data.buffer,i.data.byteOffset+4*a,1);return new I(c,s)}throw"GetSubData: Invalid data type"}if(!(r instanceof us))return console.error("GetSubData: Unknown postfix",r),null;{let o=r.value.toLowerCase();if(o.length===1){let c=0;if(o==="x"||o==="r")c=0;else if(o==="y"||o==="g")c=1;else if(o==="z"||o==="b")c=2;else{if(o!=="w"&&o!=="a")return console.error(`GetSubData: Unknown member ${o}`),null;c=3}if(this.data instanceof Float32Array){let l=new Float32Array(this.data.buffer,this.data.byteOffset+4*c,1);return new I(l,s,this)}if(this.data instanceof Int32Array){let l=new Int32Array(this.data.buffer,this.data.byteOffset+4*c,1);return new I(l,s,this)}if(this.data instanceof Uint32Array){let l=new Uint32Array(this.data.buffer,this.data.byteOffset+4*c,1);return new I(l,s,this)}}let a=[];for(let c of o)c==="x"||c==="r"?a.push(this.data[0]):c==="y"||c==="g"?a.push(this.data[1]):c==="z"||c==="b"?a.push(this.data[2]):c==="w"||c==="a"?a.push(this.data[3]):console.error(`GetDataValue: Unknown member ${c}`);i=AW(t,a,s.name)}r=r.postfix}return i}toString(){let t=`${this.data[0]}`;for(let r=1;r<this.data.length;++r)t+=`, ${this.data[r]}`;return t}},Q=class extends pr{constructor(t,r,n=null){super(r,n),t instanceof Float32Array?this.data=t:this.data=new Float32Array(t)}clone(){return new Q(new Float32Array(this.data),this.typeInfo,null)}setDataValue(t,r,n,s){n instanceof us?console.error("TODO: Set matrix postfix"):r instanceof Q?this.data=r.data:console.error("SetDataValue: Invalid value",r)}getSubData(t,r,n){if(r===null)return this;let s=this.typeInfo.name;if(t.getTypeInfo("f32"),this.typeInfo instanceof hs)this.typeInfo.format;else if(s.endsWith("f"))t.getTypeInfo("f32");else if(s.endsWith("i"))t.getTypeInfo("i32");else if(s.endsWith("u"))t.getTypeInfo("u32");else{if(!s.endsWith("h"))return console.error(`GetDataValue: Unknown type ${s}`),null;t.getTypeInfo("f16")}if(r instanceof si){let i=r.index,o=-1;if(i instanceof oe){if(!(i.value instanceof I))return console.error(`GetDataValue: Invalid array index ${i.value}`),null;o=i.value.value}else{let l=t.evalExpression(i,n);if(!(l instanceof I))return console.error("GetDataValue: Unknown index type",i),null;o=l.value}if(o<0||o>=this.data.length)return console.error("GetDataValue: Index out of range",o),null;let a=s.endsWith("h")?"h":"f",c;if(s==="mat2x2"||s==="mat2x2f"||s==="mat2x2h"||s==="mat3x2"||s==="mat3x2f"||s==="mat3x2h"||s==="mat4x2"||s==="mat4x2f"||s==="mat4x2h")c=new S(new Float32Array(this.data.buffer,this.data.byteOffset+2*o*4,2),t.getTypeInfo(`vec2${a}`));else if(s==="mat2x3"||s==="mat2x3f"||s==="mat2x3h"||s==="mat3x3"||s==="mat3x3f"||s==="mat3x3h"||s==="mat4x3"||s==="mat4x3f"||s==="mat4x3h")c=new S(new Float32Array(this.data.buffer,this.data.byteOffset+3*o*4,3),t.getTypeInfo(`vec3${a}`));else{if(s!=="mat2x4"&&s!=="mat2x4f"&&s!=="mat2x4h"&&s!=="mat3x4"&&s!=="mat3x4f"&&s!=="mat3x4h"&&s!=="mat4x4"&&s!=="mat4x4f"&&s!=="mat4x4h")return console.error(`GetDataValue: Unknown type ${s}`),null;c=new S(new Float32Array(this.data.buffer,this.data.byteOffset+4*o*4,4),t.getTypeInfo(`vec4${a}`))}return r.postfix?c.getSubData(t,r.postfix,n):c}return console.error("GetDataValue: Invalid postfix",r),null}toString(){let t=`${this.data[0]}`;for(let r=1;r<this.data.length;++r)t+=`, ${this.data[r]}`;return t}},jt=class extends pr{constructor(t,r,n=0,s=null){super(r,s),this.buffer=t instanceof ArrayBuffer?t:t.buffer,this.offset=n}clone(){let t=new Uint8Array(new Uint8Array(this.buffer,this.offset,this.typeInfo.size));return new jt(t.buffer,this.typeInfo,0,null)}setDataValue(t,r,n,s){if(r===null)return void console.log("setDataValue: NULL data.");let i=this.offset,o=this.typeInfo;for(;n;){if(n instanceof si)if(o instanceof Bn){let a=n.index;if(a instanceof oe){if(!(a.value instanceof I))return void console.error(`SetDataValue: Invalid index type ${a.value}`);i+=a.value.value*o.stride}else{let c=t.evalExpression(a,s);if(!(c instanceof I))return void console.error("SetDataValue: Unknown index type",a);i+=c.value*o.stride}o=o.format}else console.error(`SetDataValue: Type ${o.getTypeName()} is not an array`);else{if(!(n instanceof us))return void console.error("SetDataValue: Unknown postfix type",n);{let a=n.value;if(o instanceof Ln){let c=!1;for(let l of o.members)if(l.name===a){i+=l.offset,o=l.type,c=!0;break}if(!c)return void console.error(`SetDataValue: Member ${a} not found`)}else if(o instanceof ur){let c=o.getTypeName(),l=0;if(a==="x"||a==="r")l=0;else if(a==="y"||a==="g")l=1;else if(a==="z"||a==="b")l=2;else{if(a!=="w"&&a!=="a")return void console.error(`SetDataValue: Unknown member ${a}`);l=3}if(!(r instanceof I))return void console.error("SetDataValue: Invalid value",r);let f=r.value;return c==="vec2f"?void(new Float32Array(this.buffer,i,2)[l]=f):c==="vec3f"?void(new Float32Array(this.buffer,i,3)[l]=f):c==="vec4f"?void(new Float32Array(this.buffer,i,4)[l]=f):c==="vec2i"?void(new Int32Array(this.buffer,i,2)[l]=f):c==="vec3i"?void(new Int32Array(this.buffer,i,3)[l]=f):c==="vec4i"?void(new Int32Array(this.buffer,i,4)[l]=f):c==="vec2u"?void(new Uint32Array(this.buffer,i,2)[l]=f):c==="vec3u"?void(new Uint32Array(this.buffer,i,3)[l]=f):c==="vec4u"?void(new Uint32Array(this.buffer,i,4)[l]=f):void console.error(`SetDataValue: Type ${c} is not a struct`)}}}n=n.postfix}this.setData(t,r,o,i,s)}setData(t,r,n,s,i){let o=n.getTypeName();if(o!=="f32"&&o!=="f16")if(o!=="i32"&&o!=="atomic<i32>"&&o!=="x32")if(o!=="u32"&&o!=="atomic<u32>")if(o!=="bool"){if(o==="vec2f"||o==="vec2h"){let a=new Float32Array(this.buffer,s,2);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1]):(a[0]=r[0],a[1]=r[1]))}if(o==="vec3f"||o==="vec3h"){let a=new Float32Array(this.buffer,s,3);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2]):(a[0]=r[0],a[1]=r[1],a[2]=r[2]))}if(o==="vec4f"||o==="vec4h"){let a=new Float32Array(this.buffer,s,4);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3]))}if(o==="vec2i"){let a=new Int32Array(this.buffer,s,2);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1]):(a[0]=r[0],a[1]=r[1]))}if(o==="vec3i"){let a=new Int32Array(this.buffer,s,3);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2]):(a[0]=r[0],a[1]=r[1],a[2]=r[2]))}if(o==="vec4i"){let a=new Int32Array(this.buffer,s,4);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3]))}if(o==="vec2u"){let a=new Uint32Array(this.buffer,s,2);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1]):(a[0]=r[0],a[1]=r[1]))}if(o==="vec3u"){let a=new Uint32Array(this.buffer,s,3);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2]):(a[0]=r[0],a[1]=r[1],a[2]=r[2]))}if(o==="vec4u"){let a=new Uint32Array(this.buffer,s,4);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3]))}if(o==="vec2b"){let a=new Uint32Array(this.buffer,s,2);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1]):(a[0]=r[0],a[1]=r[1]))}if(o==="vec3b"){let a=new Uint32Array(this.buffer,s,3);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2]):(a[0]=r[0],a[1]=r[1],a[2]=r[2]))}if(o==="vec4b"){let a=new Uint32Array(this.buffer,s,4);return void(r instanceof S?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3]))}if(o==="mat2x2f"||o==="mat2x2h"){let a=new Float32Array(this.buffer,s,4);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3]))}if(o==="mat2x3f"||o==="mat2x3h"){let a=new Float32Array(this.buffer,s,6);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5]))}if(o==="mat2x4f"||o==="mat2x4h"){let a=new Float32Array(this.buffer,s,8);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5],a[6]=r.data[6],a[7]=r.data[7]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5],a[6]=r[6],a[7]=r[7]))}if(o==="mat3x2f"||o==="mat3x2h"){let a=new Float32Array(this.buffer,s,6);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5]))}if(o==="mat3x3f"||o==="mat3x3h"){let a=new Float32Array(this.buffer,s,9);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5],a[6]=r.data[6],a[7]=r.data[7],a[8]=r.data[8]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5],a[6]=r[6],a[7]=r[7],a[8]=r[8]))}if(o==="mat3x4f"||o==="mat3x4h"){let a=new Float32Array(this.buffer,s,12);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5],a[6]=r.data[6],a[7]=r.data[7],a[8]=r.data[8],a[9]=r.data[9],a[10]=r.data[10],a[11]=r.data[11]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5],a[6]=r[6],a[7]=r[7],a[8]=r[8],a[9]=r[9],a[10]=r[10],a[11]=r[11]))}if(o==="mat4x2f"||o==="mat4x2h"){let a=new Float32Array(this.buffer,s,8);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5],a[6]=r.data[6],a[7]=r.data[7]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5],a[6]=r[6],a[7]=r[7]))}if(o==="mat4x3f"||o==="mat4x3h"){let a=new Float32Array(this.buffer,s,12);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5],a[6]=r.data[6],a[7]=r.data[7],a[8]=r.data[8],a[9]=r.data[9],a[10]=r.data[10],a[11]=r.data[11]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5],a[6]=r[6],a[7]=r[7],a[8]=r[8],a[9]=r[9],a[10]=r[10],a[11]=r[11]))}if(o==="mat4x4f"||o==="mat4x4h"){let a=new Float32Array(this.buffer,s,16);return void(r instanceof Q?(a[0]=r.data[0],a[1]=r.data[1],a[2]=r.data[2],a[3]=r.data[3],a[4]=r.data[4],a[5]=r.data[5],a[6]=r.data[6],a[7]=r.data[7],a[8]=r.data[8],a[9]=r.data[9],a[10]=r.data[10],a[11]=r.data[11],a[12]=r.data[12],a[13]=r.data[13],a[14]=r.data[14],a[15]=r.data[15]):(a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5],a[6]=r[6],a[7]=r[7],a[8]=r[8],a[9]=r[9],a[10]=r[10],a[11]=r[11],a[12]=r[12],a[13]=r[13],a[14]=r[14],a[15]=r[15]))}if(r instanceof jt){if(n===r.typeInfo)return void new Uint8Array(this.buffer,s,r.buffer.byteLength).set(new Uint8Array(r.buffer));console.error("SetDataValue: Type mismatch",o,r.typeInfo.getTypeName())}else console.error(`SetData: Unknown type ${o}`)}else r instanceof I&&(new Int32Array(this.buffer,s,1)[0]=r.value);else r instanceof I&&(new Uint32Array(this.buffer,s,1)[0]=r.value);else r instanceof I&&(new Int32Array(this.buffer,s,1)[0]=r.value);else r instanceof I&&(new Float32Array(this.buffer,s,1)[0]=r.value)}getSubData(t,r,n){var s,i,o;if(r===null)return this;let a=this.offset,c=this.typeInfo;for(;r;){if(r instanceof si){let f=r.index,h=f instanceof Sr?t.evalExpression(f,n):f,u=0;if(h instanceof I?u=h.value:typeof h=="number"?u=h:console.error("GetDataValue: Invalid index type",f),c instanceof Bn)a+=u*c.stride,c=c.format;else{let d=c.getTypeName();d==="mat4x4"||d==="mat4x4f"||d==="mat4x4h"?(a+=16*u,c=t.getTypeInfo("vec4f")):console.error(`getDataValue: Type ${c.getTypeName()} is not an array`)}}else{if(!(r instanceof us))return console.error("GetDataValue: Unknown postfix type",r),null;{let f=r.value;if(c instanceof Ln){let h=!1;for(let u of c.members)if(u.name===f){a+=u.offset,c=u.type,h=!0;break}if(!h)return console.error(`GetDataValue: Member ${f} not found`),null}else if(c instanceof ur){let h=c.getTypeName();if(h==="vec2f"||h==="vec3f"||h==="vec4f"||h==="vec2i"||h==="vec3i"||h==="vec4i"||h==="vec2u"||h==="vec3u"||h==="vec4u"||h==="vec2b"||h==="vec3b"||h==="vec4b"||h==="vec2h"||h==="vec3h"||h==="vec4h"||h==="vec2"||h==="vec3"||h==="vec4"){if(f.length>0&&f.length<5){let u="f",d=[];for(let p=0;p<f.length;++p){let m=f[p].toLowerCase(),g=0;if(m==="x"||m==="r")g=0;else if(m==="y"||m==="g")g=1;else if(m==="z"||m==="b")g=2;else{if(m!=="w"&&m!=="a")return console.error(`Unknown member ${f}`),null;g=3}if(f.length===1){if(h.endsWith("f"))return this.buffer.byteLength<a+4*g+4?(console.log("Insufficient buffer data"),null):new I(new Float32Array(this.buffer,a+4*g,1),t.getTypeInfo("f32"),this);if(h.endsWith("h"))return new I(new Float32Array(this.buffer,a+4*g,1),t.getTypeInfo("f16"),this);if(h.endsWith("i"))return new I(new Int32Array(this.buffer,a+4*g,1),t.getTypeInfo("i32"),this);if(h.endsWith("b"))return new I(new Int32Array(this.buffer,a+4*g,1),t.getTypeInfo("bool"),this);if(h.endsWith("u"))return new I(new Uint32Array(this.buffer,a+4*g,1),t.getTypeInfo("i32"),this)}if(h==="vec2f")d.push(new Float32Array(this.buffer,a,2)[g]);else if(h==="vec3f"){if(a+12>=this.buffer.byteLength)return console.log("Insufficient buffer data"),null;let x=new Float32Array(this.buffer,a,3);d.push(x[g])}else if(h==="vec4f")d.push(new Float32Array(this.buffer,a,4)[g]);else if(h==="vec2i")u="i",d.push(new Int32Array(this.buffer,a,2)[g]);else if(h==="vec3i")u="i",d.push(new Int32Array(this.buffer,a,3)[g]);else if(h==="vec4i")u="i",d.push(new Int32Array(this.buffer,a,4)[g]);else if(h==="vec2u"){u="u";let x=new Uint32Array(this.buffer,a,2);d.push(x[g])}else h==="vec3u"?(u="u",d.push(new Uint32Array(this.buffer,a,3)[g])):h==="vec4u"&&(u="u",d.push(new Uint32Array(this.buffer,a,4)[g]))}return d.length===2?c=t.getTypeInfo(`vec2${u}`):d.length===3?c=t.getTypeInfo(`vec3${u}`):d.length===4?c=t.getTypeInfo(`vec4${u}`):console.error(`GetDataValue: Invalid vector length ${d.length}`),new S(d,c,null)}return console.error(`GetDataValue: Unknown member ${f}`),null}return console.error(`GetDataValue: Type ${h} is not a struct`),null}}}r=r.postfix}let l=c.getTypeName();return l==="f32"?new I(new Float32Array(this.buffer,a,1),c,this):l==="i32"?new I(new Int32Array(this.buffer,a,1),c,this):l==="u32"?new I(new Uint32Array(this.buffer,a,1),c,this):l==="vec2f"?new S(new Float32Array(this.buffer,a,2),c,this):l==="vec3f"?new S(new Float32Array(this.buffer,a,3),c,this):l==="vec4f"?new S(new Float32Array(this.buffer,a,4),c,this):l==="vec2i"?new S(new Int32Array(this.buffer,a,2),c,this):l==="vec3i"?new S(new Int32Array(this.buffer,a,3),c,this):l==="vec4i"?new S(new Int32Array(this.buffer,a,4),c,this):l==="vec2u"?new S(new Uint32Array(this.buffer,a,2),c,this):l==="vec3u"?new S(new Uint32Array(this.buffer,a,3),c,this):l==="vec4u"?new S(new Uint32Array(this.buffer,a,4),c,this):c instanceof hs&&c.name==="atomic"?((s=c.format)===null||s===void 0?void 0:s.name)==="u32"?new I(new Uint32Array(this.buffer,a,1)[0],c.format,this):((i=c.format)===null||i===void 0?void 0:i.name)==="i32"?new I(new Int32Array(this.buffer,a,1)[0],c.format,this):(console.error(`GetDataValue: Invalid atomic format ${(o=c.format)===null||o===void 0?void 0:o.name}`),null):new jt(this.buffer,c,a,this)}toString(){let t="";if(this.typeInfo instanceof Bn)if(this.typeInfo.format.name==="f32"){let r=new Float32Array(this.buffer,this.offset);t=`[${r[0]}`;for(let n=1;n<r.length;++n)t+=`, ${r[n]}`}else if(this.typeInfo.format.name==="i32"){let r=new Int32Array(this.buffer,this.offset);t=`[${r[0]}`;for(let n=1;n<r.length;++n)t+=`, ${r[n]}`}else if(this.typeInfo.format.name==="u32"){let r=new Uint32Array(this.buffer,this.offset);t=`[${r[0]}`;for(let n=1;n<r.length;++n)t+=`, ${r[n]}`}else if(this.typeInfo.format.name==="vec2f"){let r=new Float32Array(this.buffer,this.offset);t=`[${r[0]}, ${r[1]}]`;for(let n=1;n<r.length/2;++n)t+=`, [${r[2*n]}, ${r[2*n+1]}]`}else if(this.typeInfo.format.name==="vec3f"){let r=new Float32Array(this.buffer,this.offset);t=`[${r[0]}, ${r[1]}, ${r[2]}]`;for(let n=4;n<r.length;n+=4)t+=`, [${r[n]}, ${r[n+1]}, ${r[n+2]}]`}else if(this.typeInfo.format.name==="vec4f"){let r=new Float32Array(this.buffer,this.offset);t=`[${r[0]}, ${r[1]}, ${r[2]}, ${r[3]}]`;for(let n=4;n<r.length;n+=4)t+=`, [${r[n]}, ${r[n+1]}, ${r[n+2]}, ${r[n+3]}]`}else t="[...]";else this.typeInfo instanceof Ln?t+="{...}":t="[...]";return t}},en=class extends pr{constructor(t,r,n,s){super(r,null),this.data=t,this.descriptor=n,this.view=s}clone(){return new en(this.data,this.typeInfo,this.descriptor,this.view)}get width(){var t,r;let n=this.descriptor.size;return n instanceof Array&&n.length>0?(t=n[0])!==null&&t!==void 0?t:0:n instanceof Object&&(r=n.width)!==null&&r!==void 0?r:0}get height(){var t,r;let n=this.descriptor.size;return n instanceof Array&&n.length>1?(t=n[1])!==null&&t!==void 0?t:0:n instanceof Object&&(r=n.height)!==null&&r!==void 0?r:0}get depthOrArrayLayers(){var t,r;let n=this.descriptor.size;return n instanceof Array&&n.length>2?(t=n[2])!==null&&t!==void 0?t:0:n instanceof Object&&(r=n.depthOrArrayLayers)!==null&&r!==void 0?r:0}get format(){var t;return this.descriptor&&(t=this.descriptor.format)!==null&&t!==void 0?t:"rgba8unorm"}get sampleCount(){var t;return this.descriptor&&(t=this.descriptor.sampleCount)!==null&&t!==void 0?t:1}get mipLevelCount(){var t;return this.descriptor&&(t=this.descriptor.mipLevelCount)!==null&&t!==void 0?t:1}get dimension(){var t;return this.descriptor&&(t=this.descriptor.dimension)!==null&&t!==void 0?t:"2d"}getMipLevelSize(t){if(t>=this.mipLevelCount)return[0,0,0];let r=[this.width,this.height,this.depthOrArrayLayers];for(let n=0;n<r.length;++n)r[n]=Math.max(1,r[n]>>t);return r}get texelByteSize(){let t=this.format,r=Ry[t];return r?r.isDepthStencil?4:r.bytesPerBlock:0}get bytesPerRow(){return this.width*this.texelByteSize}get isDepthStencil(){let t=this.format,r=Ry[t];return!!r&&r.isDepthStencil}getGpuSize(){let t=this.format,r=Ry[t],n=this.width;if(!t||n<=0||!r)return-1;let s=this.height,i=this.depthOrArrayLayers,o=this.dimension;return n/r.blockWidth*(o==="1d"?1:s/r.blockHeight)*r.bytesPerBlock*i}getPixel(t,r,n=0,s=0){let i=this.texelByteSize,o=this.bytesPerRow,a=this.height,c=this.data[s];return yW(new Uint8Array(c),t,r,n,s,a,o,i,this.format)}setPixel(t,r,n,s,i){let o=this.texelByteSize,a=this.bytesPerRow,c=this.height,l=this.data[s];(function(f,h,u,d,p,m,g,x,A,_){let y=d*(g>>=p)*(m>>=p)+u*g+h*x;switch(A){case"r8unorm":return void Mt(f,y,"8unorm",1,_);case"r8snorm":return void Mt(f,y,"8snorm",1,_);case"r8uint":return void Mt(f,y,"8uint",1,_);case"r8sint":return void Mt(f,y,"8sint",1,_);case"rg8unorm":return void Mt(f,y,"8unorm",2,_);case"rg8snorm":return void Mt(f,y,"8snorm",2,_);case"rg8uint":return void Mt(f,y,"8uint",2,_);case"rg8sint":return void Mt(f,y,"8sint",2,_);case"rgba8unorm-srgb":case"rgba8unorm":case"bgra8unorm-srgb":case"bgra8unorm":return void Mt(f,y,"8unorm",4,_);case"rgba8snorm":return void Mt(f,y,"8snorm",4,_);case"rgba8uint":return void Mt(f,y,"8uint",4,_);case"rgba8sint":return void Mt(f,y,"8sint",4,_);case"r16uint":return void Mt(f,y,"16uint",1,_);case"r16sint":return void Mt(f,y,"16sint",1,_);case"r16float":return void Mt(f,y,"16float",1,_);case"rg16uint":return void Mt(f,y,"16uint",2,_);case"rg16sint":return void Mt(f,y,"16sint",2,_);case"rg16float":return void Mt(f,y,"16float",2,_);case"rgba16uint":return void Mt(f,y,"16uint",4,_);case"rgba16sint":return void Mt(f,y,"16sint",4,_);case"rgba16float":return void Mt(f,y,"16float",4,_);case"r32uint":return void Mt(f,y,"32uint",1,_);case"r32sint":return void Mt(f,y,"32sint",1,_);case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return void Mt(f,y,"32float",1,_);case"rg32uint":return void Mt(f,y,"32uint",2,_);case"rg32sint":return void Mt(f,y,"32sint",2,_);case"rg32float":return void Mt(f,y,"32float",2,_);case"rgba32uint":return void Mt(f,y,"32uint",4,_);case"rgba32sint":return void Mt(f,y,"32sint",4,_);case"rgba32float":return void Mt(f,y,"32float",4,_);case"rg11b10ufloat":console.error("TODO: rg11b10ufloat not supported for writing")}})(new Uint8Array(l),t,r,n,s,c,a,o,this.format,i)}};(e=>{e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"})(L||(L={}));var O=class{constructor(t,r,n){this.name=t,this.type=r,this.rule=n}toString(){return this.name}},M=class{};N=M,M.none=new O("",L.reserved,""),M.eof=new O("EOF",L.token,""),M.reserved={asm:new O("asm",L.reserved,"asm"),bf16:new O("bf16",L.reserved,"bf16"),do:new O("do",L.reserved,"do"),enum:new O("enum",L.reserved,"enum"),f16:new O("f16",L.reserved,"f16"),f64:new O("f64",L.reserved,"f64"),handle:new O("handle",L.reserved,"handle"),i8:new O("i8",L.reserved,"i8"),i16:new O("i16",L.reserved,"i16"),i64:new O("i64",L.reserved,"i64"),mat:new O("mat",L.reserved,"mat"),premerge:new O("premerge",L.reserved,"premerge"),regardless:new O("regardless",L.reserved,"regardless"),typedef:new O("typedef",L.reserved,"typedef"),u8:new O("u8",L.reserved,"u8"),u16:new O("u16",L.reserved,"u16"),u64:new O("u64",L.reserved,"u64"),unless:new O("unless",L.reserved,"unless"),using:new O("using",L.reserved,"using"),vec:new O("vec",L.reserved,"vec"),void:new O("void",L.reserved,"void")},M.keywords={array:new O("array",L.keyword,"array"),atomic:new O("atomic",L.keyword,"atomic"),bool:new O("bool",L.keyword,"bool"),f32:new O("f32",L.keyword,"f32"),i32:new O("i32",L.keyword,"i32"),mat2x2:new O("mat2x2",L.keyword,"mat2x2"),mat2x3:new O("mat2x3",L.keyword,"mat2x3"),mat2x4:new O("mat2x4",L.keyword,"mat2x4"),mat3x2:new O("mat3x2",L.keyword,"mat3x2"),mat3x3:new O("mat3x3",L.keyword,"mat3x3"),mat3x4:new O("mat3x4",L.keyword,"mat3x4"),mat4x2:new O("mat4x2",L.keyword,"mat4x2"),mat4x3:new O("mat4x3",L.keyword,"mat4x3"),mat4x4:new O("mat4x4",L.keyword,"mat4x4"),ptr:new O("ptr",L.keyword,"ptr"),sampler:new O("sampler",L.keyword,"sampler"),sampler_comparison:new O("sampler_comparison",L.keyword,"sampler_comparison"),struct:new O("struct",L.keyword,"struct"),texture_1d:new O("texture_1d",L.keyword,"texture_1d"),texture_2d:new O("texture_2d",L.keyword,"texture_2d"),texture_2d_array:new O("texture_2d_array",L.keyword,"texture_2d_array"),texture_3d:new O("texture_3d",L.keyword,"texture_3d"),texture_cube:new O("texture_cube",L.keyword,"texture_cube"),texture_cube_array:new O("texture_cube_array",L.keyword,"texture_cube_array"),texture_multisampled_2d:new O("texture_multisampled_2d",L.keyword,"texture_multisampled_2d"),texture_storage_1d:new O("texture_storage_1d",L.keyword,"texture_storage_1d"),texture_storage_2d:new O("texture_storage_2d",L.keyword,"texture_storage_2d"),texture_storage_2d_array:new O("texture_storage_2d_array",L.keyword,"texture_storage_2d_array"),texture_storage_3d:new O("texture_storage_3d",L.keyword,"texture_storage_3d"),texture_depth_2d:new O("texture_depth_2d",L.keyword,"texture_depth_2d"),texture_depth_2d_array:new O("texture_depth_2d_array",L.keyword,"texture_depth_2d_array"),texture_depth_cube:new O("texture_depth_cube",L.keyword,"texture_depth_cube"),texture_depth_cube_array:new O("texture_depth_cube_array",L.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new O("texture_depth_multisampled_2d",L.keyword,"texture_depth_multisampled_2d"),texture_external:new O("texture_external",L.keyword,"texture_external"),u32:new O("u32",L.keyword,"u32"),vec2:new O("vec2",L.keyword,"vec2"),vec3:new O("vec3",L.keyword,"vec3"),vec4:new O("vec4",L.keyword,"vec4"),bitcast:new O("bitcast",L.keyword,"bitcast"),block:new O("block",L.keyword,"block"),break:new O("break",L.keyword,"break"),case:new O("case",L.keyword,"case"),continue:new O("continue",L.keyword,"continue"),continuing:new O("continuing",L.keyword,"continuing"),default:new O("default",L.keyword,"default"),diagnostic:new O("diagnostic",L.keyword,"diagnostic"),discard:new O("discard",L.keyword,"discard"),else:new O("else",L.keyword,"else"),enable:new O("enable",L.keyword,"enable"),fallthrough:new O("fallthrough",L.keyword,"fallthrough"),false:new O("false",L.keyword,"false"),fn:new O("fn",L.keyword,"fn"),for:new O("for",L.keyword,"for"),function:new O("function",L.keyword,"function"),if:new O("if",L.keyword,"if"),let:new O("let",L.keyword,"let"),const:new O("const",L.keyword,"const"),loop:new O("loop",L.keyword,"loop"),while:new O("while",L.keyword,"while"),private:new O("private",L.keyword,"private"),read:new O("read",L.keyword,"read"),read_write:new O("read_write",L.keyword,"read_write"),return:new O("return",L.keyword,"return"),requires:new O("requires",L.keyword,"requires"),storage:new O("storage",L.keyword,"storage"),switch:new O("switch",L.keyword,"switch"),true:new O("true",L.keyword,"true"),alias:new O("alias",L.keyword,"alias"),type:new O("type",L.keyword,"type"),uniform:new O("uniform",L.keyword,"uniform"),var:new O("var",L.keyword,"var"),override:new O("override",L.keyword,"override"),workgroup:new O("workgroup",L.keyword,"workgroup"),write:new O("write",L.keyword,"write"),r8unorm:new O("r8unorm",L.keyword,"r8unorm"),r8snorm:new O("r8snorm",L.keyword,"r8snorm"),r8uint:new O("r8uint",L.keyword,"r8uint"),r8sint:new O("r8sint",L.keyword,"r8sint"),r16uint:new O("r16uint",L.keyword,"r16uint"),r16sint:new O("r16sint",L.keyword,"r16sint"),r16float:new O("r16float",L.keyword,"r16float"),rg8unorm:new O("rg8unorm",L.keyword,"rg8unorm"),rg8snorm:new O("rg8snorm",L.keyword,"rg8snorm"),rg8uint:new O("rg8uint",L.keyword,"rg8uint"),rg8sint:new O("rg8sint",L.keyword,"rg8sint"),r32uint:new O("r32uint",L.keyword,"r32uint"),r32sint:new O("r32sint",L.keyword,"r32sint"),r32float:new O("r32float",L.keyword,"r32float"),rg16uint:new O("rg16uint",L.keyword,"rg16uint"),rg16sint:new O("rg16sint",L.keyword,"rg16sint"),rg16float:new O("rg16float",L.keyword,"rg16float"),rgba8unorm:new O("rgba8unorm",L.keyword,"rgba8unorm"),rgba8unorm_srgb:new O("rgba8unorm_srgb",L.keyword,"rgba8unorm_srgb"),rgba8snorm:new O("rgba8snorm",L.keyword,"rgba8snorm"),rgba8uint:new O("rgba8uint",L.keyword,"rgba8uint"),rgba8sint:new O("rgba8sint",L.keyword,"rgba8sint"),bgra8unorm:new O("bgra8unorm",L.keyword,"bgra8unorm"),bgra8unorm_srgb:new O("bgra8unorm_srgb",L.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new O("rgb10a2unorm",L.keyword,"rgb10a2unorm"),rg11b10float:new O("rg11b10float",L.keyword,"rg11b10float"),rg32uint:new O("rg32uint",L.keyword,"rg32uint"),rg32sint:new O("rg32sint",L.keyword,"rg32sint"),rg32float:new O("rg32float",L.keyword,"rg32float"),rgba16uint:new O("rgba16uint",L.keyword,"rgba16uint"),rgba16sint:new O("rgba16sint",L.keyword,"rgba16sint"),rgba16float:new O("rgba16float",L.keyword,"rgba16float"),rgba32uint:new O("rgba32uint",L.keyword,"rgba32uint"),rgba32sint:new O("rgba32sint",L.keyword,"rgba32sint"),rgba32float:new O("rgba32float",L.keyword,"rgba32float"),static_assert:new O("static_assert",L.keyword,"static_assert")},M.tokens={decimal_float_literal:new O("decimal_float_literal",L.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new O("hex_float_literal",L.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+[fh]?))/),int_literal:new O("int_literal",L.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new O("uint_literal",L.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new O("name",L.token,/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/u),ident:new O("ident",L.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new O("and",L.token,"&"),and_and:new O("and_and",L.token,"&&"),arrow:new O("arrow ",L.token,"->"),attr:new O("attr",L.token,"@"),forward_slash:new O("forward_slash",L.token,"/"),bang:new O("bang",L.token,"!"),bracket_left:new O("bracket_left",L.token,"["),bracket_right:new O("bracket_right",L.token,"]"),brace_left:new O("brace_left",L.token,"{"),brace_right:new O("brace_right",L.token,"}"),colon:new O("colon",L.token,":"),comma:new O("comma",L.token,","),equal:new O("equal",L.token,"="),equal_equal:new O("equal_equal",L.token,"=="),not_equal:new O("not_equal",L.token,"!="),greater_than:new O("greater_than",L.token,">"),greater_than_equal:new O("greater_than_equal",L.token,">="),shift_right:new O("shift_right",L.token,">>"),less_than:new O("less_than",L.token,"<"),less_than_equal:new O("less_than_equal",L.token,"<="),shift_left:new O("shift_left",L.token,"<<"),modulo:new O("modulo",L.token,"%"),minus:new O("minus",L.token,"-"),minus_minus:new O("minus_minus",L.token,"--"),period:new O("period",L.token,"."),plus:new O("plus",L.token,"+"),plus_plus:new O("plus_plus",L.token,"++"),or:new O("or",L.token,"|"),or_or:new O("or_or",L.token,"||"),paren_left:new O("paren_left",L.token,"("),paren_right:new O("paren_right",L.token,")"),semicolon:new O("semicolon",L.token,";"),star:new O("star",L.token,"*"),tilde:new O("tilde",L.token,"~"),underscore:new O("underscore",L.token,"_"),xor:new O("xor",L.token,"^"),plus_equal:new O("plus_equal",L.token,"+="),minus_equal:new O("minus_equal",L.token,"-="),times_equal:new O("times_equal",L.token,"*="),division_equal:new O("division_equal",L.token,"/="),modulo_equal:new O("modulo_equal",L.token,"%="),and_equal:new O("and_equal",L.token,"&="),or_equal:new O("or_equal",L.token,"|="),xor_equal:new O("xor_equal",L.token,"^="),shift_right_equal:new O("shift_right_equal",L.token,">>="),shift_left_equal:new O("shift_left_equal",L.token,"<<=")},M.simpleTokens={"@":N.tokens.attr,"{":N.tokens.brace_left,"}":N.tokens.brace_right,":":N.tokens.colon,",":N.tokens.comma,"(":N.tokens.paren_left,")":N.tokens.paren_right,";":N.tokens.semicolon},M.literalTokens={"&":N.tokens.and,"&&":N.tokens.and_and,"->":N.tokens.arrow,"/":N.tokens.forward_slash,"!":N.tokens.bang,"[":N.tokens.bracket_left,"]":N.tokens.bracket_right,"=":N.tokens.equal,"==":N.tokens.equal_equal,"!=":N.tokens.not_equal,">":N.tokens.greater_than,">=":N.tokens.greater_than_equal,">>":N.tokens.shift_right,"<":N.tokens.less_than,"<=":N.tokens.less_than_equal,"<<":N.tokens.shift_left,"%":N.tokens.modulo,"-":N.tokens.minus,"--":N.tokens.minus_minus,".":N.tokens.period,"+":N.tokens.plus,"++":N.tokens.plus_plus,"|":N.tokens.or,"||":N.tokens.or_or,"*":N.tokens.star,"~":N.tokens.tilde,_:N.tokens.underscore,"^":N.tokens.xor,"+=":N.tokens.plus_equal,"-=":N.tokens.minus_equal,"*=":N.tokens.times_equal,"/=":N.tokens.division_equal,"%=":N.tokens.modulo_equal,"&=":N.tokens.and_equal,"|=":N.tokens.or_equal,"^=":N.tokens.xor_equal,">>=":N.tokens.shift_right_equal,"<<=":N.tokens.shift_left_equal},M.regexTokens={decimal_float_literal:N.tokens.decimal_float_literal,hex_float_literal:N.tokens.hex_float_literal,int_literal:N.tokens.int_literal,uint_literal:N.tokens.uint_literal,ident:N.tokens.ident},M.storage_class=[N.keywords.function,N.keywords.private,N.keywords.workgroup,N.keywords.uniform,N.keywords.storage],M.access_mode=[N.keywords.read,N.keywords.write,N.keywords.read_write],M.sampler_type=[N.keywords.sampler,N.keywords.sampler_comparison],M.sampled_texture_type=[N.keywords.texture_1d,N.keywords.texture_2d,N.keywords.texture_2d_array,N.keywords.texture_3d,N.keywords.texture_cube,N.keywords.texture_cube_array],M.multisampled_texture_type=[N.keywords.texture_multisampled_2d],M.storage_texture_type=[N.keywords.texture_storage_1d,N.keywords.texture_storage_2d,N.keywords.texture_storage_2d_array,N.keywords.texture_storage_3d],M.depth_texture_type=[N.keywords.texture_depth_2d,N.keywords.texture_depth_2d_array,N.keywords.texture_depth_cube,N.keywords.texture_depth_cube_array,N.keywords.texture_depth_multisampled_2d],M.texture_external_type=[N.keywords.texture_external],M.any_texture_type=[...N.sampled_texture_type,...N.multisampled_texture_type,...N.storage_texture_type,...N.depth_texture_type,...N.texture_external_type],M.texel_format=[N.keywords.r8unorm,N.keywords.r8snorm,N.keywords.r8uint,N.keywords.r8sint,N.keywords.r16uint,N.keywords.r16sint,N.keywords.r16float,N.keywords.rg8unorm,N.keywords.rg8snorm,N.keywords.rg8uint,N.keywords.rg8sint,N.keywords.r32uint,N.keywords.r32sint,N.keywords.r32float,N.keywords.rg16uint,N.keywords.rg16sint,N.keywords.rg16float,N.keywords.rgba8unorm,N.keywords.rgba8unorm_srgb,N.keywords.rgba8snorm,N.keywords.rgba8uint,N.keywords.rgba8sint,N.keywords.bgra8unorm,N.keywords.bgra8unorm_srgb,N.keywords.rgb10a2unorm,N.keywords.rg11b10float,N.keywords.rg32uint,N.keywords.rg32sint,N.keywords.rg32float,N.keywords.rgba16uint,N.keywords.rgba16sint,N.keywords.rgba16float,N.keywords.rgba32uint,N.keywords.rgba32sint,N.keywords.rgba32float],M.const_literal=[N.tokens.int_literal,N.tokens.uint_literal,N.tokens.decimal_float_literal,N.tokens.hex_float_literal,N.keywords.true,N.keywords.false],M.literal_or_ident=[N.tokens.ident,N.tokens.int_literal,N.tokens.uint_literal,N.tokens.decimal_float_literal,N.tokens.hex_float_literal,N.tokens.name],M.element_count_expression=[N.tokens.int_literal,N.tokens.uint_literal,N.tokens.ident],M.template_types=[N.keywords.vec2,N.keywords.vec3,N.keywords.vec4,N.keywords.mat2x2,N.keywords.mat2x3,N.keywords.mat2x4,N.keywords.mat3x2,N.keywords.mat3x3,N.keywords.mat3x4,N.keywords.mat4x2,N.keywords.mat4x3,N.keywords.mat4x4,N.keywords.atomic,N.keywords.bitcast,...N.any_texture_type],M.attribute_name=[N.tokens.ident,N.keywords.block,N.keywords.diagnostic],M.assignment_operators=[N.tokens.equal,N.tokens.plus_equal,N.tokens.minus_equal,N.tokens.times_equal,N.tokens.division_equal,N.tokens.modulo_equal,N.tokens.and_equal,N.tokens.or_equal,N.tokens.xor_equal,N.tokens.shift_right_equal,N.tokens.shift_left_equal],M.increment_operators=[N.tokens.plus_plus,N.tokens.minus_minus];var Jp=class{constructor(t,r,n,s,i){this.type=t,this.lexeme=r,this.line=n,this.start=s,this.end=i}toString(){return this.lexeme}isTemplateType(){return M.template_types.indexOf(this.type)!=-1}isArrayType(){return this.type==M.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}},Gy=class{constructor(t){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=t??""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new Jp(M.eof,"",this._line,this._current,this._current)),this._tokens}scanToken(){let t=this._advance();if(t==`
`)return this._line++,!0;if(this._isWhitespace(t))return!0;if(t=="/"){if(this._peekAhead()=="/"){for(;t!=`
`;){if(this._isAtEnd())return!0;t=this._advance()}return this._line++,!0}if(this._peekAhead()=="*"){this._advance();let o=1;for(;o>0;){if(this._isAtEnd())return!0;if(t=this._advance(),t==`
`)this._line++;else if(t=="*"){if(this._peekAhead()=="/"&&(this._advance(),o--,o==0))return!0}else t=="/"&&this._peekAhead()=="*"&&(this._advance(),o++)}return!0}}let r=M.simpleTokens[t];if(r)return this._addToken(r),!0;let n=M.none,s=this._isAlpha(t),i=t==="_";if(this._isAlphaNumeric(t)){let o=this._peekAhead();for(;this._isAlphaNumeric(o);)t+=this._advance(),o=this._peekAhead()}if(s){let o=M.keywords[t];if(o)return this._addToken(o),!0}if(s||i)return this._addToken(M.tokens.ident),!0;for(;;){let o=this._findType(t),a=this._peekAhead();if(t=="-"&&this._tokens.length>0){if(a=="=")return this._current++,t+=a,this._addToken(M.tokens.minus_equal),!0;if(a=="-")return this._current++,t+=a,this._addToken(M.tokens.minus_minus),!0;let c=this._tokens.length-1;if((M.literal_or_ident.indexOf(this._tokens[c].type)!=-1||this._tokens[c].type==M.tokens.paren_right)&&a!=">")return this._addToken(o),!0}if(t==">"&&(a==">"||a=="=")){let c=!1,l=this._tokens.length-1;for(let f=0;f<5&&l>=0&&M.assignment_operators.indexOf(this._tokens[l].type)===-1;++f,--l)if(this._tokens[l].type===M.tokens.less_than){l>0&&this._tokens[l-1].isArrayOrTemplateType()&&(c=!0);break}if(c)return this._addToken(o),!0}if(o===M.none){let c=t,l=0,f=2;for(let h=0;h<f;++h)if(c+=this._peekAhead(h),o=this._findType(c),o!==M.none){l=h;break}if(o===M.none)return n!==M.none&&(this._current--,this._addToken(n),!0);t=c,this._current+=l+1}if(n=o,this._isAtEnd())break;t+=this._advance()}return n!==M.none&&(this._addToken(n),!0)}_findType(t){for(let n in M.regexTokens){let s=M.regexTokens[n];if(this._match(t,s.rule))return s}return M.literalTokens[t]||M.none}_match(t,r){let n=r.exec(t);return n&&n.index==0&&n[0]==t}_isAtEnd(){return this._current>=this._source.length}_isAlpha(t){return!this._isNumeric(t)&&!this._isWhitespace(t)&&t!=="_"&&t!=="."&&t!=="("&&t!==")"&&t!=="["&&t!=="]"&&t!=="{"&&t!=="}"&&t!==","&&t!==";"&&t!==":"&&t!=="="&&t!=="!"&&t!=="<"&&t!==">"&&t!=="+"&&t!=="-"&&t!=="*"&&t!=="/"&&t!=="%"&&t!=="&"&&t!=="|"&&t!=="^"&&t!=="~"&&t!=="@"&&t!=="#"&&t!=="?"&&t!=="'"&&t!=="`"&&t!=='"'&&t!=="\\"&&t!==`
`&&t!=="\r"&&t!=="	"&&t!=="\0"}_isNumeric(t){return t>="0"&&t<="9"}_isAlphaNumeric(t){return this._isAlpha(t)||this._isNumeric(t)||t==="_"}_isWhitespace(t){return t==" "||t=="	"||t=="\r"}_advance(t=0){let r=this._source[this._current];return t=t||0,t++,this._current+=t,r}_peekAhead(t=0){return t=t||0,this._current+t>=this._source.length?"\0":this._source[this._current+t]}_addToken(t){let r=this._source.substring(this._start,this._current);this._tokens.push(new Jp(t,r,this._line,this._start,this._current))}};function X(e){return Array.isArray(e)||e?.buffer instanceof ArrayBuffer}var Qp=new Float32Array(1),bW=new Uint32Array(Qp.buffer),TW=new Uint32Array(Qp.buffer),tm=new Int32Array(1),vW=new Float32Array(tm.buffer),EW=new Uint32Array(tm.buffer),em=new Uint32Array(1),MW=new Float32Array(em.buffer),SW=new Int32Array(em.buffer);function vS(e,t,r){if(t===r)return e;if(t==="f32"){if(r==="i32"||r==="x32")return Qp[0]=e,bW[0];if(r==="u32")return Qp[0]=e,TW[0]}else if(t==="i32"||t==="x32"){if(r==="f32")return tm[0]=e,vW[0];if(r==="u32")return tm[0]=e,EW[0]}else if(t==="u32"){if(r==="f32")return em[0]=e,MW[0];if(r==="i32"||r==="x32")return em[0]=e,SW[0]}return console.error(`Unsupported cast from ${t} to ${r}`),e}var jy=class{constructor(t){this.resources=null,this.inUse=!1,this.info=null,this.node=t}},Ha=class{constructor(t,r){this.align=t,this.size=r}},kr=class{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new ky,this.functions=[],this._types=new Map,this._functions=new Map}_isStorageTexture(t){return t.name=="texture_storage_1d"||t.name=="texture_storage_2d"||t.name=="texture_storage_2d_array"||t.name=="texture_storage_3d"}updateAST(t){for(let r of t)r instanceof ho&&this._functions.set(r.name,new jy(r));for(let r of t)if(r instanceof tn){let n=this.getTypeInfo(r,null);n instanceof Ln&&this.structs.push(n)}for(let r of t)if(r instanceof Mf)this.aliases.push(this._getAliasInfo(r));else{if(r instanceof vf){let n=r,s=this._getAttributeNum(n.attributes,"id",0),i=n.type!=null?this.getTypeInfo(n.type,n.attributes):null;this.overrides.push(new Ny(n.name,i,n.attributes,s));continue}if(this._isUniformVar(r)){let n=r,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),o=this.getTypeInfo(n.type,n.attributes),a=new Va(n.name,o,s,i,n.attributes,ri.Uniform,n.access);a.access||(a.access="read"),this.uniforms.push(a);continue}if(this._isStorageVar(r)){let n=r,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),o=this.getTypeInfo(n.type,n.attributes),a=this._isStorageTexture(o),c=new Va(n.name,o,s,i,n.attributes,a?ri.StorageTexture:ri.Storage,n.access);c.access||(c.access="read"),this.storage.push(c);continue}if(this._isTextureVar(r)){let n=r,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),o=this.getTypeInfo(n.type,n.attributes),a=this._isStorageTexture(o),c=new Va(n.name,o,s,i,n.attributes,a?ri.StorageTexture:ri.Texture,n.access);c.access||(c.access="read"),a?this.storage.push(c):this.textures.push(c);continue}if(this._isSamplerVar(r)){let n=r,s=this._getAttributeNum(n.attributes,"group",0),i=this._getAttributeNum(n.attributes,"binding",0),o=this.getTypeInfo(n.type,n.attributes),a=new Va(n.name,o,s,i,n.attributes,ri.Sampler,n.access);this.samplers.push(a);continue}}for(let r of t)if(r instanceof ho){let n=this._getAttribute(r,"vertex"),s=this._getAttribute(r,"fragment"),i=this._getAttribute(r,"compute"),o=n||s||i,a=new Dy(r.name,o?.name,r.attributes);a.attributes=r.attributes,a.startLine=r.startLine,a.endLine=r.endLine,this.functions.push(a),this._functions.get(r.name).info=a,o&&(this._functions.get(r.name).inUse=!0,a.inUse=!0,a.resources=this._findResources(r,!!o),a.inputs=this._getInputs(r.args),a.outputs=this._getOutputs(r.returnType),this.entry[o.name].push(a)),a.arguments=r.args.map(c=>new Fy(c.name,this.getTypeInfo(c.type,c.attributes),c.attributes)),a.returnType=r.returnType?this.getTypeInfo(r.returnType,r.attributes):null;continue}for(let r of this._functions.values())r.info&&(r.info.inUse=r.inUse,this._addCalls(r.node,r.info.calls));for(let r of this._functions.values())r.node.search(n=>{var s,i,o;if(n instanceof Zp){if(n.value)if(X(n.value))for(let a of n.value)for(let c of this.overrides)a===c.name&&((s=r.info)===null||s===void 0||s.overrides.push(c));else for(let a of this.overrides)n.value===a.name&&((i=r.info)===null||i===void 0||i.overrides.push(a))}else if(n instanceof rr)for(let a of this.overrides)n.name===a.name&&((o=r.info)===null||o===void 0||o.overrides.push(a))});for(let r of this.uniforms)this._markStructsInUse(r.type);for(let r of this.storage)this._markStructsInUse(r.type)}getFunctionInfo(t){for(let r of this.functions)if(r.name==t)return r;return null}getStructInfo(t){for(let r of this.structs)if(r.name==t)return r;return null}getOverrideInfo(t){for(let r of this.overrides)if(r.name==t)return r;return null}_markStructsInUse(t){if(t)if(t.isStruct){if(t.inUse=!0,t.members)for(let r of t.members)this._markStructsInUse(r.type)}else if(t.isArray)this._markStructsInUse(t.format);else if(t.isTemplate)t.format&&this._markStructsInUse(t.format);else{let r=this._getAlias(t.name);r&&this._markStructsInUse(r)}}_addCalls(t,r){var n;for(let s of t.calls){let i=(n=this._functions.get(s.name))===null||n===void 0?void 0:n.info;i&&r.add(i)}}findResource(t,r,n){if(n){for(let s of this.entry.compute)if(s.name===n){for(let i of s.resources)if(i.group==t&&i.binding==r)return i}for(let s of this.entry.vertex)if(s.name===n){for(let i of s.resources)if(i.group==t&&i.binding==r)return i}for(let s of this.entry.fragment)if(s.name===n){for(let i of s.resources)if(i.group==t&&i.binding==r)return i}}for(let s of this.uniforms)if(s.group==t&&s.binding==r)return s;for(let s of this.storage)if(s.group==t&&s.binding==r)return s;for(let s of this.textures)if(s.group==t&&s.binding==r)return s;for(let s of this.samplers)if(s.group==t&&s.binding==r)return s;return null}_findResource(t){for(let r of this.uniforms)if(r.name==t)return r;for(let r of this.storage)if(r.name==t)return r;for(let r of this.textures)if(r.name==t)return r;for(let r of this.samplers)if(r.name==t)return r;return null}_markStructsFromAST(t){let r=this.getTypeInfo(t,null);this._markStructsInUse(r)}_findResources(t,r){let n=[],s=this,i=[];return t.search(o=>{if(o instanceof Xa)i.push({});else if(o instanceof Ya)i.pop();else if(o instanceof rn){let a=o;r&&a.type!==null&&this._markStructsFromAST(a.type),i.length>0&&(i[i.length-1][a.name]=a)}else if(o instanceof Dr){let a=o;r&&a.type!==null&&this._markStructsFromAST(a.type)}else if(o instanceof lo){let a=o;r&&a.type!==null&&this._markStructsFromAST(a.type),i.length>0&&(i[i.length-1][a.name]=a)}else if(o instanceof rr){let a=o;if(i.length>0&&i[i.length-1][a.name])return;let c=s._findResource(a.name);c&&n.push(c)}else if(o instanceof Sf){let a=o,c=s._functions.get(a.name);c&&(r&&(c.inUse=!0),t.calls.add(c.node),c.resources===null&&(c.resources=s._findResources(c.node,r)),n.push(...c.resources))}else if(o instanceof Ef){let a=o,c=s._functions.get(a.name);c&&(r&&(c.inUse=!0),t.calls.add(c.node),c.resources===null&&(c.resources=s._findResources(c.node,r)),n.push(...c.resources))}}),[...new Map(n.map(o=>[o.name,o])).values()]}getBindGroups(){let t=[];function r(n,s){n>=t.length&&(t.length=n+1),t[n]===void 0&&(t[n]=[]),s>=t[n].length&&(t[n].length=s+1)}for(let n of this.uniforms)r(n.group,n.binding),t[n.group][n.binding]=n;for(let n of this.storage)r(n.group,n.binding),t[n.group][n.binding]=n;for(let n of this.textures)r(n.group,n.binding),t[n.group][n.binding]=n;for(let n of this.samplers)r(n.group,n.binding),t[n.group][n.binding]=n;return t}_getOutputs(t,r=void 0){if(r===void 0&&(r=[]),t instanceof tn)this._getStructOutputs(t,r);else{let n=this._getOutputInfo(t);n!==null&&r.push(n)}return r}_getStructOutputs(t,r){for(let n of t.members)if(n.type instanceof tn)this._getStructOutputs(n.type,r);else{let s=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(s!==null){let i=this.getTypeInfo(n.type,n.type.attributes),o=this._parseInt(s.value),a=new Ip(n.name,i,s.name,o);r.push(a)}}}_getOutputInfo(t){let r=this._getAttribute(t,"location")||this._getAttribute(t,"builtin");if(r!==null){let n=this.getTypeInfo(t,t.attributes),s=this._parseInt(r.value);return new Ip("",n,r.name,s)}return null}_getInputs(t,r=void 0){r===void 0&&(r=[]);for(let n of t)if(n.type instanceof tn)this._getStructInputs(n.type,r);else{let s=this._getInputInfo(n);s!==null&&r.push(s)}return r}_getStructInputs(t,r){for(let n of t.members)if(n.type instanceof tn)this._getStructInputs(n.type,r);else{let s=this._getInputInfo(n);s!==null&&r.push(s)}}_getInputInfo(t){let r=this._getAttribute(t,"location")||this._getAttribute(t,"builtin");if(r!==null){let n=this._getAttribute(t,"interpolation"),s=this.getTypeInfo(t.type,t.attributes),i=this._parseInt(r.value),o=new By(t.name,s,r.name,i);return n!==null&&(o.interpolation=this._parseString(n.value)),o}return null}_parseString(t){return t instanceof Array&&(t=t[0]),t}_parseInt(t){t instanceof Array&&(t=t[0]);let r=parseInt(t);return isNaN(r)?t:r}_getAlias(t){for(let r of this.aliases)if(r.name==t)return r.type;return null}_getAliasInfo(t){return new Ly(t.name,this.getTypeInfo(t.type,null))}getTypeInfoByName(t){for(let r of this.structs)if(r.name==t)return r;for(let r of this.aliases)if(r.name==t)return r.type;return null}getTypeInfo(t,r=null){if(this._types.has(t))return this._types.get(t);if(t instanceof ja){let s=t.type?this.getTypeInfo(t.type,t.attributes):null,i=new bf(t.name,s,r);return this._types.set(t,i),this._updateTypeInfo(i),i}if(t instanceof fo){let s=t,i=s.format?this.getTypeInfo(s.format,s.attributes):null,o=new Bn(s.name,r);return o.format=i,o.count=s.count,this._types.set(t,o),this._updateTypeInfo(o),o}if(t instanceof tn){let s=t,i=new Ln(s.name,r);i.startLine=s.startLine,i.endLine=s.endLine;for(let o of s.members){let a=this.getTypeInfo(o.type,o.attributes);i.members.push(new Pp(o.name,a,o.attributes))}return this._types.set(t,i),this._updateTypeInfo(i),i}if(t instanceof co){let s=t,i=s.format instanceof z,o=s.format?i?this.getTypeInfo(s.format,null):new ur(s.format,null):null,a=new hs(s.name,o,r,s.access);return this._types.set(t,a),this._updateTypeInfo(a),a}if(t instanceof B){let s=t,i=s.format?this.getTypeInfo(s.format,null):null,o=new hs(s.name,i,r,s.access);return this._types.set(t,o),this._updateTypeInfo(o),o}let n=new ur(t.name,r);return this._types.set(t,n),this._updateTypeInfo(n),n}_updateTypeInfo(t){var r,n,s;let i=this._getTypeSize(t);if(t.size=(r=i?.size)!==null&&r!==void 0?r:0,t instanceof Bn&&t.format){let o=this._getTypeSize(t.format);t.stride=Math.max((n=o?.size)!==null&&n!==void 0?n:0,(s=o?.align)!==null&&s!==void 0?s:0),this._updateTypeInfo(t.format)}t instanceof bf&&this._updateTypeInfo(t.format),t instanceof Ln&&this._updateStructInfo(t)}_updateStructInfo(t){var r;let n=0,s=0,i=0,o=0;for(let a=0,c=t.members.length;a<c;++a){let l=t.members[a],f=this._getTypeSize(l);if(!f)continue;(r=this._getAlias(l.type.name))!==null&&r!==void 0||l.type;let h=f.align,u=f.size;n=this._roundUp(h,n+s),s=u,i=n,o=Math.max(o,h),l.offset=n,l.size=u,this._updateTypeInfo(l.type)}t.size=this._roundUp(o,i+s),t.align=o}_getTypeSize(t){var r,n;if(t==null)return null;let s=this._getAttributeNum(t.attributes,"size",0),i=this._getAttributeNum(t.attributes,"align",0);if(t instanceof Pp&&(t=t.type),t instanceof ur){let o=this._getAlias(t.name);o!==null&&(t=o)}{let o=kr._typeInfo[t.name];if(o!==void 0){let a=((r=t.format)===null||r===void 0?void 0:r.name)==="f16"?2:1;return new Ha(Math.max(i,o.align/a),Math.max(s,o.size/a))}}{let o=kr._typeInfo[t.name.substring(0,t.name.length-1)];if(o){let a=t.name[t.name.length-1]==="h"?2:1;return new Ha(Math.max(i,o.align/a),Math.max(s,o.size/a))}}if(t instanceof Bn){let o=t,a=8,c=8,l=this._getTypeSize(o.format);return l!==null&&(c=l.size,a=l.align),c=o.count*this._getAttributeNum((n=t?.attributes)!==null&&n!==void 0?n:null,"stride",this._roundUp(a,c)),s&&(c=s),new Ha(Math.max(i,a),Math.max(s,c))}if(t instanceof Ln){let o=0,a=0,c=0,l=0,f=0;for(let h of t.members){let u=this._getTypeSize(h.type);u!==null&&(o=Math.max(u.align,o),c=this._roundUp(u.align,c+l),l=u.size,f=c)}return a=this._roundUp(o,f+l),new Ha(Math.max(i,o),Math.max(s,a))}return null}_isUniformVar(t){return t instanceof rn&&t.storage=="uniform"}_isStorageVar(t){return t instanceof rn&&t.storage=="storage"}_isTextureVar(t){return t instanceof rn&&t.type!==null&&kr._textureTypes.indexOf(t.type.name)!=-1}_isSamplerVar(t){return t instanceof rn&&t.type!==null&&kr._samplerTypes.indexOf(t.type.name)!=-1}_getAttribute(t,r){let n=t;if(!n||!n.attributes)return null;let s=n.attributes;for(let i of s)if(i.name==r)return i;return null}_getAttributeNum(t,r,n){if(t===null)return n;for(let s of t)if(s.name==r){let i=s!==null&&s.value!==null?s.value:n;return i instanceof Array&&(i=i[0]),typeof i=="number"?i:typeof i=="string"?parseInt(i):n}return n}_roundUp(t,r){return Math.ceil(r/t)*t}};kr._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},kr._textureTypes=M.any_texture_type.map(e=>e.name),kr._samplerTypes=M.sampler_type.map(e=>e.name);var Zy=0,Cf=class{constructor(t,r,n){this.id=Zy++,this.name=t,this.value=r,this.node=n}clone(){return new Cf(this.name,this.value,this.node)}},Pf=class{constructor(t){this.id=Zy++,this.name=t.name,this.node=t}clone(){return new Pf(this.node)}},If=class{constructor(t){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName="",this.id=Zy++,t&&(this.parent=t,this.currentFunctionName=t.currentFunctionName)}getVariable(t){var r;return this.variables.has(t)?(r=this.variables.get(t))!==null&&r!==void 0?r:null:this.parent?this.parent.getVariable(t):null}getFunction(t){var r;return this.functions.has(t)?(r=this.functions.get(t))!==null&&r!==void 0?r:null:this.parent?this.parent.getFunction(t):null}createVariable(t,r,n){this.variables.set(t,new Cf(t,r,n??null))}setVariable(t,r,n){let s=this.getVariable(t);s!==null?s.value=r:this.createVariable(t,r,n)}getVariableValue(t){var r;let n=this.getVariable(t);return(r=n?.value)!==null&&r!==void 0?r:null}clone(){return new If(this)}},qy=class{evalExpression(t,r){return null}getTypeInfo(t){return null}getVariableName(t,r){return""}},Xy=class{constructor(t){this.exec=t}getTypeInfo(t){return this.exec.getTypeInfo(t)}All(t,r){let n=this.exec.evalExpression(t.args[0],r),s=!0;if(n instanceof S)return n.data.forEach(i=>{i||(s=!1)}),new I(s?1:0,this.getTypeInfo("bool"));throw new Error(`All() expects a vector argument. Line ${t.line}`)}Any(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S){let s=n.data.some(i=>i);return new I(s?1:0,this.getTypeInfo("bool"))}throw new Error(`Any() expects a vector argument. Line ${t.line}`)}Select(t,r){let n=this.exec.evalExpression(t.args[2],r);if(!(n instanceof I))throw new Error(`Select() expects a bool condition. Line ${t.line}`);return n.value?this.exec.evalExpression(t.args[1],r):this.exec.evalExpression(t.args[0],r)}ArrayLength(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.evalExpression(n,r);if(s instanceof jt&&s.typeInfo.size===0){let i=s.typeInfo,o=s.buffer.byteLength/i.stride;return new I(o,this.getTypeInfo("u32"))}return new I(s.typeInfo.size,this.getTypeInfo("u32"))}Abs(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.abs(i)),n.typeInfo);let s=n;return new I(Math.abs(s.value),s.typeInfo)}Acos(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.acos(i)),n.typeInfo);let s=n;return new I(Math.acos(s.value),n.typeInfo)}Acosh(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.acosh(i)),n.typeInfo);let s=n;return new I(Math.acosh(s.value),n.typeInfo)}Asin(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.asin(i)),n.typeInfo);let s=n;return new I(Math.asin(s.value),n.typeInfo)}Asinh(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.asinh(i)),n.typeInfo);let s=n;return new I(Math.asinh(s.value),n.typeInfo)}Atan(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.atan(i)),n.typeInfo);let s=n;return new I(Math.atan(s.value),n.typeInfo)}Atanh(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.atanh(i)),n.typeInfo);let s=n;return new I(Math.atanh(s.value),n.typeInfo)}Atan2(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S)return new S(n.data.map((a,c)=>Math.atan2(a,s.data[c])),n.typeInfo);let i=n,o=s;return new I(Math.atan2(i.value,o.value),n.typeInfo)}Ceil(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.ceil(i)),n.typeInfo);let s=n;return new I(Math.ceil(s.value),n.typeInfo)}_clamp(t,r,n){return Math.min(Math.max(t,r),n)}Clamp(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r);if(n instanceof S&&s instanceof S&&i instanceof S)return new S(n.data.map((l,f)=>this._clamp(l,s.data[f],i.data[f])),n.typeInfo);let o=n,a=s,c=i;return new I(this._clamp(o.value,a.value,c.value),n.typeInfo)}Cos(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.cos(i)),n.typeInfo);let s=n;return new I(Math.cos(s.value),n.typeInfo)}Cosh(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.cosh(i)),n.typeInfo);let s=n;return new I(Math.cos(s.value),n.typeInfo)}CountLeadingZeros(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.clz32(i)),n.typeInfo);let s=n;return new I(Math.clz32(s.value),n.typeInfo)}_countOneBits(t){let r=0;for(;t!==0;)1&t&&r++,t>>=1;return r}CountOneBits(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>this._countOneBits(i)),n.typeInfo);let s=n;return new I(this._countOneBits(s.value),n.typeInfo)}_countTrailingZeros(t){if(t===0)return 32;let r=0;for(;!(1&t);)t>>=1,r++;return r}CountTrailingZeros(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>this._countTrailingZeros(i)),n.typeInfo);let s=n;return new I(this._countTrailingZeros(s.value),n.typeInfo)}Cross(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S){if(n.data.length!==3||s.data.length!==3)return console.error(`Cross() expects 3D vectors. Line ${t.line}`),null;let i=n.data,o=s.data;return new S([i[1]*o[2]-o[1]*i[2],i[2]*o[0]-o[2]*i[0],i[0]*o[1]-o[0]*i[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${t.line}`),null}Degrees(t,r){let n=this.exec.evalExpression(t.args[0],r),s=180/Math.PI;return n instanceof S?new S(n.data.map(i=>i*s),n.typeInfo):new I(n.value*s,this.getTypeInfo("f32"))}Determinant(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof Q){let s=n.data,i=n.typeInfo.getTypeName(),o=i.endsWith("h")?this.getTypeInfo("f16"):this.getTypeInfo("f32");if(i==="mat2x2"||i==="mat2x2f"||i==="mat2x2h")return new I(s[0]*s[3]-s[1]*s[2],o);if(i==="mat2x3"||i==="mat2x3f"||i==="mat2x3h")return new I(s[0]*(s[4]*s[8]-s[5]*s[7])-s[1]*(s[3]*s[8]-s[5]*s[6])+s[2]*(s[3]*s[7]-s[4]*s[6]),o);if(i==="mat2x4"||i==="mat2x4f"||i==="mat2x4h")console.error(`TODO: Determinant for ${i}`);else if(i==="mat3x2"||i==="mat3x2f"||i==="mat3x2h")console.error(`TODO: Determinant for ${i}`);else{if(i==="mat3x3"||i==="mat3x3f"||i==="mat3x3h")return new I(s[0]*(s[4]*s[8]-s[5]*s[7])-s[1]*(s[3]*s[8]-s[5]*s[6])+s[2]*(s[3]*s[7]-s[4]*s[6]),o);i==="mat3x4"||i==="mat3x4f"||i==="mat3x4h"||i==="mat4x2"||i==="mat4x2f"||i==="mat4x2h"||i==="mat4x3"||i==="mat4x3f"||i==="mat4x3h"?console.error(`TODO: Determinant for ${i}`):i!=="mat4x4"&&i!=="mat4x4f"&&i!=="mat4x4h"||console.error(`TODO: Determinant for ${i}`)}}return console.error(`Determinant expects a matrix argument. Line ${t.line}`),null}Distance(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S){let a=0;for(let c=0;c<n.data.length;++c)a+=(n.data[c]-s.data[c])*(n.data[c]-s.data[c]);return new I(Math.sqrt(a),this.getTypeInfo("f32"))}let i=n,o=s;return new I(Math.abs(i.value-o.value),n.typeInfo)}_dot(t,r){let n=0;for(let s=0;s<t.length;++s)n+=r[s]*t[s];return n}Dot(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);return n instanceof S&&s instanceof S?new I(this._dot(n.data,s.data),this.getTypeInfo("f32")):(console.error(`Dot() expects vector arguments. Line ${t.line}`),null)}Dot4U8Packed(t,r){return console.error(`TODO: dot4U8Packed. Line ${t.line}`),null}Dot4I8Packed(t,r){return console.error(`TODO: dot4I8Packed. Line ${t.line}`),null}Exp(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.exp(i)),n.typeInfo);let s=n;return new I(Math.exp(s.value),n.typeInfo)}Exp2(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.pow(2,i)),n.typeInfo);let s=n;return new I(Math.pow(2,s.value),n.typeInfo)}ExtractBits(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r);if(s.typeInfo.name!=="u32"&&s.typeInfo.name!=="x32")return console.error(`ExtractBits() expects an i32 offset argument. Line ${t.line}`),null;if(i.typeInfo.name!=="u32"&&i.typeInfo.name!=="x32")return console.error(`ExtractBits() expects an i32 count argument. Line ${t.line}`),null;let o=s.value,a=i.value;if(n instanceof S)return new S(n.data.map(l=>l>>o&(1<<a)-1),n.typeInfo);if(n.typeInfo.name!=="i32"&&n.typeInfo.name!=="x32")return console.error(`ExtractBits() expects an i32 argument. Line ${t.line}`),null;let c=n.value;return new I(c>>o&(1<<a)-1,this.getTypeInfo("i32"))}FaceForward(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r);if(n instanceof S&&s instanceof S&&i instanceof S){let o=this._dot(s.data,i.data);return new S(o<0?Array.from(n.data):n.data.map(a=>-a),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${t.line}`),null}_firstLeadingBit(t){return t===0?-1:31-Math.clz32(t)}FirstLeadingBit(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>this._firstLeadingBit(i)),n.typeInfo);let s=n;return new I(this._firstLeadingBit(s.value),n.typeInfo)}_firstTrailingBit(t){return t===0?-1:Math.log2(t&-t)}FirstTrailingBit(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>this._firstTrailingBit(i)),n.typeInfo);let s=n;return new I(this._firstTrailingBit(s.value),n.typeInfo)}Floor(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.floor(i)),n.typeInfo);let s=n;return new I(Math.floor(s.value),n.typeInfo)}Fma(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r);if(n instanceof S&&s instanceof S&&i instanceof S)return n.data.length!==s.data.length||n.data.length!==i.data.length?(console.error(`Fma() expects vectors of the same length. Line ${t.line}`),null):new S(n.data.map((l,f)=>l*s.data[f]+i.data[f]),n.typeInfo);let o=n,a=s,c=i;return new I(o.value*a.value+c.value,o.typeInfo)}Fract(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>i-Math.floor(i)),n.typeInfo);let s=n;return new I(s.value-Math.floor(s.value),n.typeInfo)}Frexp(t,r){return console.error(`TODO: frexp. Line ${t.line}`),null}InsertBits(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r),o=this.exec.evalExpression(t.args[3],r);if(i.typeInfo.name!=="u32"&&i.typeInfo.name!=="x32")return console.error(`InsertBits() expects an i32 offset argument. Line ${t.line}`),null;let a=i.value,c=(1<<o.value)-1<<a,l=~c;if(n instanceof S&&s instanceof S)return new S(n.data.map((u,d)=>u&l|s.data[d]<<a&c),n.typeInfo);let f=n.value,h=s.value;return new I(f&l|h<<a&c,n.typeInfo)}InverseSqrt(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>1/Math.sqrt(i)),n.typeInfo);let s=n;return new I(1/Math.sqrt(s.value),n.typeInfo)}Ldexp(t,r){return console.error(`TODO: ldexp. Line ${t.line}`),null}Length(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S){let i=0;return n.data.forEach(o=>{i+=o*o}),new I(Math.sqrt(i),this.getTypeInfo("f32"))}let s=n;return new I(Math.abs(s.value),n.typeInfo)}Log(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.log(i)),n.typeInfo);let s=n;return new I(Math.log(s.value),n.typeInfo)}Log2(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.log2(i)),n.typeInfo);let s=n;return new I(Math.log2(s.value),n.typeInfo)}Max(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S)return new S(n.data.map((a,c)=>Math.max(a,s.data[c])),n.typeInfo);let i=n,o=s;return new I(Math.max(i.value,o.value),n.typeInfo)}Min(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S)return new S(n.data.map((a,c)=>Math.min(a,s.data[c])),n.typeInfo);let i=n,o=s;return new I(Math.min(i.value,o.value),n.typeInfo)}Mix(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r);if(n instanceof S&&s instanceof S&&i instanceof S)return new S(n.data.map((c,l)=>n.data[l]*(1-i.data[l])+s.data[l]*i.data[l]),n.typeInfo);let o=s,a=i;return new I(n.value*(1-a.value)+o.value*a.value,n.typeInfo)}Modf(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S)return new S(n.data.map((o,a)=>o%s.data[a]),n.typeInfo);let i=s;return new I(n.value%i.value,n.typeInfo)}Normalize(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S){let s=this.Length(t,r).value;return new S(n.data.map(i=>i/s),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${t.line}`),null}Pow(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S)return new S(n.data.map((a,c)=>Math.pow(a,s.data[c])),n.typeInfo);let i=n,o=s;return new I(Math.pow(i.value,o.value),n.typeInfo)}QuantizeToF16(t,r){let n=this.exec.evalExpression(t.args[0],r);return n instanceof S?new S(n.data.map(s=>s),n.typeInfo):new I(n.value,n.typeInfo)}Radians(t,r){let n=this.exec.evalExpression(t.args[0],r);return n instanceof S?new S(n.data.map(s=>s*Math.PI/180),n.typeInfo):new I(n.value*Math.PI/180,this.getTypeInfo("f32"))}Reflect(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(n instanceof S&&s instanceof S){let i=this._dot(n.data,s.data);return new S(n.data.map((o,a)=>o-2*i*s.data[a]),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${t.line}`),null}Refract(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r);if(n instanceof S&&s instanceof S&&i instanceof I){let o=this._dot(s.data,n.data);return new S(n.data.map((a,c)=>{let l=1-i.value*i.value*(1-o*o);if(l<0)return 0;let f=Math.sqrt(l);return i.value*a-(i.value*o+f)*s.data[c]}),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${t.line}`),null}ReverseBits(t,r){return console.error(`TODO: reverseBits. Line ${t.line}`),null}Round(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.round(i)),n.typeInfo);let s=n;return new I(Math.round(s.value),n.typeInfo)}Saturate(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.min(Math.max(i,0),1)),n.typeInfo);let s=n;return new I(Math.min(Math.max(s.value,0),1),n.typeInfo)}Sign(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.sign(i)),n.typeInfo);let s=n;return new I(Math.sign(s.value),n.typeInfo)}Sin(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.sin(i)),n.typeInfo);let s=n;return new I(Math.sin(s.value),n.typeInfo)}Sinh(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.sinh(i)),n.typeInfo);let s=n;return new I(Math.sinh(s.value),n.typeInfo)}_smoothstep(t,r,n){let s=Math.min(Math.max((n-t)/(r-t),0),1);return s*s*(3-2*s)}SmoothStep(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r),i=this.exec.evalExpression(t.args[2],r);if(i instanceof S&&n instanceof S&&s instanceof S)return new S(i.data.map((l,f)=>this._smoothstep(n.data[f],s.data[f],l)),i.typeInfo);let o=n,a=s,c=i;return new I(this._smoothstep(o.value,a.value,c.value),i.typeInfo)}Sqrt(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.sqrt(i)),n.typeInfo);let s=n;return new I(Math.sqrt(s.value),n.typeInfo)}Step(t,r){let n=this.exec.evalExpression(t.args[0],r),s=this.exec.evalExpression(t.args[1],r);if(s instanceof S&&n instanceof S)return new S(s.data.map((o,a)=>o<n.data[a]?0:1),s.typeInfo);let i=n;return new I(s.value<i.value?0:1,i.typeInfo)}Tan(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.tan(i)),n.typeInfo);let s=n;return new I(Math.tan(s.value),n.typeInfo)}Tanh(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.tanh(i)),n.typeInfo);let s=n;return new I(Math.tanh(s.value),n.typeInfo)}_getTransposeType(t){let r=t.getTypeName();return r==="mat2x2f"||r==="mat2x2h"?t:r==="mat2x3f"?this.getTypeInfo("mat3x2f"):r==="mat2x3h"?this.getTypeInfo("mat3x2h"):r==="mat2x4f"?this.getTypeInfo("mat4x2f"):r==="mat2x4h"?this.getTypeInfo("mat4x2h"):r==="mat3x2f"?this.getTypeInfo("mat2x3f"):r==="mat3x2h"?this.getTypeInfo("mat2x3h"):r==="mat3x3f"||r==="mat3x3h"?t:r==="mat3x4f"?this.getTypeInfo("mat4x3f"):r==="mat3x4h"?this.getTypeInfo("mat4x3h"):r==="mat4x2f"?this.getTypeInfo("mat2x4f"):r==="mat4x2h"?this.getTypeInfo("mat2x4h"):r==="mat4x3f"?this.getTypeInfo("mat3x4f"):r==="mat4x3h"?this.getTypeInfo("mat3x4h"):(r==="mat4x4f"||r==="mat4x4h"||console.error(`Invalid matrix type ${r}`),t)}Transpose(t,r){let n=this.exec.evalExpression(t.args[0],r);if(!(n instanceof Q))return console.error(`Transpose() expects a matrix argument. Line ${t.line}`),null;let s=this._getTransposeType(n.typeInfo);if(n.typeInfo.name==="mat2x2"||n.typeInfo.name==="mat2x2f"||n.typeInfo.name==="mat2x2h"){let i=n.data;return new Q([i[0],i[2],i[1],i[3]],s)}if(n.typeInfo.name==="mat2x3"||n.typeInfo.name==="mat2x3f"||n.typeInfo.name==="mat2x3h"){let i=n.data;return new Q([i[0],i[3],i[6],i[1],i[4],i[7]],s)}if(n.typeInfo.name==="mat2x4"||n.typeInfo.name==="mat2x4f"||n.typeInfo.name==="mat2x4h"){let i=n.data;return new Q([i[0],i[4],i[8],i[12],i[1],i[5],i[9],i[13]],s)}if(n.typeInfo.name==="mat3x2"||n.typeInfo.name==="mat3x2f"||n.typeInfo.name==="mat3x2h"){let i=n.data;return new Q([i[0],i[3],i[1],i[4],i[2],i[5]],s)}if(n.typeInfo.name==="mat3x3"||n.typeInfo.name==="mat3x3f"||n.typeInfo.name==="mat3x3h"){let i=n.data;return new Q([i[0],i[3],i[6],i[1],i[4],i[7],i[2],i[5],i[8]],s)}if(n.typeInfo.name==="mat3x4"||n.typeInfo.name==="mat3x4f"||n.typeInfo.name==="mat3x4h"){let i=n.data;return new Q([i[0],i[4],i[8],i[12],i[1],i[5],i[9],i[13],i[2],i[6],i[10],i[14]],s)}if(n.typeInfo.name==="mat4x2"||n.typeInfo.name==="mat4x2f"||n.typeInfo.name==="mat4x2h"){let i=n.data;return new Q([i[0],i[4],i[1],i[5],i[2],i[6]],s)}if(n.typeInfo.name==="mat4x3"||n.typeInfo.name==="mat4x3f"||n.typeInfo.name==="mat4x3h"){let i=n.data;return new Q([i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]],s)}if(n.typeInfo.name==="mat4x4"||n.typeInfo.name==="mat4x4f"||n.typeInfo.name==="mat4x4h"){let i=n.data;return new Q([i[0],i[4],i[8],i[12],i[1],i[5],i[9],i[13],i[2],i[6],i[10],i[14],i[3],i[7],i[11],i[15]],s)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(t,r){let n=this.exec.evalExpression(t.args[0],r);if(n instanceof S)return new S(n.data.map(i=>Math.trunc(i)),n.typeInfo);let s=n;return new I(Math.trunc(s.value),n.typeInfo)}Dpdx(t,r){return console.error(`TODO: dpdx. Line ${t.line}`),null}DpdxCoarse(t,r){return console.error(`TODO: dpdxCoarse. Line ${t.line}`),null}DpdxFine(t,r){return console.error("TODO: dpdxFine"),null}Dpdy(t,r){return console.error("TODO: dpdy"),null}DpdyCoarse(t,r){return console.error("TODO: dpdyCoarse"),null}DpdyFine(t,r){return console.error("TODO: dpdyFine"),null}Fwidth(t,r){return console.error("TODO: fwidth"),null}FwidthCoarse(t,r){return console.error("TODO: fwidthCoarse"),null}FwidthFine(t,r){return console.error("TODO: fwidthFine"),null}TextureDimensions(t,r){let n=t.args[0],s=t.args.length>1?this.exec.evalExpression(t.args[1],r).value:0;if(n instanceof rr){let i=n.name,o=r.getVariableValue(i);if(o instanceof en){if(s<0||s>=o.mipLevelCount)return console.error(`Invalid mip level for textureDimensions. Line ${t.line}`),null;let a=o.getMipLevelSize(s),c=o.dimension;return c==="1d"?new I(a[0],this.getTypeInfo("u32")):c==="3d"?new S(a,this.getTypeInfo("vec3u")):c==="2d"?new S(a.slice(0,2),this.getTypeInfo("vec2u")):(console.error(`Invalid texture dimension ${c} not found. Line ${t.line}`),null)}return console.error(`Texture ${i} not found. Line ${t.line}`),null}return console.error(`Invalid texture argument for textureDimensions. Line ${t.line}`),null}TextureGather(t,r){return console.error("TODO: textureGather"),null}TextureGatherCompare(t,r){return console.error("TODO: textureGatherCompare"),null}TextureLoad(t,r){let n=t.args[0],s=this.exec.evalExpression(t.args[1],r),i=t.args.length>2?this.exec.evalExpression(t.args[2],r).value:0;if(!(s instanceof S)||s.data.length!==2)return console.error(`Invalid UV argument for textureLoad. Line ${t.line}`),null;if(n instanceof rr){let o=n.name,a=r.getVariableValue(o);if(a instanceof en){let c=Math.floor(s.data[0]),l=Math.floor(s.data[1]);if(c<0||c>=a.width||l<0||l>=a.height)return console.error(`Texture ${o} out of bounds. Line ${t.line}`),null;let f=a.getPixel(c,l,0,i);return f===null?(console.error(`Invalid texture format for textureLoad. Line ${t.line}`),null):new S(f,this.getTypeInfo("vec4f"))}return console.error(`Texture ${o} not found. Line ${t.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${t.line}`),null}TextureNumLayers(t,r){let n=t.args[0];if(n instanceof rr){let s=n.name,i=r.getVariableValue(s);return i instanceof en?new I(i.depthOrArrayLayers,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${t.line}`),null)}return console.error(`Invalid texture argument for textureNumLayers. Line ${t.line}`),null}TextureNumLevels(t,r){let n=t.args[0];if(n instanceof rr){let s=n.name,i=r.getVariableValue(s);return i instanceof en?new I(i.mipLevelCount,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${t.line}`),null)}return console.error(`Invalid texture argument for textureNumLevels. Line ${t.line}`),null}TextureNumSamples(t,r){let n=t.args[0];if(n instanceof rr){let s=n.name,i=r.getVariableValue(s);return i instanceof en?new I(i.sampleCount,this.getTypeInfo("u32")):(console.error(`Texture ${s} not found. Line ${t.line}`),null)}return console.error(`Invalid texture argument for textureNumSamples. Line ${t.line}`),null}TextureSample(t,r){return console.error("TODO: textureSample"),null}TextureSampleBias(t,r){return console.error("TODO: textureSampleBias"),null}TextureSampleCompare(t,r){return console.error("TODO: textureSampleCompare"),null}TextureSampleCompareLevel(t,r){return console.error("TODO: textureSampleCompareLevel"),null}TextureSampleGrad(t,r){return console.error("TODO: textureSampleGrad"),null}TextureSampleLevel(t,r){return console.error("TODO: textureSampleLevel"),null}TextureSampleBaseClampToEdge(t,r){return console.error("TODO: textureSampleBaseClampToEdge"),null}TextureStore(t,r){let n=t.args[0],s=this.exec.evalExpression(t.args[1],r),i=t.args.length===4?this.exec.evalExpression(t.args[2],r).value:0,o=t.args.length===4?this.exec.evalExpression(t.args[3],r).data:this.exec.evalExpression(t.args[2],r).data;if(o.length!==4)return console.error(`Invalid value argument for textureStore. Line ${t.line}`),null;if(!(s instanceof S)||s.data.length!==2)return console.error(`Invalid UV argument for textureStore. Line ${t.line}`),null;if(n instanceof rr){let a=n.name,c=r.getVariableValue(a);if(c instanceof en){let l=c.getMipLevelSize(0),f=Math.floor(s.data[0]),h=Math.floor(s.data[1]);return f<0||f>=l[0]||h<0||h>=l[1]?(console.error(`Texture ${a} out of bounds. Line ${t.line}`),null):(c.setPixel(f,h,0,i,Array.from(o)),null)}return console.error(`Texture ${a} not found. Line ${t.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${t.line}`),null}AtomicLoad(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r);return r.getVariable(s).value.getSubData(this.exec,n.postfix,r)}AtomicStore(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r);return c instanceof I&&a instanceof I&&(c.value=a.value),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),null}AtomicAdd(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value+=a.value),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicSub(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value-=a.value),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicMax(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value=Math.max(c.value,a.value)),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicMin(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value=Math.min(c.value,a.value)),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicAnd(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value=c.value&a.value),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicOr(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value=c.value|a.value),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicXor(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value=c.value^a.value),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicExchange(t,r){let n=t.args[0];n instanceof ee&&(n=n.right);let s=this.exec.getVariableName(n,r),i=r.getVariable(s),o=t.args[1],a=this.exec.evalExpression(o,r),c=i.value.getSubData(this.exec,n.postfix,r),l=new I(c.value,c.typeInfo);return c instanceof I&&a instanceof I&&(c.value=a.value),i.value instanceof jt&&i.value.setDataValue(this.exec,c,n.postfix,r),l}AtomicCompareExchangeWeak(t,r){return console.error("TODO: atomicCompareExchangeWeak"),null}Pack4x8snorm(t,r){return console.error("TODO: pack4x8snorm"),null}Pack4x8unorm(t,r){return console.error("TODO: pack4x8unorm"),null}Pack4xI8(t,r){return console.error("TODO: pack4xI8"),null}Pack4xU8(t,r){return console.error("TODO: pack4xU8"),null}Pack4x8Clamp(t,r){return console.error("TODO: pack4x8Clamp"),null}Pack4xU8Clamp(t,r){return console.error("TODO: pack4xU8Clamp"),null}Pack2x16snorm(t,r){return console.error("TODO: pack2x16snorm"),null}Pack2x16unorm(t,r){return console.error("TODO: pack2x16unorm"),null}Pack2x16float(t,r){return console.error("TODO: pack2x16float"),null}Unpack4x8snorm(t,r){return console.error("TODO: unpack4x8snorm"),null}Unpack4x8unorm(t,r){return console.error("TODO: unpack4x8unorm"),null}Unpack4xI8(t,r){return console.error("TODO: unpack4xI8"),null}Unpack4xU8(t,r){return console.error("TODO: unpack4xU8"),null}Unpack2x16snorm(t,r){return console.error("TODO: unpack2x16snorm"),null}Unpack2x16unorm(t,r){return console.error("TODO: unpack2x16unorm"),null}Unpack2x16float(t,r){return console.error("TODO: unpack2x16float"),null}StorageBarrier(t,r){return null}TextureBarrier(t,r){return null}WorkgroupBarrier(t,r){return null}WorkgroupUniformLoad(t,r){return null}SubgroupAdd(t,r){return console.error("TODO: subgroupAdd"),null}SubgroupExclusiveAdd(t,r){return console.error("TODO: subgroupExclusiveAdd"),null}SubgroupInclusiveAdd(t,r){return console.error("TODO: subgroupInclusiveAdd"),null}SubgroupAll(t,r){return console.error("TODO: subgroupAll"),null}SubgroupAnd(t,r){return console.error("TODO: subgroupAnd"),null}SubgroupAny(t,r){return console.error("TODO: subgroupAny"),null}SubgroupBallot(t,r){return console.error("TODO: subgroupBallot"),null}SubgroupBroadcast(t,r){return console.error("TODO: subgroupBroadcast"),null}SubgroupBroadcastFirst(t,r){return console.error("TODO: subgroupBroadcastFirst"),null}SubgroupElect(t,r){return console.error("TODO: subgroupElect"),null}SubgroupMax(t,r){return console.error("TODO: subgroupMax"),null}SubgroupMin(t,r){return console.error("TODO: subgroupMin"),null}SubgroupMul(t,r){return console.error("TODO: subgroupMul"),null}SubgroupExclusiveMul(t,r){return console.error("TODO: subgroupExclusiveMul"),null}SubgroupInclusiveMul(t,r){return console.error("TODO: subgroupInclusiveMul"),null}SubgroupOr(t,r){return console.error("TODO: subgroupOr"),null}SubgroupShuffle(t,r){return console.error("TODO: subgroupShuffle"),null}SubgroupShuffleDown(t,r){return console.error("TODO: subgroupShuffleDown"),null}SubgroupShuffleUp(t,r){return console.error("TODO: subgroupShuffleUp"),null}SubgroupShuffleXor(t,r){return console.error("TODO: subgroupShuffleXor"),null}SubgroupXor(t,r){return console.error("TODO: subgroupXor"),null}QuadBroadcast(t,r){return console.error("TODO: quadBroadcast"),null}QuadSwapDiagonal(t,r){return console.error("TODO: quadSwapDiagonal"),null}QuadSwapX(t,r){return console.error("TODO: quadSwapX"),null}QuadSwapY(t,r){return console.error("TODO: quadSwapY"),null}},Oy={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4},er={mat2x2:[2,2,4],mat2x2f:[2,2,4],mat2x2h:[2,2,4],mat2x3:[2,3,6],mat2x3f:[2,3,6],mat2x3h:[2,3,6],mat2x4:[2,4,8],mat2x4f:[2,4,8],mat2x4h:[2,4,8],mat3x2:[3,2,6],mat3x2f:[3,2,6],mat3x2h:[3,2,6],mat3x3:[3,3,9],mat3x3f:[3,3,9],mat3x3h:[3,3,9],mat3x4:[3,4,12],mat3x4f:[3,4,12],mat3x4h:[3,4,12],mat4x2:[4,2,8],mat4x2f:[4,2,8],mat4x2h:[4,2,8],mat4x3:[4,3,12],mat4x3f:[4,3,12],mat4x3h:[4,3,12],mat4x4:[4,4,16],mat4x4f:[4,4,16],mat4x4h:[4,4,16]},we=class extends qy{constructor(t,r){var n;super(),this.ast=t??[],this.reflection=new kr,this.reflection.updateAST(this.ast),this.context=(n=r?.clone())!==null&&n!==void 0?n:new If,this.builtins=new Xy(this),this.typeInfo={bool:this.getTypeInfo(z.bool),i32:this.getTypeInfo(z.i32),u32:this.getTypeInfo(z.u32),f32:this.getTypeInfo(z.f32),f16:this.getTypeInfo(z.f16),vec2f:this.getTypeInfo(B.vec2f),vec2u:this.getTypeInfo(B.vec2u),vec2i:this.getTypeInfo(B.vec2i),vec2h:this.getTypeInfo(B.vec2h),vec3f:this.getTypeInfo(B.vec3f),vec3u:this.getTypeInfo(B.vec3u),vec3i:this.getTypeInfo(B.vec3i),vec3h:this.getTypeInfo(B.vec3h),vec4f:this.getTypeInfo(B.vec4f),vec4u:this.getTypeInfo(B.vec4u),vec4i:this.getTypeInfo(B.vec4i),vec4h:this.getTypeInfo(B.vec4h),mat2x2f:this.getTypeInfo(B.mat2x2f),mat2x3f:this.getTypeInfo(B.mat2x3f),mat2x4f:this.getTypeInfo(B.mat2x4f),mat3x2f:this.getTypeInfo(B.mat3x2f),mat3x3f:this.getTypeInfo(B.mat3x3f),mat3x4f:this.getTypeInfo(B.mat3x4f),mat4x2f:this.getTypeInfo(B.mat4x2f),mat4x3f:this.getTypeInfo(B.mat4x3f),mat4x4f:this.getTypeInfo(B.mat4x4f)}}getVariableValue(t){var r,n;let s=(n=(r=this.context.getVariable(t))===null||r===void 0?void 0:r.value)!==null&&n!==void 0?n:null;if(s===null)return null;if(s instanceof I)return s.value;if(s instanceof S||s instanceof Q)return Array.from(s.data);if(s instanceof jt&&s.typeInfo instanceof Bn){if(s.typeInfo.format.name==="u32")return Array.from(new Uint32Array(s.buffer,s.offset,s.typeInfo.count));if(s.typeInfo.format.name==="i32")return Array.from(new Int32Array(s.buffer,s.offset,s.typeInfo.count));if(s.typeInfo.format.name==="f32")return Array.from(new Float32Array(s.buffer,s.offset,s.typeInfo.count))}return console.error(`Unsupported return variable type ${s.typeInfo.name}`),null}execute(t){(t=t??{}).constants&&this._setOverrides(t.constants,this.context),this._execStatements(this.ast,this.context)}dispatchWorkgroups(t,r,n,s){let i=this.context.clone();(s=s??{}).constants&&this._setOverrides(s.constants,i),this._execStatements(this.ast,i);let o=i.getFunction(t);if(!o)return void console.error(`Function ${t} not found`);if(typeof r=="number")r=[r,1,1];else{if(r.length===0)return void console.error("Invalid dispatch count");r.length===1?r=[r[0],1,1]:r.length===2?r=[r[0],r[1],1]:r.length>3&&(r=[r[0],r[1],r[2]])}let a=r[0],c=r[1],l=r[2],f=this.getTypeInfo("vec3u");i.setVariable("@num_workgroups",new S(r,f));let h=this.reflection.getFunctionInfo(t);h===null&&console.error(`Function ${t} not found in reflection data`);for(let u in n)for(let d in n[u]){let p=n[u][d];i.variables.forEach(m=>{var g;let x=m.node;if(x?.attributes){let A=null,_=null;for(let y of x.attributes)y.name==="binding"?A=y.value:y.name==="group"&&(_=y.value);if(d==A&&u==_){let y=!1;for(let T of h.resources)if(T.name===m.name&&T.group===parseInt(u)&&T.binding===parseInt(d)){y=!0;break}if(y)if(p.texture!==void 0&&p.descriptor!==void 0){let T=new en(p.texture,this.getTypeInfo(x.type),p.descriptor,(g=p.texture.view)!==null&&g!==void 0?g:null);m.value=T}else p.uniform!==void 0?m.value=new jt(p.uniform,this.getTypeInfo(x.type)):m.value=new jt(p,this.getTypeInfo(x.type))}}})}for(let u=0;u<l;++u)for(let d=0;d<c;++d)for(let p=0;p<a;++p)i.setVariable("@workgroup_id",new S([p,d,u],this.getTypeInfo("vec3u"))),this._dispatchWorkgroup(o,[p,d,u],i)}execStatement(t,r){if(t instanceof kp)return this.evalExpression(t.value,r);if(t instanceof zp){if(t.condition){let n=this.evalExpression(t.condition,r);if(!(n instanceof I))throw new Error("Invalid break-if condition");if(!n.value)return null}return we._breakObj}if(t instanceof Vp)return we._continueObj;if(t instanceof lo)this._let(t,r);else if(t instanceof rn)this._var(t,r);else if(t instanceof Ga)this._const(t,r);else if(t instanceof ho)this._function(t,r);else{if(t instanceof Dp)return this._if(t,r);if(t instanceof Fp)return this._switch(t,r);if(t instanceof Op)return this._for(t,r);if(t instanceof Rp)return this._while(t,r);if(t instanceof Np)return this._loop(t,r);if(t instanceof Tf){let n=r.clone();return n.currentFunctionName=r.currentFunctionName,this._execStatements(t.body,n)}if(t instanceof Bp)this._assign(t,r);else if(t instanceof Lp)this._increment(t,r);else{if(t instanceof tn)return null;if(t instanceof vf){let n=t.name;r.getVariable(n)===null&&r.setVariable(n,new I(0,this.getTypeInfo("u32")))}else if(t instanceof Ef)this._call(t,r);else{if(t instanceof Up||t instanceof Mf)return null;console.error("Invalid statement type.",t,`Line ${t.line}`)}}}return null}evalExpression(t,r){return t instanceof Mr?this._evalBinaryOp(t,r):t instanceof oe?this._evalLiteral(t,r):t instanceof rr?this._evalVariable(t,r):t instanceof Sf?this._evalCall(t,r):t instanceof Dr?this._evalCreate(t,r):t instanceof Hp?this._evalConst(t,r):t instanceof Gp?this._evalBitcast(t,r):t instanceof ee?this._evalUnaryOp(t,r):(console.error("Invalid expression type",t,`Line ${t.line}`),null)}getTypeInfo(t){var r;if(t instanceof z){let s=this.reflection.getTypeInfo(t);if(s!==null)return s}let n=(r=this.typeInfo[t])!==null&&r!==void 0?r:null;return n!==null||(n=this.reflection.getTypeInfoByName(t)),n}_setOverrides(t,r){for(let n in t){let s=t[n],i=this.reflection.getOverrideInfo(n);i!==null?(i.type===null&&(i.type=this.getTypeInfo("u32")),i.type.name==="u32"||i.type.name==="i32"||i.type.name==="f32"||i.type.name==="f16"?r.setVariable(n,new I(s,i.type)):i.type.name==="bool"?r.setVariable(n,new I(s?1:0,i.type)):i.type.name==="vec2"||i.type.name==="vec3"||i.type.name==="vec4"||i.type.name==="vec2f"||i.type.name==="vec3f"||i.type.name==="vec4f"||i.type.name==="vec2i"||i.type.name==="vec3i"||i.type.name==="vec4i"||i.type.name==="vec2u"||i.type.name==="vec3u"||i.type.name==="vec4u"||i.type.name==="vec2h"||i.type.name==="vec3h"||i.type.name==="vec4h"?r.setVariable(n,new S(s,i.type)):console.error(`Invalid constant type for ${n}`)):console.error(`Override ${n} does not exist in the shader.`)}}_dispatchWorkgroup(t,r,n){let s=[1,1,1];for(let f of t.node.attributes)if(f.name==="workgroup_size"){if(f.value.length>0){let h=n.getVariableValue(f.value[0]);s[0]=h instanceof I?h.value:parseInt(f.value[0])}if(f.value.length>1){let h=n.getVariableValue(f.value[1]);s[1]=h instanceof I?h.value:parseInt(f.value[1])}if(f.value.length>2){let h=n.getVariableValue(f.value[2]);s[2]=h instanceof I?h.value:parseInt(f.value[2])}}let i=this.getTypeInfo("vec3u"),o=this.getTypeInfo("u32");n.setVariable("@workgroup_size",new S(s,i));let a=s[0],c=s[1],l=s[2];for(let f=0,h=0;f<l;++f)for(let u=0;u<c;++u)for(let d=0;d<a;++d,++h){let p=[d,u,f],m=[d+r[0]*s[0],u+r[1]*s[1],f+r[2]*s[2]];n.setVariable("@local_invocation_id",new S(p,i)),n.setVariable("@global_invocation_id",new S(m,i)),n.setVariable("@local_invocation_index",new I(h,o)),this._dispatchExec(t,n)}}_dispatchExec(t,r){for(let n of t.node.args)for(let s of n.attributes)if(s.name==="builtin"){let i=`@${s.value}`,o=r.getVariable(i);o!==void 0&&r.variables.set(n.name,o)}this._execStatements(t.node.body,r)}getVariableName(t,r){for(;t instanceof ee;)t=t.right;return t instanceof rr?t.name:(console.error("Unknown variable type",t,"Line",t.line),null)}_execStatements(t,r){for(let n of t){if(n instanceof Array){let i=r.clone(),o=this._execStatements(n,i);if(o)return o;continue}let s=this.execStatement(n,r);if(s)return s}return null}_call(t,r){let n=r.clone();n.currentFunctionName=t.name;let s=r.getFunction(t.name);if(s){for(let i=0;i<s.node.args.length;++i){let o=s.node.args[i],a=this.evalExpression(t.args[i],n);n.setVariable(o.name,a,o)}this._execStatements(s.node.body,n)}else t.isBuiltin?this._callBuiltinFunction(t,n):this.getTypeInfo(t.name)&&this._evalCreate(t,r)}_increment(t,r){let n=this.getVariableName(t.variable,r),s=r.getVariable(n);s?t.operator==="++"?s.value instanceof I?s.value.value++:console.error(`Variable ${n} is not a scalar. Line ${t.line}`):t.operator==="--"?s.value instanceof I?s.value.value--:console.error(`Variable ${n} is not a scalar. Line ${t.line}`):console.error(`Unknown increment operator ${t.operator}. Line ${t.line}`):console.error(`Variable ${n} not found. Line ${t.line}`)}_getVariableData(t,r){if(t instanceof rr){let n=this.getVariableName(t,r),s=r.getVariable(n);return s===null?(console.error(`Variable ${n} not found. Line ${t.line}`),null):s.value.getSubData(this,t.postfix,r)}if(t instanceof ee){if(t.operator==="*"){let n=this._getVariableData(t.right,r);return n instanceof ni?n.reference.getSubData(this,t.postfix,r):(console.error(`Variable ${t.right} is not a pointer. Line ${t.line}`),null)}if(t.operator==="&"){let n=this._getVariableData(t.right,r);return new ni(n)}}return null}_assign(t,r){let n=null,s="<var>",i=null;if(t.variable instanceof ee){let c=this._getVariableData(t.variable,r),l=this.evalExpression(t.value,r),f=t.operator;if(f==="="){if(c instanceof I||c instanceof S||c instanceof Q){if(l instanceof I||l instanceof S||l instanceof Q&&c.data.length===l.data.length)return void c.data.set(l.data);console.error(`Invalid assignment. Line ${t.line}`)}else if(c instanceof jt&&l instanceof jt&&c.buffer.byteLength-c.offset>=l.buffer.byteLength-l.offset)return void(c.buffer.byteLength%4==0?new Uint32Array(c.buffer,c.offset,c.typeInfo.size/4).set(new Uint32Array(l.buffer,l.offset,l.typeInfo.size/4)):new Uint8Array(c.buffer,c.offset,c.typeInfo.size).set(new Uint8Array(l.buffer,l.offset,l.typeInfo.size)));return console.error(`Invalid assignment. Line ${t.line}`),null}if(f==="+=")return c instanceof I||c instanceof S||c instanceof Q?l instanceof I||l instanceof S||l instanceof Q?void c.data.set(l.data.map((h,u)=>c.data[u]+h)):void console.error(`Invalid assignment . Line ${t.line}`):void console.error(`Invalid assignment. Line ${t.line}`);if(f==="-=")return(c instanceof I||c instanceof S||c instanceof Q)&&(l instanceof I||l instanceof S||l instanceof Q)?void c.data.set(l.data.map((h,u)=>c.data[u]-h)):void console.error(`Invalid assignment. Line ${t.line}`)}if(t.variable instanceof ee){if(t.variable.operator==="*"){s=this.getVariableName(t.variable.right,r);let c=r.getVariable(s);if(!(c&&c.value instanceof ni))return void console.error(`Variable ${s} is not a pointer. Line ${t.line}`);n=c.value.reference;let l=t.variable.postfix;if(!l){let f=t.variable.right;for(;f instanceof ee;){if(f.postfix){l=f.postfix;break}f=f.right}}l&&(n=n.getSubData(this,l,r))}}else{i=t.variable.postfix,s=this.getVariableName(t.variable,r);let c=r.getVariable(s);if(c===null)return void console.error(`Variable ${s} not found. Line ${t.line}`);n=c.value}if(n instanceof ni&&(n=n.reference),n===null)return void console.error(`Variable ${s} not found. Line ${t.line}`);let o=this.evalExpression(t.value,r),a=t.operator;if(a!=="="){let c=n.getSubData(this,i,r);if(c instanceof S&&o instanceof I){let l=c.data,f=o.value;if(a==="+=")for(let h=0;h<l.length;++h)l[h]+=f;else if(a==="-=")for(let h=0;h<l.length;++h)l[h]-=f;else if(a==="*=")for(let h=0;h<l.length;++h)l[h]*=f;else if(a==="/=")for(let h=0;h<l.length;++h)l[h]/=f;else if(a==="%=")for(let h=0;h<l.length;++h)l[h]%=f;else if(a==="&=")for(let h=0;h<l.length;++h)l[h]&=f;else if(a==="|=")for(let h=0;h<l.length;++h)l[h]|=f;else if(a==="^=")for(let h=0;h<l.length;++h)l[h]^=f;else if(a==="<<=")for(let h=0;h<l.length;++h)l[h]<<=f;else if(a===">>=")for(let h=0;h<l.length;++h)l[h]>>=f;else console.error(`Invalid operator ${a}. Line ${t.line}`)}else if(c instanceof S&&o instanceof S){let l=c.data,f=o.data;if(l.length!==f.length)return void console.error(`Vector length mismatch. Line ${t.line}`);if(a==="+=")for(let h=0;h<l.length;++h)l[h]+=f[h];else if(a==="-=")for(let h=0;h<l.length;++h)l[h]-=f[h];else if(a==="*=")for(let h=0;h<l.length;++h)l[h]*=f[h];else if(a==="/=")for(let h=0;h<l.length;++h)l[h]/=f[h];else if(a==="%=")for(let h=0;h<l.length;++h)l[h]%=f[h];else if(a==="&=")for(let h=0;h<l.length;++h)l[h]&=f[h];else if(a==="|=")for(let h=0;h<l.length;++h)l[h]|=f[h];else if(a==="^=")for(let h=0;h<l.length;++h)l[h]^=f[h];else if(a==="<<=")for(let h=0;h<l.length;++h)l[h]<<=f[h];else if(a===">>=")for(let h=0;h<l.length;++h)l[h]>>=f[h];else console.error(`Invalid operator ${a}. Line ${t.line}`)}else{if(!(c instanceof I&&o instanceof I))return void console.error(`Invalid type for ${t.operator} operator. Line ${t.line}`);a==="+="?c.value+=o.value:a==="-="?c.value-=o.value:a==="*="?c.value*=o.value:a==="/="?c.value/=o.value:a==="%="?c.value%=o.value:a==="&="?c.value&=o.value:a==="|="?c.value|=o.value:a==="^="?c.value^=o.value:a==="<<="?c.value<<=o.value:a===">>="?c.value>>=o.value:console.error(`Invalid operator ${a}. Line ${t.line}`)}return void(n instanceof jt&&n.setDataValue(this,c,i,r))}if(n instanceof jt)n.setDataValue(this,o,i,r);else if(i){if(!(n instanceof S||n instanceof Q))return void console.error(`Variable ${s} is not a vector or matrix. Line ${t.line}`);if(i instanceof si){let c=this.evalExpression(i.index,r).value;if(n instanceof S){if(!(o instanceof I))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[c]=o.value}else{if(!(n instanceof Q))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);{let l=this.evalExpression(i.index,r).value;if(l<0)return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);if(!(o instanceof S))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);{let f=n.typeInfo.getTypeName();if(f==="mat2x2"||f==="mat2x2f"||f==="mat2x2h"){if(!(l<2&&o.data.length===2))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[2*l]=o.data[0],n.data[2*l+1]=o.data[1]}else if(f==="mat2x3"||f==="mat2x3f"||f==="mat2x3h"){if(!(l<2&&o.data.length===3))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[3*l]=o.data[0],n.data[3*l+1]=o.data[1],n.data[3*l+2]=o.data[2]}else if(f==="mat2x4"||f==="mat2x4f"||f==="mat2x4h"){if(!(l<2&&o.data.length===4))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[4*l]=o.data[0],n.data[4*l+1]=o.data[1],n.data[4*l+2]=o.data[2],n.data[4*l+3]=o.data[3]}else if(f==="mat3x2"||f==="mat3x2f"||f==="mat3x2h"){if(!(l<3&&o.data.length===2))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[2*l]=o.data[0],n.data[2*l+1]=o.data[1]}else if(f==="mat3x3"||f==="mat3x3f"||f==="mat3x3h"){if(!(l<3&&o.data.length===3))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[3*l]=o.data[0],n.data[3*l+1]=o.data[1],n.data[3*l+2]=o.data[2]}else if(f==="mat3x4"||f==="mat3x4f"||f==="mat3x4h"){if(!(l<3&&o.data.length===4))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[4*l]=o.data[0],n.data[4*l+1]=o.data[1],n.data[4*l+2]=o.data[2],n.data[4*l+3]=o.data[3]}else if(f==="mat4x2"||f==="mat4x2f"||f==="mat4x2h"){if(!(l<4&&o.data.length===2))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[2*l]=o.data[0],n.data[2*l+1]=o.data[1]}else if(f==="mat4x3"||f==="mat4x3f"||f==="mat4x3h"){if(!(l<4&&o.data.length===3))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[3*l]=o.data[0],n.data[3*l+1]=o.data[1],n.data[3*l+2]=o.data[2]}else{if(f!=="mat4x4"&&f!=="mat4x4f"&&f!=="mat4x4h")return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);if(!(l<4&&o.data.length===4))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);n.data[4*l]=o.data[0],n.data[4*l+1]=o.data[1],n.data[4*l+2]=o.data[2],n.data[4*l+3]=o.data[3]}}}}}else if(i instanceof us){let c=i.value;if(!(n instanceof S))return void console.error(`Invalid assignment to ${c}. Variable ${s} is not a vector. Line ${t.line}`);if(o instanceof I){if(c.length>1)return void console.error(`Invalid assignment to ${c} for variable ${s}. Line ${t.line}`);if(c==="x")n.data[0]=o.value;else if(c==="y"){if(n.data.length<2)return void console.error(`Invalid assignment to ${c} for variable ${s}. Line ${t.line}`);n.data[1]=o.value}else if(c==="z"){if(n.data.length<3)return void console.error(`Invalid assignment to ${c} for variable ${s}. Line ${t.line}`);n.data[2]=o.value}else if(c==="w"){if(n.data.length<4)return void console.error(`Invalid assignment to ${c} for variable ${s}. Line ${t.line}`);n.data[3]=o.value}}else{if(!(o instanceof S))return void console.error(`Invalid assignment to ${s}. Line ${t.line}`);if(c.length!==o.data.length)return void console.error(`Invalid assignment to ${c} for variable ${s}. Line ${t.line}`);for(let l=0;l<c.length;++l){let f=c[l];if(f==="x"||f==="r")n.data[0]=o.data[l];else if(f==="y"||f==="g"){if(o.data.length<2)return void console.error(`Invalid assignment to ${f} for variable ${s}. Line ${t.line}`);n.data[1]=o.data[l]}else if(f==="z"||f==="b"){if(o.data.length<3)return void console.error(`Invalid assignment to ${f} for variable ${s}. Line ${t.line}`);n.data[2]=o.data[l]}else{if(f!=="w"&&f!=="a")return void console.error(`Invalid assignment to ${f} for variable ${s}. Line ${t.line}`);if(o.data.length<4)return void console.error(`Invalid assignment to ${f} for variable ${s}. Line ${t.line}`);n.data[3]=o.data[l]}}}}}else n instanceof I&&o instanceof I?n.value=o.value:n instanceof S&&o instanceof S||n instanceof Q&&o instanceof Q?n.data.set(o.data):console.error(`Invalid assignment to ${s}. Line ${t.line}`)}_function(t,r){let n=new Pf(t);r.functions.set(t.name,n)}_const(t,r){let n=null;t.value!==null&&(n=this.evalExpression(t.value,r)),r.createVariable(t.name,n,t)}_let(t,r){let n=null;if(t.value!==null){if(n=this.evalExpression(t.value,r),n===null)return void console.error(`Invalid value for variable ${t.name}. Line ${t.line}`);t.value instanceof ee||(n=n.clone())}else{let s=t.type.name;if(s==="f32"||s==="i32"||s==="u32"||s==="bool"||s==="f16"||s==="vec2"||s==="vec3"||s==="vec4"||s==="vec2f"||s==="vec3f"||s==="vec4f"||s==="vec2i"||s==="vec3i"||s==="vec4i"||s==="vec2u"||s==="vec3u"||s==="vec4u"||s==="vec2h"||s==="vec3h"||s==="vec4h"||s==="vec2b"||s==="vec3b"||s==="vec4b"||s==="mat2x2"||s==="mat2x3"||s==="mat2x4"||s==="mat3x2"||s==="mat3x3"||s==="mat3x4"||s==="mat4x2"||s==="mat4x3"||s==="mat4x4"||s==="mat2x2f"||s==="mat2x3f"||s==="mat2x4f"||s==="mat3x2f"||s==="mat3x3f"||s==="mat3x4f"||s==="mat4x2f"||s==="mat4x3f"||s==="mat4x4f"||s==="mat2x2h"||s==="mat2x3h"||s==="mat2x4h"||s==="mat3x2h"||s==="mat3x3h"||s==="mat3x4h"||s==="mat4x2h"||s==="mat4x3h"||s==="mat4x4h"||s==="array"){let i=new Dr(t.type,[]);n=this._evalCreate(i,r)}}r.createVariable(t.name,n,t)}_var(t,r){let n=null;if(t.value!==null){if(n=this.evalExpression(t.value,r),n===null)return void console.error(`Invalid value for variable ${t.name}. Line ${t.line}`);t.value instanceof ee||(n=n.clone())}else{if(t.type===null)return void console.error(`Variable ${t.name} has no type. Line ${t.line}`);let s=t.type.name;if(s==="f32"||s==="i32"||s==="u32"||s==="bool"||s==="f16"||s==="vec2"||s==="vec3"||s==="vec4"||s==="vec2f"||s==="vec3f"||s==="vec4f"||s==="vec2i"||s==="vec3i"||s==="vec4i"||s==="vec2u"||s==="vec3u"||s==="vec4u"||s==="vec2h"||s==="vec3h"||s==="vec4h"||s==="vec2b"||s==="vec3b"||s==="vec4b"||s==="mat2x2"||s==="mat2x3"||s==="mat2x4"||s==="mat3x2"||s==="mat3x3"||s==="mat3x4"||s==="mat4x2"||s==="mat4x3"||s==="mat4x4"||s==="mat2x2f"||s==="mat2x3f"||s==="mat2x4f"||s==="mat3x2f"||s==="mat3x3f"||s==="mat3x4f"||s==="mat4x2f"||s==="mat4x3f"||s==="mat4x4f"||s==="mat2x2h"||s==="mat2x3h"||s==="mat2x4h"||s==="mat3x2h"||s==="mat3x3h"||s==="mat3x4h"||s==="mat4x2h"||s==="mat4x3h"||s==="mat4x4h"||t.type instanceof fo||t.type instanceof tn||t.type instanceof B){let i=new Dr(t.type,[]);n=this._evalCreate(i,r)}}r.createVariable(t.name,n,t)}_switch(t,r){r=r.clone();let n=this.evalExpression(t.condition,r);if(!(n instanceof I))return console.error(`Invalid if condition. Line ${t.line}`),null;let s=null;for(let i of t.cases)if(i instanceof Xp)for(let o of i.selectors){if(o instanceof qa){s=i;continue}let a=this.evalExpression(o,r);if(!(a instanceof I))return console.error(`Invalid case selector. Line ${t.line}`),null;if(a.value===n.value)return this._execStatements(i.body,r)}else i instanceof Yp&&(s=i);return s?this._execStatements(s.body,r):null}_if(t,r){r=r.clone();let n=this.evalExpression(t.condition,r);if(!(n instanceof I))return console.error(`Invalid if condition. Line ${t.line}`),null;if(n.value)return this._execStatements(t.body,r);for(let s of t.elseif){let i=this.evalExpression(s.condition,r);if(!(i instanceof I))return console.error(`Invalid if condition. Line ${t.line}`),null;if(i.value)return this._execStatements(s.body,r)}return t.else?this._execStatements(t.else,r):null}_getScalarValue(t){return t instanceof I?t.value:(console.error("Expected scalar value.",t),0)}_for(t,r){for(r=r.clone(),this.execStatement(t.init,r);this._getScalarValue(this.evalExpression(t.condition,r));){let n=this._execStatements(t.body,r);if(n===we._breakObj)break;if(n!==null&&n!==we._continueObj)return n;this.execStatement(t.increment,r)}return null}_loop(t,r){for(r=r.clone();;){let n=this._execStatements(t.body,r);if(n===we._breakObj)break;if(n===we._continueObj){if(t.continuing&&this._execStatements(t.continuing.body,r)===we._breakObj)break}else if(n!==null)return n}return null}_while(t,r){for(r=r.clone();this._getScalarValue(this.evalExpression(t.condition,r));){let n=this._execStatements(t.body,r);if(n===we._breakObj)break;if(n!==we._continueObj&&n!==null)return n}return null}_evalBitcast(t,r){let n=this.evalExpression(t.value,r),s=t.type;if(n instanceof I){let i=vS(n.value,n.typeInfo.name,s.name);return new I(i,this.getTypeInfo(s))}if(n instanceof S){let i=n.typeInfo.getTypeName(),o="";if(i.endsWith("f"))o="f32";else if(i.endsWith("i"))o="i32";else if(i.endsWith("u"))o="u32";else if(i.endsWith("b"))o="bool";else{if(!i.endsWith("h"))return console.error(`Unknown vector type ${i}. Line ${t.line}`),null;o="f16"}let a=s.getTypeName(),c="";if(a.endsWith("f"))c="f32";else if(a.endsWith("i"))c="i32";else if(a.endsWith("u"))c="u32";else if(a.endsWith("b"))c="bool";else{if(!a.endsWith("h"))return console.error(`Unknown vector type ${c}. Line ${t.line}`),null;c="f16"}let l=function(f,h,u){if(h===u)return f;let d=new Array(f.length);for(let p=0;p<f.length;p++)d[p]=vS(f[p],h,u);return d}(Array.from(n.data),o,c);return new S(l,this.getTypeInfo(s))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${t.line}`),null}_evalConst(t,r){return r.getVariableValue(t.name).clone().getSubData(this,t.postfix,r)}_evalCreate(t,r){var n;if(t instanceof Dr){if(t.type===null)return wf.void;switch(t.type.getTypeName()){case"bool":case"i32":case"u32":case"f32":case"f16":return this._callConstructorValue(t,r);case"vec2":case"vec3":case"vec4":case"vec2f":case"vec3f":case"vec4f":case"vec2h":case"vec3h":case"vec4h":case"vec2i":case"vec3i":case"vec4i":case"vec2u":case"vec3u":case"vec4u":case"vec2b":case"vec3b":case"vec4b":return this._callConstructorVec(t,r);case"mat2x2":case"mat2x2f":case"mat2x2h":case"mat2x3":case"mat2x3f":case"mat2x3h":case"mat2x4":case"mat2x4f":case"mat2x4h":case"mat3x2":case"mat3x2f":case"mat3x2h":case"mat3x3":case"mat3x3f":case"mat3x3h":case"mat3x4":case"mat3x4f":case"mat3x4h":case"mat4x2":case"mat4x2f":case"mat4x2h":case"mat4x3":case"mat4x3f":case"mat4x3h":case"mat4x4":case"mat4x4f":case"mat4x4h":return this._callConstructorMatrix(t,r)}}let s=t instanceof Dr?t.type.name:t.name,i=t instanceof Dr?this.getTypeInfo(t.type):this.getTypeInfo(t.name);if(i===null)return console.error(`Unknown type ${s}. Line ${t.line}`),null;if(i.size===0)return null;let o=new jt(new ArrayBuffer(i.size),i,0);if(i instanceof Ln){if(t.args)for(let a=0;a<t.args.length;++a){let c=i.members[a],l=t.args[a],f=this.evalExpression(l,r);o.setData(this,f,c.type,c.offset,r)}}else if(i instanceof Bn){let a=0;if(t.args)for(let c=0;c<t.args.length;++c){let l=t.args[c],f=this.evalExpression(l,r);i.format===null&&(((n=f.typeInfo)===null||n===void 0?void 0:n.name)==="x32"?i.format=this.getTypeInfo("i32"):i.format=f.typeInfo),o.setData(this,f,i.format,a,r),a+=i.stride}}else console.error(`Unknown type "${s}". Line ${t.line}`);return t instanceof Dr?o.getSubData(this,t.postfix,r):o}_evalLiteral(t,r){let n=this.getTypeInfo(t.type),s=n.name;return s==="x32"||s==="u32"||s==="f32"||s==="f16"||s==="i32"||s==="bool"?new I(t.scalarValue,n):s==="vec2"||s==="vec3"||s==="vec4"||s==="vec2f"||s==="vec3f"||s==="vec4f"||s==="vec2h"||s==="vec3h"||s==="vec4h"||s==="vec2i"||s==="vec3i"||s==="vec4i"||s==="vec2u"||s==="vec3u"||s==="vec4u"?this._callConstructorVec(t,r):s==="mat2x2"||s==="mat2x3"||s==="mat2x4"||s==="mat3x2"||s==="mat3x3"||s==="mat3x4"||s==="mat4x2"||s==="mat4x3"||s==="mat4x4"||s==="mat2x2f"||s==="mat2x3f"||s==="mat2x4f"||s==="mat3x2f"||s==="mat3x3f"||s==="mat3x4f"||s==="mat4x2f"||s==="mat4x3f"||s==="mat4x4f"||s==="mat2x2h"||s==="mat2x3h"||s==="mat2x4h"||s==="mat3x2h"||s==="mat3x3h"||s==="mat3x4h"||s==="mat4x2h"||s==="mat4x3h"||s==="mat4x4h"?this._callConstructorMatrix(t,r):t.value}_evalVariable(t,r){let n=r.getVariableValue(t.name);return n===null?n:n.getSubData(this,t.postfix,r)}_maxFormatTypeInfo(t){let r=t[0];if(r.name==="f32")return r;for(let n=1;n<t.length;++n){let s=we._priority.get(r.name);we._priority.get(t[n].name)<s&&(r=t[n])}return r.name==="x32"?this.getTypeInfo("i32"):r}_evalUnaryOp(t,r){let n=this.evalExpression(t.right,r);if(t.operator==="&")return new ni(n);if(t.operator==="*")return n instanceof ni?n.reference.getSubData(this,t.postfix,r):(console.error(`Invalid dereference. Line ${t.line}`),null);let s=n instanceof I?n.value:n instanceof S?Array.from(n.data):null;switch(t.operator){case"+":{if(X(s)){let a=s.map((c,l)=>+c);return new S(a,n.typeInfo)}let i=s,o=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new I(+i,o)}case"-":{if(X(s)){let a=s.map((c,l)=>-c);return new S(a,n.typeInfo)}let i=s,o=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new I(-i,o)}case"!":{if(X(s)){let a=s.map((c,l)=>c?0:1);return new S(a,n.typeInfo)}let i=s,o=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new I(i?0:1,o)}case"~":{if(X(s)){let a=s.map((c,l)=>~c);return new S(a,n.typeInfo)}let i=s,o=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new I(~i,o)}}return console.error(`Invalid unary operator ${t.operator}. Line ${t.line}`),null}_evalBinaryOp(t,r){let n=this.evalExpression(t.left,r),s=this.evalExpression(t.right,r),i=n instanceof I?n.value:n instanceof S||n instanceof Q?Array.from(n.data):null,o=s instanceof I?s.value:s instanceof S||s instanceof Q?Array.from(s.data):null;switch(t.operator){case"+":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d+h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u+f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f+u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a+c,l)}case"-":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d-h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u-f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f-u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a-c,l)}case"*":{if(X(i)&&X(o)){let f=i,h=o;if(n instanceof Q&&s instanceof Q){let u=function(g,x,A,_){if(er[x.name]===void 0||er[_.name]===void 0)return null;let y=er[x.name][0],T=er[x.name][1],v=er[_.name][0];if(y!==er[_.name][1])return null;let C=new Array(v*T);for(let w=0;w<T;w++)for(let E=0;E<v;E++){let b=0;for(let R=0;R<y;R++)b+=g[R*T+w]*A[E*y+R];C[w*v+E]=b}return C}(f,n.typeInfo,h,s.typeInfo);if(u===null)return console.error(`Matrix multiplication failed. Line ${t.line}.`),null;let d=er[s.typeInfo.name][0],p=er[n.typeInfo.name][1],m=this.getTypeInfo(`mat${d}x${p}f`);return new Q(u,m)}if(n instanceof Q&&s instanceof S){let u=function(d,p,m,g){if(er[p.name]===void 0||Oy[g.name]===void 0)return null;let x=er[p.name][0],A=er[p.name][1];if(x!==m.length)return null;let _=new Array(A);for(let y=0;y<A;y++){let T=0;for(let v=0;v<x;v++)T+=d[v*A+y]*m[v];_[y]=T}return _}(f,n.typeInfo,h,s.typeInfo);return u===null?(console.error(`Matrix vector multiplication failed. Line ${t.line}.`),null):new S(u,s.typeInfo)}if(n instanceof S&&s instanceof Q){let u=function(d,p,m,g){if(Oy[p.name]===void 0||er[g.name]===void 0)return null;let x=er[g.name][0],A=er[g.name][1];if(A!==d.length)return null;let _=[];for(let y=0;y<x;y++){let T=0;for(let v=0;v<A;v++)T+=d[v]*m[v*x+y];_[y]=T}return _}(f,n.typeInfo,h,s.typeInfo);return u===null?(console.error(`Matrix vector multiplication failed. Line ${t.line}.`),null):new S(u,n.typeInfo)}{if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d*h[p]);return new S(u,n.typeInfo)}}if(X(i)){let f=o,h=i.map((u,d)=>u*f);return n instanceof Q?new Q(h,n.typeInfo):new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f*u);return s instanceof Q?new Q(h,s.typeInfo):new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a*c,l)}case"%":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d%h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u%f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f%u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a%c,l)}case"/":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d/h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u/f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f/u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a/c,l)}case"&":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d&h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u&f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f&u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a&c,l)}case"|":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d|h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u|f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f|u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a|c,l)}case"^":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d^h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u^f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f^u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a^c,l)}case"<<":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d<<h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u<<f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f<<u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a<<c,l)}case">>":{if(X(i)&&X(o)){let f=i,h=o;if(f.length!==h.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let u=f.map((d,p)=>d>>h[p]);return new S(u,n.typeInfo)}if(X(i)){let f=o,h=i.map((u,d)=>u>>f);return new S(h,n.typeInfo)}if(X(o)){let f=i,h=o.map((u,d)=>f>>u);return new S(h,s.typeInfo)}let a=i,c=o,l=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new I(a>>c,l)}case">":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f>c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l>a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a>l?1:0);return new S(c,s.typeInfo)}return new I(i>o?1:0,this.getTypeInfo("bool"));case"<":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f<c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l<a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a<l?1:0);return new S(c,s.typeInfo)}return new I(i<o?1:0,this.getTypeInfo("bool"));case"==":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f===c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l==a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a==l?1:0);return new S(c,s.typeInfo)}return new I(i===o?1:0,this.getTypeInfo("bool"));case"!=":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f!==c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l!==a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a!==l?1:0);return new S(c,s.typeInfo)}return new I(i!==o?1:0,this.getTypeInfo("bool"));case">=":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f>=c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l>=a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a>=l?1:0);return new S(c,s.typeInfo)}return new I(i>=o?1:0,this.getTypeInfo("bool"));case"<=":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f<=c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l<=a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a<=l?1:0);return new S(c,s.typeInfo)}return new I(i<=o?1:0,this.getTypeInfo("bool"));case"&&":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f&&c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l&&a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a&&l?1:0);return new S(c,s.typeInfo)}return new I(i&&o?1:0,this.getTypeInfo("bool"));case"||":if(X(i)&&X(o)){let a=i,c=o;if(a.length!==c.length)return console.error(`Vector length mismatch. Line ${t.line}.`),null;let l=a.map((f,h)=>f||c[h]?1:0);return new S(l,n.typeInfo)}if(X(i)){let a=o,c=i.map((l,f)=>l||a?1:0);return new S(c,n.typeInfo)}if(X(o)){let a=i,c=o.map((l,f)=>a||l?1:0);return new S(c,s.typeInfo)}return new I(i||o?1:0,this.getTypeInfo("bool"))}return console.error(`Unknown operator ${t.operator}. Line ${t.line}`),null}_evalCall(t,r){if(t.cachedReturnValue!==null)return t.cachedReturnValue;let n=r.clone();n.currentFunctionName=t.name;let s=r.getFunction(t.name);if(!s)return t.isBuiltin?this._callBuiltinFunction(t,n):this.getTypeInfo(t.name)?this._evalCreate(t,r):(console.error(`Unknown function "${t.name}". Line ${t.line}`),null);for(let i=0;i<s.node.args.length;++i){let o=s.node.args[i],a=this.evalExpression(t.args[i],n);n.createVariable(o.name,a,o)}return this._execStatements(s.node.body,n)}_callBuiltinFunction(t,r){switch(t.name){case"all":return this.builtins.All(t,r);case"any":return this.builtins.Any(t,r);case"select":return this.builtins.Select(t,r);case"arrayLength":return this.builtins.ArrayLength(t,r);case"abs":return this.builtins.Abs(t,r);case"acos":return this.builtins.Acos(t,r);case"acosh":return this.builtins.Acosh(t,r);case"asin":return this.builtins.Asin(t,r);case"asinh":return this.builtins.Asinh(t,r);case"atan":return this.builtins.Atan(t,r);case"atanh":return this.builtins.Atanh(t,r);case"atan2":return this.builtins.Atan2(t,r);case"ceil":return this.builtins.Ceil(t,r);case"clamp":return this.builtins.Clamp(t,r);case"cos":return this.builtins.Cos(t,r);case"cosh":return this.builtins.Cosh(t,r);case"countLeadingZeros":return this.builtins.CountLeadingZeros(t,r);case"countOneBits":return this.builtins.CountOneBits(t,r);case"countTrailingZeros":return this.builtins.CountTrailingZeros(t,r);case"cross":return this.builtins.Cross(t,r);case"degrees":return this.builtins.Degrees(t,r);case"determinant":return this.builtins.Determinant(t,r);case"distance":return this.builtins.Distance(t,r);case"dot":return this.builtins.Dot(t,r);case"dot4U8Packed":return this.builtins.Dot4U8Packed(t,r);case"dot4I8Packed":return this.builtins.Dot4I8Packed(t,r);case"exp":return this.builtins.Exp(t,r);case"exp2":return this.builtins.Exp2(t,r);case"extractBits":return this.builtins.ExtractBits(t,r);case"faceForward":return this.builtins.FaceForward(t,r);case"firstLeadingBit":return this.builtins.FirstLeadingBit(t,r);case"firstTrailingBit":return this.builtins.FirstTrailingBit(t,r);case"floor":return this.builtins.Floor(t,r);case"fma":return this.builtins.Fma(t,r);case"fract":return this.builtins.Fract(t,r);case"frexp":return this.builtins.Frexp(t,r);case"insertBits":return this.builtins.InsertBits(t,r);case"inverseSqrt":return this.builtins.InverseSqrt(t,r);case"ldexp":return this.builtins.Ldexp(t,r);case"length":return this.builtins.Length(t,r);case"log":return this.builtins.Log(t,r);case"log2":return this.builtins.Log2(t,r);case"max":return this.builtins.Max(t,r);case"min":return this.builtins.Min(t,r);case"mix":return this.builtins.Mix(t,r);case"modf":return this.builtins.Modf(t,r);case"normalize":return this.builtins.Normalize(t,r);case"pow":return this.builtins.Pow(t,r);case"quantizeToF16":return this.builtins.QuantizeToF16(t,r);case"radians":return this.builtins.Radians(t,r);case"reflect":return this.builtins.Reflect(t,r);case"refract":return this.builtins.Refract(t,r);case"reverseBits":return this.builtins.ReverseBits(t,r);case"round":return this.builtins.Round(t,r);case"saturate":return this.builtins.Saturate(t,r);case"sign":return this.builtins.Sign(t,r);case"sin":return this.builtins.Sin(t,r);case"sinh":return this.builtins.Sinh(t,r);case"smoothstep":return this.builtins.SmoothStep(t,r);case"sqrt":return this.builtins.Sqrt(t,r);case"step":return this.builtins.Step(t,r);case"tan":return this.builtins.Tan(t,r);case"tanh":return this.builtins.Tanh(t,r);case"transpose":return this.builtins.Transpose(t,r);case"trunc":return this.builtins.Trunc(t,r);case"dpdx":return this.builtins.Dpdx(t,r);case"dpdxCoarse":return this.builtins.DpdxCoarse(t,r);case"dpdxFine":return this.builtins.DpdxFine(t,r);case"dpdy":return this.builtins.Dpdy(t,r);case"dpdyCoarse":return this.builtins.DpdyCoarse(t,r);case"dpdyFine":return this.builtins.DpdyFine(t,r);case"fwidth":return this.builtins.Fwidth(t,r);case"fwidthCoarse":return this.builtins.FwidthCoarse(t,r);case"fwidthFine":return this.builtins.FwidthFine(t,r);case"textureDimensions":return this.builtins.TextureDimensions(t,r);case"textureGather":return this.builtins.TextureGather(t,r);case"textureGatherCompare":return this.builtins.TextureGatherCompare(t,r);case"textureLoad":return this.builtins.TextureLoad(t,r);case"textureNumLayers":return this.builtins.TextureNumLayers(t,r);case"textureNumLevels":return this.builtins.TextureNumLevels(t,r);case"textureNumSamples":return this.builtins.TextureNumSamples(t,r);case"textureSample":return this.builtins.TextureSample(t,r);case"textureSampleBias":return this.builtins.TextureSampleBias(t,r);case"textureSampleCompare":return this.builtins.TextureSampleCompare(t,r);case"textureSampleCompareLevel":return this.builtins.TextureSampleCompareLevel(t,r);case"textureSampleGrad":return this.builtins.TextureSampleGrad(t,r);case"textureSampleLevel":return this.builtins.TextureSampleLevel(t,r);case"textureSampleBaseClampToEdge":return this.builtins.TextureSampleBaseClampToEdge(t,r);case"textureStore":return this.builtins.TextureStore(t,r);case"atomicLoad":return this.builtins.AtomicLoad(t,r);case"atomicStore":return this.builtins.AtomicStore(t,r);case"atomicAdd":return this.builtins.AtomicAdd(t,r);case"atomicSub":return this.builtins.AtomicSub(t,r);case"atomicMax":return this.builtins.AtomicMax(t,r);case"atomicMin":return this.builtins.AtomicMin(t,r);case"atomicAnd":return this.builtins.AtomicAnd(t,r);case"atomicOr":return this.builtins.AtomicOr(t,r);case"atomicXor":return this.builtins.AtomicXor(t,r);case"atomicExchange":return this.builtins.AtomicExchange(t,r);case"atomicCompareExchangeWeak":return this.builtins.AtomicCompareExchangeWeak(t,r);case"pack4x8snorm":return this.builtins.Pack4x8snorm(t,r);case"pack4x8unorm":return this.builtins.Pack4x8unorm(t,r);case"pack4xI8":return this.builtins.Pack4xI8(t,r);case"pack4xU8":return this.builtins.Pack4xU8(t,r);case"pack4x8Clamp":return this.builtins.Pack4x8Clamp(t,r);case"pack4xU8Clamp":return this.builtins.Pack4xU8Clamp(t,r);case"pack2x16snorm":return this.builtins.Pack2x16snorm(t,r);case"pack2x16unorm":return this.builtins.Pack2x16unorm(t,r);case"pack2x16float":return this.builtins.Pack2x16float(t,r);case"unpack4x8snorm":return this.builtins.Unpack4x8snorm(t,r);case"unpack4x8unorm":return this.builtins.Unpack4x8unorm(t,r);case"unpack4xI8":return this.builtins.Unpack4xI8(t,r);case"unpack4xU8":return this.builtins.Unpack4xU8(t,r);case"unpack2x16snorm":return this.builtins.Unpack2x16snorm(t,r);case"unpack2x16unorm":return this.builtins.Unpack2x16unorm(t,r);case"unpack2x16float":return this.builtins.Unpack2x16float(t,r);case"storageBarrier":return this.builtins.StorageBarrier(t,r);case"textureBarrier":return this.builtins.TextureBarrier(t,r);case"workgroupBarrier":return this.builtins.WorkgroupBarrier(t,r);case"workgroupUniformLoad":return this.builtins.WorkgroupUniformLoad(t,r);case"subgroupAdd":return this.builtins.SubgroupAdd(t,r);case"subgroupExclusiveAdd":return this.builtins.SubgroupExclusiveAdd(t,r);case"subgroupInclusiveAdd":return this.builtins.SubgroupInclusiveAdd(t,r);case"subgroupAll":return this.builtins.SubgroupAll(t,r);case"subgroupAnd":return this.builtins.SubgroupAnd(t,r);case"subgroupAny":return this.builtins.SubgroupAny(t,r);case"subgroupBallot":return this.builtins.SubgroupBallot(t,r);case"subgroupBroadcast":return this.builtins.SubgroupBroadcast(t,r);case"subgroupBroadcastFirst":return this.builtins.SubgroupBroadcastFirst(t,r);case"subgroupElect":return this.builtins.SubgroupElect(t,r);case"subgroupMax":return this.builtins.SubgroupMax(t,r);case"subgroupMin":return this.builtins.SubgroupMin(t,r);case"subgroupMul":return this.builtins.SubgroupMul(t,r);case"subgroupExclusiveMul":return this.builtins.SubgroupExclusiveMul(t,r);case"subgroupInclusiveMul":return this.builtins.SubgroupInclusiveMul(t,r);case"subgroupOr":return this.builtins.SubgroupOr(t,r);case"subgroupShuffle":return this.builtins.SubgroupShuffle(t,r);case"subgroupShuffleDown":return this.builtins.SubgroupShuffleDown(t,r);case"subgroupShuffleUp":return this.builtins.SubgroupShuffleUp(t,r);case"subgroupShuffleXor":return this.builtins.SubgroupShuffleXor(t,r);case"subgroupXor":return this.builtins.SubgroupXor(t,r);case"quadBroadcast":return this.builtins.QuadBroadcast(t,r);case"quadSwapDiagonal":return this.builtins.QuadSwapDiagonal(t,r);case"quadSwapX":return this.builtins.QuadSwapX(t,r);case"quadSwapY":return this.builtins.QuadSwapY(t,r)}let n=r.getFunction(t.name);if(n){let s=r.clone();for(let i=0;i<n.node.args.length;++i){let o=n.node.args[i],a=this.evalExpression(t.args[i],s);s.setVariable(o.name,a,o)}return this._execStatements(n.node.body,s)}return null}_callConstructorValue(t,r){if(!t.args||t.args.length===0)return new I(0,this.getTypeInfo(t.type));let n=this.evalExpression(t.args[0],r);return n.typeInfo=this.getTypeInfo(t.type),n.getSubData(this,t.postfix,r).clone()}_callConstructorVec(t,r){let n=this.getTypeInfo(t.type),s=t.type.getTypeName(),i=Oy[s];if(i===void 0)return console.error(`Invalid vec constructor ${s}. Line ${t.line}`),null;let o=[];if(t instanceof oe)if(t.isVector){let a=t.vectorValue;for(let c of a)o.push(c)}else o.push(t.scalarValue);else if(t.args)for(let a of t.args){let c=this.evalExpression(a,r);if(c instanceof S){let l=c.data;for(let f=0;f<l.length;++f){let h=l[f];o.push(h)}}else if(c instanceof I){let l=c.value;o.push(l)}}if(t.type instanceof B&&t.type.format===null&&(t.type.format=B.f32),o.length===0){let a=new Array(i).fill(0);return new S(a,n).getSubData(this,t.postfix,r)}if(o.length===1)for(;o.length<i;)o.push(o[0]);return o.length<i?(console.error(`Invalid vec constructor. Line ${t.line}`),null):new S(o.length>i?o.slice(0,i):o,n).getSubData(this,t.postfix,r)}_callConstructorMatrix(t,r){let n=this.getTypeInfo(t.type),s=t.type.getTypeName(),i=er[s];if(i===void 0)return console.error(`Invalid matrix constructor ${s}. Line ${t.line}`),null;let o=[];if(t instanceof oe)if(t.isVector){let a=t.vectorValue;for(let c of a)o.push(c)}else o.push(t.scalarValue);else if(t.args)for(let a of t.args){let c=this.evalExpression(a,r);c instanceof S?o.push(...c.data):c instanceof I?o.push(c.value):c instanceof Q&&o.push(...c.data)}if(n instanceof hs&&n.format===null&&(n.format=this.getTypeInfo("f32")),o.length===0){let a=new Array(i[2]).fill(0);return new Q(a,n).getSubData(this,t.postfix,r)}return o.length!==i[2]?(console.error(`Invalid matrix constructor. Line ${t.line}`),null):new Q(o,n).getSubData(this,t.postfix,r)}};we._breakObj=new pr(new ur("BREAK",null),null),we._continueObj=new pr(new ur("CONTINUE",null),null),we._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);var Yy=class{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}},$y=class{constructor(){this._tokens=[],this._current=0,this._currentLine=1,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new Yy,this._exec=new we,this._forwardTypeCount=0}parse(t){this._initialize(t),this._deferArrayCountEval.length=0;let r=[];for(;!this._isAtEnd();){let n=this._global_decl_or_directive();if(!n)break;r.push(n)}if(this._deferArrayCountEval.length>0){for(let n of this._deferArrayCountEval){let s=n.arrayType,i=n.countNode;if(i instanceof rr){let o=i.name,a=this._context.constants.get(o);if(a)try{let c=a.constEvaluate(this._exec);s.count=c}catch{}}}this._deferArrayCountEval.length=0}if(this._forwardTypeCount>0)for(let n of r)n.search(s=>{s instanceof Kp||s instanceof ja?s.type=this._forwardType(s.type):s instanceof fo?s.format=this._forwardType(s.format):s instanceof rn||s instanceof lo||s instanceof Ga?s.type=this._forwardType(s.type):s instanceof ho?s.returnType=this._forwardType(s.returnType):s instanceof $p&&(s.type=this._forwardType(s.type))});return r}_forwardType(t){if(t instanceof Wp){let r=this._getType(t.name);if(r)return r}else t instanceof ja?t.type=this._forwardType(t.type):t instanceof fo&&(t.format=this._forwardType(t.format));return t}_initialize(t){if(t)if(typeof t=="string"){let r=new Gy(t);this._tokens=r.scanTokens()}else this._tokens=t;else this._tokens=[];this._current=0}_updateNode(t,r){return t.line=r??this._currentLine,t}_error(t,r){return{token:t,message:r,toString:()=>`${r}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==M.eof}_match(t){if(t instanceof O)return!!this._check(t)&&(this._advance(),!0);for(let r=0,n=t.length;r<n;++r){let s=t[r];if(this._check(s))return this._advance(),!0}return!1}_consume(t,r){if(this._check(t))return this._advance();throw this._error(this._peek(),`${r}. Line:${this._currentLine}`)}_check(t){if(this._isAtEnd())return!1;let r=this._peek();if(t instanceof Array){let n=r.type,s=!1;for(let i of t){if(n===i)return!0;i===M.tokens.name&&(s=!0)}if(s){let i=M.tokens.name.rule.exec(r.lexeme);if(i&&i.index==0&&i[0]==r.lexeme)return!0}return!1}if(r.type===t)return!0;if(t===M.tokens.name){let n=M.tokens.name.rule.exec(r.lexeme);return n&&n.index==0&&n[0]==r.lexeme}return!1}_advance(){var t,r;return this._currentLine=(r=(t=this._peek())===null||t===void 0?void 0:t.line)!==null&&r!==void 0?r:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(M.tokens.semicolon)&&!this._isAtEnd(););if(this._match(M.keywords.alias)){let r=this._type_alias();return this._consume(M.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([r]),r}if(this._match(M.keywords.diagnostic)){let r=this._diagnostic();return this._consume(M.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([r]),r}if(this._match(M.keywords.requires)){let r=this._requires_directive();return this._consume(M.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([r]),r}if(this._match(M.keywords.enable)){let r=this._enable_directive();return this._consume(M.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([r]),r}let t=this._attribute();if(this._check(M.keywords.var)){let r=this._global_variable_decl();return r!=null&&(r.attributes=t),this._consume(M.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([r]),r}if(this._check(M.keywords.override)){let r=this._override_variable_decl();return r!=null&&(r.attributes=t),this._consume(M.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([r]),r}if(this._check(M.keywords.let)){let r=this._global_let_decl();return r!=null&&(r.attributes=t),this._consume(M.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([r]),r}if(this._check(M.keywords.const)){let r=this._global_const_decl();return r!=null&&(r.attributes=t),this._consume(M.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([r]),r}if(this._check(M.keywords.struct)){let r=this._struct_decl();return r!=null&&(r.attributes=t),this._exec.reflection.updateAST([r]),r}if(this._check(M.keywords.fn)){let r=this._function_decl();return r!=null&&(r.attributes=t),this._exec.reflection.updateAST([r]),r}return null}_function_decl(){if(!this._match(M.keywords.fn))return null;let t=this._currentLine,r=this._consume(M.tokens.ident,"Expected function name.").toString();this._consume(M.tokens.paren_left,"Expected '(' for function arguments.");let n=[];if(!this._check(M.tokens.paren_right))do{if(this._check(M.tokens.paren_right))break;let a=this._attribute(),c=this._consume(M.tokens.name,"Expected argument name.").toString();this._consume(M.tokens.colon,"Expected ':' for argument type.");let l=this._attribute(),f=this._type_decl();f!=null&&(f.attributes=l,n.push(this._updateNode(new $p(c,f,a))))}while(this._match(M.tokens.comma));this._consume(M.tokens.paren_right,"Expected ')' after function arguments.");let s=null;if(this._match(M.tokens.arrow)){let a=this._attribute();s=this._type_decl(),s!=null&&(s.attributes=a)}let i=this._compound_statement(),o=this._currentLine;return this._updateNode(new ho(r,n,s,i,t,o),t)}_compound_statement(){let t=[];for(this._consume(M.tokens.brace_left,"Expected '{' for block.");!this._check(M.tokens.brace_right);){let r=this._statement();r!==null&&t.push(r)}return this._consume(M.tokens.brace_right,"Expected '}' for block."),t}_statement(){for(;this._match(M.tokens.semicolon)&&!this._isAtEnd(););if(this._check(M.tokens.attr)&&this._attribute(),this._check(M.keywords.if))return this._if_statement();if(this._check(M.keywords.switch))return this._switch_statement();if(this._check(M.keywords.loop))return this._loop_statement();if(this._check(M.keywords.for))return this._for_statement();if(this._check(M.keywords.while))return this._while_statement();if(this._check(M.keywords.continuing))return this._continuing_statement();if(this._check(M.keywords.static_assert))return this._static_assert_statement();if(this._check(M.tokens.brace_left))return this._compound_statement();let t=null;if(this._check(M.keywords.return))t=this._return_statement();else if(this._check([M.keywords.var,M.keywords.let,M.keywords.const]))t=this._variable_statement();else if(this._match(M.keywords.discard))t=this._updateNode(new Wy);else if(this._match(M.keywords.break)){let r=this._updateNode(new zp);if(this._currentLoop.length>0){let n=this._currentLoop[this._currentLoop.length-1];r.loopId=n.id}t=r,this._check(M.keywords.if)&&(this._advance(),r.condition=this._optional_paren_expression())}else if(this._match(M.keywords.continue)){let r=this._updateNode(new Vp);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${r.line}`);{let n=this._currentLoop[this._currentLoop.length-1];r.loopId=n.id}t=r}else t=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return t!=null&&this._consume(M.tokens.semicolon,"Expected ';' after statement."),t}_static_assert_statement(){if(!this._match(M.keywords.static_assert))return null;let t=this._currentLine,r=this._optional_paren_expression();return this._updateNode(new Uy(r),t)}_while_statement(){if(!this._match(M.keywords.while))return null;let t=this._updateNode(new Rp(null,null));return this._currentLoop.push(t),t.condition=this._optional_paren_expression(),this._check(M.tokens.attr)&&this._attribute(),t.body=this._compound_statement(),this._currentLoop.pop(),t}_continuing_statement(){let t=this._currentLoop.length>0?this._currentLoop[this._currentLoop.length-1].id:-1;if(!this._match(M.keywords.continuing))return null;let r=this._currentLine,n=this._compound_statement();return this._updateNode(new Tf(n,t),r)}_for_statement(){if(!this._match(M.keywords.for))return null;this._consume(M.tokens.paren_left,"Expected '('.");let t=this._updateNode(new Op(null,null,null,null));return this._currentLoop.push(t),t.init=this._check(M.tokens.semicolon)?null:this._for_init(),this._consume(M.tokens.semicolon,"Expected ';'."),t.condition=this._check(M.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(M.tokens.semicolon,"Expected ';'."),t.increment=this._check(M.tokens.paren_right)?null:this._for_increment(),this._consume(M.tokens.paren_right,"Expected ')'."),this._check(M.tokens.attr)&&this._attribute(),t.body=this._compound_statement(),this._currentLoop.pop(),t}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(M.keywords.var)){let t=this._variable_decl();if(t===null)throw this._error(this._peek(),"Variable declaration expected.");let r=null;return this._match(M.tokens.equal)&&(r=this._short_circuit_or_expression()),this._updateNode(new rn(t.name,t.type,t.storage,t.access,r),t.line)}if(this._match(M.keywords.let)){let t=this._currentLine,r=this._consume(M.tokens.name,"Expected name for let.").toString(),n=null;if(this._match(M.tokens.colon)){let i=this._attribute();n=this._type_decl(),n!=null&&(n.attributes=i)}this._consume(M.tokens.equal,"Expected '=' for let.");let s=this._short_circuit_or_expression();return this._updateNode(new lo(r,n,null,null,s),t)}if(this._match(M.keywords.const)){let t=this._currentLine,r=this._consume(M.tokens.name,"Expected name for const.").toString(),n=null;if(this._match(M.tokens.colon)){let i=this._attribute();n=this._type_decl(),n!=null&&(n.attributes=i)}this._consume(M.tokens.equal,"Expected '=' for const.");let s=this._short_circuit_or_expression();return n===null&&s instanceof oe&&(n=s.type),this._updateNode(new Ga(r,n,null,null,s),t)}return null}_increment_decrement_statement(){let t=this._current,r=this._unary_expression();if(r==null)return null;if(!this._check(M.increment_operators))return this._current=t,null;let n=this._consume(M.increment_operators,"Expected increment operator");return this._updateNode(new Lp(n.type===M.tokens.plus_plus?Wa.increment:Wa.decrement,r))}_assignment_statement(){let t=null,r=this._currentLine;if(this._check(M.tokens.brace_right))return null;let n=this._match(M.tokens.underscore);if(n||(t=this._unary_expression()),!n&&t==null)return null;let s=this._consume(M.assignment_operators,"Expected assignment operator."),i=this._short_circuit_or_expression();return this._updateNode(new Bp(Af.parse(s.lexeme),t,i),r)}_func_call_statement(){if(!this._check(M.tokens.ident))return null;let t=this._currentLine,r=this._current,n=this._consume(M.tokens.ident,"Expected function name."),s=this._argument_expression_list();return s===null?(this._current=r,null):this._updateNode(new Ef(n.lexeme,s),t)}_loop_statement(){if(!this._match(M.keywords.loop))return null;this._check(M.tokens.attr)&&this._attribute(),this._consume(M.tokens.brace_left,"Expected '{' for loop.");let t=this._updateNode(new Np([],null));this._currentLoop.push(t);let r=this._statement();for(;r!==null;){if(Array.isArray(r))for(let n of r)t.body.push(n);else t.body.push(r);if(r instanceof Tf){t.continuing=r;break}r=this._statement()}return this._currentLoop.pop(),this._consume(M.tokens.brace_right,"Expected '}' for loop."),t}_switch_statement(){if(!this._match(M.keywords.switch))return null;let t=this._updateNode(new Fp(null,[]));if(this._currentLoop.push(t),t.condition=this._optional_paren_expression(),this._check(M.tokens.attr)&&this._attribute(),this._consume(M.tokens.brace_left,"Expected '{' for switch."),t.cases=this._switch_body(),t.cases==null||t.cases.length==0)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(M.tokens.brace_right,"Expected '}' for switch."),this._currentLoop.pop(),t}_switch_body(){let t=[],r=!1;for(;this._check([M.keywords.default,M.keywords.case]);){if(this._match(M.keywords.case)){let n=this._case_selectors();for(let i of n)if(i instanceof qa){if(r)throw this._error(this._previous(),"Multiple default cases in switch statement.");r=!0;break}this._match(M.tokens.colon),this._check(M.tokens.attr)&&this._attribute(),this._consume(M.tokens.brace_left,"Exected '{' for switch case.");let s=this._case_body();this._consume(M.tokens.brace_right,"Exected '}' for switch case."),t.push(this._updateNode(new Xp(n,s)))}if(this._match(M.keywords.default)){if(r)throw this._error(this._previous(),"Multiple default cases in switch statement.");this._match(M.tokens.colon),this._check(M.tokens.attr)&&this._attribute(),this._consume(M.tokens.brace_left,"Exected '{' for switch default.");let n=this._case_body();this._consume(M.tokens.brace_right,"Exected '}' for switch default."),t.push(this._updateNode(new Yp(n)))}}return t}_case_selectors(){let t=[];for(this._match(M.keywords.default)?t.push(this._updateNode(new qa)):t.push(this._shift_expression());this._match(M.tokens.comma);)this._match(M.keywords.default)?t.push(this._updateNode(new qa)):t.push(this._shift_expression());return t}_case_body(){if(this._match(M.keywords.fallthrough))return this._consume(M.tokens.semicolon,"Expected ';'"),[];let t=this._statement();if(t==null)return[];t instanceof Array||(t=[t]);let r=this._case_body();return r.length==0?t:[...t,r[0]]}_if_statement(){if(!this._match(M.keywords.if))return null;let t=this._currentLine,r=this._optional_paren_expression();this._check(M.tokens.attr)&&this._attribute();let n=this._compound_statement(),s=[];this._match_elseif()&&(this._check(M.tokens.attr)&&this._attribute(),s=this._elseif_statement(s));let i=null;return this._match(M.keywords.else)&&(this._check(M.tokens.attr)&&this._attribute(),i=this._compound_statement()),this._updateNode(new Dp(r,n,s,i),t)}_match_elseif(){return this._tokens[this._current].type===M.keywords.else&&this._tokens[this._current+1].type===M.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(t=[]){let r=this._optional_paren_expression(),n=this._compound_statement();return t.push(this._updateNode(new Hy(r,n))),this._match_elseif()&&(this._check(M.tokens.attr)&&this._attribute(),this._elseif_statement(t)),t}_return_statement(){if(!this._match(M.keywords.return))return null;let t=this._short_circuit_or_expression();return this._updateNode(new kp(t))}_short_circuit_or_expression(){let t=this._short_circuit_and_expr();for(;this._match(M.tokens.or_or);)t=this._updateNode(new Mr(this._previous().toString(),t,this._short_circuit_and_expr()));return t}_short_circuit_and_expr(){let t=this._inclusive_or_expression();for(;this._match(M.tokens.and_and);)t=this._updateNode(new Mr(this._previous().toString(),t,this._inclusive_or_expression()));return t}_inclusive_or_expression(){let t=this._exclusive_or_expression();for(;this._match(M.tokens.or);)t=this._updateNode(new Mr(this._previous().toString(),t,this._exclusive_or_expression()));return t}_exclusive_or_expression(){let t=this._and_expression();for(;this._match(M.tokens.xor);)t=this._updateNode(new Mr(this._previous().toString(),t,this._and_expression()));return t}_and_expression(){let t=this._equality_expression();for(;this._match(M.tokens.and);)t=this._updateNode(new Mr(this._previous().toString(),t,this._equality_expression()));return t}_equality_expression(){let t=this._relational_expression();return this._match([M.tokens.equal_equal,M.tokens.not_equal])?this._updateNode(new Mr(this._previous().toString(),t,this._relational_expression())):t}_relational_expression(){let t=this._shift_expression();for(;this._match([M.tokens.less_than,M.tokens.greater_than,M.tokens.less_than_equal,M.tokens.greater_than_equal]);)t=this._updateNode(new Mr(this._previous().toString(),t,this._shift_expression()));return t}_shift_expression(){let t=this._additive_expression();for(;this._match([M.tokens.shift_left,M.tokens.shift_right]);)t=this._updateNode(new Mr(this._previous().toString(),t,this._additive_expression()));return t}_additive_expression(){let t=this._multiplicative_expression();for(;this._match([M.tokens.plus,M.tokens.minus]);)t=this._updateNode(new Mr(this._previous().toString(),t,this._multiplicative_expression()));return t}_multiplicative_expression(){let t=this._unary_expression();for(;this._match([M.tokens.star,M.tokens.forward_slash,M.tokens.modulo]);)t=this._updateNode(new Mr(this._previous().toString(),t,this._unary_expression()));return t}_unary_expression(){return this._match([M.tokens.minus,M.tokens.bang,M.tokens.tilde,M.tokens.star,M.tokens.and])?this._updateNode(new ee(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){let t=this._primary_expression(),r=this._postfix_expression();return r&&(t.postfix=r),t}_postfix_expression(){if(this._match(M.tokens.bracket_left)){let t=this._short_circuit_or_expression();this._consume(M.tokens.bracket_right,"Expected ']'.");let r=this._updateNode(new si(t)),n=this._postfix_expression();return n&&(r.postfix=n),r}if(this._match(M.tokens.period)){let t=this._consume(M.tokens.name,"Expected member name."),r=this._postfix_expression(),n=this._updateNode(new us(t.lexeme));return r&&(n.postfix=r),n}return null}_getStruct(t){return this._context.aliases.has(t)?this._context.aliases.get(t).type:this._context.structs.has(t)?this._context.structs.get(t):null}_getType(t){let r=this._getStruct(t);if(r!==null)return r;switch(t){case"void":return z.void;case"bool":return z.bool;case"i32":return z.i32;case"u32":return z.u32;case"f32":return z.f32;case"f16":return z.f16;case"vec2f":return B.vec2f;case"vec3f":return B.vec3f;case"vec4f":return B.vec4f;case"vec2i":return B.vec2i;case"vec3i":return B.vec3i;case"vec4i":return B.vec4i;case"vec2u":return B.vec2u;case"vec3u":return B.vec3u;case"vec4u":return B.vec4u;case"vec2h":return B.vec2h;case"vec3h":return B.vec3h;case"vec4h":return B.vec4h;case"mat2x2f":return B.mat2x2f;case"mat2x3f":return B.mat2x3f;case"mat2x4f":return B.mat2x4f;case"mat3x2f":return B.mat3x2f;case"mat3x3f":return B.mat3x3f;case"mat3x4f":return B.mat3x4f;case"mat4x2f":return B.mat4x2f;case"mat4x3f":return B.mat4x3f;case"mat4x4f":return B.mat4x4f;case"mat2x2h":return B.mat2x2h;case"mat2x3h":return B.mat2x3h;case"mat2x4h":return B.mat2x4h;case"mat3x2h":return B.mat3x2h;case"mat3x3h":return B.mat3x3h;case"mat3x4h":return B.mat3x4h;case"mat4x2h":return B.mat4x2h;case"mat4x3h":return B.mat4x3h;case"mat4x4h":return B.mat4x4h;case"mat2x2i":return B.mat2x2i;case"mat2x3i":return B.mat2x3i;case"mat2x4i":return B.mat2x4i;case"mat3x2i":return B.mat3x2i;case"mat3x3i":return B.mat3x3i;case"mat3x4i":return B.mat3x4i;case"mat4x2i":return B.mat4x2i;case"mat4x3i":return B.mat4x3i;case"mat4x4i":return B.mat4x4i;case"mat2x2u":return B.mat2x2u;case"mat2x3u":return B.mat2x3u;case"mat2x4u":return B.mat2x4u;case"mat3x2u":return B.mat3x2u;case"mat3x3u":return B.mat3x3u;case"mat3x4u":return B.mat3x4u;case"mat4x2u":return B.mat4x2u;case"mat4x3u":return B.mat4x3u;case"mat4x4u":return B.mat4x4u}return null}_validateTypeRange(t,r){if(r.name==="i32"){if(t<-2147483648||t>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${t}. Line: ${this._currentLine}.`)}else if(r.name==="u32"&&(t<0||t>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${t}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(M.tokens.ident)){let n=this._previous().toString();if(this._check(M.tokens.paren_left)){let s=this._argument_expression_list(),i=this._getType(n);return i!==null?this._updateNode(new Dr(i,s)):this._updateNode(new Sf(n,s))}if(this._context.constants.has(n)){let s=this._context.constants.get(n);return this._updateNode(new Hp(n,s.value))}return this._updateNode(new rr(n))}if(this._match(M.tokens.int_literal)){let n=this._previous().toString(),s=n.endsWith("i")||n.endsWith("i")?z.i32:n.endsWith("u")||n.endsWith("U")?z.u32:z.x32,i=parseInt(n);return this._validateTypeRange(i,s),this._updateNode(new oe(new I(i,this._exec.getTypeInfo(s)),s))}if(this._match(M.tokens.uint_literal)){let n=parseInt(this._previous().toString());return this._validateTypeRange(n,z.u32),this._updateNode(new oe(new I(n,this._exec.getTypeInfo(z.u32)),z.u32))}if(this._match([M.tokens.decimal_float_literal,M.tokens.hex_float_literal])){let n=this._previous().toString(),s=n.endsWith("h");s&&(n=n.substring(0,n.length-1));let i=parseFloat(n);this._validateTypeRange(i,s?z.f16:z.f32);let o=s?z.f16:z.f32;return this._updateNode(new oe(new I(i,this._exec.getTypeInfo(o)),o))}if(this._match([M.keywords.true,M.keywords.false])){let n=this._previous().toString()===M.keywords.true.rule;return this._updateNode(new oe(new I(n?1:0,this._exec.getTypeInfo(z.bool)),z.bool))}if(this._check(M.tokens.paren_left))return this._paren_expression();if(this._match(M.keywords.bitcast)){this._consume(M.tokens.less_than,"Expected '<'.");let n=this._type_decl();this._consume(M.tokens.greater_than,"Expected '>'.");let s=this._paren_expression();return this._updateNode(new Gp(n,s))}let t=this._type_decl(),r=this._argument_expression_list();return this._updateNode(new Dr(t,r))}_argument_expression_list(){if(!this._match(M.tokens.paren_left))return null;let t=[];do{if(this._check(M.tokens.paren_right))break;let r=this._short_circuit_or_expression();t.push(r)}while(this._match(M.tokens.comma));return this._consume(M.tokens.paren_right,"Expected ')' for agument list"),t}_optional_paren_expression(){this._match(M.tokens.paren_left);let t=this._short_circuit_or_expression();return this._match(M.tokens.paren_right),t}_paren_expression(){this._consume(M.tokens.paren_left,"Expected '('.");let t=this._short_circuit_or_expression();return this._consume(M.tokens.paren_right,"Expected ')'."),t}_struct_decl(){if(!this._match(M.keywords.struct))return null;let t=this._currentLine,r=this._consume(M.tokens.ident,"Expected name for struct.").toString();this._consume(M.tokens.brace_left,"Expected '{' for struct body.");let n=[];for(;!this._check(M.tokens.brace_right);){let o=this._attribute(),a=this._consume(M.tokens.name,"Expected variable name.").toString();this._consume(M.tokens.colon,"Expected ':' for struct member type.");let c=this._attribute(),l=this._type_decl();l!=null&&(l.attributes=c),this._check(M.tokens.brace_right)?this._match(M.tokens.comma):this._consume(M.tokens.comma,"Expected ',' for struct member."),n.push(this._updateNode(new Kp(a,l,o)))}this._consume(M.tokens.brace_right,"Expected '}' after struct body.");let s=this._currentLine,i=this._updateNode(new tn(r,n,t,s),t);return this._context.structs.set(r,i),i}_global_variable_decl(){let t=this._variable_decl();if(!t)return null;if(this._match(M.tokens.equal)){let r=this._const_expression();t.value=r}if(t.type!==null&&t.value instanceof oe){if(t.value.type.name!=="x32"&&t.type.getTypeName()!==t.value.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${t.value.type.name} to ${t.type.name}. Line:${this._currentLine}`);t.value.isScalar&&this._validateTypeRange(t.value.scalarValue,t.type),t.value.type=t.type}else t.type===null&&t.value instanceof oe&&(t.type=t.value.type.name==="x32"?z.i32:t.value.type,t.value.isScalar&&this._validateTypeRange(t.value.scalarValue,t.type));return t}_override_variable_decl(){let t=this._override_decl();return t&&this._match(M.tokens.equal)&&(t.value=this._const_expression()),t}_global_const_decl(){var t;if(!this._match(M.keywords.const))return null;let r=this._consume(M.tokens.name,"Expected variable name"),n=this._currentLine,s=null;if(this._match(M.tokens.colon)){let c=this._attribute();s=this._type_decl(),s!=null&&(s.attributes=c)}let i=null;this._consume(M.tokens.equal,"const declarations require an assignment");let o=this._short_circuit_or_expression();try{let c=[z.f32],l=o.constEvaluate(this._exec,c);l instanceof I&&this._validateTypeRange(l.value,c[0]),c[0]instanceof B&&c[0].format===null&&l.typeInfo instanceof hs&&l.typeInfo.format!==null&&(l.typeInfo.format.name==="f16"?c[0].format=z.f16:l.typeInfo.format.name==="f32"?c[0].format=z.f32:l.typeInfo.format.name==="i32"?c[0].format=z.i32:l.typeInfo.format.name==="u32"?c[0].format=z.u32:l.typeInfo.format.name==="bool"?c[0].format=z.bool:console.error(`TODO: impelement template format type ${l.typeInfo.format.name}`)),i=this._updateNode(new oe(l,c[0])),this._exec.context.setVariable(r.toString(),l)}catch{i=o}if(s!==null&&i instanceof oe){if(i.type.name!=="x32"&&s.getTypeName()!==i.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${i.type.name} to ${s.name}. Line:${this._currentLine}`);i.type=s,i.isScalar&&this._validateTypeRange(i.scalarValue,i.type)}else s===null&&i instanceof oe&&(s=(t=i?.type)!==null&&t!==void 0?t:z.f32,s===z.x32&&(s=z.i32));let a=this._updateNode(new Ga(r.toString(),s,"","",i),n);return this._context.constants.set(a.name,a),a}_global_let_decl(){if(!this._match(M.keywords.let))return null;let t=this._currentLine,r=this._consume(M.tokens.name,"Expected variable name"),n=null;if(this._match(M.tokens.colon)){let i=this._attribute();n=this._type_decl(),n!=null&&(n.attributes=i)}let s=null;if(this._match(M.tokens.equal)&&(s=this._const_expression()),n!==null&&s instanceof oe){if(s.type.name!=="x32"&&n.getTypeName()!==s.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${n.name}. Line:${this._currentLine}`);s.type=n}else n===null&&s instanceof oe&&(n=s.type.name==="x32"?z.i32:s.type);return s instanceof oe&&s.isScalar&&this._validateTypeRange(s.scalarValue,n),this._updateNode(new lo(r.toString(),n,"","",s),t)}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(M.keywords.var))return null;let t=this._currentLine,r="",n="";this._match(M.tokens.less_than)&&(r=this._consume(M.storage_class,"Expected storage_class.").toString(),this._match(M.tokens.comma)&&(n=this._consume(M.access_mode,"Expected access_mode.").toString()),this._consume(M.tokens.greater_than,"Expected '>'."));let s=this._consume(M.tokens.name,"Expected variable name"),i=null;if(this._match(M.tokens.colon)){let o=this._attribute();i=this._type_decl(),i!=null&&(i.attributes=o)}return this._updateNode(new rn(s.toString(),i,r,n,null),t)}_override_decl(){if(!this._match(M.keywords.override))return null;let t=this._consume(M.tokens.name,"Expected variable name"),r=null;if(this._match(M.tokens.colon)){let n=this._attribute();r=this._type_decl(),r!=null&&(r.attributes=n)}return this._updateNode(new vf(t.toString(),r,null))}_diagnostic(){this._consume(M.tokens.paren_left,"Expected '('");let t=this._consume(M.tokens.ident,"Expected severity control name.");this._consume(M.tokens.comma,"Expected ','");let r=this._consume(M.tokens.ident,"Expected diagnostic rule name.").toString();return this._match(M.tokens.period)&&(r+=`.${this._consume(M.tokens.ident,"Expected diagnostic message.").toString()}`),this._consume(M.tokens.paren_right,"Expected ')'"),this._updateNode(new Up(t.toString(),r))}_enable_directive(){let t=this._consume(M.tokens.ident,"identity expected.");return this._updateNode(new zy(t.toString()))}_requires_directive(){let t=[this._consume(M.tokens.ident,"identity expected.").toString()];for(;this._match(M.tokens.comma);){let r=this._consume(M.tokens.ident,"identity expected.");t.push(r.toString())}return this._updateNode(new Vy(t))}_type_alias(){let t=this._consume(M.tokens.ident,"identity expected.");this._consume(M.tokens.equal,"Expected '=' for type alias.");let r=this._type_decl();if(r===null)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(r.name)&&(r=this._context.aliases.get(r.name).type);let n=this._updateNode(new Mf(t.toString(),r));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([M.tokens.ident,...M.texel_format,M.keywords.bool,M.keywords.f32,M.keywords.i32,M.keywords.u32])){let n=this._advance().toString();if(this._context.structs.has(n))return this._context.structs.get(n);if(this._context.aliases.has(n))return this._context.aliases.get(n).type;if(!this._getType(n)){let s=this._updateNode(new Wp(n));return this._forwardTypeCount++,s}return this._updateNode(new z(n))}let t=this._texture_sampler_types();if(t)return t;if(this._check(M.template_types)){let n=this._advance().toString(),s=null,i=null;return this._match(M.tokens.less_than)&&(s=this._type_decl(),i=null,this._match(M.tokens.comma)&&(i=this._consume(M.access_mode,"Expected access_mode for pointer").toString()),this._consume(M.tokens.greater_than,"Expected '>' for type.")),this._updateNode(new B(n,s,i))}if(this._match(M.keywords.ptr)){let n=this._previous().toString();this._consume(M.tokens.less_than,"Expected '<' for pointer.");let s=this._consume(M.storage_class,"Expected storage_class for pointer");this._consume(M.tokens.comma,"Expected ',' for pointer.");let i=this._type_decl(),o=null;return this._match(M.tokens.comma)&&(o=this._consume(M.access_mode,"Expected access_mode for pointer").toString()),this._consume(M.tokens.greater_than,"Expected '>' for pointer."),this._updateNode(new ja(n,s.toString(),i,o))}let r=this._attribute();if(this._match(M.keywords.array)){let n=null,s=-1,i=this._previous(),o=null;if(this._match(M.tokens.less_than)){n=this._type_decl(),this._context.aliases.has(n.name)&&(n=this._context.aliases.get(n.name).type);let c="";if(this._match(M.tokens.comma)){o=this._shift_expression();try{c=o.constEvaluate(this._exec).toString(),o=null}catch{c="1"}}this._consume(M.tokens.greater_than,"Expected '>' for array."),s=c?parseInt(c):0}let a=this._updateNode(new fo(i.toString(),r,n,s));return o&&this._deferArrayCountEval.push({arrayType:a,countNode:o}),a}return null}_texture_sampler_types(){if(this._match(M.sampler_type))return this._updateNode(new co(this._previous().toString(),null,null));if(this._match(M.depth_texture_type))return this._updateNode(new co(this._previous().toString(),null,null));if(this._match(M.sampled_texture_type)||this._match(M.multisampled_texture_type)){let t=this._previous();this._consume(M.tokens.less_than,"Expected '<' for sampler type.");let r=this._type_decl();return this._consume(M.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new co(t.toString(),r,null))}if(this._match(M.storage_texture_type)){let t=this._previous();this._consume(M.tokens.less_than,"Expected '<' for sampler type.");let r=this._consume(M.texel_format,"Invalid texel format.").toString();this._consume(M.tokens.comma,"Expected ',' after texel format.");let n=this._consume(M.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(M.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new co(t.toString(),r,n))}return null}_attribute(){let t=[];for(;this._match(M.tokens.attr);){let r=this._consume(M.attribute_name,"Expected attribute name"),n=this._updateNode(new Zp(r.toString(),null));if(this._match(M.tokens.paren_left)){if(n.value=this._consume(M.literal_or_ident,"Expected attribute value").toString(),this._check(M.tokens.comma)){this._advance();do{let s=this._consume(M.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(s)}while(this._match(M.tokens.comma))}this._consume(M.tokens.paren_right,"Expected ')'")}t.push(n)}return t.length==0?null:t}},rm=class extends kr{constructor(t){super(),t&&this.update(t)}update(t){let r=new $y().parse(t);this.updateAST(r)}};function Jy(e){let t={attributes:[],bindings:[]},r;try{r=wW(e)}catch(i){return U.error(i.message)(),t}for(let i of r.uniforms){let o=[];for(let a of i.type?.members||[])o.push({name:a.name,type:wS(a.type)});t.bindings.push({type:"uniform",name:i.name,group:i.group,location:i.binding,members:o})}for(let i of r.textures)t.bindings.push({type:"texture",name:i.name,group:i.group,location:i.binding});for(let i of r.samplers)t.bindings.push({type:"sampler",name:i.name,group:i.group,location:i.binding});let n=r.entry.vertex[0],s=n?.inputs.length||0;for(let i=0;i<s;i++){let o=n.inputs[i];if(o.locationType==="location"){let a=wS(o.type);t.attributes.push({name:o.name,location:Number(o.location),type:a})}}return t}function wS(e){return e.format?`${e.name}<${e.format.name}>`:e.name}function wW(e){try{return new rm(e)}catch(t){if(t instanceof Error)throw t;let r="WGSL parse error";throw typeof t=="object"&&t?.message&&(r+=`: ${t.message} `),typeof t=="object"&&t?.token&&(r+=t.token.line||""),new Error(r,{cause:t})}}var CW=1/Math.PI*180,PW=1/180*Math.PI,IW={EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1};globalThis.mathgl=globalThis.mathgl||{config:{...IW}};var Ut=globalThis.mathgl.config;function Rf(e,{precision:t=Ut.precision}={}){return e=RW(e),`${parseFloat(e.toPrecision(t))}`}function wr(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}function $a(e,t){return Qy(e,r=>r*PW,t)}function ii(e,t){return Qy(e,r=>r*CW,t)}function xt(e,t,r){return Qy(e,n=>Math.max(t,Math.min(r,n)))}function be(e,t,r){return wr(e)?e.map((n,s)=>be(n,t[s],r)):r*t+(1-r)*e}function Yt(e,t,r){let n=Ut.EPSILON;r&&(Ut.EPSILON=r);try{if(e===t)return!0;if(wr(e)&&wr(t)){if(e.length!==t.length)return!1;for(let s=0;s<e.length;++s)if(!Yt(e[s],t[s]))return!1;return!0}return e&&e.equals?e.equals(t):t&&t.equals?t.equals(e):typeof e=="number"&&typeof t=="number"?Math.abs(e-t)<=Ut.EPSILON*Math.max(1,Math.abs(e),Math.abs(t)):!1}finally{Ut.EPSILON=n}}function RW(e){return Math.round(e/Ut.EPSILON)*Ut.EPSILON}function OW(e){return e.clone?e.clone():new Array(e.length)}function Qy(e,t,r){if(wr(e)){let n=e;r=r||OW(n);for(let s=0;s<r.length&&s<n.length;++s){let i=typeof e=="number"?e:e[s];r[s]=t(i,s,r)}return r}return t(e)}var oi=class extends Array{clone(){return new this.constructor().copy(this)}fromArray(t,r=0){for(let n=0;n<this.ELEMENTS;++n)this[n]=t[n+r];return this.check()}toArray(t=[],r=0){for(let n=0;n<this.ELEMENTS;++n)t[r+n]=this[n];return t}toObject(t){return t}from(t){return Array.isArray(t)?this.copy(t):this.fromObject(t)}to(t){return t===this?this:wr(t)?this.toArray(t):this.toObject(t)}toTarget(t){return t?this.to(t):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(Ut)}formatString(t){let r="";for(let n=0;n<this.ELEMENTS;++n)r+=(n>0?", ":"")+Rf(this[n],t);return`${t.printTypes?this.constructor.name:""}[${r}]`}equals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(!Yt(this[r],t[r]))return!1;return!0}exactEquals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(this[r]!==t[r])return!1;return!0}negate(){for(let t=0;t<this.ELEMENTS;++t)this[t]=-this[t];return this.check()}lerp(t,r,n){if(n===void 0)return this.lerp(this,t,r);for(let s=0;s<this.ELEMENTS;++s){let i=t[s],o=typeof r=="number"?r:r[s];this[s]=i+n*(o-i)}return this.check()}min(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.min(t[r],this[r]);return this.check()}max(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.max(t[r],this[r]);return this.check()}clamp(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t[n]),r[n]);return this.check()}add(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]+=r[n];return this.check()}subtract(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]-=r[n];return this.check()}scale(t){if(typeof t=="number")for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;else for(let r=0;r<this.ELEMENTS&&r<t.length;++r)this[r]*=t[r];return this.check()}multiplyByScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}check(){if(Ut.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let t=this.length===this.ELEMENTS;for(let r=0;r<this.ELEMENTS;++r)t=t&&Number.isFinite(this[r]);return t}sub(t){return this.subtract(t)}setScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=t;return this.check()}addScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]+=t;return this.check()}subScalar(t){return this.addScalar(-t)}multiplyScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}divideScalar(t){return this.multiplyByScalar(1/t)}clampScalar(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t),r);return this.check()}get elements(){return this}};function LW(e,t){if(e.length!==t)return!1;for(let r=0;r<e.length;++r)if(!Number.isFinite(e[r]))return!1;return!0}function dt(e){if(!Number.isFinite(e))throw new Error(`Invalid number ${JSON.stringify(e)}`);return e}function ai(e,t,r=""){if(Ut.debug&&!LW(e,t))throw new Error(`math.gl: ${r} some fields set to invalid numbers'`);return e}function Nn(e,t){if(!e)throw new Error(`math.gl assertion ${t}`)}var ci=class extends oi{get x(){return this[0]}set x(t){this[0]=dt(t)}get y(){return this[1]}set y(t){this[1]=dt(t)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let t=0;for(let r=0;r<this.ELEMENTS;++r)t+=this[r]*this[r];return t}magnitudeSquared(){return this.lengthSquared()}distance(t){return Math.sqrt(this.distanceSquared(t))}distanceSquared(t){let r=0;for(let n=0;n<this.ELEMENTS;++n){let s=this[n]-t[n];r+=s*s}return dt(r)}dot(t){let r=0;for(let n=0;n<this.ELEMENTS;++n)r+=this[n]*t[n];return dt(r)}normalize(){let t=this.magnitude();if(t!==0)for(let r=0;r<this.ELEMENTS;++r)this[r]/=t;return this.check()}multiply(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]*=r[n];return this.check()}divide(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]/=r[n];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(t){return this.distance(t)}distanceToSquared(t){return this.distanceSquared(t)}getComponent(t){return Nn(t>=0&&t<this.ELEMENTS,"index is out of range"),dt(this[t])}setComponent(t,r){return Nn(t>=0&&t<this.ELEMENTS,"index is out of range"),this[t]=r,this.check()}addVectors(t,r){return this.copy(t).add(r)}subVectors(t,r){return this.copy(t).subtract(r)}multiplyVectors(t,r){return this.copy(t).multiply(r)}addScaledVector(t,r){return this.add(new this.constructor(t).multiplyScalar(r))}};var ge={};Wt(ge,{add:()=>kW,angle:()=>tH,ceil:()=>UW,clone:()=>BW,copy:()=>FW,create:()=>CS,cross:()=>KW,dist:()=>lH,distance:()=>OS,div:()=>cH,divide:()=>RS,dot:()=>$W,equals:()=>sH,exactEquals:()=>nH,floor:()=>zW,forEach:()=>uH,fromValues:()=>NW,inverse:()=>XW,len:()=>iH,length:()=>BS,lerp:()=>ZW,max:()=>WW,min:()=>VW,mul:()=>aH,multiply:()=>IS,negate:()=>qW,normalize:()=>YW,random:()=>JW,rotate:()=>QW,round:()=>HW,scale:()=>GW,scaleAndAdd:()=>jW,set:()=>DW,sqrDist:()=>fH,sqrLen:()=>hH,squaredDistance:()=>LS,squaredLength:()=>NS,str:()=>rH,sub:()=>oH,subtract:()=>PS,transformMat2:()=>t2,transformMat2d:()=>e2,transformMat3:()=>Of,transformMat4:()=>Lf,zero:()=>eH});var Ot=typeof Float32Array<"u"?Float32Array:Array,Fn=Math.random;function Ur(e){return e>=0?Math.round(e):e%.5===0?Math.floor(e):Math.round(e)}var Syt=Math.PI/180;function CS(){let e=new Ot(2);return Ot!=Float32Array&&(e[0]=0,e[1]=0),e}function BW(e){let t=new Ot(2);return t[0]=e[0],t[1]=e[1],t}function NW(e,t){let r=new Ot(2);return r[0]=e,r[1]=t,r}function FW(e,t){return e[0]=t[0],e[1]=t[1],e}function DW(e,t,r){return e[0]=t,e[1]=r,e}function kW(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e}function PS(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e}function IS(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e}function RS(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e}function UW(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e}function zW(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e}function VW(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e}function WW(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e}function HW(e,t){return e[0]=Ur(t[0]),e[1]=Ur(t[1]),e}function GW(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e}function jW(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e}function OS(e,t){let r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)}function LS(e,t){let r=t[0]-e[0],n=t[1]-e[1];return r*r+n*n}function BS(e){let t=e[0],r=e[1];return Math.sqrt(t*t+r*r)}function NS(e){let t=e[0],r=e[1];return t*t+r*r}function qW(e,t){return e[0]=-t[0],e[1]=-t[1],e}function XW(e,t){return e[0]=1/t[0],e[1]=1/t[1],e}function YW(e,t){let r=t[0],n=t[1],s=r*r+n*n;return s>0&&(s=1/Math.sqrt(s)),e[0]=t[0]*s,e[1]=t[1]*s,e}function $W(e,t){return e[0]*t[0]+e[1]*t[1]}function KW(e,t,r){let n=t[0]*r[1]-t[1]*r[0];return e[0]=e[1]=0,e[2]=n,e}function ZW(e,t,r,n){let s=t[0],i=t[1];return e[0]=s+n*(r[0]-s),e[1]=i+n*(r[1]-i),e}function JW(e,t){t=t===void 0?1:t;let r=Fn()*2*Math.PI;return e[0]=Math.cos(r)*t,e[1]=Math.sin(r)*t,e}function t2(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e}function e2(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s+r[4],e[1]=r[1]*n+r[3]*s+r[5],e}function Of(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[3]*s+r[6],e[1]=r[1]*n+r[4]*s+r[7],e}function Lf(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[4]*s+r[12],e[1]=r[1]*n+r[5]*s+r[13],e}function QW(e,t,r,n){let s=t[0]-r[0],i=t[1]-r[1],o=Math.sin(n),a=Math.cos(n);return e[0]=s*a-i*o+r[0],e[1]=s*o+i*a+r[1],e}function tH(e,t){let r=e[0],n=e[1],s=t[0],i=t[1],o=Math.sqrt((r*r+n*n)*(s*s+i*i)),a=o&&(r*s+n*i)/o;return Math.acos(Math.min(Math.max(a,-1),1))}function eH(e){return e[0]=0,e[1]=0,e}function rH(e){return`vec2(${e[0]}, ${e[1]})`}function nH(e,t){return e[0]===t[0]&&e[1]===t[1]}function sH(e,t){let r=e[0],n=e[1],s=t[0],i=t[1];return Math.abs(r-s)<=1e-6*Math.max(1,Math.abs(r),Math.abs(s))&&Math.abs(n-i)<=1e-6*Math.max(1,Math.abs(n),Math.abs(i))}var iH=BS,oH=PS,aH=IS,cH=RS,lH=OS,fH=LS,hH=NS,uH=function(){let e=CS();return function(t,r,n,s,i,o){let a,c;for(r||(r=2),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],i(e,e,o),t[a]=e[0],t[a+1]=e[1];return t}}();function nm(e,t,r){let n=t[0],s=t[1],i=r[3]*n+r[7]*s||1;return e[0]=(r[0]*n+r[4]*s)/i,e[1]=(r[1]*n+r[5]*s)/i,e}function sm(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i||1;return e[0]=(r[0]*n+r[4]*s+r[8]*i)/o,e[1]=(r[1]*n+r[5]*s+r[9]*i)/o,e[2]=(r[2]*n+r[6]*s+r[10]*i)/o,e}function FS(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e}function DS(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e[3]=t[3],e}function im(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=r[0]*n+r[3]*s+r[6]*i,e[1]=r[1]*n+r[4]*s+r[7]*i,e[2]=r[2]*n+r[5]*s+r[8]*i,e[3]=t[3],e}var uo=class extends ci{constructor(t=0,r=0){super(2),wr(t)&&arguments.length===1?this.copy(t):(Ut.debug&&(dt(t),dt(r)),this[0]=t,this[1]=r)}set(t,r){return this[0]=t,this[1]=r,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this.check()}fromObject(t){return Ut.debug&&(dt(t.x),dt(t.y)),this[0]=t.x,this[1]=t.y,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t}get ELEMENTS(){return 2}horizontalAngle(){return Math.atan2(this.y,this.x)}verticalAngle(){return Math.atan2(this.x,this.y)}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return Lf(this,this,t),this.check()}transformAsVector(t){return nm(this,this,t),this.check()}transformByMatrix3(t){return Of(this,this,t),this.check()}transformByMatrix2x3(t){return e2(this,this,t),this.check()}transformByMatrix2(t){return t2(this,this,t),this.check()}};var Ce={};Wt(Ce,{add:()=>gH,angle:()=>o2,bezier:()=>PH,ceil:()=>xH,clone:()=>dH,copy:()=>pH,create:()=>om,cross:()=>po,dist:()=>kH,distance:()=>VS,div:()=>DH,divide:()=>zS,dot:()=>Bf,equals:()=>BH,exactEquals:()=>LH,floor:()=>_H,forEach:()=>VH,fromValues:()=>cm,hermite:()=>CH,inverse:()=>MH,len:()=>a2,length:()=>am,lerp:()=>SH,max:()=>AH,min:()=>yH,mul:()=>FH,multiply:()=>US,negate:()=>EH,normalize:()=>r2,random:()=>IH,rotateX:()=>n2,rotateY:()=>s2,rotateZ:()=>i2,round:()=>bH,scale:()=>TH,scaleAndAdd:()=>vH,set:()=>mH,slerp:()=>wH,sqrDist:()=>UH,sqrLen:()=>zH,squaredDistance:()=>WS,squaredLength:()=>HS,str:()=>OH,sub:()=>NH,subtract:()=>kS,transformMat3:()=>Nf,transformMat4:()=>mo,transformQuat:()=>Ff,zero:()=>RH});function om(){let e=new Ot(3);return Ot!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function dH(e){let t=new Ot(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function am(e){let t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)}function cm(e,t,r){let n=new Ot(3);return n[0]=e,n[1]=t,n[2]=r,n}function pH(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function mH(e,t,r,n){return e[0]=t,e[1]=r,e[2]=n,e}function gH(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e}function kS(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e}function US(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e}function zS(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e}function xH(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e}function _H(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e}function yH(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e}function AH(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e}function bH(e,t){return e[0]=Ur(t[0]),e[1]=Ur(t[1]),e[2]=Ur(t[2]),e}function TH(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e}function vH(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e}function VS(e,t){let r=t[0]-e[0],n=t[1]-e[1],s=t[2]-e[2];return Math.sqrt(r*r+n*n+s*s)}function WS(e,t){let r=t[0]-e[0],n=t[1]-e[1],s=t[2]-e[2];return r*r+n*n+s*s}function HS(e){let t=e[0],r=e[1],n=e[2];return t*t+r*r+n*n}function EH(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e}function MH(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e}function r2(e,t){let r=t[0],n=t[1],s=t[2],i=r*r+n*n+s*s;return i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function Bf(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function po(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2];return e[0]=s*c-i*a,e[1]=i*o-n*c,e[2]=n*a-s*o,e}function SH(e,t,r,n){let s=t[0],i=t[1],o=t[2];return e[0]=s+n*(r[0]-s),e[1]=i+n*(r[1]-i),e[2]=o+n*(r[2]-o),e}function wH(e,t,r,n){let s=Math.acos(Math.min(Math.max(Bf(t,r),-1),1)),i=Math.sin(s),o=Math.sin((1-n)*s)/i,a=Math.sin(n*s)/i;return e[0]=o*t[0]+a*r[0],e[1]=o*t[1]+a*r[1],e[2]=o*t[2]+a*r[2],e}function CH(e,t,r,n,s,i){let o=i*i,a=o*(2*i-3)+1,c=o*(i-2)+i,l=o*(i-1),f=o*(3-2*i);return e[0]=t[0]*a+r[0]*c+n[0]*l+s[0]*f,e[1]=t[1]*a+r[1]*c+n[1]*l+s[1]*f,e[2]=t[2]*a+r[2]*c+n[2]*l+s[2]*f,e}function PH(e,t,r,n,s,i){let o=1-i,a=o*o,c=i*i,l=a*o,f=3*i*a,h=3*c*o,u=c*i;return e[0]=t[0]*l+r[0]*f+n[0]*h+s[0]*u,e[1]=t[1]*l+r[1]*f+n[1]*h+s[1]*u,e[2]=t[2]*l+r[2]*f+n[2]*h+s[2]*u,e}function IH(e,t){t=t===void 0?1:t;let r=Fn()*2*Math.PI,n=Fn()*2-1,s=Math.sqrt(1-n*n)*t;return e[0]=Math.cos(r)*s,e[1]=Math.sin(r)*s,e[2]=n*t,e}function mo(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*s+r[8]*i+r[12])/o,e[1]=(r[1]*n+r[5]*s+r[9]*i+r[13])/o,e[2]=(r[2]*n+r[6]*s+r[10]*i+r[14])/o,e}function Nf(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=n*r[0]+s*r[3]+i*r[6],e[1]=n*r[1]+s*r[4]+i*r[7],e[2]=n*r[2]+s*r[5]+i*r[8],e}function Ff(e,t,r){let n=r[0],s=r[1],i=r[2],o=r[3],a=t[0],c=t[1],l=t[2],f=s*l-i*c,h=i*a-n*l,u=n*c-s*a,d=s*u-i*h,p=i*f-n*u,m=n*h-s*f,g=o*2;return f*=g,h*=g,u*=g,d*=2,p*=2,m*=2,e[0]=a+f+d,e[1]=c+h+p,e[2]=l+u+m,e}function n2(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0],i[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),i[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function s2(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),i[1]=s[1],i[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function i2(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),i[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),i[2]=s[2],e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function o2(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2],c=Math.sqrt((r*r+n*n+s*s)*(i*i+o*o+a*a)),l=c&&Bf(e,t)/c;return Math.acos(Math.min(Math.max(l,-1),1))}function RH(e){return e[0]=0,e[1]=0,e[2]=0,e}function OH(e){return`vec3(${e[0]}, ${e[1]}, ${e[2]})`}function LH(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]}function BH(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2];return Math.abs(r-i)<=1e-6*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(n-o)<=1e-6*Math.max(1,Math.abs(n),Math.abs(o))&&Math.abs(s-a)<=1e-6*Math.max(1,Math.abs(s),Math.abs(a))}var NH=kS,FH=US,DH=zS,kH=VS,UH=WS,a2=am,zH=HS,VH=function(){let e=om();return function(t,r,n,s,i,o){let a,c;for(r||(r=3),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}}();var c2=[0,0,0],lm,V=class extends ci{static get ZERO(){return lm||(lm=new V(0,0,0),Object.freeze(lm)),lm}constructor(t=0,r=0,n=0){super(-0,-0,-0),arguments.length===1&&wr(t)?this.copy(t):(Ut.debug&&(dt(t),dt(r),dt(n)),this[0]=t,this[1]=r,this[2]=n)}set(t,r,n){return this[0]=t,this[1]=r,this[2]=n,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.check()}fromObject(t){return Ut.debug&&(dt(t.x),dt(t.y),dt(t.z)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t}get ELEMENTS(){return 3}get z(){return this[2]}set z(t){this[2]=dt(t)}angle(t){return o2(this,t)}cross(t){return po(this,this,t),this.check()}rotateX({radians:t,origin:r=c2}){return n2(this,this,r,t),this.check()}rotateY({radians:t,origin:r=c2}){return s2(this,this,r,t),this.check()}rotateZ({radians:t,origin:r=c2}){return i2(this,this,r,t),this.check()}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return mo(this,this,t),this.check()}transformAsVector(t){return sm(this,this,t),this.check()}transformByMatrix3(t){return Nf(this,this,t),this.check()}transformByMatrix2(t){return FS(this,this,t),this.check()}transformByQuaternion(t){return Ff(this,this,t),this.check()}};var fm,Za=class extends ci{static get ZERO(){return fm||(fm=new Za(0,0,0,0),Object.freeze(fm)),fm}constructor(t=0,r=0,n=0,s=0){super(-0,-0,-0,-0),wr(t)&&arguments.length===1?this.copy(t):(Ut.debug&&(dt(t),dt(r),dt(n),dt(s)),this[0]=t,this[1]=r,this[2]=n,this[3]=s)}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}fromObject(t){return Ut.debug&&(dt(t.x),dt(t.y),dt(t.z),dt(t.w)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t.w=this[3],t}get ELEMENTS(){return 4}get z(){return this[2]}set z(t){this[2]=dt(t)}get w(){return this[3]}set w(t){this[3]=dt(t)}transform(t){return mo(this,this,t),this.check()}transformByMatrix3(t){return im(this,this,t),this.check()}transformByMatrix2(t){return DS(this,this,t),this.check()}transformByQuaternion(t){return Ff(this,this,t),this.check()}applyMatrix4(t){return t.transform(this,this),this}};var Ja=class extends oi{toString(){let t="[";if(Ut.printRowMajor){t+="row-major:";for(let r=0;r<this.RANK;++r)for(let n=0;n<this.RANK;++n)t+=` ${this[n*this.RANK+r]}`}else{t+="column-major:";for(let r=0;r<this.ELEMENTS;++r)t+=` ${this[r]}`}return t+="]",t}getElementIndex(t,r){return r*this.RANK+t}getElement(t,r){return this[r*this.RANK+t]}setElement(t,r,n){return this[r*this.RANK+t]=dt(n),this}getColumn(t,r=new Array(this.RANK).fill(-0)){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)r[s]=this[n+s];return r}setColumn(t,r){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)this[n+s]=r[s];return this}};function GS(){let e=new Ot(9);return Ot!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function jS(e,t){if(e===t){let r=t[1],n=t[2],s=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=s}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function qS(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=f*o-a*l,u=-f*i+a*c,d=l*i-o*c,p=r*h+n*u+s*d;return p?(p=1/p,e[0]=h*p,e[1]=(-f*n+s*l)*p,e[2]=(a*n-s*o)*p,e[3]=u*p,e[4]=(f*r-s*c)*p,e[5]=(-a*r+s*i)*p,e[6]=d*p,e[7]=(-l*r+n*c)*p,e[8]=(o*r-n*i)*p,e):null}function XS(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*(l*i-o*c)+r*(-l*s+o*a)+n*(c*s-i*a)}function l2(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1],p=r[2],m=r[3],g=r[4],x=r[5],A=r[6],_=r[7],y=r[8];return e[0]=u*n+d*o+p*l,e[1]=u*s+d*a+p*f,e[2]=u*i+d*c+p*h,e[3]=m*n+g*o+x*l,e[4]=m*s+g*a+x*f,e[5]=m*i+g*c+x*h,e[6]=A*n+_*o+y*l,e[7]=A*s+_*a+y*f,e[8]=A*i+_*c+y*h,e}function YS(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1];return e[0]=n,e[1]=s,e[2]=i,e[3]=o,e[4]=a,e[5]=c,e[6]=u*n+d*o+l,e[7]=u*s+d*a+f,e[8]=u*i+d*c+h,e}function $S(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=Math.sin(r),d=Math.cos(r);return e[0]=d*n+u*o,e[1]=d*s+u*a,e[2]=d*i+u*c,e[3]=d*o-u*n,e[4]=d*a-u*s,e[5]=d*c-u*i,e[6]=l,e[7]=f,e[8]=h,e}function f2(e,t,r){let n=r[0],s=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=s*t[3],e[4]=s*t[4],e[5]=s*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function KS(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[3]=f-x,e[6]=u+g,e[1]=f+x,e[4]=1-l-p,e[7]=d-m,e[2]=u-g,e[5]=d+m,e[8]=1-l-h,e}var h2;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL1ROW0=3]="COL1ROW0",e[e.COL1ROW1=4]="COL1ROW1",e[e.COL1ROW2=5]="COL1ROW2",e[e.COL2ROW0=6]="COL2ROW0",e[e.COL2ROW1=7]="COL2ROW1",e[e.COL2ROW2=8]="COL2ROW2"})(h2||(h2={}));var HH=Object.freeze([1,0,0,0,1,0,0,0,1]),$t=class extends Ja{static get IDENTITY(){return jH()}static get ZERO(){return GH()}get ELEMENTS(){return 9}get RANK(){return 3}get INDICES(){return h2}constructor(t,...r){super(-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):r.length>0?this.copy([t,...r]):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this.check()}identity(){return this.copy(HH)}fromObject(t){return this.check()}fromQuaternion(t){return KS(this,t),this.check()}set(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=s,this[2]=a,this[3]=r,this[4]=i,this[5]=c,this[6]=n,this[7]=o,this[8]=l,this.check()}determinant(){return XS(this)}transpose(){return jS(this,this),this.check()}invert(){return qS(this,this),this.check()}multiplyLeft(t){return l2(this,t,this),this.check()}multiplyRight(t){return l2(this,this,t),this.check()}rotate(t){return $S(this,this,t),this.check()}scale(t){return Array.isArray(t)?f2(this,this,t):f2(this,this,[t,t]),this.check()}translate(t){return YS(this,this,t),this.check()}transform(t,r){let n;switch(t.length){case 2:n=Of(r||[-0,-0],t,this);break;case 3:n=Nf(r||[-0,-0,-0],t,this);break;case 4:n=im(r||[-0,-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return ai(n,t.length),n}transformVector(t,r){return this.transform(t,r)}transformVector2(t,r){return this.transform(t,r)}transformVector3(t,r){return this.transform(t,r)}},hm,um=null;function GH(){return hm||(hm=new $t([0,0,0,0,0,0,0,0,0]),Object.freeze(hm)),hm}function jH(){return um||(um=new $t,Object.freeze(um)),um}var re={};Wt(re,{add:()=>gG,adjoint:()=>ZH,clone:()=>XH,copy:()=>YH,create:()=>qH,decompose:()=>aG,determinant:()=>p2,equals:()=>AG,exactEquals:()=>yG,frob:()=>mG,fromQuat:()=>b2,fromQuat2:()=>sG,fromRotation:()=>tG,fromRotationTranslation:()=>JS,fromRotationTranslationScale:()=>cG,fromRotationTranslationScaleOrigin:()=>lG,fromScaling:()=>QH,fromTranslation:()=>JH,fromValues:()=>$H,fromXRotation:()=>eG,fromYRotation:()=>rG,fromZRotation:()=>nG,frustum:()=>T2,getRotation:()=>oG,getScaling:()=>QS,getTranslation:()=>iG,identity:()=>ZS,invert:()=>d2,lookAt:()=>M2,mul:()=>bG,multiply:()=>Df,multiplyScalar:()=>xG,multiplyScalarAndAdd:()=>_G,ortho:()=>E2,orthoNO:()=>ew,orthoZO:()=>uG,perspective:()=>v2,perspectiveFromFieldOfView:()=>hG,perspectiveNO:()=>tw,perspectiveZO:()=>fG,rotate:()=>x2,rotateX:()=>_2,rotateY:()=>y2,rotateZ:()=>A2,scale:()=>g2,set:()=>KH,str:()=>pG,sub:()=>TG,subtract:()=>rw,targetTo:()=>dG,translate:()=>m2,transpose:()=>u2});function qH(){let e=new Ot(16);return Ot!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function XH(e){let t=new Ot(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function YH(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function $H(e,t,r,n,s,i,o,a,c,l,f,h,u,d,p,m){let g=new Ot(16);return g[0]=e,g[1]=t,g[2]=r,g[3]=n,g[4]=s,g[5]=i,g[6]=o,g[7]=a,g[8]=c,g[9]=l,g[10]=f,g[11]=h,g[12]=u,g[13]=d,g[14]=p,g[15]=m,g}function KH(e,t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return e[0]=t,e[1]=r,e[2]=n,e[3]=s,e[4]=i,e[5]=o,e[6]=a,e[7]=c,e[8]=l,e[9]=f,e[10]=h,e[11]=u,e[12]=d,e[13]=p,e[14]=m,e[15]=g,e}function ZS(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function u2(e,t){if(e===t){let r=t[1],n=t[2],s=t[3],i=t[6],o=t[7],a=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=i,e[11]=t[14],e[12]=s,e[13]=o,e[14]=a}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function d2(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],g=t[14],x=t[15],A=r*a-n*o,_=r*c-s*o,y=r*l-i*o,T=n*c-s*a,v=n*l-i*a,C=s*l-i*c,w=f*m-h*p,E=f*g-u*p,b=f*x-d*p,R=h*g-u*m,k=h*x-d*m,D=u*x-d*g,P=A*D-_*k+y*R+T*b-v*E+C*w;return P?(P=1/P,e[0]=(a*D-c*k+l*R)*P,e[1]=(s*k-n*D-i*R)*P,e[2]=(m*C-g*v+x*T)*P,e[3]=(u*v-h*C-d*T)*P,e[4]=(c*b-o*D-l*E)*P,e[5]=(r*D-s*b+i*E)*P,e[6]=(g*y-p*C-x*_)*P,e[7]=(f*C-u*y+d*_)*P,e[8]=(o*k-a*b+l*w)*P,e[9]=(n*b-r*k-i*w)*P,e[10]=(p*v-m*y+x*A)*P,e[11]=(h*y-f*v-d*A)*P,e[12]=(a*E-o*R-c*w)*P,e[13]=(r*R-n*E+s*w)*P,e[14]=(m*_-p*T-g*A)*P,e[15]=(f*T-h*_+u*A)*P,e):null}function ZH(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],g=t[14],x=t[15],A=r*a-n*o,_=r*c-s*o,y=r*l-i*o,T=n*c-s*a,v=n*l-i*a,C=s*l-i*c,w=f*m-h*p,E=f*g-u*p,b=f*x-d*p,R=h*g-u*m,k=h*x-d*m,D=u*x-d*g;return e[0]=a*D-c*k+l*R,e[1]=s*k-n*D-i*R,e[2]=m*C-g*v+x*T,e[3]=u*v-h*C-d*T,e[4]=c*b-o*D-l*E,e[5]=r*D-s*b+i*E,e[6]=g*y-p*C-x*_,e[7]=f*C-u*y+d*_,e[8]=o*k-a*b+l*w,e[9]=n*b-r*k-i*w,e[10]=p*v-m*y+x*A,e[11]=h*y-f*v-d*A,e[12]=a*E-o*R-c*w,e[13]=r*R-n*E+s*w,e[14]=m*_-p*T-g*A,e[15]=f*T-h*_+u*A,e}function p2(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8],f=e[9],h=e[10],u=e[11],d=e[12],p=e[13],m=e[14],g=e[15],x=t*o-r*i,A=t*a-n*i,_=r*a-n*o,y=l*p-f*d,T=l*m-h*d,v=f*m-h*p,C=t*v-r*T+n*y,w=i*v-o*T+a*y,E=l*_-f*A+h*x,b=d*_-p*A+m*x;return c*C-s*w+g*E-u*b}function Df(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=t[9],d=t[10],p=t[11],m=t[12],g=t[13],x=t[14],A=t[15],_=r[0],y=r[1],T=r[2],v=r[3];return e[0]=_*n+y*a+T*h+v*m,e[1]=_*s+y*c+T*u+v*g,e[2]=_*i+y*l+T*d+v*x,e[3]=_*o+y*f+T*p+v*A,_=r[4],y=r[5],T=r[6],v=r[7],e[4]=_*n+y*a+T*h+v*m,e[5]=_*s+y*c+T*u+v*g,e[6]=_*i+y*l+T*d+v*x,e[7]=_*o+y*f+T*p+v*A,_=r[8],y=r[9],T=r[10],v=r[11],e[8]=_*n+y*a+T*h+v*m,e[9]=_*s+y*c+T*u+v*g,e[10]=_*i+y*l+T*d+v*x,e[11]=_*o+y*f+T*p+v*A,_=r[12],y=r[13],T=r[14],v=r[15],e[12]=_*n+y*a+T*h+v*m,e[13]=_*s+y*c+T*u+v*g,e[14]=_*i+y*l+T*d+v*x,e[15]=_*o+y*f+T*p+v*A,e}function m2(e,t,r){let n=r[0],s=r[1],i=r[2],o,a,c,l,f,h,u,d,p,m,g,x;return t===e?(e[12]=t[0]*n+t[4]*s+t[8]*i+t[12],e[13]=t[1]*n+t[5]*s+t[9]*i+t[13],e[14]=t[2]*n+t[6]*s+t[10]*i+t[14],e[15]=t[3]*n+t[7]*s+t[11]*i+t[15]):(o=t[0],a=t[1],c=t[2],l=t[3],f=t[4],h=t[5],u=t[6],d=t[7],p=t[8],m=t[9],g=t[10],x=t[11],e[0]=o,e[1]=a,e[2]=c,e[3]=l,e[4]=f,e[5]=h,e[6]=u,e[7]=d,e[8]=p,e[9]=m,e[10]=g,e[11]=x,e[12]=o*n+f*s+p*i+t[12],e[13]=a*n+h*s+m*i+t[13],e[14]=c*n+u*s+g*i+t[14],e[15]=l*n+d*s+x*i+t[15]),e}function g2(e,t,r){let n=r[0],s=r[1],i=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*s,e[5]=t[5]*s,e[6]=t[6]*s,e[7]=t[7]*s,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function x2(e,t,r,n){let s=n[0],i=n[1],o=n[2],a=Math.sqrt(s*s+i*i+o*o),c,l,f,h,u,d,p,m,g,x,A,_,y,T,v,C,w,E,b,R,k,D,P,j;return a<1e-6?null:(a=1/a,s*=a,i*=a,o*=a,l=Math.sin(r),c=Math.cos(r),f=1-c,h=t[0],u=t[1],d=t[2],p=t[3],m=t[4],g=t[5],x=t[6],A=t[7],_=t[8],y=t[9],T=t[10],v=t[11],C=s*s*f+c,w=i*s*f+o*l,E=o*s*f-i*l,b=s*i*f-o*l,R=i*i*f+c,k=o*i*f+s*l,D=s*o*f+i*l,P=i*o*f-s*l,j=o*o*f+c,e[0]=h*C+m*w+_*E,e[1]=u*C+g*w+y*E,e[2]=d*C+x*w+T*E,e[3]=p*C+A*w+v*E,e[4]=h*b+m*R+_*k,e[5]=u*b+g*R+y*k,e[6]=d*b+x*R+T*k,e[7]=p*b+A*R+v*k,e[8]=h*D+m*P+_*j,e[9]=u*D+g*P+y*j,e[10]=d*D+x*P+T*j,e[11]=p*D+A*P+v*j,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function _2(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[4],o=t[5],a=t[6],c=t[7],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=i*s+l*n,e[5]=o*s+f*n,e[6]=a*s+h*n,e[7]=c*s+u*n,e[8]=l*s-i*n,e[9]=f*s-o*n,e[10]=h*s-a*n,e[11]=u*s-c*n,e}function y2(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s-l*n,e[1]=o*s-f*n,e[2]=a*s-h*n,e[3]=c*s-u*n,e[8]=i*n+l*s,e[9]=o*n+f*s,e[10]=a*n+h*s,e[11]=c*n+u*s,e}function A2(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[4],f=t[5],h=t[6],u=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s+l*n,e[1]=o*s+f*n,e[2]=a*s+h*n,e[3]=c*s+u*n,e[4]=l*s-i*n,e[5]=f*s-o*n,e[6]=h*s-a*n,e[7]=u*s-c*n,e}function JH(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e}function QH(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function tG(e,t,r){let n=r[0],s=r[1],i=r[2],o=Math.sqrt(n*n+s*s+i*i),a,c,l;return o<1e-6?null:(o=1/o,n*=o,s*=o,i*=o,c=Math.sin(t),a=Math.cos(t),l=1-a,e[0]=n*n*l+a,e[1]=s*n*l+i*c,e[2]=i*n*l-s*c,e[3]=0,e[4]=n*s*l-i*c,e[5]=s*s*l+a,e[6]=i*s*l+n*c,e[7]=0,e[8]=n*i*l+s*c,e[9]=s*i*l-n*c,e[10]=i*i*l+a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)}function eG(e,t){let r=Math.sin(t),n=Math.cos(t);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=r,e[7]=0,e[8]=0,e[9]=-r,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function rG(e,t){let r=Math.sin(t),n=Math.cos(t);return e[0]=n,e[1]=0,e[2]=-r,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=r,e[9]=0,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function nG(e,t){let r=Math.sin(t),n=Math.cos(t);return e[0]=n,e[1]=r,e[2]=0,e[3]=0,e[4]=-r,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function JS(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=n+n,c=s+s,l=i+i,f=n*a,h=n*c,u=n*l,d=s*c,p=s*l,m=i*l,g=o*a,x=o*c,A=o*l;return e[0]=1-(d+m),e[1]=h+A,e[2]=u-x,e[3]=0,e[4]=h-A,e[5]=1-(f+m),e[6]=p+g,e[7]=0,e[8]=u+x,e[9]=p-g,e[10]=1-(f+d),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function sG(e,t){let r=new Ot(3),n=-t[0],s=-t[1],i=-t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=n*n+s*s+i*i+o*o;return h>0?(r[0]=(a*o+f*n+c*i-l*s)*2/h,r[1]=(c*o+f*s+l*n-a*i)*2/h,r[2]=(l*o+f*i+a*s-c*n)*2/h):(r[0]=(a*o+f*n+c*i-l*s)*2,r[1]=(c*o+f*s+l*n-a*i)*2,r[2]=(l*o+f*i+a*s-c*n)*2),JS(e,t,r),e}function iG(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e}function QS(e,t){let r=t[0],n=t[1],s=t[2],i=t[4],o=t[5],a=t[6],c=t[8],l=t[9],f=t[10];return e[0]=Math.sqrt(r*r+n*n+s*s),e[1]=Math.sqrt(i*i+o*o+a*a),e[2]=Math.sqrt(c*c+l*l+f*f),e}function oG(e,t){let r=new Ot(3);QS(r,t);let n=1/r[0],s=1/r[1],i=1/r[2],o=t[0]*n,a=t[1]*s,c=t[2]*i,l=t[4]*n,f=t[5]*s,h=t[6]*i,u=t[8]*n,d=t[9]*s,p=t[10]*i,m=o+f+p,g=0;return m>0?(g=Math.sqrt(m+1)*2,e[3]=.25*g,e[0]=(h-d)/g,e[1]=(u-c)/g,e[2]=(a-l)/g):o>f&&o>p?(g=Math.sqrt(1+o-f-p)*2,e[3]=(h-d)/g,e[0]=.25*g,e[1]=(a+l)/g,e[2]=(u+c)/g):f>p?(g=Math.sqrt(1+f-o-p)*2,e[3]=(u-c)/g,e[0]=(a+l)/g,e[1]=.25*g,e[2]=(h+d)/g):(g=Math.sqrt(1+p-o-f)*2,e[3]=(a-l)/g,e[0]=(u+c)/g,e[1]=(h+d)/g,e[2]=.25*g),e}function aG(e,t,r,n){t[0]=n[12],t[1]=n[13],t[2]=n[14];let s=n[0],i=n[1],o=n[2],a=n[4],c=n[5],l=n[6],f=n[8],h=n[9],u=n[10];r[0]=Math.sqrt(s*s+i*i+o*o),r[1]=Math.sqrt(a*a+c*c+l*l),r[2]=Math.sqrt(f*f+h*h+u*u);let d=1/r[0],p=1/r[1],m=1/r[2],g=s*d,x=i*p,A=o*m,_=a*d,y=c*p,T=l*m,v=f*d,C=h*p,w=u*m,E=g+y+w,b=0;return E>0?(b=Math.sqrt(E+1)*2,e[3]=.25*b,e[0]=(T-C)/b,e[1]=(v-A)/b,e[2]=(x-_)/b):g>y&&g>w?(b=Math.sqrt(1+g-y-w)*2,e[3]=(T-C)/b,e[0]=.25*b,e[1]=(x+_)/b,e[2]=(v+A)/b):y>w?(b=Math.sqrt(1+y-g-w)*2,e[3]=(v-A)/b,e[0]=(x+_)/b,e[1]=.25*b,e[2]=(T+C)/b):(b=Math.sqrt(1+w-g-y)*2,e[3]=(x-_)/b,e[0]=(v+A)/b,e[1]=(T+C)/b,e[2]=.25*b),e}function cG(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3],c=s+s,l=i+i,f=o+o,h=s*c,u=s*l,d=s*f,p=i*l,m=i*f,g=o*f,x=a*c,A=a*l,_=a*f,y=n[0],T=n[1],v=n[2];return e[0]=(1-(p+g))*y,e[1]=(u+_)*y,e[2]=(d-A)*y,e[3]=0,e[4]=(u-_)*T,e[5]=(1-(h+g))*T,e[6]=(m+x)*T,e[7]=0,e[8]=(d+A)*v,e[9]=(m-x)*v,e[10]=(1-(h+p))*v,e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function lG(e,t,r,n,s){let i=t[0],o=t[1],a=t[2],c=t[3],l=i+i,f=o+o,h=a+a,u=i*l,d=i*f,p=i*h,m=o*f,g=o*h,x=a*h,A=c*l,_=c*f,y=c*h,T=n[0],v=n[1],C=n[2],w=s[0],E=s[1],b=s[2],R=(1-(m+x))*T,k=(d+y)*T,D=(p-_)*T,P=(d-y)*v,j=(1-(u+x))*v,ot=(g+A)*v,st=(p+_)*C,Bt=(g-A)*C,gt=(1-(u+m))*C;return e[0]=R,e[1]=k,e[2]=D,e[3]=0,e[4]=P,e[5]=j,e[6]=ot,e[7]=0,e[8]=st,e[9]=Bt,e[10]=gt,e[11]=0,e[12]=r[0]+w-(R*w+P*E+st*b),e[13]=r[1]+E-(k*w+j*E+Bt*b),e[14]=r[2]+b-(D*w+ot*E+gt*b),e[15]=1,e}function b2(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[1]=f+x,e[2]=u-g,e[3]=0,e[4]=f-x,e[5]=1-l-p,e[6]=d+m,e[7]=0,e[8]=u+g,e[9]=d-m,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function T2(e,t,r,n,s,i,o){let a=1/(r-t),c=1/(s-n),l=1/(i-o);return e[0]=i*2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i*2*c,e[6]=0,e[7]=0,e[8]=(r+t)*a,e[9]=(s+n)*c,e[10]=(o+i)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*i*2*l,e[15]=0,e}function tw(e,t,r,n,s){let i=1/Math.tan(t/2);if(e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,s!=null&&s!==1/0){let o=1/(n-s);e[10]=(s+n)*o,e[14]=2*s*n*o}else e[10]=-1,e[14]=-2*n;return e}var v2=tw;function fG(e,t,r,n,s){let i=1/Math.tan(t/2);if(e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,s!=null&&s!==1/0){let o=1/(n-s);e[10]=s*o,e[14]=s*n*o}else e[10]=-1,e[14]=-n;return e}function hG(e,t,r,n){let s=Math.tan(t.upDegrees*Math.PI/180),i=Math.tan(t.downDegrees*Math.PI/180),o=Math.tan(t.leftDegrees*Math.PI/180),a=Math.tan(t.rightDegrees*Math.PI/180),c=2/(o+a),l=2/(s+i);return e[0]=c,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=l,e[6]=0,e[7]=0,e[8]=-((o-a)*c*.5),e[9]=(s-i)*l*.5,e[10]=n/(r-n),e[11]=-1,e[12]=0,e[13]=0,e[14]=n*r/(r-n),e[15]=0,e}function ew(e,t,r,n,s,i,o){let a=1/(t-r),c=1/(n-s),l=1/(i-o);return e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+r)*a,e[13]=(s+n)*c,e[14]=(o+i)*l,e[15]=1,e}var E2=ew;function uG(e,t,r,n,s,i,o){let a=1/(t-r),c=1/(n-s),l=1/(i-o);return e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=l,e[11]=0,e[12]=(t+r)*a,e[13]=(s+n)*c,e[14]=i*l,e[15]=1,e}function M2(e,t,r,n){let s,i,o,a,c,l,f,h,u,d,p=t[0],m=t[1],g=t[2],x=n[0],A=n[1],_=n[2],y=r[0],T=r[1],v=r[2];return Math.abs(p-y)<1e-6&&Math.abs(m-T)<1e-6&&Math.abs(g-v)<1e-6?ZS(e):(h=p-y,u=m-T,d=g-v,s=1/Math.sqrt(h*h+u*u+d*d),h*=s,u*=s,d*=s,i=A*d-_*u,o=_*h-x*d,a=x*u-A*h,s=Math.sqrt(i*i+o*o+a*a),s?(s=1/s,i*=s,o*=s,a*=s):(i=0,o=0,a=0),c=u*a-d*o,l=d*i-h*a,f=h*o-u*i,s=Math.sqrt(c*c+l*l+f*f),s?(s=1/s,c*=s,l*=s,f*=s):(c=0,l=0,f=0),e[0]=i,e[1]=c,e[2]=h,e[3]=0,e[4]=o,e[5]=l,e[6]=u,e[7]=0,e[8]=a,e[9]=f,e[10]=d,e[11]=0,e[12]=-(i*p+o*m+a*g),e[13]=-(c*p+l*m+f*g),e[14]=-(h*p+u*m+d*g),e[15]=1,e)}function dG(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=n[0],c=n[1],l=n[2],f=s-r[0],h=i-r[1],u=o-r[2],d=f*f+h*h+u*u;d>0&&(d=1/Math.sqrt(d),f*=d,h*=d,u*=d);let p=c*u-l*h,m=l*f-a*u,g=a*h-c*f;return d=p*p+m*m+g*g,d>0&&(d=1/Math.sqrt(d),p*=d,m*=d,g*=d),e[0]=p,e[1]=m,e[2]=g,e[3]=0,e[4]=h*g-u*m,e[5]=u*p-f*g,e[6]=f*m-h*p,e[7]=0,e[8]=f,e[9]=h,e[10]=u,e[11]=0,e[12]=s,e[13]=i,e[14]=o,e[15]=1,e}function pG(e){return`mat4(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]}, ${e[4]}, ${e[5]}, ${e[6]}, ${e[7]}, ${e[8]}, ${e[9]}, ${e[10]}, ${e[11]}, ${e[12]}, ${e[13]}, ${e[14]}, ${e[15]})`}function mG(e){return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]+e[4]*e[4]+e[5]*e[5]+e[6]*e[6]+e[7]*e[7]+e[8]*e[8]+e[9]*e[9]+e[10]*e[10]+e[11]*e[11]+e[12]*e[12]+e[13]*e[13]+e[14]*e[14]+e[15]*e[15])}function gG(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e[4]=t[4]+r[4],e[5]=t[5]+r[5],e[6]=t[6]+r[6],e[7]=t[7]+r[7],e[8]=t[8]+r[8],e[9]=t[9]+r[9],e[10]=t[10]+r[10],e[11]=t[11]+r[11],e[12]=t[12]+r[12],e[13]=t[13]+r[13],e[14]=t[14]+r[14],e[15]=t[15]+r[15],e}function rw(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e[4]=t[4]-r[4],e[5]=t[5]-r[5],e[6]=t[6]-r[6],e[7]=t[7]-r[7],e[8]=t[8]-r[8],e[9]=t[9]-r[9],e[10]=t[10]-r[10],e[11]=t[11]-r[11],e[12]=t[12]-r[12],e[13]=t[13]-r[13],e[14]=t[14]-r[14],e[15]=t[15]-r[15],e}function xG(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e[4]=t[4]*r,e[5]=t[5]*r,e[6]=t[6]*r,e[7]=t[7]*r,e[8]=t[8]*r,e[9]=t[9]*r,e[10]=t[10]*r,e[11]=t[11]*r,e[12]=t[12]*r,e[13]=t[13]*r,e[14]=t[14]*r,e[15]=t[15]*r,e}function _G(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e[3]=t[3]+r[3]*n,e[4]=t[4]+r[4]*n,e[5]=t[5]+r[5]*n,e[6]=t[6]+r[6]*n,e[7]=t[7]+r[7]*n,e[8]=t[8]+r[8]*n,e[9]=t[9]+r[9]*n,e[10]=t[10]+r[10]*n,e[11]=t[11]+r[11]*n,e[12]=t[12]+r[12]*n,e[13]=t[13]+r[13]*n,e[14]=t[14]+r[14]*n,e[15]=t[15]+r[15]*n,e}function yG(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]}function AG(e,t){let r=e[0],n=e[1],s=e[2],i=e[3],o=e[4],a=e[5],c=e[6],l=e[7],f=e[8],h=e[9],u=e[10],d=e[11],p=e[12],m=e[13],g=e[14],x=e[15],A=t[0],_=t[1],y=t[2],T=t[3],v=t[4],C=t[5],w=t[6],E=t[7],b=t[8],R=t[9],k=t[10],D=t[11],P=t[12],j=t[13],ot=t[14],st=t[15];return Math.abs(r-A)<=1e-6*Math.max(1,Math.abs(r),Math.abs(A))&&Math.abs(n-_)<=1e-6*Math.max(1,Math.abs(n),Math.abs(_))&&Math.abs(s-y)<=1e-6*Math.max(1,Math.abs(s),Math.abs(y))&&Math.abs(i-T)<=1e-6*Math.max(1,Math.abs(i),Math.abs(T))&&Math.abs(o-v)<=1e-6*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(a-C)<=1e-6*Math.max(1,Math.abs(a),Math.abs(C))&&Math.abs(c-w)<=1e-6*Math.max(1,Math.abs(c),Math.abs(w))&&Math.abs(l-E)<=1e-6*Math.max(1,Math.abs(l),Math.abs(E))&&Math.abs(f-b)<=1e-6*Math.max(1,Math.abs(f),Math.abs(b))&&Math.abs(h-R)<=1e-6*Math.max(1,Math.abs(h),Math.abs(R))&&Math.abs(u-k)<=1e-6*Math.max(1,Math.abs(u),Math.abs(k))&&Math.abs(d-D)<=1e-6*Math.max(1,Math.abs(d),Math.abs(D))&&Math.abs(p-P)<=1e-6*Math.max(1,Math.abs(p),Math.abs(P))&&Math.abs(m-j)<=1e-6*Math.max(1,Math.abs(m),Math.abs(j))&&Math.abs(g-ot)<=1e-6*Math.max(1,Math.abs(g),Math.abs(ot))&&Math.abs(x-st)<=1e-6*Math.max(1,Math.abs(x),Math.abs(st))}var bG=Df,TG=rw;var nr={};Wt(nr,{add:()=>S2,ceil:()=>vG,clone:()=>sw,copy:()=>ow,create:()=>nw,cross:()=>RG,dist:()=>UG,distance:()=>hw,div:()=>kG,divide:()=>fw,dot:()=>P2,equals:()=>NG,exactEquals:()=>dw,floor:()=>EG,forEach:()=>HG,fromValues:()=>iw,inverse:()=>IG,len:()=>VG,length:()=>dm,lerp:()=>I2,max:()=>SG,min:()=>MG,mul:()=>DG,multiply:()=>lw,negate:()=>PG,normalize:()=>C2,random:()=>OG,round:()=>wG,scale:()=>w2,scaleAndAdd:()=>CG,set:()=>aw,sqrDist:()=>zG,sqrLen:()=>WG,squaredDistance:()=>uw,squaredLength:()=>pm,str:()=>BG,sub:()=>FG,subtract:()=>cw,transformMat4:()=>R2,transformQuat:()=>O2,zero:()=>LG});function nw(){let e=new Ot(4);return Ot!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function sw(e){let t=new Ot(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function iw(e,t,r,n){let s=new Ot(4);return s[0]=e,s[1]=t,s[2]=r,s[3]=n,s}function ow(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function aw(e,t,r,n,s){return e[0]=t,e[1]=r,e[2]=n,e[3]=s,e}function S2(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e}function cw(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e}function lw(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e}function fw(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e[3]=t[3]/r[3],e}function vG(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e[3]=Math.ceil(t[3]),e}function EG(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e[3]=Math.floor(t[3]),e}function MG(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e[3]=Math.min(t[3],r[3]),e}function SG(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e[3]=Math.max(t[3],r[3]),e}function wG(e,t){return e[0]=Ur(t[0]),e[1]=Ur(t[1]),e[2]=Ur(t[2]),e[3]=Ur(t[3]),e}function w2(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e}function CG(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e[3]=t[3]+r[3]*n,e}function hw(e,t){let r=t[0]-e[0],n=t[1]-e[1],s=t[2]-e[2],i=t[3]-e[3];return Math.sqrt(r*r+n*n+s*s+i*i)}function uw(e,t){let r=t[0]-e[0],n=t[1]-e[1],s=t[2]-e[2],i=t[3]-e[3];return r*r+n*n+s*s+i*i}function dm(e){let t=e[0],r=e[1],n=e[2],s=e[3];return Math.sqrt(t*t+r*r+n*n+s*s)}function pm(e){let t=e[0],r=e[1],n=e[2],s=e[3];return t*t+r*r+n*n+s*s}function PG(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e}function IG(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e}function C2(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i;return o>0&&(o=1/Math.sqrt(o)),e[0]=r*o,e[1]=n*o,e[2]=s*o,e[3]=i*o,e}function P2(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function RG(e,t,r,n){let s=r[0]*n[1]-r[1]*n[0],i=r[0]*n[2]-r[2]*n[0],o=r[0]*n[3]-r[3]*n[0],a=r[1]*n[2]-r[2]*n[1],c=r[1]*n[3]-r[3]*n[1],l=r[2]*n[3]-r[3]*n[2],f=t[0],h=t[1],u=t[2],d=t[3];return e[0]=h*l-u*c+d*a,e[1]=-(f*l)+u*o-d*i,e[2]=f*c-h*o+d*s,e[3]=-(f*a)+h*i-u*s,e}function I2(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3];return e[0]=s+n*(r[0]-s),e[1]=i+n*(r[1]-i),e[2]=o+n*(r[2]-o),e[3]=a+n*(r[3]-a),e}function OG(e,t){t=t===void 0?1:t;let r,n,s,i,o,a;do r=Fn()*2-1,n=Fn()*2-1,o=r*r+n*n;while(o>=1);do s=Fn()*2-1,i=Fn()*2-1,a=s*s+i*i;while(a>=1);let c=Math.sqrt((1-o)/a);return e[0]=t*r,e[1]=t*n,e[2]=t*s*c,e[3]=t*i*c,e}function R2(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3];return e[0]=r[0]*n+r[4]*s+r[8]*i+r[12]*o,e[1]=r[1]*n+r[5]*s+r[9]*i+r[13]*o,e[2]=r[2]*n+r[6]*s+r[10]*i+r[14]*o,e[3]=r[3]*n+r[7]*s+r[11]*i+r[15]*o,e}function O2(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2],l=r[3],f=l*n+a*i-c*s,h=l*s+c*n-o*i,u=l*i+o*s-a*n,d=-o*n-a*s-c*i;return e[0]=f*l+d*-o+h*-c-u*-a,e[1]=h*l+d*-a+u*-o-f*-c,e[2]=u*l+d*-c+f*-a-h*-o,e[3]=t[3],e}function LG(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e}function BG(e){return`vec4(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}function dw(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]}function NG(e,t){let r=e[0],n=e[1],s=e[2],i=e[3],o=t[0],a=t[1],c=t[2],l=t[3];return Math.abs(r-o)<=1e-6*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(n-a)<=1e-6*Math.max(1,Math.abs(n),Math.abs(a))&&Math.abs(s-c)<=1e-6*Math.max(1,Math.abs(s),Math.abs(c))&&Math.abs(i-l)<=1e-6*Math.max(1,Math.abs(i),Math.abs(l))}var FG=cw,DG=lw,kG=fw,UG=hw,zG=uw,VG=dm,WG=pm,HG=function(){let e=nw();return function(t,r,n,s,i,o){let a,c;for(r||(r=4),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],e[3]=t[a+3],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2],t[a+3]=e[3];return t}}();var N2;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL0ROW3=3]="COL0ROW3",e[e.COL1ROW0=4]="COL1ROW0",e[e.COL1ROW1=5]="COL1ROW1",e[e.COL1ROW2=6]="COL1ROW2",e[e.COL1ROW3=7]="COL1ROW3",e[e.COL2ROW0=8]="COL2ROW0",e[e.COL2ROW1=9]="COL2ROW1",e[e.COL2ROW2=10]="COL2ROW2",e[e.COL2ROW3=11]="COL2ROW3",e[e.COL3ROW0=12]="COL3ROW0",e[e.COL3ROW1=13]="COL3ROW1",e[e.COL3ROW2=14]="COL3ROW2",e[e.COL3ROW3=15]="COL3ROW3"})(N2||(N2={}));var GG=45*Math.PI/180,jG=1,L2=.1,B2=500,qG=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),rt=class extends Ja{static get IDENTITY(){return YG()}static get ZERO(){return XG()}get ELEMENTS(){return 16}get RANK(){return 4}get INDICES(){return N2}constructor(t){super(-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this[9]=t[9],this[10]=t[10],this[11]=t[11],this[12]=t[12],this[13]=t[13],this[14]=t[14],this[15]=t[15],this.check()}set(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this[9]=f,this[10]=h,this[11]=u,this[12]=d,this[13]=p,this[14]=m,this[15]=g,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=i,this[2]=l,this[3]=d,this[4]=r,this[5]=o,this[6]=f,this[7]=p,this[8]=n,this[9]=a,this[10]=h,this[11]=m,this[12]=s,this[13]=c,this[14]=u,this[15]=g,this.check()}toRowMajor(t){return t[0]=this[0],t[1]=this[4],t[2]=this[8],t[3]=this[12],t[4]=this[1],t[5]=this[5],t[6]=this[9],t[7]=this[13],t[8]=this[2],t[9]=this[6],t[10]=this[10],t[11]=this[14],t[12]=this[3],t[13]=this[7],t[14]=this[11],t[15]=this[15],t}identity(){return this.copy(qG)}fromObject(t){return this.check()}fromQuaternion(t){return b2(this,t),this.check()}frustum(t){let{left:r,right:n,bottom:s,top:i,near:o=L2,far:a=B2}=t;return a===1/0?$G(this,r,n,s,i,o):T2(this,r,n,s,i,o,a),this.check()}lookAt(t){let{eye:r,center:n=[0,0,0],up:s=[0,1,0]}=t;return M2(this,r,n,s),this.check()}ortho(t){let{left:r,right:n,bottom:s,top:i,near:o=L2,far:a=B2}=t;return E2(this,r,n,s,i,o,a),this.check()}orthographic(t){let{fovy:r=GG,aspect:n=jG,focalDistance:s=1,near:i=L2,far:o=B2}=t;pw(r);let a=r/2,c=s*Math.tan(a),l=c*n;return this.ortho({left:-l,right:l,bottom:-c,top:c,near:i,far:o})}perspective(t){let{fovy:r=45*Math.PI/180,aspect:n=1,near:s=.1,far:i=500}=t;return pw(r),v2(this,r,n,s,i),this.check()}determinant(){return p2(this)}getScale(t=[-0,-0,-0]){return t[0]=Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2]),t[1]=Math.sqrt(this[4]*this[4]+this[5]*this[5]+this[6]*this[6]),t[2]=Math.sqrt(this[8]*this[8]+this[9]*this[9]+this[10]*this[10]),t}getTranslation(t=[-0,-0,-0]){return t[0]=this[12],t[1]=this[13],t[2]=this[14],t}getRotation(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=0,t[4]=this[4]*s,t[5]=this[5]*i,t[6]=this[6]*o,t[7]=0,t[8]=this[8]*s,t[9]=this[9]*i,t[10]=this[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}getRotationMatrix3(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=this[4]*s,t[4]=this[5]*i,t[5]=this[6]*o,t[6]=this[8]*s,t[7]=this[9]*i,t[8]=this[10]*o,t}transpose(){return u2(this,this),this.check()}invert(){return d2(this,this),this.check()}multiplyLeft(t){return Df(this,t,this),this.check()}multiplyRight(t){return Df(this,this,t),this.check()}rotateX(t){return _2(this,this,t),this.check()}rotateY(t){return y2(this,this,t),this.check()}rotateZ(t){return A2(this,this,t),this.check()}rotateXYZ(t){return this.rotateX(t[0]).rotateY(t[1]).rotateZ(t[2])}rotateAxis(t,r){return x2(this,this,t,r),this.check()}scale(t){return g2(this,this,Array.isArray(t)?t:[t,t,t]),this.check()}translate(t){return m2(this,this,t),this.check()}transform(t,r){return t.length===4?(r=R2(r||[-0,-0,-0,-0],t,this),ai(r,4),r):this.transformAsPoint(t,r)}transformAsPoint(t,r){let{length:n}=t,s;switch(n){case 2:s=Lf(r||[-0,-0],t,this);break;case 3:s=mo(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return ai(s,t.length),s}transformAsVector(t,r){let n;switch(t.length){case 2:n=nm(r||[-0,-0],t,this);break;case 3:n=sm(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return ai(n,t.length),n}transformPoint(t,r){return this.transformAsPoint(t,r)}transformVector(t,r){return this.transformAsPoint(t,r)}transformDirection(t,r){return this.transformAsVector(t,r)}makeRotationX(t){return this.identity().rotateX(t)}makeTranslation(t,r,n){return this.identity().translate([t,r,n])}},mm,gm;function XG(){return mm||(mm=new rt([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Object.freeze(mm)),mm}function YG(){return gm||(gm=new rt,Object.freeze(gm)),gm}function pw(e){if(e>Math.PI*2)throw Error("expected radians")}function $G(e,t,r,n,s,i){let o=2*i/(r-t),a=2*i/(s-n),c=(r+t)/(r-t),l=(s+n)/(s-n),f=-1,h=-1,u=-2*i;return e[0]=o,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=c,e[9]=l,e[10]=f,e[11]=h,e[12]=0,e[13]=0,e[14]=u,e[15]=0,e}function mw(){let e=new Ot(4);return Ot!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function gw(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function F2(e,t,r){r=r*.5;let n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e}function D2(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=r[0],c=r[1],l=r[2],f=r[3];return e[0]=n*f+o*a+s*l-i*c,e[1]=s*f+o*c+i*a-n*l,e[2]=i*f+o*l+n*c-s*a,e[3]=o*f-n*a-s*c-i*l,e}function xw(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+o*a,e[1]=s*c+i*a,e[2]=i*c-s*a,e[3]=o*c-n*a,e}function _w(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c-i*a,e[1]=s*c+o*a,e[2]=i*c+n*a,e[3]=o*c-s*a,e}function yw(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+s*a,e[1]=s*c-n*a,e[2]=i*c+o*a,e[3]=o*c-i*a,e}function Aw(e,t){let r=t[0],n=t[1],s=t[2];return e[0]=r,e[1]=n,e[2]=s,e[3]=Math.sqrt(Math.abs(1-r*r-n*n-s*s)),e}function kf(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3],c=r[0],l=r[1],f=r[2],h=r[3],u,d,p,m,g;return u=s*c+i*l+o*f+a*h,u<0&&(u=-u,c=-c,l=-l,f=-f,h=-h),1-u>1e-6?(d=Math.acos(u),g=Math.sin(d),p=Math.sin((1-n)*d)/g,m=Math.sin(n*d)/g):(p=1-n,m=n),e[0]=p*s+m*c,e[1]=p*i+m*l,e[2]=p*o+m*f,e[3]=p*a+m*h,e}function bw(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i,a=o?1/o:0;return e[0]=-r*a,e[1]=-n*a,e[2]=-s*a,e[3]=i*a,e}function Tw(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}function k2(e,t){let r=t[0]+t[4]+t[8],n;if(r>0)n=Math.sqrt(r+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{let s=0;t[4]>t[0]&&(s=1),t[8]>t[s*3+s]&&(s=2);let i=(s+1)%3,o=(s+2)%3;n=Math.sqrt(t[s*3+s]-t[i*3+i]-t[o*3+o]+1),e[s]=.5*n,n=.5/n,e[3]=(t[i*3+o]-t[o*3+i])*n,e[i]=(t[i*3+s]+t[s*3+i])*n,e[o]=(t[o*3+s]+t[s*3+o])*n}return e}var vw=S2;var Ew=w2,Mw=P2,Sw=I2,ww=dm;var Cw=pm;var Pw=C2;var Iw=function(){let e=om(),t=cm(1,0,0),r=cm(0,1,0);return function(n,s,i){let o=Bf(s,i);return o<-.999999?(po(e,t,s),a2(e)<1e-6&&po(e,r,s),r2(e,e),F2(n,e,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(po(e,s,i),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+o,Pw(n,n))}}(),h2t=function(){let e=mw(),t=mw();return function(r,n,s,i,o,a){return kf(e,n,o,a),kf(t,s,i,a),kf(r,e,t,2*a*(1-a)),r}}(),u2t=function(){let e=GS();return function(t,r,n,s){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=s[0],e[4]=s[1],e[7]=s[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],Pw(t,k2(t,e))}}();var KG=[0,0,0,1],li=class extends oi{constructor(t=0,r=0,n=0,s=1){super(-0,-0,-0,-0),Array.isArray(t)&&arguments.length===1?this.copy(t):this.set(t,r,n,s)}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}fromObject(t){return this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this.check()}fromMatrix3(t){return k2(this,t),this.check()}fromAxisRotation(t,r){return F2(this,t,r),this.check()}identity(){return gw(this),this.check()}setAxisAngle(t,r){return this.fromAxisRotation(t,r)}get ELEMENTS(){return 4}get x(){return this[0]}set x(t){this[0]=dt(t)}get y(){return this[1]}set y(t){this[1]=dt(t)}get z(){return this[2]}set z(t){this[2]=dt(t)}get w(){return this[3]}set w(t){this[3]=dt(t)}len(){return ww(this)}lengthSquared(){return Cw(this)}dot(t){return Mw(this,t)}rotationTo(t,r){return Iw(this,t,r),this.check()}add(t){return vw(this,this,t),this.check()}calculateW(){return Aw(this,this),this.check()}conjugate(){return Tw(this,this),this.check()}invert(){return bw(this,this),this.check()}lerp(t,r,n){return n===void 0?this.lerp(this,t,r):(Sw(this,t,r,n),this.check())}multiplyRight(t){return D2(this,this,t),this.check()}multiplyLeft(t){return D2(this,t,this),this.check()}normalize(){let t=this.len(),r=t>0?1/t:0;return this[0]=this[0]*r,this[1]=this[1]*r,this[2]=this[2]*r,this[3]=this[3]*r,t===0&&(this[3]=1),this.check()}rotateX(t){return xw(this,this,t),this.check()}rotateY(t){return _w(this,this,t),this.check()}rotateZ(t){return yw(this,this,t),this.check()}scale(t){return Ew(this,this,t),this.check()}slerp(t,r,n){let s,i,o;switch(arguments.length){case 1:({start:s=KG,target:i,ratio:o}=t);break;case 2:s=this,i=t,o=r;break;default:s=t,i=r,o=n}return kf(this,s,i,o),this.check()}transformVector4(t,r=new Za){return O2(r,t,this),ai(r,4)}lengthSq(){return this.lengthSquared()}setFromAxisAngle(t,r){return this.setAxisAngle(t,r)}premultiply(t){return this.multiplyLeft(t)}multiply(t){return this.multiplyRight(t)}};var Rw=1e-6,ZG=6371e3,nn=class{constructor({phi:t=0,theta:r=0,radius:n=1,bearing:s,pitch:i,altitude:o,radiusScale:a=ZG}={}){this.phi=t,this.theta=r,this.radius=n||o||1,this.radiusScale=a||1,s!==void 0&&(this.bearing=s),i!==void 0&&(this.pitch=i),this.check()}toString(){return this.formatString(Ut)}formatString({printTypes:t=!1}){let r=Rf;return`${t?"Spherical":""}[rho:${r(this.radius)},theta:${r(this.theta)},phi:${r(this.phi)}]`}equals(t){return Yt(this.radius,t.radius)&&Yt(this.theta,t.theta)&&Yt(this.phi,t.phi)}exactEquals(t){return this.radius===t.radius&&this.theta===t.theta&&this.phi===t.phi}get bearing(){return 180-ii(this.phi)}set bearing(t){this.phi=Math.PI-$a(t)}get pitch(){return ii(this.theta)}set pitch(t){this.theta=$a(t)}get longitude(){return ii(this.phi)}get latitude(){return ii(this.theta)}get lng(){return ii(this.phi)}get lat(){return ii(this.theta)}get z(){return(this.radius-1)*this.radiusScale}set(t,r,n){return this.radius=t,this.phi=r,this.theta=n,this.check()}clone(){return new nn().copy(this)}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this.check()}fromLngLatZ([t,r,n]){return this.radius=1+n/this.radiusScale,this.phi=$a(r),this.theta=$a(t),this.check()}fromVector3(t){return this.radius=am(t),this.radius>0&&(this.theta=Math.atan2(t[0],t[1]),this.phi=Math.acos(xt(t[2]/this.radius,-1,1))),this.check()}toVector3(){return new V(0,0,this.radius).rotateX({radians:this.theta}).rotateZ({radians:this.phi})}makeSafe(){return this.phi=Math.max(Rw,Math.min(Math.PI-Rw,this.phi)),this}check(){if(!Number.isFinite(this.phi)||!Number.isFinite(this.theta)||!(this.radius>0))throw new Error("SphericalCoordinates: some fields set to invalid numbers");return this}};var Qa={};Wt(Qa,{EPSILON1:()=>JG,EPSILON10:()=>aj,EPSILON11:()=>cj,EPSILON12:()=>lj,EPSILON13:()=>fj,EPSILON14:()=>hj,EPSILON15:()=>uj,EPSILON16:()=>dj,EPSILON17:()=>pj,EPSILON18:()=>mj,EPSILON19:()=>gj,EPSILON2:()=>QG,EPSILON20:()=>xj,EPSILON3:()=>tj,EPSILON4:()=>ej,EPSILON5:()=>rj,EPSILON6:()=>nj,EPSILON7:()=>sj,EPSILON8:()=>ij,EPSILON9:()=>oj,PI_OVER_FOUR:()=>yj,PI_OVER_SIX:()=>Aj,PI_OVER_TWO:()=>_j,TWO_PI:()=>bj});var JG=.1,QG=.01,tj=.001,ej=1e-4,rj=1e-5,nj=1e-6,sj=1e-7,ij=1e-8,oj=1e-9,aj=1e-10,cj=1e-11,lj=1e-12,fj=1e-13,hj=1e-14,uj=1e-15,dj=1e-16,pj=1e-17,mj=1e-18,gj=1e-19,xj=1e-20,_j=Math.PI/2,yj=Math.PI/4,Aj=Math.PI/6,bj=Math.PI*2;function xm(e,t=[],r=0){let n=Math.fround(e),s=e-n;return t[r]=n,t[r+1]=s,t}function U2(e){return e-Math.fround(e)}function z2(e){let t=new Float32Array(32);for(let r=0;r<4;++r)for(let n=0;n<4;++n){let s=r*4+n;xm(e[n*4+r],t,s*2)}return t}var Tj=`#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND

// All these functions are for substituting tan() function from Intel GPU only
const float TWO_PI = 6.2831854820251465;
const float PI_2 = 1.5707963705062866;
const float PI_16 = 0.1963495463132858;

const float SIN_TABLE_0 = 0.19509032368659973;
const float SIN_TABLE_1 = 0.3826834261417389;
const float SIN_TABLE_2 = 0.5555702447891235;
const float SIN_TABLE_3 = 0.7071067690849304;

const float COS_TABLE_0 = 0.9807852506637573;
const float COS_TABLE_1 = 0.9238795042037964;
const float COS_TABLE_2 = 0.8314695954322815;
const float COS_TABLE_3 = 0.7071067690849304;

const float INVERSE_FACTORIAL_3 = 1.666666716337204e-01; // 1/3!
const float INVERSE_FACTORIAL_5 = 8.333333767950535e-03; // 1/5!
const float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04; // 1/7!
const float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06; // 1/9!

float sin_taylor_fp32(float a) {
  float r, s, t, x;

  if (a == 0.0) {
    return 0.0;
  }

  x = -a * a;
  s = a;
  r = a;

  r = r * x;
  t = r * INVERSE_FACTORIAL_3;
  s = s + t;

  r = r * x;
  t = r * INVERSE_FACTORIAL_5;
  s = s + t;

  r = r * x;
  t = r * INVERSE_FACTORIAL_7;
  s = s + t;

  r = r * x;
  t = r * INVERSE_FACTORIAL_9;
  s = s + t;

  return s;
}

void sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {
  if (a == 0.0) {
    sin_t = 0.0;
    cos_t = 1.0;
  }
  sin_t = sin_taylor_fp32(a);
  cos_t = sqrt(1.0 - sin_t * sin_t);
}

float tan_taylor_fp32(float a) {
    float sin_a;
    float cos_a;

    if (a == 0.0) {
        return 0.0;
    }

    // 2pi range reduction
    float z = floor(a / TWO_PI);
    float r = a - TWO_PI * z;

    float t;
    float q = floor(r / PI_2 + 0.5);
    int j = int(q);

    if (j < -2 || j > 2) {
        return 1.0 / 0.0;
    }

    t = r - PI_2 * q;

    q = floor(t / PI_16 + 0.5);
    int k = int(q);
    int abs_k = int(abs(float(k)));

    if (abs_k > 4) {
        return 1.0 / 0.0;
    } else {
        t = t - PI_16 * q;
    }

    float u = 0.0;
    float v = 0.0;

    float sin_t, cos_t;
    float s, c;
    sincos_taylor_fp32(t, sin_t, cos_t);

    if (k == 0) {
        s = sin_t;
        c = cos_t;
    } else {
        if (abs(float(abs_k) - 1.0) < 0.5) {
            u = COS_TABLE_0;
            v = SIN_TABLE_0;
        } else if (abs(float(abs_k) - 2.0) < 0.5) {
            u = COS_TABLE_1;
            v = SIN_TABLE_1;
        } else if (abs(float(abs_k) - 3.0) < 0.5) {
            u = COS_TABLE_2;
            v = SIN_TABLE_2;
        } else if (abs(float(abs_k) - 4.0) < 0.5) {
            u = COS_TABLE_3;
            v = SIN_TABLE_3;
        }
        if (k > 0) {
            s = u * sin_t + v * cos_t;
            c = u * cos_t - v * sin_t;
        } else {
            s = u * sin_t - v * cos_t;
            c = u * cos_t + v * sin_t;
        }
    }

    if (j == 0) {
        sin_a = s;
        cos_a = c;
    } else if (j == 1) {
        sin_a = c;
        cos_a = -s;
    } else if (j == -1) {
        sin_a = -c;
        cos_a = s;
    } else {
        sin_a = -s;
        cos_a = -c;
    }
    return sin_a / cos_a;
}
#endif

float tan_fp32(float a) {
#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND
  return tan_taylor_fp32(a);
#else
  return tan(a);
#endif
}
`,V2={name:"fp32",vs:Tj};var Ow=`
uniform fp64arithmeticUniforms {
  uniform float ONE;
} fp64;

/*
About LUMA_FP64_CODE_ELIMINATION_WORKAROUND

The purpose of this workaround is to prevent shader compilers from
optimizing away necessary arithmetic operations by swapping their sequences
or transform the equation to some 'equivalent' form.

The method is to multiply an artifical variable, ONE, which will be known to
the compiler to be 1 only at runtime. The whole expression is then represented
as a polynomial with respective to ONE. In the coefficients of all terms, only one a
and one b should appear

err = (a + b) * ONE^6 - a * ONE^5 - (a + b) * ONE^4 + a * ONE^3 - b - (a + b) * ONE^2 + a * ONE
*/

// Divide float number to high and low floats to extend fraction bits
vec2 split(float a) {
  const float SPLIT = 4097.0;
  float t = a * SPLIT;
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float a_hi = t * fp64.ONE - (t - a);
  float a_lo = a * fp64.ONE - a_hi;
#else
  float a_hi = t - (t - a);
  float a_lo = a - a_hi;
#endif
  return vec2(a_hi, a_lo);
}

// Divide float number again when high float uses too many fraction bits
vec2 split2(vec2 a) {
  vec2 b = split(a.x);
  b.y += a.y;
  return b;
}

// Special sum operation when a > b
vec2 quickTwoSum(float a, float b) {
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float sum = (a + b) * fp64.ONE;
  float err = b - (sum - a) * fp64.ONE;
#else
  float sum = a + b;
  float err = b - (sum - a);
#endif
  return vec2(sum, err);
}

// General sum operation
vec2 twoSum(float a, float b) {
  float s = (a + b);
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float v = (s * fp64.ONE - a) * fp64.ONE;
  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE + (b - v);
#else
  float v = s - a;
  float err = (a - (s - v)) + (b - v);
#endif
  return vec2(s, err);
}

vec2 twoSub(float a, float b) {
  float s = (a - b);
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float v = (s * fp64.ONE - a) * fp64.ONE;
  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE - (b + v);
#else
  float v = s - a;
  float err = (a - (s - v)) - (b + v);
#endif
  return vec2(s, err);
}

vec2 twoSqr(float a) {
  float prod = a * a;
  vec2 a_fp64 = split(a);
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  float err = ((a_fp64.x * a_fp64.x - prod) * fp64.ONE + 2.0 * a_fp64.x *
    a_fp64.y * fp64.ONE * fp64.ONE) + a_fp64.y * a_fp64.y * fp64.ONE * fp64.ONE * fp64.ONE;
#else
  float err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;
#endif
  return vec2(prod, err);
}

vec2 twoProd(float a, float b) {
  float prod = a * b;
  vec2 a_fp64 = split(a);
  vec2 b_fp64 = split(b);
  float err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +
    a_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;
  return vec2(prod, err);
}

vec2 sum_fp64(vec2 a, vec2 b) {
  vec2 s, t;
  s = twoSum(a.x, b.x);
  t = twoSum(a.y, b.y);
  s.y += t.x;
  s = quickTwoSum(s.x, s.y);
  s.y += t.y;
  s = quickTwoSum(s.x, s.y);
  return s;
}

vec2 sub_fp64(vec2 a, vec2 b) {
  vec2 s, t;
  s = twoSub(a.x, b.x);
  t = twoSub(a.y, b.y);
  s.y += t.x;
  s = quickTwoSum(s.x, s.y);
  s.y += t.y;
  s = quickTwoSum(s.x, s.y);
  return s;
}

vec2 mul_fp64(vec2 a, vec2 b) {
  vec2 prod = twoProd(a.x, b.x);
  // y component is for the error
  prod.y += a.x * b.y;
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  prod = split2(prod);
#endif
  prod = quickTwoSum(prod.x, prod.y);
  prod.y += a.y * b.x;
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  prod = split2(prod);
#endif
  prod = quickTwoSum(prod.x, prod.y);
  return prod;
}

vec2 div_fp64(vec2 a, vec2 b) {
  float xn = 1.0 / b.x;
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  vec2 yn = mul_fp64(a, vec2(xn, 0));
#else
  vec2 yn = a * xn;
#endif
  float diff = (sub_fp64(a, mul_fp64(b, yn))).x;
  vec2 prod = twoProd(xn, diff);
  return sum_fp64(yn, prod);
}

vec2 sqrt_fp64(vec2 a) {
  if (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);
  if (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);

  float x = 1.0 / sqrt(a.x);
  float yn = a.x * x;
#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)
  vec2 yn_sqr = twoSqr(yn) * fp64.ONE;
#else
  vec2 yn_sqr = twoSqr(yn);
#endif
  float diff = sub_fp64(a, yn_sqr).x;
  vec2 prod = twoProd(x * 0.5, diff);
#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)
  return sum_fp64(split(yn), prod);
#else
  return sum_fp64(vec2(yn, 0.0), prod);
#endif
}
`;var Lw=`const vec2 E_FP64 = vec2(2.7182817459106445e+00, 8.254840366817007e-08);
const vec2 LOG2_FP64 = vec2(0.6931471824645996e+00, -1.9046542121259336e-09);
const vec2 PI_FP64 = vec2(3.1415927410125732, -8.742278012618954e-8);
const vec2 TWO_PI_FP64 = vec2(6.2831854820251465, -1.7484556025237907e-7);
const vec2 PI_2_FP64 = vec2(1.5707963705062866, -4.371139006309477e-8);
const vec2 PI_4_FP64 = vec2(0.7853981852531433, -2.1855695031547384e-8);
const vec2 PI_16_FP64 = vec2(0.19634954631328583, -5.463923757886846e-9);
const vec2 PI_16_2_FP64 = vec2(0.39269909262657166, -1.0927847515773692e-8);
const vec2 PI_16_3_FP64 = vec2(0.5890486240386963, -1.4906100798128818e-9);
const vec2 PI_180_FP64 = vec2(0.01745329238474369, 1.3519960498364902e-10);

const vec2 SIN_TABLE_0_FP64 = vec2(0.19509032368659973, -1.6704714833615242e-9);
const vec2 SIN_TABLE_1_FP64 = vec2(0.3826834261417389, 6.22335089017767e-9);
const vec2 SIN_TABLE_2_FP64 = vec2(0.5555702447891235, -1.1769521357507529e-8);
const vec2 SIN_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617041793133e-8);

const vec2 COS_TABLE_0_FP64 = vec2(0.9807852506637573, 2.9739473106360492e-8);
const vec2 COS_TABLE_1_FP64 = vec2(0.9238795042037964, 2.8307490351764386e-8);
const vec2 COS_TABLE_2_FP64 = vec2(0.8314695954322815, 1.6870263741530778e-8);
const vec2 COS_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617152815436e-8);

const vec2 INVERSE_FACTORIAL_3_FP64 = vec2(1.666666716337204e-01, -4.967053879312289e-09); // 1/3!
const vec2 INVERSE_FACTORIAL_4_FP64 = vec2(4.16666679084301e-02, -1.2417634698280722e-09); // 1/4!
const vec2 INVERSE_FACTORIAL_5_FP64 = vec2(8.333333767950535e-03, -4.34617203337595e-10); // 1/5!
const vec2 INVERSE_FACTORIAL_6_FP64 = vec2(1.3888889225199819e-03, -3.3631094437103215e-11); // 1/6!
const vec2 INVERSE_FACTORIAL_7_FP64 = vec2(1.9841270113829523e-04,  -2.725596874933456e-12); // 1/7!
const vec2 INVERSE_FACTORIAL_8_FP64 = vec2(2.4801587642286904e-05, -3.406996025904184e-13); // 1/8!
const vec2 INVERSE_FACTORIAL_9_FP64 = vec2(2.75573188446287533e-06, 3.7935713937038186e-14); // 1/9!
const vec2 INVERSE_FACTORIAL_10_FP64 = vec2(2.755731998149713e-07, -7.575112367869873e-15); // 1/10!

float nint(float d) {
    if (d == floor(d)) return d;
    return floor(d + 0.5);
}

vec2 nint_fp64(vec2 a) {
    float hi = nint(a.x);
    float lo;
    vec2 tmp;
    if (hi == a.x) {
        lo = nint(a.y);
        tmp = quickTwoSum(hi, lo);
    } else {
        lo = 0.0;
        if (abs(hi - a.x) == 0.5 && a.y < 0.0) {
            hi -= 1.0;
        }
        tmp = vec2(hi, lo);
    }
    return tmp;
}

/* k_power controls how much range reduction we would like to have
Range reduction uses the following method:
assume a = k_power * r + m * log(2), k and m being integers.
Set k_power = 4 (we can choose other k to trade accuracy with performance.
we only need to calculate exp(r) and using exp(a) = 2^m * exp(r)^k_power;
*/

vec2 exp_fp64(vec2 a) {
  // We need to make sure these two numbers match
  // as bit-wise shift is not available in GLSL 1.0
  const int k_power = 4;
  const float k = 16.0;

  const float inv_k = 1.0 / k;

  if (a.x <= -88.0) return vec2(0.0, 0.0);
  if (a.x >= 88.0) return vec2(1.0 / 0.0, 1.0 / 0.0);
  if (a.x == 0.0 && a.y == 0.0) return vec2(1.0, 0.0);
  if (a.x == 1.0 && a.y == 0.0) return E_FP64;

  float m = floor(a.x / LOG2_FP64.x + 0.5);
  vec2 r = sub_fp64(a, mul_fp64(LOG2_FP64, vec2(m, 0.0))) * inv_k;
  vec2 s, t, p;

  p = mul_fp64(r, r);
  s = sum_fp64(r, p * 0.5);
  p = mul_fp64(p, r);
  t = mul_fp64(p, INVERSE_FACTORIAL_3_FP64);

  s = sum_fp64(s, t);
  p = mul_fp64(p, r);
  t = mul_fp64(p, INVERSE_FACTORIAL_4_FP64);

  s = sum_fp64(s, t);
  p = mul_fp64(p, r);
  t = mul_fp64(p, INVERSE_FACTORIAL_5_FP64);

  // s = sum_fp64(s, t);
  // p = mul_fp64(p, r);
  // t = mul_fp64(p, INVERSE_FACTORIAL_6_FP64);

  // s = sum_fp64(s, t);
  // p = mul_fp64(p, r);
  // t = mul_fp64(p, INVERSE_FACTORIAL_7_FP64);

  s = sum_fp64(s, t);


  // At this point, s = exp(r) - 1; but after following 4 recursions, we will get exp(r) ^ 512 - 1.
  for (int i = 0; i < k_power; i++) {
    s = sum_fp64(s * 2.0, mul_fp64(s, s));
  }

#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)
  s = sum_fp64(s, vec2(fp64.ONE, 0.0));
#else
  s = sum_fp64(s, vec2(1.0, 0.0));
#endif

  return s * pow(2.0, m);
//   return r;
}

vec2 log_fp64(vec2 a)
{
  if (a.x == 1.0 && a.y == 0.0) return vec2(0.0, 0.0);
  if (a.x <= 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);
  vec2 x = vec2(log(a.x), 0.0);
  vec2 s;
#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)
  s = vec2(fp64.ONE, 0.0);
#else
  s = vec2(1.0, 0.0);
#endif

  x = sub_fp64(sum_fp64(x, mul_fp64(a, exp_fp64(-x))), s);
  return x;
}

vec2 sin_taylor_fp64(vec2 a) {
  vec2 r, s, t, x;

  if (a.x == 0.0 && a.y == 0.0) {
    return vec2(0.0, 0.0);
  }

  x = -mul_fp64(a, a);
  s = a;
  r = a;

  r = mul_fp64(r, x);
  t = mul_fp64(r, INVERSE_FACTORIAL_3_FP64);
  s = sum_fp64(s, t);

  r = mul_fp64(r, x);
  t = mul_fp64(r, INVERSE_FACTORIAL_5_FP64);
  s = sum_fp64(s, t);

  /* keep the following commented code in case we need them
  for extra accuracy from the Taylor expansion*/

  // r = mul_fp64(r, x);
  // t = mul_fp64(r, INVERSE_FACTORIAL_7_FP64);
  // s = sum_fp64(s, t);

  // r = mul_fp64(r, x);
  // t = mul_fp64(r, INVERSE_FACTORIAL_9_FP64);
  // s = sum_fp64(s, t);

  return s;
}

vec2 cos_taylor_fp64(vec2 a) {
  vec2 r, s, t, x;

  if (a.x == 0.0 && a.y == 0.0) {
    return vec2(1.0, 0.0);
  }

  x = -mul_fp64(a, a);
  r = x;
  s = sum_fp64(vec2(1.0, 0.0), r * 0.5);

  r = mul_fp64(r, x);
  t = mul_fp64(r, INVERSE_FACTORIAL_4_FP64);
  s = sum_fp64(s, t);

  r = mul_fp64(r, x);
  t = mul_fp64(r, INVERSE_FACTORIAL_6_FP64);
  s = sum_fp64(s, t);

  /* keep the following commented code in case we need them
  for extra accuracy from the Taylor expansion*/

  // r = mul_fp64(r, x);
  // t = mul_fp64(r, INVERSE_FACTORIAL_8_FP64);
  // s = sum_fp64(s, t);

  // r = mul_fp64(r, x);
  // t = mul_fp64(r, INVERSE_FACTORIAL_10_FP64);
  // s = sum_fp64(s, t);

  return s;
}

void sincos_taylor_fp64(vec2 a, out vec2 sin_t, out vec2 cos_t) {
  if (a.x == 0.0 && a.y == 0.0) {
    sin_t = vec2(0.0, 0.0);
    cos_t = vec2(1.0, 0.0);
  }

  sin_t = sin_taylor_fp64(a);
  cos_t = sqrt_fp64(sub_fp64(vec2(1.0, 0.0), mul_fp64(sin_t, sin_t)));
}

vec2 sin_fp64(vec2 a) {
    if (a.x == 0.0 && a.y == 0.0) {
        return vec2(0.0, 0.0);
    }

    // 2pi range reduction
    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));
    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));

    vec2 t;
    float q = floor(r.x / PI_2_FP64.x + 0.5);
    int j = int(q);

    if (j < -2 || j > 2) {
        return vec2(0.0 / 0.0, 0.0 / 0.0);
    }

    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));

    q = floor(t.x / PI_16_FP64.x + 0.5);
    int k = int(q);

    if (k == 0) {
        if (j == 0) {
            return sin_taylor_fp64(t);
        } else if (j == 1) {
            return cos_taylor_fp64(t);
        } else if (j == -1) {
            return -cos_taylor_fp64(t);
        } else {
            return -sin_taylor_fp64(t);
        }
    }

    int abs_k = int(abs(float(k)));

    if (abs_k > 4) {
        return vec2(0.0 / 0.0, 0.0 / 0.0);
    } else {
        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));
    }

    vec2 u = vec2(0.0, 0.0);
    vec2 v = vec2(0.0, 0.0);

#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)
    if (abs(float(abs_k) - 1.0) < 0.5) {
        u = COS_TABLE_0_FP64;
        v = SIN_TABLE_0_FP64;
    } else if (abs(float(abs_k) - 2.0) < 0.5) {
        u = COS_TABLE_1_FP64;
        v = SIN_TABLE_1_FP64;
    } else if (abs(float(abs_k) - 3.0) < 0.5) {
        u = COS_TABLE_2_FP64;
        v = SIN_TABLE_2_FP64;
    } else if (abs(float(abs_k) - 4.0) < 0.5) {
        u = COS_TABLE_3_FP64;
        v = SIN_TABLE_3_FP64;
    }
#else
    if (abs_k == 1) {
        u = COS_TABLE_0_FP64;
        v = SIN_TABLE_0_FP64;
    } else if (abs_k == 2) {
        u = COS_TABLE_1_FP64;
        v = SIN_TABLE_1_FP64;
    } else if (abs_k == 3) {
        u = COS_TABLE_2_FP64;
        v = SIN_TABLE_2_FP64;
    } else if (abs_k == 4) {
        u = COS_TABLE_3_FP64;
        v = SIN_TABLE_3_FP64;
    }
#endif

    vec2 sin_t, cos_t;
    sincos_taylor_fp64(t, sin_t, cos_t);



    vec2 result = vec2(0.0, 0.0);
    if (j == 0) {
        if (k > 0) {
            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
        } else {
            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
        }
    } else if (j == 1) {
        if (k > 0) {
            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));
        } else {
            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));
        }
    } else if (j == -1) {
        if (k > 0) {
            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));
        } else {
            result = -sum_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));
        }
    } else {
        if (k > 0) {
            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
        } else {
            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));
        }
    }

    return result;
}

vec2 cos_fp64(vec2 a) {
    if (a.x == 0.0 && a.y == 0.0) {
        return vec2(1.0, 0.0);
    }

    // 2pi range reduction
    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));
    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));

    vec2 t;
    float q = floor(r.x / PI_2_FP64.x + 0.5);
    int j = int(q);

    if (j < -2 || j > 2) {
        return vec2(0.0 / 0.0, 0.0 / 0.0);
    }

    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));

    q = floor(t.x / PI_16_FP64.x + 0.5);
    int k = int(q);

    if (k == 0) {
        if (j == 0) {
            return cos_taylor_fp64(t);
        } else if (j == 1) {
            return -sin_taylor_fp64(t);
        } else if (j == -1) {
            return sin_taylor_fp64(t);
        } else {
            return -cos_taylor_fp64(t);
        }
    }

    int abs_k = int(abs(float(k)));

    if (abs_k > 4) {
        return vec2(0.0 / 0.0, 0.0 / 0.0);
    } else {
        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));
    }

    vec2 u = vec2(0.0, 0.0);
    vec2 v = vec2(0.0, 0.0);

#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)
    if (abs(float(abs_k) - 1.0) < 0.5) {
        u = COS_TABLE_0_FP64;
        v = SIN_TABLE_0_FP64;
    } else if (abs(float(abs_k) - 2.0) < 0.5) {
        u = COS_TABLE_1_FP64;
        v = SIN_TABLE_1_FP64;
    } else if (abs(float(abs_k) - 3.0) < 0.5) {
        u = COS_TABLE_2_FP64;
        v = SIN_TABLE_2_FP64;
    } else if (abs(float(abs_k) - 4.0) < 0.5) {
        u = COS_TABLE_3_FP64;
        v = SIN_TABLE_3_FP64;
    }
#else
    if (abs_k == 1) {
        u = COS_TABLE_0_FP64;
        v = SIN_TABLE_0_FP64;
    } else if (abs_k == 2) {
        u = COS_TABLE_1_FP64;
        v = SIN_TABLE_1_FP64;
    } else if (abs_k == 3) {
        u = COS_TABLE_2_FP64;
        v = SIN_TABLE_2_FP64;
    } else if (abs_k == 4) {
        u = COS_TABLE_3_FP64;
        v = SIN_TABLE_3_FP64;
    }
#endif

    vec2 sin_t, cos_t;
    sincos_taylor_fp64(t, sin_t, cos_t);

    vec2 result = vec2(0.0, 0.0);
    if (j == 0) {
        if (k > 0) {
            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));
        } else {
            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));
        }
    } else if (j == 1) {
        if (k > 0) {
            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
        } else {
            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));
        }
    } else if (j == -1) {
        if (k > 0) {
            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
        } else {
            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
        }
    } else {
        if (k > 0) {
            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));
        } else {
            result = -sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));
        }
    }

    return result;
}

vec2 tan_fp64(vec2 a) {
    vec2 sin_a;
    vec2 cos_a;

    if (a.x == 0.0 && a.y == 0.0) {
        return vec2(0.0, 0.0);
    }

    // 2pi range reduction
    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));
    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));

    vec2 t;
    float q = floor(r.x / PI_2_FP64.x + 0.5);
    int j = int(q);


    if (j < -2 || j > 2) {
        return vec2(0.0 / 0.0, 0.0 / 0.0);
    }

    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));

    q = floor(t.x / PI_16_FP64.x + 0.5);
    int k = int(q);
    int abs_k = int(abs(float(k)));

    // We just can't get PI/16 * 3.0 very accurately.
    // so let's just store it
    if (abs_k > 4) {
        return vec2(0.0 / 0.0, 0.0 / 0.0);
    } else {
        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));
    }


    vec2 u = vec2(0.0, 0.0);
    vec2 v = vec2(0.0, 0.0);

    vec2 sin_t, cos_t;
    vec2 s, c;
    sincos_taylor_fp64(t, sin_t, cos_t);

    if (k == 0) {
        s = sin_t;
        c = cos_t;
    } else {
#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)
        if (abs(float(abs_k) - 1.0) < 0.5) {
            u = COS_TABLE_0_FP64;
            v = SIN_TABLE_0_FP64;
        } else if (abs(float(abs_k) - 2.0) < 0.5) {
            u = COS_TABLE_1_FP64;
            v = SIN_TABLE_1_FP64;
        } else if (abs(float(abs_k) - 3.0) < 0.5) {
            u = COS_TABLE_2_FP64;
            v = SIN_TABLE_2_FP64;
        } else if (abs(float(abs_k) - 4.0) < 0.5) {
            u = COS_TABLE_3_FP64;
            v = SIN_TABLE_3_FP64;
        }
#else
        if (abs_k == 1) {
            u = COS_TABLE_0_FP64;
            v = SIN_TABLE_0_FP64;
        } else if (abs_k == 2) {
            u = COS_TABLE_1_FP64;
            v = SIN_TABLE_1_FP64;
        } else if (abs_k == 3) {
            u = COS_TABLE_2_FP64;
            v = SIN_TABLE_2_FP64;
        } else if (abs_k == 4) {
            u = COS_TABLE_3_FP64;
            v = SIN_TABLE_3_FP64;
        }
#endif
        if (k > 0) {
            s = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
            c = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));
        } else {
            s = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));
            c = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));
        }
    }

    if (j == 0) {
        sin_a = s;
        cos_a = c;
    } else if (j == 1) {
        sin_a = c;
        cos_a = -s;
    } else if (j == -1) {
        sin_a = -c;
        cos_a = s;
    } else {
        sin_a = -s;
        cos_a = -c;
    }
    return div_fp64(sin_a, cos_a);
}

vec2 radians_fp64(vec2 degree) {
  return mul_fp64(degree, PI_180_FP64);
}

vec2 mix_fp64(vec2 a, vec2 b, float x) {
  vec2 range = sub_fp64(b, a);
  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));
}

// Vector functions
// vec2 functions
void vec2_sum_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {
    out_val[0] = sum_fp64(a[0], b[0]);
    out_val[1] = sum_fp64(a[1], b[1]);
}

void vec2_sub_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {
    out_val[0] = sub_fp64(a[0], b[0]);
    out_val[1] = sub_fp64(a[1], b[1]);
}

void vec2_mul_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {
    out_val[0] = mul_fp64(a[0], b[0]);
    out_val[1] = mul_fp64(a[1], b[1]);
}

void vec2_div_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {
    out_val[0] = div_fp64(a[0], b[0]);
    out_val[1] = div_fp64(a[1], b[1]);
}

void vec2_mix_fp64(vec2 x[2], vec2 y[2], float a, out vec2 out_val[2]) {
  vec2 range[2];
  vec2_sub_fp64(y, x, range);
  vec2 portion[2];
  portion[0] = range[0] * a;
  portion[1] = range[1] * a;
  vec2_sum_fp64(x, portion, out_val);
}

vec2 vec2_length_fp64(vec2 x[2]) {
  return sqrt_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])));
}

void vec2_normalize_fp64(vec2 x[2], out vec2 out_val[2]) {
  vec2 length = vec2_length_fp64(x);
  vec2 length_vec2[2];
  length_vec2[0] = length;
  length_vec2[1] = length;

  vec2_div_fp64(x, length_vec2, out_val);
}

vec2 vec2_distance_fp64(vec2 x[2], vec2 y[2]) {
  vec2 diff[2];
  vec2_sub_fp64(x, y, diff);
  return vec2_length_fp64(diff);
}

vec2 vec2_dot_fp64(vec2 a[2], vec2 b[2]) {
  vec2 v[2];

  v[0] = mul_fp64(a[0], b[0]);
  v[1] = mul_fp64(a[1], b[1]);

  return sum_fp64(v[0], v[1]);
}

// vec3 functions
void vec3_sub_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {
  for (int i = 0; i < 3; i++) {
    out_val[i] = sum_fp64(a[i], b[i]);
  }
}

void vec3_sum_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {
  for (int i = 0; i < 3; i++) {
    out_val[i] = sum_fp64(a[i], b[i]);
  }
}

vec2 vec3_length_fp64(vec2 x[3]) {
  return sqrt_fp64(sum_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])),
    mul_fp64(x[2], x[2])));
}

vec2 vec3_distance_fp64(vec2 x[3], vec2 y[3]) {
  vec2 diff[3];
  vec3_sub_fp64(x, y, diff);
  return vec3_length_fp64(diff);
}

// vec4 functions
void vec4_fp64(vec4 a, out vec2 out_val[4]) {
  out_val[0].x = a[0];
  out_val[0].y = 0.0;

  out_val[1].x = a[1];
  out_val[1].y = 0.0;

  out_val[2].x = a[2];
  out_val[2].y = 0.0;

  out_val[3].x = a[3];
  out_val[3].y = 0.0;
}

void vec4_scalar_mul_fp64(vec2 a[4], vec2 b, out vec2 out_val[4]) {
  out_val[0] = mul_fp64(a[0], b);
  out_val[1] = mul_fp64(a[1], b);
  out_val[2] = mul_fp64(a[2], b);
  out_val[3] = mul_fp64(a[3], b);
}

void vec4_sum_fp64(vec2 a[4], vec2 b[4], out vec2 out_val[4]) {
  for (int i = 0; i < 4; i++) {
    out_val[i] = sum_fp64(a[i], b[i]);
  }
}

void vec4_dot_fp64(vec2 a[4], vec2 b[4], out vec2 out_val) {
  vec2 v[4];

  v[0] = mul_fp64(a[0], b[0]);
  v[1] = mul_fp64(a[1], b[1]);
  v[2] = mul_fp64(a[2], b[2]);
  v[3] = mul_fp64(a[3], b[3]);

  out_val = sum_fp64(sum_fp64(v[0], v[1]), sum_fp64(v[2], v[3]));
}

void mat4_vec4_mul_fp64(vec2 b[16], vec2 a[4], out vec2 out_val[4]) {
  vec2 tmp[4];

  for (int i = 0; i < 4; i++)
  {
    for (int j = 0; j < 4; j++)
    {
      tmp[j] = b[j + i * 4];
    }
    vec4_dot_fp64(a, tmp, out_val[i]);
  }
}
`;var vj={ONE:1},_m={name:"fp64arithmetic",vs:Ow,defaultUniforms:vj,uniformTypes:{ONE:"f32"},fp64ify:xm,fp64LowPart:U2,fp64ifyMatrix4:z2},ym={name:"fp64",vs:Lw,dependencies:[_m],fp64ify:xm,fp64LowPart:U2,fp64ifyMatrix4:z2};var Ej=[0,1,1,1],Mj=`uniform pickingUniforms {
  float isActive;
  float isAttribute;
  float isHighlightActive;
  float useFloatColors;
  vec3 highlightedObjectColor;
  vec4 highlightColor;
} picking;

out vec4 picking_vRGBcolor_Avalid;

// Normalize unsigned byte color to 0-1 range
vec3 picking_normalizeColor(vec3 color) {
  return picking.useFloatColors > 0.5 ? color : color / 255.0;
}

// Normalize unsigned byte color to 0-1 range
vec4 picking_normalizeColor(vec4 color) {
  return picking.useFloatColors > 0.5 ? color : color / 255.0;
}

bool picking_isColorZero(vec3 color) {
  return dot(color, vec3(1.0)) < 0.00001;
}

bool picking_isColorValid(vec3 color) {
  return dot(color, vec3(1.0)) > 0.00001;
}

// Check if this vertex is highlighted 
bool isVertexHighlighted(vec3 vertexColor) {
  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);
  return
    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));
}

// Set the current picking color
void picking_setPickingColor(vec3 pickingColor) {
  pickingColor = picking_normalizeColor(pickingColor);

  if (bool(picking.isActive)) {
    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable
    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));

    if (!bool(picking.isAttribute)) {
      // Stores the picking color so that the fragment shader can render it during picking
      picking_vRGBcolor_Avalid.rgb = pickingColor;
    }
  } else {
    // Do the comparison with selected item color in vertex shader as it should mean fewer compares
    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));
  }
}

void picking_setPickingAttribute(float value) {
  if (bool(picking.isAttribute)) {
    picking_vRGBcolor_Avalid.r = value;
  }
}

void picking_setPickingAttribute(vec2 value) {
  if (bool(picking.isAttribute)) {
    picking_vRGBcolor_Avalid.rg = value;
  }
}

void picking_setPickingAttribute(vec3 value) {
  if (bool(picking.isAttribute)) {
    picking_vRGBcolor_Avalid.rgb = value;
  }
}
`,Sj=`uniform pickingUniforms {
  float isActive;
  float isAttribute;
  float isHighlightActive;
  float useFloatColors;
  vec3 highlightedObjectColor;
  vec4 highlightColor;
} picking;

in vec4 picking_vRGBcolor_Avalid;

/*
 * Returns highlight color if this item is selected.
 */
vec4 picking_filterHighlightColor(vec4 color) {
  // If we are still picking, we don't highlight
  if (picking.isActive > 0.5) {
    return color;
  }

  bool selected = bool(picking_vRGBcolor_Avalid.a);

  if (selected) {
    // Blend in highlight color based on its alpha value
    float highLightAlpha = picking.highlightColor.a;
    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);
    float highLightRatio = highLightAlpha / blendedAlpha;

    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);
    return vec4(blendedRGB, blendedAlpha);
  } else {
    return color;
  }
}

/*
 * Returns picking color if picking enabled else unmodified argument.
 */
vec4 picking_filterPickingColor(vec4 color) {
  if (bool(picking.isActive)) {
    if (picking_vRGBcolor_Avalid.a == 0.0) {
      discard;
    }
    return picking_vRGBcolor_Avalid;
  }
  return color;
}

/*
 * Returns picking color if picking is enabled if not
 * highlight color if this item is selected, otherwise unmodified argument.
 */
vec4 picking_filterColor(vec4 color) {
  vec4 highlightColor = picking_filterHighlightColor(color);
  return picking_filterPickingColor(highlightColor);
}
`,Am={props:{},uniforms:{},name:"picking",uniformTypes:{isActive:"f32",isAttribute:"f32",isHighlightActive:"f32",useFloatColors:"f32",highlightedObjectColor:"vec3<f32>",highlightColor:"vec4<f32>"},defaultUniforms:{isActive:!1,isAttribute:!1,isHighlightActive:!1,useFloatColors:!0,highlightedObjectColor:[0,0,0],highlightColor:Ej},vs:Mj,fs:Sj,getUniforms:wj};function wj(e={},t){let r={};if(e.highlightedObjectColor!==void 0)if(e.highlightedObjectColor===null)r.isHighlightActive=!1;else{r.isHighlightActive=!0;let n=e.highlightedObjectColor.slice(0,3);r.highlightedObjectColor=n}if(e.highlightColor){let n=Array.from(e.highlightColor,s=>s/255);Number.isFinite(n[3])||(n[3]=1),r.highlightColor=n}return e.isActive!==void 0&&(r.isActive=Boolean(e.isActive),r.isAttribute=Boolean(e.isAttribute)),e.useFloatColors!==void 0&&(r.useFloatColors=Boolean(e.useFloatColors)),r}var W2=`precision highp int;

// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))
struct AmbientLight {
  vec3 color;
};

struct PointLight {
  vec3 color;
  vec3 position;
  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential
};

struct DirectionalLight {
  vec3 color;
  vec3 direction;
};

uniform lightingUniforms {
  int enabled;
  int lightType;

  int directionalLightCount;
  int pointLightCount;

  vec3 ambientColor;

  vec3 lightColor0;
  vec3 lightPosition0;
  vec3 lightDirection0;
  vec3 lightAttenuation0;

  vec3 lightColor1;
  vec3 lightPosition1;
  vec3 lightDirection1;
  vec3 lightAttenuation1;

  vec3 lightColor2;
  vec3 lightPosition2;
  vec3 lightDirection2;
  vec3 lightAttenuation2;
} lighting;

PointLight lighting_getPointLight(int index) {
  switch (index) {
    case 0:
      return PointLight(lighting.lightColor0, lighting.lightPosition0, lighting.lightAttenuation0);
    case 1:
      return PointLight(lighting.lightColor1, lighting.lightPosition1, lighting.lightAttenuation1);
    case 2:
    default:  
      return PointLight(lighting.lightColor2, lighting.lightPosition2, lighting.lightAttenuation2);
  }
}

DirectionalLight lighting_getDirectionalLight(int index) {
  switch (index) {
    case 0:
      return DirectionalLight(lighting.lightColor0, lighting.lightDirection0);
    case 1:
      return DirectionalLight(lighting.lightColor1, lighting.lightDirection1);
    case 2:
    default:   
      return DirectionalLight(lighting.lightColor2, lighting.lightDirection2);
  }
} 

float getPointLightAttenuation(PointLight pointLight, float distance) {
  return pointLight.attenuation.x
       + pointLight.attenuation.y * distance
       + pointLight.attenuation.z * distance * distance;
}

// #endif
`;var Bw=`// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))
struct AmbientLight {
  color: vec3<f32>,
};

struct PointLight {
  color: vec3<f32>,
  position: vec3<f32>,
  attenuation: vec3<f32>, // 2nd order x:Constant-y:Linear-z:Exponential
};

struct DirectionalLight {
  color: vec3<f32>,
  direction: vec3<f32>,
};

struct lightingUniforms {
  enabled: i32,
  pointLightCount: i32,
  directionalLightCount: i32,

  ambientColor: vec3<f32>,

  // TODO - support multiple lights by uncommenting arrays below
  lightType: i32,
  lightColor: vec3<f32>,
  lightDirection: vec3<f32>,
  lightPosition: vec3<f32>,
  lightAttenuation: vec3<f32>,

  // AmbientLight ambientLight;
  // PointLight pointLight[MAX_LIGHTS];
  // DirectionalLight directionalLight[MAX_LIGHTS];
};

// Binding 0:1 is reserved for lighting (Note: could go into separate bind group as it is stable across draw calls)
@binding(1) @group(0) var<uniform> lighting : lightingUniforms;

fn lighting_getPointLight(index: i32) -> PointLight {
  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);
}

fn lighting_getDirectionalLight(index: i32) -> DirectionalLight {
  return DirectionalLight(lighting.lightColor, lighting.lightDirection);
} 

fn getPointLightAttenuation(pointLight: PointLight, distance: f32) -> f32 {
  return pointLight.attenuation.x
       + pointLight.attenuation.y * distance
       + pointLight.attenuation.z * distance * distance;
}
`;var Nw=3,Cj=255,Uf;(function(e){e[e.POINT=0]="POINT",e[e.DIRECTIONAL=1]="DIRECTIONAL"})(Uf||(Uf={}));var ds={props:{},uniforms:{},name:"lighting",defines:{MAX_LIGHTS:Nw},uniformTypes:{enabled:"i32",lightType:"i32",directionalLightCount:"i32",pointLightCount:"i32",ambientLightColor:"vec3<f32>",lightColor0:"vec3<f32>",lightPosition0:"vec3<f32>",lightDirection0:"vec3<f32>",lightAttenuation0:"vec3<f32>",lightColor1:"vec3<f32>",lightPosition1:"vec3<f32>",lightDirection1:"vec3<f32>",lightAttenuation1:"vec3<f32>",lightColor2:"vec3<f32>",lightPosition2:"vec3<f32>",lightDirection2:"vec3<f32>",lightAttenuation2:"vec3<f32>"},defaultUniforms:{enabled:1,lightType:Uf.POINT,directionalLightCount:0,pointLightCount:0,ambientLightColor:[.1,.1,.1],lightColor0:[1,1,1],lightPosition0:[1,1,2],lightDirection0:[1,1,1],lightAttenuation0:[1,0,0],lightColor1:[1,1,1],lightPosition1:[1,1,2],lightDirection1:[1,1,1],lightAttenuation1:[1,0,0],lightColor2:[1,1,1],lightPosition2:[1,1,2],lightDirection2:[1,1,1],lightAttenuation2:[1,0,0]},source:Bw,vs:W2,fs:W2,getUniforms:Pj};function Pj(e,t={}){if(e=e&&{...e},!e)return{...ds.defaultUniforms};e.lights&&(e={...e,...Rj(e.lights),lights:void 0});let{ambientLight:r,pointLights:n,directionalLights:s}=e||{};if(!(r||n&&n.length>0||s&&s.length>0))return{...ds.defaultUniforms,enabled:0};let o={...ds.defaultUniforms,...t,...Ij({ambientLight:r,pointLights:n,directionalLights:s})};return e.enabled!==void 0&&(o.enabled=e.enabled?1:0),o}function Ij({ambientLight:e,pointLights:t=[],directionalLights:r=[]}){let n={};n.ambientLightColor=H2(e);let s=0;for(let i of t){n.lightType=Uf.POINT;let o=s;n[`lightColor${o}`]=H2(i),n[`lightPosition${o}`]=i.position,n[`lightAttenuation${o}`]=i.attenuation||[1,0,0],s++}for(let i of r){n.lightType=Uf.DIRECTIONAL;let o=s;n[`lightColor${o}`]=H2(i),n[`lightDirection${o}`]=i.direction,s++}return s>Nw&&U.warn("MAX_LIGHTS exceeded")(),n.directionalLightCount=r.length,n.pointLightCount=t.length,n}function Rj(e){let t={pointLights:[],directionalLights:[]};for(let r of e||[])switch(r.type){case"ambient":t.ambientLight=r;break;case"directional":t.directionalLights?.push(r);break;case"point":t.pointLights?.push(r);break;default:}return t}function H2(e={}){let{color:t=[0,0,0],intensity:r=1}=e;return t.map(n=>n*r/Cj)}var bm=`uniform phongMaterialUniforms {
  uniform float ambient;
  uniform float diffuse;
  uniform float shininess;
  uniform vec3  specularColor;
} material;
`,Tm=`uniform phongMaterialUniforms {
  uniform float ambient;
  uniform float diffuse;
  uniform float shininess;
  uniform vec3  specularColor;
} material;

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {
  vec3 halfway_direction = normalize(light_direction + view_direction);
  float lambertian = dot(light_direction, normal_worldspace);
  float specular = 0.0;
  if (lambertian > 0.0) {
    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);
    specular = pow(specular_angle, material.shininess);
  }
  lambertian = max(lambertian, 0.0);
  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;
}

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {
  vec3 lightColor = surfaceColor;

  if (lighting.enabled == 0) {
    return lightColor;
  }

  vec3 view_direction = normalize(cameraPosition - position_worldspace);
  lightColor = material.ambient * surfaceColor * lighting.ambientColor;

  for (int i = 0; i < lighting.pointLightCount; i++) {
    PointLight pointLight = lighting_getPointLight(i);
    vec3 light_position_worldspace = pointLight.position;
    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
    float light_attenuation = getPointLightAttenuation(pointLight, distance(light_position_worldspace, position_worldspace));
    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color / light_attenuation);
  }

  int totalLights = min(MAX_LIGHTS, lighting.pointLightCount + lighting.directionalLightCount);
  for (int i = lighting.pointLightCount; i < totalLights; i++) {
    DirectionalLight directionalLight = lighting_getDirectionalLight(i);
    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
  }
  
  return lightColor;
}
`;var vm=`struct phongMaterialUniforms {
  ambient: f32,
  diffuse: f32,
  shininess: f32,
  specularColor: vec3<f32>,
};

@binding(2) @group(0) var<uniform> phongMaterial : phongMaterialUniforms;

fn lighting_getLightColor(surfaceColor: vec3<f32>, light_direction: vec3<f32>, view_direction: vec3<f32>, normal_worldspace: vec3<f32>, color: vec3<f32>) -> vec3<f32> {
  let halfway_direction: vec3<f32> = normalize(light_direction + view_direction);
  var lambertian: f32 = dot(light_direction, normal_worldspace);
  var specular: f32 = 0.0;
  if (lambertian > 0.0) {
    let specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);
    specular = pow(specular_angle, phongMaterial.shininess);
  }
  lambertian = max(lambertian, 0.0);
  return (lambertian * phongMaterial.diffuse * surfaceColor + specular * phongMaterial.specularColor) * color;
}

fn lighting_getLightColor2(surfaceColor: vec3<f32>, cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32> {
  var lightColor: vec3<f32> = surfaceColor;

  if (lighting.enabled == 0) {
    return lightColor;
  }

  let view_direction: vec3<f32> = normalize(cameraPosition - position_worldspace);
  lightColor = phongMaterial.ambient * surfaceColor * lighting.ambientColor;

  if (lighting.lightType == 0) {
    let pointLight: PointLight  = lighting_getPointLight(0);
    let light_position_worldspace: vec3<f32> = pointLight.position;
    let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);
    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
  } else if (lighting.lightType == 1) {
    var directionalLight: DirectionalLight = lighting_getDirectionalLight(0);
    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
  }
  
  return lightColor;
  /*
  for (int i = 0; i < MAX_LIGHTS; i++) {
    if (i >= lighting.pointLightCount) {
      break;
    }
    PointLight pointLight = lighting.pointLight[i];
    vec3 light_position_worldspace = pointLight.position;
    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
  }

  for (int i = 0; i < MAX_LIGHTS; i++) {
    if (i >= lighting.directionalLightCount) {
      break;
    }
    DirectionalLight directionalLight = lighting.directionalLight[i];
    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
  }
  */
}

fn lighting_getSpecularLightColor(cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32>{
  var lightColor = vec3<f32>(0, 0, 0);
  let surfaceColor = vec3<f32>(0, 0, 0);

  if (lighting.enabled == 0) {
    let view_direction = normalize(cameraPosition - position_worldspace);

    switch (lighting.lightType) {
      case 0, default: {
        let pointLight: PointLight = lighting_getPointLight(0);
        let light_position_worldspace: vec3<f32> = pointLight.position;
        let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);
        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
      }
      case 1: {
        let directionalLight: DirectionalLight = lighting_getDirectionalLight(0);
        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
      }
    }
  }
  return lightColor;
}
`;var fi={props:{},name:"gouraudMaterial",vs:Tm.replace("phongMaterial","gouraudMaterial"),fs:bm.replace("phongMaterial","gouraudMaterial"),source:vm.replaceAll("phongMaterial","gouraudMaterial"),defines:{LIGHTING_VERTEX:1},dependencies:[ds],uniformTypes:{ambient:"f32",diffuse:"f32",shininess:"f32",specularColor:"vec3<f32>"},defaultUniforms:{ambient:.35,diffuse:.6,shininess:32,specularColor:[.15,.15,.15]},getUniforms(e){let t={...e};return t.specularColor&&(t.specularColor=t.specularColor.map(r=>r/255)),{...fi.defaultUniforms,...t}}};var tc={name:"phongMaterial",dependencies:[ds],source:vm,vs:bm,fs:Tm,defines:{LIGHTING_FRAGMENT:1},uniformTypes:{ambient:"f32",diffuse:"f32",shininess:"f32",specularColor:"vec3<f32>"},defaultUniforms:{ambient:.35,diffuse:.6,shininess:32,specularColor:[.15,.15,.15]},getUniforms(e){let t={...e};return t.specularColor&&(t.specularColor=t.specularColor.map(r=>r/255)),{...tc.defaultUniforms,...t}}};var Fw=`out vec3 pbr_vPosition;
out vec2 pbr_vUV;

#ifdef HAS_NORMALS
# ifdef HAS_TANGENTS
out mat3 pbr_vTBN;
# else
out vec3 pbr_vNormal;
# endif
#endif

void pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)
{
  vec4 pos = pbrProjection.modelMatrix * position;
  pbr_vPosition = vec3(pos.xyz) / pos.w;

#ifdef HAS_NORMALS
#ifdef HAS_TANGENTS
  vec3 normalW = normalize(vec3(pbrProjection.normalMatrix * vec4(normal.xyz, 0.0)));
  vec3 tangentW = normalize(vec3(pbrProjection.modelMatrix * vec4(tangent.xyz, 0.0)));
  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;
  pbr_vTBN = mat3(tangentW, bitangentW, normalW);
#else // HAS_TANGENTS != 1
  pbr_vNormal = normalize(vec3(pbrProjection.modelMatrix * vec4(normal.xyz, 0.0)));
#endif
#endif

#ifdef HAS_UV
  pbr_vUV = uv;
#else
  pbr_vUV = vec2(0.,0.);
#endif
}
`;var Dw=`precision highp float;

uniform pbrMaterialUniforms {
  // Material is unlit
  bool unlit;

  // Base color map
  bool baseColorMapEnabled;
  vec4 baseColorFactor;

  bool normalMapEnabled;  
  float normalScale; // #ifdef HAS_NORMALMAP

  bool emissiveMapEnabled;
  vec3 emissiveFactor; // #ifdef HAS_EMISSIVEMAP

  vec2 metallicRoughnessValues;
  bool metallicRoughnessMapEnabled;

  bool occlusionMapEnabled;
  float occlusionStrength; // #ifdef HAS_OCCLUSIONMAP
  
  bool alphaCutoffEnabled;
  float alphaCutoff; // #ifdef ALPHA_CUTOFF
  
  // IBL
  bool IBLenabled;
  vec2 scaleIBLAmbient; // #ifdef USE_IBL
  
  // debugging flags used for shader output of intermediate PBR variables
  // #ifdef PBR_DEBUG
  vec4 scaleDiffBaseMR;
  vec4 scaleFGDSpec;
  // #endif
} pbrMaterial;

// Samplers
#ifdef HAS_BASECOLORMAP
uniform sampler2D pbr_baseColorSampler;
#endif
#ifdef HAS_NORMALMAP
uniform sampler2D pbr_normalSampler;
#endif
#ifdef HAS_EMISSIVEMAP
uniform sampler2D pbr_emissiveSampler;
#endif
#ifdef HAS_METALROUGHNESSMAP
uniform sampler2D pbr_metallicRoughnessSampler;
#endif
#ifdef HAS_OCCLUSIONMAP
uniform sampler2D pbr_occlusionSampler;
#endif
#ifdef USE_IBL
uniform samplerCube pbr_diffuseEnvSampler;
uniform samplerCube pbr_specularEnvSampler;
uniform sampler2D pbr_brdfLUT;
#endif

// Inputs from vertex shader

in vec3 pbr_vPosition;
in vec2 pbr_vUV;

#ifdef HAS_NORMALS
#ifdef HAS_TANGENTS
in mat3 pbr_vTBN;
#else
in vec3 pbr_vNormal;
#endif
#endif

// Encapsulate the various inputs used by the various functions in the shading equation
// We store values in this struct to simplify the integration of alternative implementations
// of the shading terms, outlined in the Readme.MD Appendix.
struct PBRInfo {
  float NdotL;                  // cos angle between normal and light direction
  float NdotV;                  // cos angle between normal and view direction
  float NdotH;                  // cos angle between normal and half vector
  float LdotH;                  // cos angle between light direction and half vector
  float VdotH;                  // cos angle between view direction and half vector
  float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)
  float metalness;              // metallic value at the surface
  vec3 reflectance0;            // full reflectance color (normal incidence angle)
  vec3 reflectance90;           // reflectance color at grazing angle
  float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])
  vec3 diffuseColor;            // color contribution from diffuse lighting
  vec3 specularColor;           // color contribution from specular lighting
  vec3 n;                       // normal at surface point
  vec3 v;                       // vector from surface point to camera
};

const float M_PI = 3.141592653589793;
const float c_MinRoughness = 0.04;

vec4 SRGBtoLINEAR(vec4 srgbIn)
{
#ifdef MANUAL_SRGB
#ifdef SRGB_FAST_APPROXIMATION
  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));
#else // SRGB_FAST_APPROXIMATION
  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);
  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );
#endif //SRGB_FAST_APPROXIMATION
  return vec4(linOut,srgbIn.w);;
#else //MANUAL_SRGB
  return srgbIn;
#endif //MANUAL_SRGB
}

// Find the normal for this fragment, pulling either from a predefined normal map
// or from the interpolated mesh normal and tangent attributes.
vec3 getNormal()
{
  // Retrieve the tangent space matrix
#ifndef HAS_TANGENTS
  vec3 pos_dx = dFdx(pbr_vPosition);
  vec3 pos_dy = dFdy(pbr_vPosition);
  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));
  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));
  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);

#ifdef HAS_NORMALS
  vec3 ng = normalize(pbr_vNormal);
#else
  vec3 ng = cross(pos_dx, pos_dy);
#endif

  t = normalize(t - ng * dot(ng, t));
  vec3 b = normalize(cross(ng, t));
  mat3 tbn = mat3(t, b, ng);
#else // HAS_TANGENTS
  mat3 tbn = pbr_vTBN;
#endif

#ifdef HAS_NORMALMAP
  vec3 n = texture(pbr_normalSampler, pbr_vUV).rgb;
  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(pbrMaterial.normalScale, pbrMaterial.normalScale, 1.0)));
#else
  // The tbn matrix is linearly interpolated, so we need to re-normalize
  vec3 n = normalize(tbn[2].xyz);
#endif

  return n;
}

// Calculation of the lighting contribution from an optional Image Based Light source.
// Precomputed Environment Maps are required uniform inputs and are computed as outlined in [1].
// See our README.md on Environment Maps [3] for additional discussion.
#ifdef USE_IBL
vec3 getIBLContribution(PBRInfo pbrInfo, vec3 n, vec3 reflection)
{
  float mipCount = 9.0; // resolution of 512x512
  float lod = (pbrInfo.perceptualRoughness * mipCount);
  // retrieve a scale and bias to F0. See [1], Figure 3
  vec3 brdf = SRGBtoLINEAR(texture(pbr_brdfLUT,
    vec2(pbrInfo.NdotV, 1.0 - pbrInfo.perceptualRoughness))).rgb;
  vec3 diffuseLight = SRGBtoLINEAR(texture(pbr_diffuseEnvSampler, n)).rgb;

#ifdef USE_TEX_LOD
  vec3 specularLight = SRGBtoLINEAR(texture(pbr_specularEnvSampler, reflection, lod)).rgb;
#else
  vec3 specularLight = SRGBtoLINEAR(texture(pbr_specularEnvSampler, reflection)).rgb;
#endif

  vec3 diffuse = diffuseLight * pbrInfo.diffuseColor;
  vec3 specular = specularLight * (pbrInfo.specularColor * brdf.x + brdf.y);

  // For presentation, this allows us to disable IBL terms
  diffuse *= pbrMaterial.scaleIBLAmbient.x;
  specular *= pbrMaterial.scaleIBLAmbient.y;

  return diffuse + specular;
}
#endif

// Basic Lambertian diffuse
// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog
// See also [1], Equation 1
vec3 diffuse(PBRInfo pbrInfo)
{
  return pbrInfo.diffuseColor / M_PI;
}

// The following equation models the Fresnel reflectance term of the spec equation (aka F())
// Implementation of fresnel from [4], Equation 15
vec3 specularReflection(PBRInfo pbrInfo)
{
  return pbrInfo.reflectance0 +
    (pbrInfo.reflectance90 - pbrInfo.reflectance0) *
    pow(clamp(1.0 - pbrInfo.VdotH, 0.0, 1.0), 5.0);
}

// This calculates the specular geometric attenuation (aka G()),
// where rougher material will reflect less light back to the viewer.
// This implementation is based on [1] Equation 4, and we adopt their modifications to
// alphaRoughness as input as originally proposed in [2].
float geometricOcclusion(PBRInfo pbrInfo)
{
  float NdotL = pbrInfo.NdotL;
  float NdotV = pbrInfo.NdotV;
  float r = pbrInfo.alphaRoughness;

  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));
  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));
  return attenuationL * attenuationV;
}

// The following equation(s) model the distribution of microfacet normals across
// the area being drawn (aka D())
// Implementation from "Average Irregularity Representation of a Roughened Surface
// for Ray Reflection" by T. S. Trowbridge, and K. P. Reitz
// Follows the distribution function recommended in the SIGGRAPH 2013 course notes
// from EPIC Games [1], Equation 3.
float microfacetDistribution(PBRInfo pbrInfo)
{
  float roughnessSq = pbrInfo.alphaRoughness * pbrInfo.alphaRoughness;
  float f = (pbrInfo.NdotH * roughnessSq - pbrInfo.NdotH) * pbrInfo.NdotH + 1.0;
  return roughnessSq / (M_PI * f * f);
}

void PBRInfo_setAmbientLight(inout PBRInfo pbrInfo) {
  pbrInfo.NdotL = 1.0;
  pbrInfo.NdotH = 0.0;
  pbrInfo.LdotH = 0.0;
  pbrInfo.VdotH = 1.0;
}

void PBRInfo_setDirectionalLight(inout PBRInfo pbrInfo, vec3 lightDirection) {
  vec3 n = pbrInfo.n;
  vec3 v = pbrInfo.v;
  vec3 l = normalize(lightDirection);             // Vector from surface point to light
  vec3 h = normalize(l+v);                        // Half vector between both l and v

  pbrInfo.NdotL = clamp(dot(n, l), 0.001, 1.0);
  pbrInfo.NdotH = clamp(dot(n, h), 0.0, 1.0);
  pbrInfo.LdotH = clamp(dot(l, h), 0.0, 1.0);
  pbrInfo.VdotH = clamp(dot(v, h), 0.0, 1.0);
}

void PBRInfo_setPointLight(inout PBRInfo pbrInfo, PointLight pointLight) {
  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);
  PBRInfo_setDirectionalLight(pbrInfo, light_direction);
}

vec3 calculateFinalColor(PBRInfo pbrInfo, vec3 lightColor) {
  // Calculate the shading terms for the microfacet specular shading model
  vec3 F = specularReflection(pbrInfo);
  float G = geometricOcclusion(pbrInfo);
  float D = microfacetDistribution(pbrInfo);

  // Calculation of analytical lighting contribution
  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInfo);
  vec3 specContrib = F * G * D / (4.0 * pbrInfo.NdotL * pbrInfo.NdotV);
  // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)
  return pbrInfo.NdotL * lightColor * (diffuseContrib + specContrib);
}

vec4 pbr_filterColor(vec4 colorUnused)
{
  // The albedo may be defined from a base texture or a flat color
#ifdef HAS_BASECOLORMAP
  vec4 baseColor = SRGBtoLINEAR(texture(pbr_baseColorSampler, pbr_vUV)) * pbrMaterial.baseColorFactor;
#else
  vec4 baseColor = pbrMaterial.baseColorFactor;
#endif

#ifdef ALPHA_CUTOFF
  if (baseColor.a < pbrMaterial.alphaCutoff) {
    discard;
  }
#endif

  vec3 color = vec3(0, 0, 0);

  if(pbrMaterial.unlit){
    color.rgb = baseColor.rgb;
  }
  else{
    // Metallic and Roughness material properties are packed together
    // In glTF, these factors can be specified by fixed scalar values
    // or from a metallic-roughness map
    float perceptualRoughness = pbrMaterial.metallicRoughnessValues.y;
    float metallic = pbrMaterial.metallicRoughnessValues.x;
#ifdef HAS_METALROUGHNESSMAP
    // Roughness is stored in the 'g' channel, metallic is stored in the 'b' channel.
    // This layout intentionally reserves the 'r' channel for (optional) occlusion map data
    vec4 mrSample = texture(pbr_metallicRoughnessSampler, pbr_vUV);
    perceptualRoughness = mrSample.g * perceptualRoughness;
    metallic = mrSample.b * metallic;
#endif
    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);
    metallic = clamp(metallic, 0.0, 1.0);
    // Roughness is authored as perceptual roughness; as is convention,
    // convert to material roughness by squaring the perceptual roughness [2].
    float alphaRoughness = perceptualRoughness * perceptualRoughness;

    vec3 f0 = vec3(0.04);
    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);
    diffuseColor *= 1.0 - metallic;
    vec3 specularColor = mix(f0, baseColor.rgb, metallic);

    // Compute reflectance.
    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);

    // For typical incident reflectance range (between 4% to 100%) set the grazing
    // reflectance to 100% for typical fresnel effect.
    // For very low reflectance range on highly diffuse objects (below 4%),
    // incrementally reduce grazing reflecance to 0%.
    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);
    vec3 specularEnvironmentR0 = specularColor.rgb;
    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;

    vec3 n = getNormal();                          // normal at surface point
    vec3 v = normalize(pbrProjection.camera - pbr_vPosition);  // Vector from surface point to camera

    float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);
    vec3 reflection = -normalize(reflect(v, n));

    PBRInfo pbrInfo = PBRInfo(
      0.0, // NdotL
      NdotV,
      0.0, // NdotH
      0.0, // LdotH
      0.0, // VdotH
      perceptualRoughness,
      metallic,
      specularEnvironmentR0,
      specularEnvironmentR90,
      alphaRoughness,
      diffuseColor,
      specularColor,
      n,
      v
    );


#ifdef USE_LIGHTS
    // Apply ambient light
    PBRInfo_setAmbientLight(pbrInfo);
    color += calculateFinalColor(pbrInfo, lighting.ambientColor);

    // Apply directional light
    for(int i = 0; i < lighting.directionalLightCount; i++) {
      if (i < lighting.directionalLightCount) {
        PBRInfo_setDirectionalLight(pbrInfo, lighting_getDirectionalLight(i).direction);
        color += calculateFinalColor(pbrInfo, lighting_getDirectionalLight(i).color);
      }
    }

    // Apply point light
    for(int i = 0; i < lighting.pointLightCount; i++) {
      if (i < lighting.pointLightCount) {
        PBRInfo_setPointLight(pbrInfo, lighting_getPointLight(i));
        float attenuation = getPointLightAttenuation(lighting_getPointLight(i), distance(lighting_getPointLight(i).position, pbr_vPosition));
        color += calculateFinalColor(pbrInfo, lighting_getPointLight(i).color / attenuation);
      }
    }
#endif

    // Calculate lighting contribution from image based lighting source (IBL)
#ifdef USE_IBL
    if (pbrMaterial.IBLenabled) {
      color += getIBLContribution(pbrInfo, n, reflection);
    }
#endif

 // Apply optional PBR terms for additional (optional) shading
#ifdef HAS_OCCLUSIONMAP
    if (pbrMaterial.occlusionMapEnabled) {
      float ao = texture(pbr_occlusionSampler, pbr_vUV).r;
      color = mix(color, color * ao, pbrMaterial.occlusionStrength);
    }
#endif

#ifdef HAS_EMISSIVEMAP
    if (pbrMaterial.emissiveMapEnabled) {
      vec3 emissive = SRGBtoLINEAR(texture(pbr_emissiveSampler, pbr_vUV)).rgb * pbrMaterial.emissiveFactor;
      color += emissive;
    }
#endif

    // This section uses mix to override final color for reference app visualization
    // of various parameters in the lighting equation.
#ifdef PBR_DEBUG
    // TODO: Figure out how to debug multiple lights

    // color = mix(color, F, pbr_scaleFGDSpec.x);
    // color = mix(color, vec3(G), pbr_scaleFGDSpec.y);
    // color = mix(color, vec3(D), pbr_scaleFGDSpec.z);
    // color = mix(color, specContrib, pbr_scaleFGDSpec.w);

    // color = mix(color, diffuseContrib, pbr_scaleDiffBaseMR.x);
    color = mix(color, baseColor.rgb, pbrMaterial.scaleDiffBaseMR.y);
    color = mix(color, vec3(metallic), pbrMaterial.scaleDiffBaseMR.z);
    color = mix(color, vec3(perceptualRoughness), pbrMaterial.scaleDiffBaseMR.w);
#endif

  }

  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);
}
`;var kw=`uniform pbrProjectionUniforms {
  mat4 modelViewProjectionMatrix;
  mat4 modelMatrix;
  mat4 normalMatrix;
  vec3 camera;
} pbrProjection;
`,Uw={name:"pbrProjection",vs:kw,fs:kw,getUniforms:e=>e,uniformTypes:{modelViewProjectionMatrix:"mat4x4<f32>",modelMatrix:"mat4x4<f32>",normalMatrix:"mat4x4<f32>",camera:"vec3<i32>"}};var go={props:{},uniforms:{},name:"pbrMaterial",dependencies:[ds,Uw],vs:Fw,fs:Dw,defines:{LIGHTING_FRAGMENT:1},getUniforms:e=>e,uniformTypes:{unlit:"i32",baseColorMapEnabled:"i32",baseColorFactor:"vec4<f32>",normalMapEnabled:"i32",normalScale:"f32",emissiveMapEnabled:"i32",emissiveFactor:"vec3<f32>",metallicRoughnessValues:"vec2<f32>",metallicRoughnessMapEnabled:"i32",occlusionMapEnabled:"i32",occlusionStrength:"f32",alphaCutoffEnabled:"i32",alphaCutoff:"f32",IBLenabled:"i32",scaleIBLAmbient:"vec2<f32>",scaleDiffBaseMR:"vec4<f32>",scaleFGDSpec:"vec4<f32>"}};var G2=`#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))

struct AmbientLight {
 vec3 color;
};

struct PointLight {
 vec3 color;
 vec3 position;

 // Constant-Linear-Exponential
 vec3 attenuation;
};

struct DirectionalLight {
  vec3 color;
  vec3 direction;
};

uniform AmbientLight lighting_uAmbientLight;
uniform PointLight lighting_uPointLight[MAX_LIGHTS];
uniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];
uniform int lighting_uPointLightCount;
uniform int lighting_uDirectionalLightCount;

uniform bool lighting_uEnabled;

float getPointLightAttenuation(PointLight pointLight, float distance) {
  return pointLight.attenuation.x
       + pointLight.attenuation.y * distance
       + pointLight.attenuation.z * distance * distance;
}

#endif
`;var Oj={lightSources:{}};function j2(e={}){let{color:t=[0,0,0],intensity:r=1}=e;return t.map(n=>n*r/255)}function Lj({ambientLight:e,pointLights:t=[],directionalLights:r=[]}){let n={};return e?n["lighting_uAmbientLight.color"]=j2(e):n["lighting_uAmbientLight.color"]=[0,0,0],t.forEach((s,i)=>{n[`lighting_uPointLight[${i}].color`]=j2(s),n[`lighting_uPointLight[${i}].position`]=s.position,n[`lighting_uPointLight[${i}].attenuation`]=s.attenuation||[1,0,0]}),n.lighting_uPointLightCount=t.length,r.forEach((s,i)=>{n[`lighting_uDirectionalLight[${i}].color`]=j2(s),n[`lighting_uDirectionalLight[${i}].direction`]=s.direction}),n.lighting_uDirectionalLightCount=r.length,n}function zw(e=Oj){if("lightSources"in e){let{ambientLight:t,pointLights:r,directionalLights:n}=e.lightSources||{};return t||r&&r.length>0||n&&n.length>0?Object.assign({},Lj({ambientLight:t,pointLights:r,directionalLights:n}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in e){let t={pointLights:[],directionalLights:[]};for(let r of e.lights||[])switch(r.type){case"ambient":t.ambientLight=r;break;case"directional":t.directionalLights?.push(r);break;case"point":t.pointLights?.push(r);break;default:}return zw({lightSources:t})}return{}}var q2={name:"lights",vs:G2,fs:G2,getUniforms:zw,defines:{MAX_LIGHTS:3}};var X2=`
uniform float lighting_uAmbient;
uniform float lighting_uDiffuse;
uniform float lighting_uShininess;
uniform vec3  lighting_uSpecularColor;

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {
    vec3 halfway_direction = normalize(light_direction + view_direction);
    float lambertian = dot(light_direction, normal_worldspace);
    float specular = 0.0;
    if (lambertian > 0.0) {
      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);
      specular = pow(specular_angle, lighting_uShininess);
    }
    lambertian = max(lambertian, 0.0);
    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;
}

vec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {
  vec3 lightColor = surfaceColor;

  if (lighting_uEnabled) {
    vec3 view_direction = normalize(cameraPosition - position_worldspace);
    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uPointLightCount) {
        break;
      }
      PointLight pointLight = lighting_uPointLight[i];
      vec3 light_position_worldspace = pointLight.position;
      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
    }

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uDirectionalLightCount) {
        break;
      }
      DirectionalLight directionalLight = lighting_uDirectionalLight[i];
      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
    }
  }
  return lightColor;
}

vec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {
  vec3 lightColor = vec3(0, 0, 0);
  vec3 surfaceColor = vec3(0, 0, 0);

  if (lighting_uEnabled) {
    vec3 view_direction = normalize(cameraPosition - position_worldspace);

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uPointLightCount) {
        break;
      }
      PointLight pointLight = lighting_uPointLight[i];
      vec3 light_position_worldspace = pointLight.position;
      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);
      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);
    }

    for (int i = 0; i < MAX_LIGHTS; i++) {
      if (i >= lighting_uDirectionalLightCount) {
        break;
      }
      DirectionalLight directionalLight = lighting_uDirectionalLight[i];
      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);
    }
  }
  return lightColor;
}
`;var Bj={};function Nj(e){let{ambient:t=.35,diffuse:r=.6,shininess:n=32,specularColor:s=[30,30,30]}=e;return{lighting_uAmbient:t,lighting_uDiffuse:r,lighting_uShininess:n,lighting_uSpecularColor:s.map(i=>i/255)}}function Vw(e=Bj){if(!("material"in e))return{};let{material:t}=e;return t?Nj(t):{lighting_uEnabled:!1}}var Em={name:"gouraud-lighting",dependencies:[q2],vs:X2,defines:{LIGHTING_VERTEX:1},getUniforms:Vw},Mm={name:"phong-lighting",dependencies:[q2],fs:X2,defines:{LIGHTING_FRAGMENT:1},getUniforms:Vw};var Ww=`uniform layerUniforms {
  uniform float opacity;
} layer;
`,Y2={name:"layer",vs:Ww,fs:Ww,getUniforms:e=>({opacity:Math.pow(e.opacity,.45454545454545453)}),uniformTypes:{opacity:"f32"}};var Fj=`const SMOOTH_EDGE_RADIUS: f32 = 0.5;

struct VertexGeometry {
  position: vec4<f32>,
  worldPosition: vec3<f32>,
  worldPositionAlt: vec3<f32>,
  normal: vec3<f32>,
  uv: vec2<f32>,
  pickingColor: vec3<f32>,
};

var<private> geometry_: VertexGeometry = VertexGeometry(
  vec4<f32>(0.0, 0.0, 1.0, 0.0),
  vec3<f32>(0.0, 0.0, 0.0),
  vec3<f32>(0.0, 0.0, 0.0),
  vec3<f32>(0.0, 0.0, 0.0),
  vec2<f32>(0.0, 0.0),
  vec3<f32>(0.0, 0.0, 0.0)
);

struct FragmentGeometry {
  uv: vec2<f32>,
};

var<private> fragmentGeometry: FragmentGeometry;

fn smoothedge(edge: f32, x: f32) -> f32 {
  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);
}
`,Hw="#define SMOOTH_EDGE_RADIUS 0.5",Dj=`${Hw}

struct VertexGeometry {
  vec4 position;
  vec3 worldPosition;
  vec3 worldPositionAlt;
  vec3 normal;
  vec2 uv;
  vec3 pickingColor;
} geometry = VertexGeometry(
  vec4(0.0, 0.0, 1.0, 0.0),
  vec3(0.0),
  vec3(0.0),
  vec3(0.0),
  vec2(0.0),
  vec3(0.0)
);
`,kj=`${Hw}

struct FragmentGeometry {
  vec2 uv;
} geometry;

float smoothedge(float edge, float x) {
  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);
}
`,Sm={name:"geometry",source:Fj,vs:Dj,fs:kj};var St;(function(e){e[e.Start=1]="Start",e[e.Move=2]="Move",e[e.End=4]="End",e[e.Cancel=8]="Cancel"})(St||(St={}));var Ht;(function(e){e[e.None=0]="None",e[e.Left=1]="Left",e[e.Right=2]="Right",e[e.Up=4]="Up",e[e.Down=8]="Down",e[e.Horizontal=3]="Horizontal",e[e.Vertical=12]="Vertical",e[e.All=15]="All"})(Ht||(Ht={}));var J;(function(e){e[e.Possible=1]="Possible",e[e.Began=2]="Began",e[e.Changed=4]="Changed",e[e.Ended=8]="Ended",e[e.Recognized=8]="Recognized",e[e.Cancelled=16]="Cancelled",e[e.Failed=32]="Failed"})(J||(J={}));var Gw="compute",$2="auto",zf="manipulation",xo="none",Vf="pan-x",Wf="pan-y";function K2(e){if(e.includes(xo))return xo;let t=e.includes(Vf),r=e.includes(Wf);return t&&r?xo:t||r?t?Vf:Wf:e.includes(zf)?zf:$2}var Hf=class{constructor(t,r){this.actions="",this.manager=t,this.set(r)}set(t){t===Gw&&(t=this.compute()),this.manager.element&&(this.manager.element.style.touchAction=t,this.actions=t)}update(){this.set(this.manager.options.touchAction)}compute(){let t=[];for(let r of this.manager.recognizers)r.options.enable&&(t=t.concat(r.getTouchAction()));return K2(t.join(" "))}};function ec(e){return e.trim().split(/\s+/g)}function wm(e,t,r){if(e)for(let n of ec(t))e.addEventListener(n,r,!1)}function Cm(e,t,r){if(e)for(let n of ec(t))e.removeEventListener(n,r,!1)}function Z2(e){return(e.ownerDocument||e).defaultView}function J2(e,t){let r=e;for(;r;){if(r===t)return!0;r=r.parentNode}return!1}function Pm(e){let t=e.length;if(t===1)return{x:Math.round(e[0].clientX),y:Math.round(e[0].clientY)};let r=0,n=0,s=0;for(;s<t;)r+=e[s].clientX,n+=e[s].clientY,s++;return{x:Math.round(r/t),y:Math.round(n/t)}}function Q2(e){let t=[],r=0;for(;r<e.pointers.length;)t[r]={clientX:Math.round(e.pointers[r].clientX),clientY:Math.round(e.pointers[r].clientY)},r++;return{timeStamp:Date.now(),pointers:t,center:Pm(t),deltaX:e.deltaX,deltaY:e.deltaY}}function Im(e,t){let r=t.x-e.x,n=t.y-e.y;return Math.sqrt(r*r+n*n)}function tA(e,t){let r=t.clientX-e.clientX,n=t.clientY-e.clientY;return Math.sqrt(r*r+n*n)}function jw(e,t){let r=t.x-e.x,n=t.y-e.y;return Math.atan2(n,r)*180/Math.PI}function eA(e,t){let r=t.clientX-e.clientX,n=t.clientY-e.clientY;return Math.atan2(n,r)*180/Math.PI}function Rm(e,t){return e===t?Ht.None:Math.abs(e)>=Math.abs(t)?e<0?Ht.Left:Ht.Right:t<0?Ht.Up:Ht.Down}function qw(e,t){let r=t.center,n=e.offsetDelta,s=e.prevDelta,i=e.prevInput;return(t.eventType===St.Start||i?.eventType===St.End)&&(s=e.prevDelta={x:i?.deltaX||0,y:i?.deltaY||0},n=e.offsetDelta={x:r.x,y:r.y}),{deltaX:s.x+(r.x-n.x),deltaY:s.y+(r.y-n.y)}}function Om(e,t,r){return{x:t/e||0,y:r/e||0}}function Xw(e,t){return tA(t[0],t[1])/tA(e[0],e[1])}function Yw(e,t){return eA(t[1],t[0])-eA(e[1],e[0])}function $w(e,t){let r=e.lastInterval||t,n=t.timeStamp-r.timeStamp,s,i,o,a;if(t.eventType!==St.Cancel&&(n>25||r.velocity===void 0)){let c=t.deltaX-r.deltaX,l=t.deltaY-r.deltaY,f=Om(n,c,l);i=f.x,o=f.y,s=Math.abs(f.x)>Math.abs(f.y)?f.x:f.y,a=Rm(c,l),e.lastInterval=t}else s=r.velocity,i=r.velocityX,o=r.velocityY,a=r.direction;t.velocity=s,t.velocityX=i,t.velocityY=o,t.direction=a}function Kw(e,t){let{session:r}=e,{pointers:n}=t,{length:s}=n;r.firstInput||(r.firstInput=Q2(t)),s>1&&!r.firstMultiple?r.firstMultiple=Q2(t):s===1&&(r.firstMultiple=!1);let{firstInput:i,firstMultiple:o}=r,a=o?o.center:i.center,c=t.center=Pm(n);t.timeStamp=Date.now(),t.deltaTime=t.timeStamp-i.timeStamp,t.angle=jw(a,c),t.distance=Im(a,c);let{deltaX:l,deltaY:f}=qw(r,t);t.deltaX=l,t.deltaY=f,t.offsetDirection=Rm(t.deltaX,t.deltaY);let h=Om(t.deltaTime,t.deltaX,t.deltaY);t.overallVelocityX=h.x,t.overallVelocityY=h.y,t.overallVelocity=Math.abs(h.x)>Math.abs(h.y)?h.x:h.y,t.scale=o?Xw(o.pointers,n):1,t.rotation=o?Yw(o.pointers,n):0,t.maxPointers=r.prevInput?t.pointers.length>r.prevInput.maxPointers?t.pointers.length:r.prevInput.maxPointers:t.pointers.length;let u=e.element;return J2(t.srcEvent.target,u)&&(u=t.srcEvent.target),t.target=u,$w(r,t),t}function Zw(e,t,r){let n=r.pointers.length,s=r.changedPointers.length,i=t&St.Start&&n-s===0,o=t&(St.End|St.Cancel)&&n-s===0;r.isFirst=Boolean(i),r.isFinal=Boolean(o),i&&(e.session={}),r.eventType=t;let a=Kw(e,r);e.emit("hammer.input",a),e.recognize(a),e.session.prevInput=a}var Gf=class{constructor(t){this.evEl="",this.evWin="",this.evTarget="",this.domHandler=r=>{this.manager.options.enable&&this.handler(r)},this.manager=t,this.element=t.element,this.target=t.options.inputTarget||t.element}callback(t,r){Zw(this.manager,t,r)}init(){wm(this.element,this.evEl,this.domHandler),wm(this.target,this.evTarget,this.domHandler),wm(Z2(this.element),this.evWin,this.domHandler)}destroy(){Cm(this.element,this.evEl,this.domHandler),Cm(this.target,this.evTarget,this.domHandler),Cm(Z2(this.element),this.evWin,this.domHandler)}};var zj={pointerdown:St.Start,pointermove:St.Move,pointerup:St.End,pointercancel:St.Cancel,pointerout:St.Cancel},Vj="pointerdown",Wj="pointermove pointerup pointercancel",jf=class extends Gf{constructor(t){super(t),this.evEl=Vj,this.evWin=Wj,this.store=this.manager.session.pointerEvents=[],this.init()}handler(t){let{store:r}=this,n=!1,s=zj[t.type],i=t.pointerType,o=i==="touch",a=r.findIndex(c=>c.pointerId===t.pointerId);s&St.Start&&(t.buttons||o)?a<0&&(r.push(t),a=r.length-1):s&(St.End|St.Cancel)&&(n=!0),!(a<0)&&(r[a]=t,this.callback(s,{pointers:r,changedPointers:[t],eventType:s,pointerType:i,srcEvent:t}),n&&r.splice(a,1))}};var Hj=["","webkit","Moz","MS","ms","o"];function Jw(e,t){let r=t[0].toUpperCase()+t.slice(1);for(let n of Hj){let s=n?n+r:t;if(s in e)return s}}var Gj=1,Qw=2,tC={touchAction:"compute",enable:!0,inputTarget:null,cssProps:{userSelect:"none",userDrag:"none",touchCallout:"none",tapHighlightColor:"rgba(0,0,0,0)"}},qf=class{constructor(t,r){this.options={...tC,...r,cssProps:{...tC.cssProps,...r.cssProps},inputTarget:r.inputTarget||t},this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=t,this.input=new jf(this),this.touchAction=new Hf(this,this.options.touchAction),this.toggleCssProps(!0)}set(t){return Object.assign(this.options,t),t.touchAction&&this.touchAction.update(),t.inputTarget&&(this.input.destroy(),this.input.target=t.inputTarget,this.input.init()),this}stop(t){this.session.stopped=t?Qw:Gj}recognize(t){let{session:r}=this;if(r.stopped)return;this.session.prevented&&t.srcEvent.preventDefault();let n,{recognizers:s}=this,{curRecognizer:i}=r;(!i||i&&i.state&J.Recognized)&&(i=r.curRecognizer=null);let o=0;for(;o<s.length;)n=s[o],r.stopped!==Qw&&(!i||n===i||n.canRecognizeWith(i))?n.recognize(t):n.reset(),!i&&n.state&(J.Began|J.Changed|J.Ended)&&(i=r.curRecognizer=n),o++}get(t){let{recognizers:r}=this;for(let n=0;n<r.length;n++)if(r[n].options.event===t)return r[n];return null}add(t){if(Array.isArray(t)){for(let n of t)this.add(n);return this}let r=this.get(t.options.event);return r&&this.remove(r),this.recognizers.push(t),t.manager=this,this.touchAction.update(),t}remove(t){if(Array.isArray(t)){for(let n of t)this.remove(n);return this}let r=typeof t=="string"?this.get(t):t;if(r){let{recognizers:n}=this,s=n.indexOf(r);s!==-1&&(n.splice(s,1),this.touchAction.update())}return this}on(t,r){if(!t||!r)return;let{handlers:n}=this;for(let s of ec(t))n[s]=n[s]||[],n[s].push(r)}off(t,r){if(!t)return;let{handlers:n}=this;for(let s of ec(t))r?n[s]&&n[s].splice(n[s].indexOf(r),1):delete n[s]}emit(t,r){let n=this.handlers[t]&&this.handlers[t].slice();if(!n||!n.length)return;let s=r;s.type=t,s.preventDefault=function(){r.srcEvent.preventDefault()};let i=0;for(;i<n.length;)n[i](s),i++}destroy(){this.toggleCssProps(!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}toggleCssProps(t){let{element:r}=this;if(r){for(let[n,s]of Object.entries(this.options.cssProps)){let i=Jw(r.style,n);t?(this.oldCssProps[i]=r.style[i],r.style[i]=s):r.style[i]=this.oldCssProps[i]||""}t||(this.oldCssProps={})}}};var jj=1;function eC(){return jj++}function rA(e){return e&J.Cancelled?"cancel":e&J.Ended?"end":e&J.Changed?"move":e&J.Began?"start":""}var ps=class{constructor(t){this.options=t,this.id=eC(),this.state=J.Possible,this.simultaneous={},this.requireFail=[]}set(t){return Object.assign(this.options,t),this.manager.touchAction.update(),this}recognizeWith(t){if(Array.isArray(t)){for(let s of t)this.recognizeWith(s);return this}let r;if(typeof t=="string"){if(r=this.manager.get(t),!r)throw new Error(`Cannot find recognizer ${t}`)}else r=t;let{simultaneous:n}=this;return n[r.id]||(n[r.id]=r,r.recognizeWith(this)),this}dropRecognizeWith(t){if(Array.isArray(t)){for(let n of t)this.dropRecognizeWith(n);return this}let r;return typeof t=="string"?r=this.manager.get(t):r=t,r&&delete this.simultaneous[r.id],this}requireFailure(t){if(Array.isArray(t)){for(let s of t)this.requireFailure(s);return this}let r;if(typeof t=="string"){if(r=this.manager.get(t),!r)throw new Error(`Cannot find recognizer ${t}`)}else r=t;let{requireFail:n}=this;return n.indexOf(r)===-1&&(n.push(r),r.requireFailure(this)),this}dropRequireFailure(t){if(Array.isArray(t)){for(let n of t)this.dropRequireFailure(n);return this}let r;if(typeof t=="string"?r=this.manager.get(t):r=t,r){let n=this.requireFail.indexOf(r);n>-1&&this.requireFail.splice(n,1)}return this}hasRequireFailures(){return Boolean(this.requireFail.find(t=>t.options.enable))}canRecognizeWith(t){return Boolean(this.simultaneous[t.id])}emit(t){if(!t)return;let{state:r}=this;r<J.Ended&&this.manager.emit(this.options.event+rA(r),t),this.manager.emit(this.options.event,t),t.additionalEvent&&this.manager.emit(t.additionalEvent,t),r>=J.Ended&&this.manager.emit(this.options.event+rA(r),t)}tryEmit(t){this.canEmit()?this.emit(t):this.state=J.Failed}canEmit(){let t=0;for(;t<this.requireFail.length;){if(!(this.requireFail[t].state&(J.Failed|J.Possible)))return!1;t++}return!0}recognize(t){let r={...t};if(!this.options.enable){this.reset(),this.state=J.Failed;return}this.state&(J.Recognized|J.Cancelled|J.Failed)&&(this.state=J.Possible),this.state=this.process(r),this.state&(J.Began|J.Changed|J.Ended|J.Cancelled)&&this.tryEmit(r)}getEventNames(){return[this.options.event]}reset(){}};var ms=class extends ps{attrTest(t){let r=this.options.pointers;return r===0||t.pointers.length===r}process(t){let{state:r}=this,{eventType:n}=t,s=r&(J.Began|J.Changed),i=this.attrTest(t);return s&&(n&St.Cancel||!i)?r|J.Cancelled:s||i?n&St.End?r|J.Ended:r&J.Began?r|J.Changed:J.Began:J.Failed}};var _o=class extends ps{constructor(t={}){super({enable:!0,event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10,...t}),this.pTime=null,this.pCenter=null,this._timer=null,this._input=null,this.count=0}getTouchAction(){return[zf]}process(t){let{options:r}=this,n=t.pointers.length===r.pointers,s=t.distance<r.threshold,i=t.deltaTime<r.time;if(this.reset(),t.eventType&St.Start&&this.count===0)return this.failTimeout();if(s&&i&&n){if(t.eventType!==St.End)return this.failTimeout();let o=this.pTime?t.timeStamp-this.pTime<r.interval:!0,a=!this.pCenter||Im(this.pCenter,t.center)<r.posThreshold;if(this.pTime=t.timeStamp,this.pCenter=t.center,!a||!o?this.count=1:this.count+=1,this._input=t,this.count%r.taps===0)return this.hasRequireFailures()?(this._timer=setTimeout(()=>{this.state=J.Recognized,this.tryEmit(this._input)},r.interval),J.Began):J.Recognized}return J.Failed}failTimeout(){return this._timer=setTimeout(()=>{this.state=J.Failed},this.options.interval),J.Failed}reset(){clearTimeout(this._timer)}emit(t){this.state===J.Recognized&&(t.tapCount=this.count,this.manager.emit(this.options.event,t))}};var qj=["","start","move","end","cancel","up","down","left","right"],hi=class extends ms{constructor(t={}){super({enable:!0,pointers:1,event:"pan",threshold:10,direction:Ht.All,...t}),this.pX=null,this.pY=null}getTouchAction(){let{options:{direction:t}}=this,r=[];return t&Ht.Horizontal&&r.push(Wf),t&Ht.Vertical&&r.push(Vf),r}getEventNames(){return qj.map(t=>this.options.event+t)}directionTest(t){let{options:r}=this,n=!0,{distance:s}=t,{direction:i}=t,o=t.deltaX,a=t.deltaY;return i&r.direction||(r.direction&Ht.Horizontal?(i=o===0?Ht.None:o<0?Ht.Left:Ht.Right,n=o!==this.pX,s=Math.abs(t.deltaX)):(i=a===0?Ht.None:a<0?Ht.Up:Ht.Down,n=a!==this.pY,s=Math.abs(t.deltaY))),t.direction=i,n&&s>r.threshold&&Boolean(i&r.direction)}attrTest(t){return super.attrTest(t)&&(Boolean(this.state&J.Began)||!(this.state&J.Began)&&this.directionTest(t))}emit(t){this.pX=t.deltaX,this.pY=t.deltaY;let r=Ht[t.direction].toLowerCase();r&&(t.additionalEvent=this.options.event+r),super.emit(t)}};var Xj=["","start","move","end","cancel","in","out"],rc=class extends ms{constructor(t={}){super({enable:!0,event:"pinch",threshold:0,pointers:2,...t})}getTouchAction(){return[xo]}getEventNames(){return Xj.map(t=>this.options.event+t)}attrTest(t){return super.attrTest(t)&&(Math.abs(t.scale-1)>this.options.threshold||Boolean(this.state&J.Began))}emit(t){if(t.scale!==1){let r=t.scale<1?"in":"out";t.additionalEvent=this.options.event+r}super.emit(t)}};var Dn=class{constructor(t,r,n){this.element=t,this.callback=r,this.options=n}};var rC=typeof navigator<"u"&&navigator.userAgent?navigator.userAgent.toLowerCase():"",r3t=typeof window<"u"?window:global;var Zj=rC.indexOf("firefox")!==-1,nC=4.000244140625,Jj=40,Qj=.25,Lm=class extends Dn{constructor(t,r,n){super(t,r,{enable:!0,...n}),this.handleEvent=s=>{if(!this.options.enable)return;let i=s.deltaY;globalThis.WheelEvent&&(Zj&&s.deltaMode===globalThis.WheelEvent.DOM_DELTA_PIXEL&&(i/=globalThis.devicePixelRatio),s.deltaMode===globalThis.WheelEvent.DOM_DELTA_LINE&&(i*=Jj)),i!==0&&i%nC===0&&(i=Math.floor(i/nC)),s.shiftKey&&i&&(i=i*Qj),this.callback({type:"wheel",center:{x:s.clientX,y:s.clientY},delta:-i,srcEvent:s,pointerType:"mouse",target:s.target})},t.addEventListener("wheel",this.handleEvent,{passive:!1})}destroy(){this.element.removeEventListener("wheel",this.handleEvent)}enableEventType(t,r){t==="wheel"&&(this.options.enable=r)}};var sC=["mousedown","mousemove","mouseup","mouseover","mouseout","mouseleave"],Bm=class extends Dn{constructor(t,r,n){super(t,r,{enable:!0,...n}),this.handleEvent=i=>{this.handleOverEvent(i),this.handleOutEvent(i),this.handleEnterEvent(i),this.handleLeaveEvent(i),this.handleMoveEvent(i)},this.pressed=!1;let{enable:s}=this.options;this.enableMoveEvent=s,this.enableLeaveEvent=s,this.enableEnterEvent=s,this.enableOutEvent=s,this.enableOverEvent=s,sC.forEach(i=>t.addEventListener(i,this.handleEvent))}destroy(){sC.forEach(t=>this.element.removeEventListener(t,this.handleEvent))}enableEventType(t,r){switch(t){case"pointermove":this.enableMoveEvent=r;break;case"pointerover":this.enableOverEvent=r;break;case"pointerout":this.enableOutEvent=r;break;case"pointerenter":this.enableEnterEvent=r;break;case"pointerleave":this.enableLeaveEvent=r;break;default:}}handleOverEvent(t){this.enableOverEvent&&t.type==="mouseover"&&this._emit("pointerover",t)}handleOutEvent(t){this.enableOutEvent&&t.type==="mouseout"&&this._emit("pointerout",t)}handleEnterEvent(t){this.enableEnterEvent&&t.type==="mouseenter"&&this._emit("pointerenter",t)}handleLeaveEvent(t){this.enableLeaveEvent&&t.type==="mouseleave"&&this._emit("pointerleave",t)}handleMoveEvent(t){if(this.enableMoveEvent)switch(t.type){case"mousedown":t.button>=0&&(this.pressed=!0);break;case"mousemove":t.buttons===0&&(this.pressed=!1),this.pressed||this._emit("pointermove",t);break;case"mouseup":this.pressed=!1;break;default:}}_emit(t,r){this.callback({type:t,center:{x:r.clientX,y:r.clientY},srcEvent:r,pointerType:"mouse",target:r.target})}};var iC=["keydown","keyup"],Nm=class extends Dn{constructor(t,r,n){super(t,r,{enable:!0,tabIndex:0,...n}),this.handleEvent=s=>{let i=s.target||s.srcElement;i.tagName==="INPUT"&&i.type==="text"||i.tagName==="TEXTAREA"||(this.enableDownEvent&&s.type==="keydown"&&this.callback({type:"keydown",srcEvent:s,key:s.key,target:s.target}),this.enableUpEvent&&s.type==="keyup"&&this.callback({type:"keyup",srcEvent:s,key:s.key,target:s.target}))},this.enableDownEvent=this.options.enable,this.enableUpEvent=this.options.enable,t.tabIndex=this.options.tabIndex,t.style.outline="none",iC.forEach(s=>t.addEventListener(s,this.handleEvent))}destroy(){iC.forEach(t=>this.element.removeEventListener(t,this.handleEvent))}enableEventType(t,r){t==="keydown"&&(this.enableDownEvent=r),t==="keyup"&&(this.enableUpEvent=r)}};var Fm=class extends Dn{constructor(t,r,n){super(t,r,n),this.handleEvent=s=>{this.options.enable&&this.callback({type:"contextmenu",center:{x:s.clientX,y:s.clientY},srcEvent:s,pointerType:"mouse",target:s.target})},t.addEventListener("contextmenu",this.handleEvent)}destroy(){this.element.removeEventListener("contextmenu",this.handleEvent)}enableEventType(t,r){t==="contextmenu"&&(this.options.enable=r)}};var t7={pointerdown:1,pointermove:2,pointerup:4,mousedown:1,mousemove:2,mouseup:4},e7=0,r7=1,n7=2,s7=1,i7=2,o7=4;function oC(e){let t=t7[e.srcEvent.type];if(!t)return null;let{buttons:r,button:n}=e.srcEvent,s=!1,i=!1,o=!1;return t===2?(s=Boolean(r&s7),i=Boolean(r&o7),o=Boolean(r&i7)):(s=n===e7,i=n===r7,o=n===n7),{leftButton:s,middleButton:i,rightButton:o}}function aC(e,t){let r=e.center;if(!r)return null;let n=t.getBoundingClientRect(),s=n.width/t.offsetWidth||1,i=n.height/t.offsetHeight||1,o={x:(r.x-n.left-t.clientLeft)/s,y:(r.y-n.top-t.clientTop)/i};return{center:r,offsetCenter:o}}var a7={srcElement:"root",priority:0},Dm=class{constructor(t,r){this.handleEvent=n=>{if(this.isEmpty())return;let s=this._normalizeEvent(n),i=n.srcEvent.target;for(;i&&i!==s.rootElement;){if(this._emit(s,i),s.handled)return;i=i.parentNode}this._emit(s,"root")},this.eventManager=t,this.recognizerName=r,this.handlers=[],this.handlersByElement=new Map,this._active=!1}isEmpty(){return!this._active}add(t,r,n,s=!1,i=!1){let{handlers:o,handlersByElement:a}=this,c={...a7,...n},l=a.get(c.srcElement);l||(l=[],a.set(c.srcElement,l));let f={type:t,handler:r,srcElement:c.srcElement,priority:c.priority};s&&(f.once=!0),i&&(f.passive=!0),o.push(f),this._active=this._active||!f.passive;let h=l.length-1;for(;h>=0&&!(l[h].priority>=f.priority);)h--;l.splice(h+1,0,f)}remove(t,r){let{handlers:n,handlersByElement:s}=this;for(let i=n.length-1;i>=0;i--){let o=n[i];if(o.type===t&&o.handler===r){n.splice(i,1);let a=s.get(o.srcElement);a.splice(a.indexOf(o),1),a.length===0&&s.delete(o.srcElement)}}this._active=n.some(i=>!i.passive)}_emit(t,r){let n=this.handlersByElement.get(r);if(n){let s=!1,i=()=>{t.handled=!0},o=()=>{t.handled=!0,s=!0},a=[];for(let c=0;c<n.length;c++){let{type:l,handler:f,once:h}=n[c];if(f({...t,type:l,stopPropagation:i,stopImmediatePropagation:o}),h&&a.push(n[c]),s)break}for(let c=0;c<a.length;c++){let{type:l,handler:f}=a[c];this.remove(l,f)}}}_normalizeEvent(t){let r=this.eventManager.getElement();return{...t,...oC(t),...aC(t,r),preventDefault:()=>{t.srcEvent.preventDefault()},stopImmediatePropagation:null,stopPropagation:null,handled:!1,rootElement:r}}};function c7(e){if("recognizer"in e)return e;let t,r=Array.isArray(e)?[...e]:[e];if(typeof r[0]=="function"){let n=r.shift(),s=r.shift()||{};t=new n(s)}else t=r.shift();return{recognizer:t,recognizeWith:typeof r[0]=="string"?[r[0]]:r[0],requireFailure:typeof r[1]=="string"?[r[1]]:r[1]}}var Xf=class{constructor(t=null,r={}){if(this._onBasicInput=n=>{this.manager.emit(n.srcEvent.type,n)},this._onOtherEvent=n=>{this.manager.emit(n.type,n)},this.options={recognizers:[],events:{},touchAction:"compute",tabIndex:0,cssProps:{},...r},this.events=new Map,this.element=t,!!t){this.manager=new qf(t,this.options);for(let n of this.options.recognizers){let{recognizer:s,recognizeWith:i,requireFailure:o}=c7(n);this.manager.add(s),i&&s.recognizeWith(i),o&&s.requireFailure(o)}this.manager.on("hammer.input",this._onBasicInput),this.wheelInput=new Lm(t,this._onOtherEvent,{enable:!1}),this.moveInput=new Bm(t,this._onOtherEvent,{enable:!1}),this.keyInput=new Nm(t,this._onOtherEvent,{enable:!1,tabIndex:r.tabIndex}),this.contextmenuInput=new Fm(t,this._onOtherEvent,{enable:!1}),this.on(this.options.events)}}getElement(){return this.element}destroy(){this.element&&(this.wheelInput.destroy(),this.moveInput.destroy(),this.keyInput.destroy(),this.contextmenuInput.destroy(),this.manager.destroy())}on(t,r,n){this._addEventHandler(t,r,n,!1)}once(t,r,n){this._addEventHandler(t,r,n,!0)}watch(t,r,n){this._addEventHandler(t,r,n,!1,!0)}off(t,r){this._removeEventHandler(t,r)}_toggleRecognizer(t,r){let{manager:n}=this;if(!n)return;let s=n.get(t);s&&(s.set({enable:r}),n.touchAction.update()),this.wheelInput?.enableEventType(t,r),this.moveInput?.enableEventType(t,r),this.keyInput?.enableEventType(t,r),this.contextmenuInput?.enableEventType(t,r)}_addEventHandler(t,r,n,s,i){if(typeof t!="string"){n=r;for(let[l,f]of Object.entries(t))this._addEventHandler(l,f,n,s,i);return}let{manager:o,events:a}=this;if(!o)return;let c=a.get(t);if(!c){let l=this._getRecognizerName(t)||t;c=new Dm(this,l),a.set(t,c),o&&o.on(t,c.handleEvent)}c.add(t,r,n,s,i),c.isEmpty()||this._toggleRecognizer(c.recognizerName,!0)}_removeEventHandler(t,r){if(typeof t!="string"){for(let[i,o]of Object.entries(t))this._removeEventHandler(i,o);return}let{events:n}=this,s=n.get(t);if(s&&(s.remove(t,r),s.isEmpty())){let{recognizerName:i}=s,o=!1;for(let a of n.values())if(a.recognizerName===i&&!a.isEmpty()){o=!0;break}o||this._toggleRecognizer(i,!1)}}_getRecognizerName(t){return this.manager.recognizers.find(r=>r.getEventNames().includes(t))?.options.event}};var q={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(q,"IDENTITY",{get:()=>(W.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});var Te={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},Lt={common:0,meters:1,pixels:2},Yf={click:"onClick",dblclick:"onClick",panstart:"onDragStart",panmove:"onDrag",panend:"onDragEnd"},nA={multipan:[hi,{threshold:10,direction:Ht.Vertical,pointers:2}],pinch:[rc,{},null,["multipan"]],pan:[hi,{threshold:1},["pinch"],["multipan"]],dblclick:[_o,{event:"dblclick",taps:2}],click:[_o,{event:"click"},null,["dblclick"]]},cC={DRAW:"draw",MASK:"mask",TERRAIN:"terrain"};function l7(e,t){if(e===t)return!0;if(Array.isArray(e)){let r=e.length;if(!t||t.length!==r)return!1;for(let n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0}return!1}function mr(e){let t={},r;return n=>{for(let s in n)if(!l7(n[s],t[s])){r=e(n),t=n;break}return r}}var lC=[0,0,0,0],f7=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],fC=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],h7=[0,0,0],hC=[0,0,0],u7=mr(p7);function sA(e,t,r=hC){r.length<3&&(r=[r[0],r[1],0]);let n=r,s,i=!0;switch(t===q.LNGLAT_OFFSETS||t===q.METER_OFFSETS?s=r:s=e.isGeospatial?[Math.fround(e.longitude),Math.fround(e.latitude),0]:null,e.projectionMode){case Te.WEB_MERCATOR:(t===q.LNGLAT||t===q.CARTESIAN)&&(s=[0,0,0],i=!1);break;case Te.WEB_MERCATOR_AUTO_OFFSET:t===q.LNGLAT?n=s:t===q.CARTESIAN&&(n=[Math.fround(e.center[0]),Math.fround(e.center[1]),0],s=e.unprojectPosition(n),n[0]-=r[0],n[1]-=r[1],n[2]-=r[2]);break;case Te.IDENTITY:n=e.position.map(Math.fround),n[2]=n[2]||0;break;case Te.GLOBE:i=!1,s=null;break;default:i=!1}return{geospatialOrigin:s,shaderCoordinateOrigin:n,offsetMode:i}}function d7(e,t,r){let{viewMatrixUncentered:n,projectionMatrix:s}=e,{viewMatrix:i,viewProjectionMatrix:o}=e,a=lC,c=lC,l=e.cameraPosition,{geospatialOrigin:f,shaderCoordinateOrigin:h,offsetMode:u}=sA(e,t,r);return u&&(c=e.projectPosition(f||h),l=[l[0]-c[0],l[1]-c[1],l[2]-c[2]],c[3]=1,a=nr.transformMat4([],c,o),i=n||i,o=re.multiply([],s,i),o=re.multiply([],o,f7)),{viewMatrix:i,viewProjectionMatrix:o,projectionCenter:a,originCommon:c,cameraPosCommon:l,shaderCoordinateOrigin:h,geospatialOrigin:f}}function km({viewport:e,devicePixelRatio:t=1,modelMatrix:r=null,coordinateSystem:n=q.DEFAULT,coordinateOrigin:s=hC,autoWrapLongitude:i=!1}){n===q.DEFAULT&&(n=e.isGeospatial?q.LNGLAT:q.CARTESIAN);let o=u7({viewport:e,devicePixelRatio:t,coordinateSystem:n,coordinateOrigin:s});return o.wrapLongitude=i,o.modelMatrix=r||fC,o}function p7({viewport:e,devicePixelRatio:t,coordinateSystem:r,coordinateOrigin:n}){let{projectionCenter:s,viewProjectionMatrix:i,originCommon:o,cameraPosCommon:a,shaderCoordinateOrigin:c,geospatialOrigin:l}=d7(e,r,n),f=e.getDistanceScales(),h=[e.width*t,e.height*t],u=nr.transformMat4([],[0,0,-e.focalDistance,1],e.projectionMatrix)[3]||1,d={coordinateSystem:r,projectionMode:e.projectionMode,coordinateOrigin:c,commonOrigin:o.slice(0,3),center:s,pseudoMeters:Boolean(e._pseudoMeters),viewportSize:h,devicePixelRatio:t,focalDistance:u,commonUnitsPerMeter:f.unitsPerMeter,commonUnitsPerWorldUnit:f.unitsPerMeter,commonUnitsPerWorldUnit2:h7,scale:e.scale,wrapLongitude:!1,viewProjectionMatrix:i,modelMatrix:fC,cameraPosition:a};if(l){let p=e.getDistanceScales(l);switch(r){case q.METER_OFFSETS:d.commonUnitsPerWorldUnit=p.unitsPerMeter,d.commonUnitsPerWorldUnit2=p.unitsPerMeter2;break;case q.LNGLAT:case q.LNGLAT_OFFSETS:e._pseudoMeters||(d.commonUnitsPerMeter=p.unitsPerMeter),d.commonUnitsPerWorldUnit=p.unitsPerDegree,d.commonUnitsPerWorldUnit2=p.unitsPerDegree2;break;case q.CARTESIAN:d.commonUnitsPerWorldUnit=[1,1,p.unitsPerMeter[2]],d.commonUnitsPerWorldUnit2=[0,0,p.unitsPerMeter2[2]];break;default:break}}return d}var m7=Object.keys(q).map(e=>`const COORDINATE_SYSTEM_${e}: i32 = ${q[e]};`).join(""),g7=Object.keys(Te).map(e=>`const PROJECTION_MODE_${e}: i32 = ${Te[e]};`).join(""),x7=Object.keys(Lt).map(e=>`const UNIT_${e.toUpperCase()}: i32 = ${Lt[e]};`).join(""),_7=`${m7}
${g7}
${x7}

const TILE_SIZE: f32 = 512.0;
const PI: f32 = 3.1415926536;
const WORLD_SCALE: f32 = TILE_SIZE / (PI * 2.0);
const ZERO_64_LOW: vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
const EARTH_RADIUS: f32 = 6370972.0; // meters
const GLOBE_RADIUS: f32 = 256.0;

// -----------------------------------------------------------------------------
// Uniform block (converted from GLSL uniform block)
// -----------------------------------------------------------------------------
struct ProjectUniforms {
  wrapLongitude: i32,
  coordinateSystem: i32,
  commonUnitsPerMeter: vec3<f32>,
  projectionMode: i32,
  scale: f32,
  commonUnitsPerWorldUnit: vec3<f32>,
  commonUnitsPerWorldUnit2: vec3<f32>,
  center: vec4<f32>,
  modelMatrix: mat4x4<f32>,
  viewProjectionMatrix: mat4x4<f32>,
  viewportSize: vec2<f32>,
  devicePixelRatio: f32,
  focalDistance: f32,
  cameraPosition: vec3<f32>,
  coordinateOrigin: vec3<f32>,
  commonOrigin: vec3<f32>,
  pseudoMeters: i32,
};

@group(0) @binding(0)
var<uniform> project: ProjectUniforms;

// -----------------------------------------------------------------------------
// Geometry data
// (In your GLSL code, "geometry" was assumed to be available globally. In WGSL,
// you might supply this via vertex attributes or a uniform. Here we define a
// uniform struct for demonstration.)
// -----------------------------------------------------------------------------

// Structure to carry additional geometry data used by deck.gl filters.
struct Geometry {
  worldPosition: vec3<f32>,
  worldPositionAlt: vec3<f32>,
  position: vec4<f32>,
  uv: vec2<f32>,
  pickingColor: vec3<f32>,
};

// @group(0) @binding(1)
var<private> geometry: Geometry;
`,uC=`${_7}

// -----------------------------------------------------------------------------
// Functions
// -----------------------------------------------------------------------------

// Returns an adjustment factor for commonUnitsPerMeter
fn _project_size_at_latitude(lat: f32) -> f32 {
  let y = clamp(lat, -89.9, 89.9);
  return 1.0 / cos(radians(y));
}

// Overloaded version: scales a value in meters at a given latitude.
fn _project_size_at_latitude_m(meters: f32, lat: f32) -> f32 {
  return meters * project.commonUnitsPerMeter.z * _project_size_at_latitude(lat);
}

// Computes a non-linear scale factor based on geometry.
// (Note: This function relies on "geometry" being provided.)
fn project_size() -> f32 {
  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&
      project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&
      project.pseudoMeters == 0) {
    if (geometry.position.w == 0.0) {
      return _project_size_at_latitude(geometry.worldPosition.y);
    }
    let y: f32 = geometry.position.y / TILE_SIZE * 2.0 - 1.0;
    let y2 = y * y;
    let y4 = y2 * y2;
    let y6 = y4 * y2;
    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;
  }
  return 1.0;
}

// Overloads to scale offsets (meters to world units)
fn project_size_float(meters: f32) -> f32 {
  return meters * project.commonUnitsPerMeter.z * project_size();
}

fn project_size_vec2(meters: vec2<f32>) -> vec2<f32> {
  return meters * project.commonUnitsPerMeter.xy * project_size();
}

fn project_size_vec3(meters: vec3<f32>) -> vec3<f32> {
  return meters * project.commonUnitsPerMeter * project_size();
}

fn project_size_vec4(meters: vec4<f32>) -> vec4<f32> {
  return vec4<f32>(meters.xyz * project.commonUnitsPerMeter, meters.w);
}

// Returns a rotation matrix aligning the z\u2011axis with the given up vector.
fn project_get_orientation_matrix(up: vec3<f32>) -> mat3x3<f32> {
  let uz = normalize(up);
  let ux = select(
    vec3<f32>(1.0, 0.0, 0.0),
    normalize(vec3<f32>(uz.y, -uz.x, 0.0)),
    abs(uz.z) == 1.0
  );
  let uy = cross(uz, ux);
  return mat3x3<f32>(ux, uy, uz);
}

// Since WGSL does not support "out" parameters, we return a struct.
struct RotationResult {
  needsRotation: bool,
  transform: mat3x3<f32>,
};

fn project_needs_rotation(commonPosition: vec3<f32>) -> RotationResult {
  if (project.projectionMode == PROJECTION_MODE_GLOBE) {
    return RotationResult(true, project_get_orientation_matrix(commonPosition));
  } else {
    return RotationResult(false, mat3x3<f32>());  // identity alternative if needed
  };
}

// Projects a normal vector from the current coordinate system to world space.
fn project_normal(vector: vec3<f32>) -> vec3<f32> {
  let normal_modelspace = project.modelMatrix * vec4<f32>(vector, 0.0);
  var n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);
  let rotResult = project_needs_rotation(geometry.position.xyz);
  if (rotResult.needsRotation) {
    n = rotResult.transform * n;
  }
  return n;
}

// Applies a scale offset based on y-offset (dy)
fn project_offset_(offset: vec4<f32>) -> vec4<f32> {
  let dy: f32 = offset.y;
  let commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;
  return vec4<f32>(offset.xyz * commonUnitsPerWorldUnit, offset.w);
}

// Projects lng/lat coordinates to a unit tile [0,1]
fn project_mercator_(lnglat: vec2<f32>) -> vec2<f32> {
  var x = lnglat.x;
  if (project.wrapLongitude != 0) {
    x = ((x + 180.0) % 360.0) - 180.0;
  }
  let y = clamp(lnglat.y, -89.9, 89.9);
  return vec2<f32>(
    radians(x) + PI,
    PI + log(tan(PI * 0.25 + radians(y) * 0.5))
  ) * WORLD_SCALE;
}

// Projects lng/lat/z coordinates for a globe projection.
fn project_globe_(lnglatz: vec3<f32>) -> vec3<f32> {
  let lambda = radians(lnglatz.x);
  let phi = radians(lnglatz.y);
  let cosPhi = cos(phi);
  let D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;
  return vec3<f32>(
    sin(lambda) * cosPhi,
    -cos(lambda) * cosPhi,
    sin(phi)
  ) * D;
}

// Projects positions (with an optional 64-bit low part) from the input
// coordinate system to the common space.
fn project_position_vec4_f64(position: vec4<f32>, position64Low: vec3<f32>) -> vec4<f32> {
  var position_world = project.modelMatrix * position;

  // Work around for a Mac+NVIDIA bug:
  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {
    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
      return vec4<f32>(
        project_mercator_(position_world.xy),
        _project_size_at_latitude_m(position_world.z, position_world.y),
        position_world.w
      );
    }
    if (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {
      position_world = vec4f(position_world.xyz + project.coordinateOrigin, position_world.w);
    }
  }
  if (project.projectionMode == PROJECTION_MODE_GLOBE) {
    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
      return vec4<f32>(
        project_globe_(position_world.xyz),
        position_world.w
      );
    }
  }
  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {
    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
      if (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {
        return vec4<f32>(
          project_mercator_(position_world.xy) - project.commonOrigin.xy,
          project_size_float(position_world.z),
          position_world.w
        );
      }
    }
  }
  if (project.projectionMode == PROJECTION_MODE_IDENTITY ||
      (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&
       (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||
        project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {
    position_world = vec4f(position_world.xyz - project.coordinateOrigin, position_world.w);
  }

  return project_offset_(position_world) +
         project_offset_(project.modelMatrix * vec4<f32>(position64Low, 0.0));
}

// Overloaded versions for different input types.
fn project_position_vec4_f32(position: vec4<f32>) -> vec4<f32> {
  return project_position_vec4_f64(position, ZERO_64_LOW);
}

fn project_position_vec3_f64(position: vec3<f32>, position64Low: vec3<f32>) -> vec3<f32> {
  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), position64Low);
  return projected_position.xyz;
}

fn project_position_vec3_f32(position: vec3<f32>) -> vec3<f32> {
  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), ZERO_64_LOW);
  return projected_position.xyz;
}

fn project_position_vec2_f32(position: vec2<f32>) -> vec2<f32> {
  let projected_position = project_position_vec4_f64(vec4<f32>(position, 0.0, 1.0), ZERO_64_LOW);
  return projected_position.xy;
}

// Transforms a common space position to clip space.
fn project_common_position_to_clipspace_with_projection(position: vec4<f32>, viewProjectionMatrix: mat4x4<f32>, center: vec4<f32>) -> vec4<f32> {
  return viewProjectionMatrix * position + center;
}

// Uses the project viewProjectionMatrix and center.
fn project_common_position_to_clipspace(position: vec4<f32>) -> vec4<f32> {
  return project_common_position_to_clipspace_with_projection(position, project.viewProjectionMatrix, project.center);
}

// Returns a clip space offset corresponding to a given number of screen pixels.
fn project_pixel_size_to_clipspace(pixels: vec2<f32>) -> vec2<f32> {
  let offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;
  return offset * project.focalDistance;
}

fn project_meter_size_to_pixel(meters: f32) -> f32 {
  return project_size_float(meters) * project.scale;
}

fn project_unit_size_to_pixel(size: f32, unit: i32) -> f32 {
  if (unit == UNIT_METERS) {
    return project_meter_size_to_pixel(size);
  } else if (unit == UNIT_COMMON) {
    return size * project.scale;
  }
  // UNIT_PIXELS: no scaling applied.
  return size;
}

fn project_pixel_size_float(pixels: f32) -> f32 {
  return pixels / project.scale;
}

fn project_pixel_size_vec2(pixels: vec2<f32>) -> vec2<f32> {
  return pixels / project.scale;
}
`;var y7=Object.keys(q).map(e=>`const int COORDINATE_SYSTEM_${e} = ${q[e]};`).join(""),A7=Object.keys(Te).map(e=>`const int PROJECTION_MODE_${e} = ${Te[e]};`).join(""),b7=Object.keys(Lt).map(e=>`const int UNIT_${e.toUpperCase()} = ${Lt[e]};`).join(""),dC=`${y7}
${A7}
${b7}
uniform projectUniforms {
bool wrapLongitude;
int coordinateSystem;
vec3 commonUnitsPerMeter;
int projectionMode;
float scale;
vec3 commonUnitsPerWorldUnit;
vec3 commonUnitsPerWorldUnit2;
vec4 center;
mat4 modelMatrix;
mat4 viewProjectionMatrix;
vec2 viewportSize;
float devicePixelRatio;
float focalDistance;
vec3 cameraPosition;
vec3 coordinateOrigin;
vec3 commonOrigin;
bool pseudoMeters;
} project;
const float TILE_SIZE = 512.0;
const float PI = 3.1415926536;
const float WORLD_SCALE = TILE_SIZE / (PI * 2.0);
const vec3 ZERO_64_LOW = vec3(0.0);
const float EARTH_RADIUS = 6370972.0;
const float GLOBE_RADIUS = 256.0;
float project_size_at_latitude(float lat) {
float y = clamp(lat, -89.9, 89.9);
return 1.0 / cos(radians(y));
}
float project_size() {
if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&
project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&
project.pseudoMeters == false) {
if (geometry.position.w == 0.0) {
return project_size_at_latitude(geometry.worldPosition.y);
}
float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;
float y2 = y * y;
float y4 = y2 * y2;
float y6 = y4 * y2;
return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;
}
return 1.0;
}
float project_size_at_latitude(float meters, float lat) {
return meters * project.commonUnitsPerMeter.z * project_size_at_latitude(lat);
}
float project_size(float meters) {
return meters * project.commonUnitsPerMeter.z * project_size();
}
vec2 project_size(vec2 meters) {
return meters * project.commonUnitsPerMeter.xy * project_size();
}
vec3 project_size(vec3 meters) {
return meters * project.commonUnitsPerMeter * project_size();
}
vec4 project_size(vec4 meters) {
return vec4(meters.xyz * project.commonUnitsPerMeter, meters.w);
}
mat3 project_get_orientation_matrix(vec3 up) {
vec3 uz = normalize(up);
vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));
vec3 uy = cross(uz, ux);
return mat3(ux, uy, uz);
}
bool project_needs_rotation(vec3 commonPosition, out mat3 transform) {
if (project.projectionMode == PROJECTION_MODE_GLOBE) {
transform = project_get_orientation_matrix(commonPosition);
return true;
}
return false;
}
vec3 project_normal(vec3 vector) {
vec4 normal_modelspace = project.modelMatrix * vec4(vector, 0.0);
vec3 n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);
mat3 rotation;
if (project_needs_rotation(geometry.position.xyz, rotation)) {
n = rotation * n;
}
return n;
}
vec4 project_offset_(vec4 offset) {
float dy = offset.y;
vec3 commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;
return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);
}
vec2 project_mercator_(vec2 lnglat) {
float x = lnglat.x;
if (project.wrapLongitude) {
x = mod(x + 180., 360.0) - 180.;
}
float y = clamp(lnglat.y, -89.9, 89.9);
return vec2(
radians(x) + PI,
PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))
) * WORLD_SCALE;
}
vec3 project_globe_(vec3 lnglatz) {
float lambda = radians(lnglatz.x);
float phi = radians(lnglatz.y);
float cosPhi = cos(phi);
float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;
return vec3(
sin(lambda) * cosPhi,
-cos(lambda) * cosPhi,
sin(phi)
) * D;
}
vec4 project_position(vec4 position, vec3 position64Low) {
vec4 position_world = project.modelMatrix * position;
if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {
if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
return vec4(
project_mercator_(position_world.xy),
project_size_at_latitude(position_world.z, position_world.y),
position_world.w
);
}
if (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {
position_world.xyz += project.coordinateOrigin;
}
}
if (project.projectionMode == PROJECTION_MODE_GLOBE) {
if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
return vec4(
project_globe_(position_world.xyz),
position_world.w
);
}
}
if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {
if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
if (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {
return vec4(
project_mercator_(position_world.xy) - project.commonOrigin.xy,
project_size(position_world.z),
position_world.w
);
}
}
}
if (project.projectionMode == PROJECTION_MODE_IDENTITY ||
(project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&
(project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||
project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {
position_world.xyz -= project.coordinateOrigin;
}
return project_offset_(position_world) + project_offset_(project.modelMatrix * vec4(position64Low, 0.0));
}
vec4 project_position(vec4 position) {
return project_position(position, ZERO_64_LOW);
}
vec3 project_position(vec3 position, vec3 position64Low) {
vec4 projected_position = project_position(vec4(position, 1.0), position64Low);
return projected_position.xyz;
}
vec3 project_position(vec3 position) {
vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);
return projected_position.xyz;
}
vec2 project_position(vec2 position) {
vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);
return projected_position.xy;
}
vec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {
return viewProjectionMatrix * position + center;
}
vec4 project_common_position_to_clipspace(vec4 position) {
return project_common_position_to_clipspace(position, project.viewProjectionMatrix, project.center);
}
vec2 project_pixel_size_to_clipspace(vec2 pixels) {
vec2 offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;
return offset * project.focalDistance;
}
float project_size_to_pixel(float meters) {
return project_size(meters) * project.scale;
}
float project_size_to_pixel(float size, int unit) {
if (unit == UNIT_METERS) return project_size_to_pixel(size);
if (unit == UNIT_COMMON) return size * project.scale;
return size;
}
float project_pixel_size(float pixels) {
return pixels / project.scale;
}
vec2 project_pixel_size(vec2 pixels) {
return pixels / project.scale;
}
`;var T7={};function v7(e=T7){return"viewport"in e?km(e):{}}var ne={name:"project",dependencies:[V2,Sm],source:uC,vs:dC,getUniforms:v7,uniformTypes:{wrapLongitude:"f32",coordinateSystem:"i32",commonUnitsPerMeter:"vec3<f32>",projectionMode:"i32",scale:"f32",commonUnitsPerWorldUnit:"vec3<f32>",commonUnitsPerWorldUnit2:"vec3<f32>",center:"vec4<f32>",modelMatrix:"mat4x4<f32>",viewProjectionMatrix:"mat4x4<f32>",viewportSize:"vec2<f32>",devicePixelRatio:"f32",focalDistance:"f32",cameraPosition:"vec3<f32>",coordinateOrigin:"vec3<f32>",commonOrigin:"vec3<f32>",pseudoMeters:"f32"}};var E7=`// Define a structure to hold both the clip-space position and the common position.
struct ProjectResult {
  clipPosition: vec4<f32>,
  commonPosition: vec4<f32>,
};

// This function mimics the GLSL version with the 'out' parameter by returning both values.
fn project_position_to_clipspace_and_commonspace(
    position: vec3<f32>,
    position64Low: vec3<f32>,
    offset: vec3<f32>
) -> ProjectResult {
  // Compute the projected position.
  let projectedPosition: vec3<f32> = project_position_vec3_f64(position, position64Low);

  // Start with the provided offset.
  var finalOffset: vec3<f32> = offset;

  // Get whether a rotation is needed and the rotation matrix.
  let rotationResult = project_needs_rotation(projectedPosition);

  // If rotation is needed, update the offset.
  if (rotationResult.needsRotation) {
    finalOffset = rotationResult.transform * offset;
  }

  // Compute the common position.
  let commonPosition: vec4<f32> = vec4<f32>(projectedPosition + finalOffset, 1.0);

  // Convert to clip-space.
  let clipPosition: vec4<f32> = project_common_position_to_clipspace(commonPosition);

  return ProjectResult(clipPosition, commonPosition);
}

// A convenience overload that returns only the clip-space position.
fn project_position_to_clipspace(
    position: vec3<f32>,
    position64Low: vec3<f32>,
    offset: vec3<f32>
) -> vec4<f32> {
  return project_position_to_clipspace_and_commonspace(position, position64Low, offset).clipPosition;
}
`,M7=`vec4 project_position_to_clipspace(
  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition
) {
  vec3 projectedPosition = project_position(position, position64Low);
  mat3 rotation;
  if (project_needs_rotation(projectedPosition, rotation)) {
    // offset is specified as ENU
    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe
    offset = rotation * offset;
  }
  commonPosition = vec4(projectedPosition + offset, 1.0);
  return project_common_position_to_clipspace(commonPosition);
}

vec4 project_position_to_clipspace(
  vec3 position, vec3 position64Low, vec3 offset
) {
  vec4 commonPosition;
  return project_position_to_clipspace(position, position64Low, offset, commonPosition);
}
`,ft={name:"project32",dependencies:[ne],source:E7,vs:M7};function iA(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function ui(e,t){let r=nr.transformMat4([],t,e);return nr.scale(r,r,1/r[3]),r}function oA(e,t){let r=e%t;return r<0?t+r:r}function pC(e,t,r){return r*t+(1-r)*e}function $f(e,t,r){return e<t?t:e>r?r:e}function S7(e){return Math.log(e)*Math.LOG2E}var nc=Math.log2||S7;function sn(e,t){if(!e)throw new Error(t||"@math.gl/web-mercator: assertion failed.")}var on=Math.PI,mC=on/4,zr=on/180,aA=180/on,sc=512,Um=4003e4,Vr=85.051129,gC=1.5;function Kf(e){return Math.pow(2,e)}function zm(e){return nc(e)}function ae(e){let[t,r]=e;sn(Number.isFinite(t)),sn(Number.isFinite(r)&&r>=-90&&r<=90,"invalid latitude");let n=t*zr,s=r*zr,i=sc*(n+on)/(2*on),o=sc*(on+Math.log(Math.tan(mC+s*.5)))/(2*on);return[i,o]}function Ne(e){let[t,r]=e,n=t/sc*(2*on)-on,s=2*(Math.atan(Math.exp(r/sc*(2*on)-on))-mC);return[n*aA,s*aA]}function Zf(e){let{latitude:t}=e;sn(Number.isFinite(t));let r=Math.cos(t*zr);return zm(Um*r)-9}function yo(e){let t=Math.cos(e*zr);return sc/Um/t}function ic(e){let{latitude:t,longitude:r,highPrecision:n=!1}=e;sn(Number.isFinite(t)&&Number.isFinite(r));let s=sc,i=Math.cos(t*zr),o=s/360,a=o/i,c=s/Um/i,l={unitsPerMeter:[c,c,c],metersPerUnit:[1/c,1/c,1/c],unitsPerDegree:[o,a,c],degreesPerUnit:[1/o,1/a,1/c]};if(n){let f=zr*Math.tan(t*zr)/i,h=o*f/2,u=s/Um*f,d=u/a*c;l.unitsPerDegree2=[0,h,u],l.unitsPerMeter2=[d,0,d]}return l}function Jf(e,t){let[r,n,s]=e,[i,o,a]=t,{unitsPerMeter:c,unitsPerMeter2:l}=ic({longitude:r,latitude:n,highPrecision:!0}),f=ae(e);f[0]+=i*(c[0]+l[0]*o),f[1]+=o*(c[1]+l[1]*o);let h=Ne(f),u=(s||0)+(a||0);return Number.isFinite(s)||Number.isFinite(a)?[h[0],h[1],u]:h}function Vm(e){let{height:t,pitch:r,bearing:n,altitude:s,scale:i,center:o}=e,a=iA();re.translate(a,a,[0,0,-s]),re.rotateX(a,a,-r*zr),re.rotateZ(a,a,n*zr);let c=i/t;return re.scale(a,a,[c,c,c]),o&&re.translate(a,a,Ce.negate([],o)),a}function cA(e){let{width:t,height:r,altitude:n,pitch:s=0,offset:i,center:o,scale:a,nearZMultiplier:c=1,farZMultiplier:l=1}=e,{fovy:f=gs(gC)}=e;n!==void 0&&(f=gs(n));let h=f*zr,u=s*zr,d=xs(f),p=d;o&&(p+=o[2]*a/Math.cos(u)/r);let m=h*(.5+(i?i[1]:0)/r),g=Math.sin(m)*p/Math.sin($f(Math.PI/2-u-m,.01,Math.PI-.01)),x=Math.sin(u)*g+p,A=p*10,_=Math.min(x*l,A);return{fov:h,aspect:t/r,focalDistance:d,near:c,far:_}}function gs(e){return 2*Math.atan(.5/e)*aA}function xs(e){return .5/Math.tan(.5*e*zr)}function oc(e,t){let[r,n,s=0]=e;return sn(Number.isFinite(r)&&Number.isFinite(n)&&Number.isFinite(s)),ui(t,[r,n,s,1])}function Wr(e,t,r=0){let[n,s,i]=e;if(sn(Number.isFinite(n)&&Number.isFinite(s),"invalid pixel coordinate"),Number.isFinite(i))return ui(t,[n,s,i,1]);let o=ui(t,[n,s,0,1]),a=ui(t,[n,s,1,1]),c=o[2],l=a[2],f=c===l?0:((r||0)-c)/(l-c);return ge.lerp([],o,a,f)}function Wm(e){let{width:t,height:r,bounds:n,minExtent:s=0,maxZoom:i=24,offset:o=[0,0]}=e,[[a,c],[l,f]]=n,h=w7(e.padding),u=ae([a,$f(f,-Vr,Vr)]),d=ae([l,$f(c,-Vr,Vr)]),p=[Math.max(Math.abs(d[0]-u[0]),s),Math.max(Math.abs(d[1]-u[1]),s)],m=[t-h.left-h.right-Math.abs(o[0])*2,r-h.top-h.bottom-Math.abs(o[1])*2];sn(m[0]>0&&m[1]>0);let g=m[0]/p[0],x=m[1]/p[1],A=(h.right-h.left)/2/g,_=(h.top-h.bottom)/2/x,y=[(d[0]+u[0])/2+A,(d[1]+u[1])/2+_],T=Ne(y),v=Math.min(i,nc(Math.abs(Math.min(g,x))));return sn(Number.isFinite(v)),{longitude:T[0],latitude:T[1],zoom:v}}function w7(e=0){return typeof e=="number"?{top:e,bottom:e,left:e,right:e}:(sn(Number.isFinite(e.top)&&Number.isFinite(e.bottom)&&Number.isFinite(e.left)&&Number.isFinite(e.right)),e)}var xC=Math.PI/180;function Hm(e,t=0){let{width:r,height:n,unproject:s}=e,i={targetZ:t},o=s([0,n],i),a=s([r,n],i),c,l,f=e.fovy?.5*e.fovy*xC:Math.atan(.5/e.altitude),h=(90-e.pitch)*xC;return f>h-.01?(c=_C(e,0,t),l=_C(e,r,t)):(c=s([0,0],i),l=s([r,0],i)),[o,a,l,c]}function _C(e,t,r){let{pixelUnprojectionMatrix:n}=e,s=ui(n,[t,0,1,1]),i=ui(n,[t,e.height,1,1]),a=(r*e.distanceScales.unitsPerMeter[2]-s[2])/(i[2]-s[2]),c=ge.lerp([],s,i,a),l=Ne(c);return l.push(r),l}var yC=512;function lA(e){let{width:t,height:r,pitch:n=0}=e,{longitude:s,latitude:i,zoom:o,bearing:a=0}=e;(s<-180||s>180)&&(s=oA(s+180,360)-180),(a<-180||a>180)&&(a=oA(a+180,360)-180);let c=nc(r/yC);if(o<=c)o=c,i=0;else{let l=r/2/Math.pow(2,o),f=Ne([0,l])[1];if(i<f)i=f;else{let h=Ne([0,yC-l])[1];i>h&&(i=h)}}return{width:t,height:r,longitude:s,latitude:i,zoom:o,pitch:n,bearing:a}}var AC=.01,P7=["longitude","latitude","zoom"],bC={curve:1.414,speed:1.2};function fA(e,t,r,n){let{startZoom:s,startCenterXY:i,uDelta:o,w0:a,u1:c,S:l,rho:f,rho2:h,r0:u}=TC(e,t,n);if(c<AC){let y={};for(let T of P7){let v=e[T],C=t[T];y[T]=pC(v,C,r)}return y}let d=r*l,p=Math.cosh(u)/Math.cosh(u+f*d),m=a*((Math.cosh(u)*Math.tanh(u+f*d)-Math.sinh(u))/h)/c,g=1/p,x=s+zm(g),A=ge.scale([],o,m);ge.add(A,A,i);let _=Ne(A);return{longitude:_[0],latitude:_[1],zoom:x}}function hA(e,t,r){let n={...bC,...r},{screenSpeed:s,speed:i,maxDuration:o}=n,{S:a,rho:c}=TC(e,t,n),l=1e3*a,f;return Number.isFinite(s)?f=l/(s/c):f=l/i,Number.isFinite(o)&&f>o?0:f}function TC(e,t,r){r=Object.assign({},bC,r);let n=r.curve,s=e.zoom,i=[e.longitude,e.latitude],o=Kf(s),a=t.zoom,c=[t.longitude,t.latitude],l=Kf(a-s),f=ae(i),h=ae(c),u=ge.sub([],h,f),d=Math.max(e.width,e.height),p=d/l,m=ge.length(u)*o,g=Math.max(m,AC),x=n*n,A=(p*p-d*d+x*x*g*g)/(2*d*x*g),_=(p*p-d*d-x*x*g*g)/(2*p*x*g),y=Math.log(Math.sqrt(A*A+1)-A),T=Math.log(Math.sqrt(_*_+1)-_),v=(T-y)/n;return{startZoom:s,startCenterXY:f,uDelta:u,w0:d,u1:m,S:v,rho:n,rho2:x,r0:y,r1:T}}var vC=`
uniform shadowUniforms {
  bool drawShadowMap;
  bool useShadowMap;
  vec4 color;
  highp int lightId;
  float lightCount;
  mat4 viewProjectionMatrix0;
  mat4 viewProjectionMatrix1;
  vec4 projectCenter0;
  vec4 projectCenter1;
} shadow;
`,R7=`
const int max_lights = 2;

out vec3 shadow_vPosition[max_lights];

vec4 shadow_setVertexPosition(vec4 position_commonspace) {
  mat4 viewProjectionMatrices[max_lights];
  viewProjectionMatrices[0] = shadow.viewProjectionMatrix0;
  viewProjectionMatrices[1] = shadow.viewProjectionMatrix1;
  vec4 projectCenters[max_lights];
  projectCenters[0] = shadow.projectCenter0;
  projectCenters[1] = shadow.projectCenter1;

  if (shadow.drawShadowMap) {
    return project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[shadow.lightId], projectCenters[shadow.lightId]);
  }
  if (shadow.useShadowMap) {
    for (int i = 0; i < max_lights; i++) {
      if(i < int(shadow.lightCount)) {
        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[i], projectCenters[i]);
        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;
      }
    }
  }
  return gl_Position;
}
`,O7=`
${vC}
${R7}
`,L7=`
const int max_lights = 2;
uniform sampler2D shadow_uShadowMap0;
uniform sampler2D shadow_uShadowMap1;

in vec3 shadow_vPosition[max_lights];

const vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);
const vec4 bitUnpackShift = 1.0 / bitPackShift;
const vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);

float shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {
  vec4 rgbaDepth = texture(shadowMap, position.xy);

  float z = dot(rgbaDepth, bitUnpackShift);
  return smoothstep(0.001, 0.01, position.z - z);
}

vec4 shadow_filterShadowColor(vec4 color) {
  if (shadow.drawShadowMap) {
    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);
    rgbaDepth -= rgbaDepth.gbaa * bitMask;
    return rgbaDepth;
  }
  if (shadow.useShadowMap) {
    float shadowAlpha = 0.0;
    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);
    if(shadow.lightCount > 1.0) {
      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);
    }
    shadowAlpha *= shadow.color.a / shadow.lightCount;
    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);

    return vec4(
      mix(color.rgb, shadow.color.rgb, shadowAlpha / blendedAlpha),
      blendedAlpha
    );
  }
  return color;
}
`,B7=`
${vC}
${L7}
`,N7=mr(z7),F7=mr(V7),D7=[0,0,0,1],k7=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];function U7(e,t){let[r,n,s]=e,i=Wr([r,n,s],t);return Number.isFinite(s)?i:[i[0],i[1],0]}function z7({viewport:e,center:t}){return new rt(e.viewProjectionMatrix).invert().transform(t)}function V7({viewport:e,shadowMatrices:t}){let r=[],n=e.pixelUnprojectionMatrix,s=e.isGeospatial?void 0:1,i=[[0,0,s],[e.width,0,s],[0,e.height,s],[e.width,e.height,s],[0,0,-1],[e.width,0,-1],[0,e.height,-1],[e.width,e.height,-1]].map(o=>U7(o,n));for(let o of t){let a=o.clone().translate(new V(e.center).negate()),c=i.map(f=>a.transform(f)),l=new rt().ortho({left:Math.min(...c.map(f=>f[0])),right:Math.max(...c.map(f=>f[0])),bottom:Math.min(...c.map(f=>f[1])),top:Math.max(...c.map(f=>f[1])),near:Math.min(...c.map(f=>-f[2])),far:Math.max(...c.map(f=>-f[2]))});r.push(l.multiplyRight(o))}return r}function W7(e){let{shadowEnabled:t=!0,project:r}=e;if(!t||!r||!e.shadowMatrices||!e.shadowMatrices.length)return{drawShadowMap:!1,useShadowMap:!1,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};let n=ne.getUniforms(r),s=N7({viewport:r.viewport,center:n.center}),i=[],o=F7({shadowMatrices:e.shadowMatrices,viewport:r.viewport}).slice();for(let c=0;c<e.shadowMatrices.length;c++){let l=o[c],f=l.clone().translate(new V(r.viewport.center).negate());n.coordinateSystem===q.LNGLAT&&n.projectionMode===Te.WEB_MERCATOR?(o[c]=f,i[c]=s):(o[c]=l.clone().multiplyRight(k7),i[c]=f.transform(s))}let a={drawShadowMap:Boolean(e.drawToShadowMap),useShadowMap:e.shadowMaps?e.shadowMaps.length>0:!1,color:e.shadowColor||D7,lightId:e.shadowLightId||0,lightCount:e.shadowMatrices.length,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};for(let c=0;c<o.length;c++)a[`viewProjectionMatrix${c}`]=o[c],a[`projectCenter${c}`]=i[c];for(let c=0;c<2;c++)a[`shadow_uShadowMap${c}`]=e.shadowMaps&&e.shadowMaps[c]||e.dummyShadowMap;return a}var ac={name:"shadow",dependencies:[ne],vs:O7,fs:B7,inject:{"vs:DECKGL_FILTER_GL_POSITION":`
    position = shadow_setVertexPosition(geometry.position);
    `,"fs:DECKGL_FILTER_COLOR":`
    color = shadow_filterShadowColor(color);
    `},getUniforms:W7,uniformTypes:{drawShadowMap:"f32",useShadowMap:"f32",color:"vec4<f32>",lightId:"i32",lightCount:"f32",viewProjectionMatrix0:"mat4x4<f32>",viewProjectionMatrix1:"mat4x4<f32>",projectCenter0:"vec4<f32>",projectCenter1:"vec4<f32>"}};var Pt={...Am,defaultUniforms:{...Am.defaultUniforms,useFloatColors:!1},inject:{"vs:DECKGL_FILTER_GL_POSITION":`
    // for picking depth values
    picking_setPickingAttribute(position.z / position.w);
  `,"vs:DECKGL_FILTER_COLOR":`
  picking_setPickingColor(geometry.pickingColor);
  `,"fs:DECKGL_FILTER_COLOR":{order:99,injection:`
  // use highlight color if this fragment belongs to the selected object.
  color = picking_filterHighlightColor(color);

  // use picking color if rendering to picking FBO.
  color = picking_filterPickingColor(color);
    `}}};var H7=[Sm],G7=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"],j7=[];function Gm(e){let t=Ks.getDefaultShaderAssembler();for(let n of H7)t.addDefaultModule(n);let r=e==="glsl"?G7:j7;for(let n of r)t.addShaderHook(n);return t}var q7=[255,255,255],X7=1,Y7=0,cc=class{constructor(t={}){this.type="ambient";let{color:r=q7}=t,{intensity:n=X7}=t;this.id=t.id||`ambient-${Y7++}`,this.color=r,this.intensity=n}};var $7=[255,255,255],K7=1,Z7=[0,0,-1],J7=0,_s=class{constructor(t={}){this.type="directional";let{color:r=$7}=t,{intensity:n=K7}=t,{direction:s=Z7}=t,{_shadow:i=!1}=t;this.id=t.id||`directional-${J7++}`,this.color=r,this.intensity=n,this.type="directional",this.direction=new V(s).normalize().toArray(),this.shadow=i}getProjectedLight(t){return this}};var Ao=class{constructor(t,r={id:"pass"}){let{id:n}=r;this.id=n,this.device=t,this.props={...r}}setProps(t){Object.assign(this.props,t)}render(t){}cleanup(){}};var Fe=class extends Ao{constructor(){super(...arguments),this._lastRenderIndex=-1}render(t){let[r,n]=this.device.canvasContext.getDrawingBufferSize(),s=t.clearCanvas??!0,i=t.clearColor??(s?[0,0,0,0]:!1),o=s?1:!1,a=s?0:!1,c=t.colorMask??15,l={viewport:[0,0,r,n]};t.colorMask&&(l.colorMask=c),t.scissorRect&&(l.scissorRect=t.scissorRect);let f=this.device.beginRenderPass({framebuffer:t.target,parameters:l,clearColor:i,clearDepth:o,clearStencil:a});try{return this._drawLayers(f,t)}finally{f.end(),this.device.submit()}}_drawLayers(t,r){let{target:n,shaderModuleProps:s,viewports:i,views:o,onViewportActive:a,clearStack:c=!0}=r;r.pass=r.pass||"unknown",c&&(this._lastRenderIndex=-1);let l=[];for(let f of i){let h=o&&o[f.id];a?.(f);let u=this._getDrawLayerParams(f,r),d=f.subViewports||[f];for(let p of d){let m=this._drawLayersInViewport(t,{target:n,shaderModuleProps:s,viewport:p,view:h,pass:r.pass,layers:r.layers},u);l.push(m)}}return l}_getDrawLayerParams(t,{layers:r,pass:n,isPicking:s=!1,layerFilter:i,cullRect:o,effects:a,shaderModuleProps:c},l=!1){let f=[],h=MC(this._lastRenderIndex+1),u={layer:r[0],viewport:t,isPicking:s,renderPass:n,cullRect:o},d={};for(let p=0;p<r.length;p++){let m=r[p],g=this._shouldDrawLayer(m,u,i,d),x={shouldDrawLayer:g};g&&!l&&(x.shouldDrawLayer=!0,x.layerRenderIndex=h(m,g),x.shaderModuleProps=this._getShaderModuleProps(m,a,n,c),x.layerParameters={...m.context.deck?.props.parameters,...this.getLayerParameters(m,p,t)}),f[p]=x}return f}_drawLayersInViewport(t,{layers:r,shaderModuleProps:n,pass:s,target:i,viewport:o,view:a},c){let l=Q7(this.device,{shaderModuleProps:n,target:i,viewport:o});if(a&&a.props.clear){let h=a.props.clear===!0?{color:!0,depth:!0}:a.props.clear;this.device.beginRenderPass({framebuffer:i,parameters:{viewport:l,scissorRect:l},clearColor:h.color?[0,0,0,0]:!1,clearDepth:h.depth?1:!1}).end()}let f={totalCount:r.length,visibleCount:0,compositeCount:0,pickableCount:0};t.setParameters({viewport:l});for(let h=0;h<r.length;h++){let u=r[h],d=c[h],{shouldDrawLayer:p}=d;if(p&&u.props.pickable&&f.pickableCount++,u.isComposite&&f.compositeCount++,u.isDrawable&&d.shouldDrawLayer){let{layerRenderIndex:m,shaderModuleProps:g,layerParameters:x}=d;f.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,m),g.project&&(g.project.viewport=o),u.context.renderPass=t;try{u._drawLayer({renderPass:t,shaderModuleProps:g,uniforms:{layerIndex:m},parameters:x})}catch(A){u.raiseError(A,`drawing ${u} to ${s}`)}}}return f}shouldDrawLayer(t){return!0}getShaderModuleProps(t,r,n){return null}getLayerParameters(t,r,n){return t.props.parameters}_shouldDrawLayer(t,r,n,s){if(!(t.props.visible&&this.shouldDrawLayer(t)))return!1;r.layer=t;let o=t.parent;for(;o;){if(!o.props.visible||!o.filterSubLayer(r))return!1;r.layer=o,o=o.parent}if(n){let a=r.layer.id;if(a in s||(s[a]=n(r)),!s[a])return!1}return t.activateViewport(r.viewport),!0}_getShaderModuleProps(t,r,n,s){let i=this.device.canvasContext.cssToDeviceRatio(),o=t.internalState?.propsInTransition||t.props,a={layer:o,picking:{isActive:!1},project:{viewport:t.context.viewport,devicePixelRatio:i,modelMatrix:o.modelMatrix,coordinateSystem:o.coordinateSystem,coordinateOrigin:o.coordinateOrigin,autoWrapLongitude:t.wrapLongitude}};if(r)for(let c of r)EC(a,c.getShaderModuleProps?.(t,a));return EC(a,this.getShaderModuleProps(t,r,a),s)}};function MC(e=0,t={}){let r={},n=(s,i)=>{let o=s.props._offset,a=s.id,c=s.parent&&s.parent.id,l;if(c&&!(c in t)&&n(s.parent,!1),c in r){let f=r[c]=r[c]||MC(t[c],t);l=f(s,i),r[a]=f}else Number.isFinite(o)?(l=o+(t[c]||0),r[a]=null):l=e;return i&&l>=e&&(e=l+1),t[a]=l,l};return n}function Q7(e,{shaderModuleProps:t,target:r,viewport:n}){let s=t?.project?.devicePixelRatio??e.canvasContext.cssToDeviceRatio(),[,i]=e.canvasContext.getDrawingBufferSize(),o=r?r.height:i,a=n;return[a.x*s,o-(a.y+a.height)*s,a.width*s,a.height*s]}function EC(e,...t){for(let r of t)if(r)for(let n in r)e[n]?Object.assign(e[n],r[n]):e[n]=r[n];return e}var Qf=class extends Fe{constructor(t,r){super(t,r);let n=t.createTexture({format:"rgba8unorm",width:1,height:1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},mipmaps:!0}),s=t.createTexture({format:"depth16unorm",width:1,height:1,mipmaps:!1});this.fbo=t.createFramebuffer({id:"shadowmap",width:1,height:1,colorAttachments:[n],depthStencilAttachment:s})}delete(){this.fbo&&(this.fbo.destroy(),this.fbo=null)}getShadowMap(){return this.fbo.colorAttachments[0].texture}render(t){let r=this.fbo,n=this.device.canvasContext.cssToDeviceRatio(),s=t.viewports[0],i=s.width*n,o=s.height*n,a=[1,1,1,1];(i!==r.width||o!==r.height)&&r.resize({width:i,height:o}),super.render({...t,clearColor:a,target:r,pass:"shadow"})}getLayerParameters(t,r,n){return{...t.props.parameters,blend:!1,depthWriteEnabled:!0,depthCompare:"less-equal"}}shouldDrawLayer(t){return t.props.shadowEnabled!==!1}getShaderModuleProps(t,r,n){return{shadow:{project:n.project,drawToShadowMap:!0}}}};var tq={color:[255,255,255],intensity:1},SC=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],eq=[0,0,0,200/255],di=class{constructor(t={}){this.id="lighting-effect",this.shadowColor=eq,this.shadow=!1,this.directionalLights=[],this.pointLights=[],this.shadowPasses=[],this.dummyShadowMap=null,this.setProps(t)}setup(t){this.context=t;let{device:r,deck:n}=t;this.shadow&&!this.dummyShadowMap&&(this._createShadowPasses(r),n._addDefaultShaderModule(ac),this.dummyShadowMap=r.createTexture({width:1,height:1}))}setProps(t){this.ambientLight=void 0,this.directionalLights=[],this.pointLights=[];for(let r in t){let n=t[r];switch(n.type){case"ambient":this.ambientLight=n;break;case"directional":this.directionalLights.push(n);break;case"point":this.pointLights.push(n);break;default:}}this._applyDefaultLights(),this.shadow=this.directionalLights.some(r=>r.shadow),this.context&&this.setup(this.context),this.props=t}preRender({layers:t,layerFilter:r,viewports:n,onViewportActive:s,views:i}){if(this.shadow){this.shadowMatrices=this._calculateMatrices();for(let o=0;o<this.shadowPasses.length;o++)this.shadowPasses[o].render({layers:t,layerFilter:r,viewports:n,onViewportActive:s,views:i,shaderModuleProps:{shadow:{shadowLightId:o,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}}})}}getShaderModuleProps(t,r){let n=this.shadow?{project:r.project,shadowMaps:this.shadowPasses.map(o=>o.getShadowMap()),dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{},s={enabled:!0,ambientLight:this.ambientLight,directionalLights:this.directionalLights.map(o=>o.getProjectedLight({layer:t})),pointLights:this.pointLights.map(o=>o.getProjectedLight({layer:t}))},i=t.props.material;return{shadow:n,lighting:s,phongMaterial:i,gouraudMaterial:i}}cleanup(t){for(let r of this.shadowPasses)r.delete();this.shadowPasses.length=0,this.dummyShadowMap&&(this.dummyShadowMap.destroy(),this.dummyShadowMap=null,t.deck._removeDefaultShaderModule(ac))}_calculateMatrices(){let t=[];for(let r of this.directionalLights){let n=new rt().lookAt({eye:new V(r.direction).negate()});t.push(n)}return t}_createShadowPasses(t){for(let r=0;r<this.directionalLights.length;r++){let n=new Qf(t);this.shadowPasses[r]=n}}_applyDefaultLights(){let{ambientLight:t,pointLights:r,directionalLights:n}=this;!t&&r.length===0&&n.length===0&&(this.ambientLight=new cc(tq),this.directionalLights.push(new _s(SC[0]),new _s(SC[1])))}};var uA=class{constructor(t={}){this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(t)}setOptions(t){Object.assign(this.opts,t)}allocate(t,r,{size:n=1,type:s,padding:i=0,copy:o=!1,initialize:a=!1,maxCount:c}){let l=s||t&&t.constructor||Float32Array,f=r*n+i;if(ArrayBuffer.isView(t)){if(f<=t.length)return t;if(f*t.BYTES_PER_ELEMENT<=t.buffer.byteLength)return new l(t.buffer,0,f)}let h=1/0;c&&(h=c*n+i);let u=this._allocate(l,f,a,h);return t&&o?u.set(t):a||u.fill(0,0,4),this._release(t),u}release(t){this._release(t)}_allocate(t,r,n,s){let i=Math.max(Math.ceil(r*this.opts.overAlloc),1);i>s&&(i=s);let o=this._pool,a=t.BYTES_PER_ELEMENT*i,c=o.findIndex(l=>l.byteLength>=a);if(c>=0){let l=new t(o.splice(c,1)[0],0,i);return n&&l.fill(0),l}return new t(i)}_release(t){if(!ArrayBuffer.isView(t))return;let r=this._pool,{buffer:n}=t,{byteLength:s}=n,i=r.findIndex(o=>o.byteLength>=s);i<0?r.push(n):(i>0||r.length<this.opts.poolSize)&&r.splice(i,0,n),r.length>this.opts.poolSize&&r.shift()}},an=new uA;function fc(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function bo(e,t){let r=e%t;return r<0?t+r:r}function CC(e){return[e[12],e[13],e[14]]}function PC(e){return{left:lc(e[3]+e[0],e[7]+e[4],e[11]+e[8],e[15]+e[12]),right:lc(e[3]-e[0],e[7]-e[4],e[11]-e[8],e[15]-e[12]),bottom:lc(e[3]+e[1],e[7]+e[5],e[11]+e[9],e[15]+e[13]),top:lc(e[3]-e[1],e[7]-e[5],e[11]-e[9],e[15]-e[13]),near:lc(e[3]+e[2],e[7]+e[6],e[11]+e[10],e[15]+e[14]),far:lc(e[3]-e[2],e[7]-e[6],e[11]-e[10],e[15]-e[14])}}var wC=new V;function lc(e,t,r,n){wC.set(e,t,r);let s=wC.len();return{distance:n/s,normal:new V(-e/s,-t/s,-r/s)}}function hc(e){return e-Math.fround(e)}var th;function jm(e,t){let{size:r=1,startIndex:n=0}=t,s=t.endIndex!==void 0?t.endIndex:e.length,i=(s-n)/r;th=an.allocate(th,i,{type:Float32Array,size:r*2});let o=n,a=0;for(;o<s;){for(let c=0;c<r;c++){let l=e[o++];th[a+c]=l,th[a+c+r]=hc(l)}a+=r*2}return th.subarray(0,i*r*2)}function IC(e){let t=null,r=!1;for(let n of e)n&&(t?(r||(t=[[t[0][0],t[0][1]],[t[1][0],t[1][1]]],r=!0),t[0][0]=Math.min(t[0][0],n[0][0]),t[0][1]=Math.min(t[0][1],n[0][1]),t[1][0]=Math.max(t[1][0],n[1][0]),t[1][1]=Math.max(t[1][1],n[1][1])):t=n);return t}var rq=Math.PI/180,nq=fc(),RC=[0,0,0],sq={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};function iq({width:e,height:t,orthographic:r,fovyRadians:n,focalDistance:s,padding:i,near:o,far:a}){let c=e/t,l=r?new rt().orthographic({fovy:n,aspect:c,focalDistance:s,near:o,far:a}):new rt().perspective({fovy:n,aspect:c,near:o,far:a});if(i){let{left:f=0,right:h=0,top:u=0,bottom:d=0}=i,p=xt((f+e-h)/2,0,e)-e/2,m=xt((u+t-d)/2,0,t)-t/2;l[8]-=p*2/e,l[9]+=m*2/t}return l}var uc=class{constructor(t={}){this._frustumPlanes={},this.id=t.id||this.constructor.displayName||"viewport",this.x=t.x||0,this.y=t.y||0,this.width=t.width||1,this.height=t.height||1,this.zoom=t.zoom||0,this.padding=t.padding,this.distanceScales=t.distanceScales||sq,this.focalDistance=t.focalDistance||1,this.position=t.position||RC,this.modelMatrix=t.modelMatrix||null;let{longitude:r,latitude:n}=t;this.isGeospatial=Number.isFinite(n)&&Number.isFinite(r),this._initProps(t),this._initMatrices(t),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?Te.WEB_MERCATOR:Te.WEB_MERCATOR_AUTO_OFFSET:Te.IDENTITY}equals(t){return t instanceof uc?this===t?!0:t.width===this.width&&t.height===this.height&&t.scale===this.scale&&Yt(t.projectionMatrix,this.projectionMatrix)&&Yt(t.viewMatrix,this.viewMatrix):!1}project(t,{topLeft:r=!0}={}){let n=this.projectPosition(t),s=oc(n,this.pixelProjectionMatrix),[i,o]=s,a=r?o:this.height-o;return t.length===2?[i,a]:[i,a,s[2]]}unproject(t,{topLeft:r=!0,targetZ:n}={}){let[s,i,o]=t,a=r?i:this.height-i,c=n&&n*this.distanceScales.unitsPerMeter[2],l=Wr([s,a,o],this.pixelUnprojectionMatrix,c),[f,h,u]=this.unprojectPosition(l);return Number.isFinite(o)?[f,h,u]:Number.isFinite(n)?[f,h,n]:[f,h]}projectPosition(t){let[r,n]=this.projectFlat(t),s=(t[2]||0)*this.distanceScales.unitsPerMeter[2];return[r,n,s]}unprojectPosition(t){let[r,n]=this.unprojectFlat(t),s=(t[2]||0)*this.distanceScales.metersPerUnit[2];return[r,n,s]}projectFlat(t){if(this.isGeospatial){let r=ae(t);return r[1]=xt(r[1],-318,830),r}return t}unprojectFlat(t){return this.isGeospatial?Ne(t):t}getBounds(t={}){let r={targetZ:t.z||0},n=this.unproject([0,0],r),s=this.unproject([this.width,0],r),i=this.unproject([0,this.height],r),o=this.unproject([this.width,this.height],r);return[Math.min(n[0],s[0],i[0],o[0]),Math.min(n[1],s[1],i[1],o[1]),Math.max(n[0],s[0],i[0],o[0]),Math.max(n[1],s[1],i[1],o[1])]}getDistanceScales(t){return t&&this.isGeospatial?ic({longitude:t[0],latitude:t[1],highPrecision:!0}):this.distanceScales}containsPixel({x:t,y:r,width:n=1,height:s=1}){return t<this.x+this.width&&this.x<t+n&&r<this.y+this.height&&this.y<r+s}getFrustumPlanes(){return this._frustumPlanes.near?this._frustumPlanes:(Object.assign(this._frustumPlanes,PC(this.viewProjectionMatrix)),this._frustumPlanes)}panByPosition(t,r){return null}_initProps(t){let r=t.longitude,n=t.latitude;this.isGeospatial&&(Number.isFinite(t.zoom)||(this.zoom=Zf({latitude:n})+Math.log2(this.focalDistance)),this.distanceScales=t.distanceScales||ic({latitude:n,longitude:r}));let s=Math.pow(2,this.zoom);this.scale=s;let{position:i,modelMatrix:o}=t,a=RC;if(i&&(a=o?new rt(o).transformAsVector(i,[]):i),this.isGeospatial){let c=this.projectPosition([r,n,0]);this.center=new V(a).scale(this.distanceScales.unitsPerMeter).add(c)}else this.center=this.projectPosition(a)}_initMatrices(t){let{viewMatrix:r=nq,projectionMatrix:n=null,orthographic:s=!1,fovyRadians:i,fovy:o=75,near:a=.1,far:c=1e3,padding:l=null,focalDistance:f=1}=t;this.viewMatrixUncentered=r,this.viewMatrix=new rt().multiplyRight(r).translate(new V(this.center).negate()),this.projectionMatrix=n||iq({width:this.width,height:this.height,orthographic:s,fovyRadians:i||o*rq,focalDistance:f,padding:l,near:a,far:c});let h=fc();re.multiply(h,h,this.projectionMatrix),re.multiply(h,h,this.viewMatrix),this.viewProjectionMatrix=h,this.viewMatrixInverse=re.invert([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=CC(this.viewMatrixInverse);let u=fc(),d=fc();re.scale(u,u,[this.width/2,-this.height/2,1]),re.translate(u,u,[1,-1,0]),re.multiply(d,u,this.viewProjectionMatrix),this.pixelProjectionMatrix=d,this.pixelUnprojectionMatrix=re.invert(fc(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||W.warn("Pixel project matrix not invertible")()}};uc.displayName="Viewport";var xe=uc;var To=class extends xe{constructor(t={}){let{latitude:r=0,longitude:n=0,zoom:s=0,pitch:i=0,bearing:o=0,nearZMultiplier:a=.1,farZMultiplier:c=1.01,nearZ:l,farZ:f,orthographic:h=!1,projectionMatrix:u,repeat:d=!1,worldOffset:p=0,position:m,padding:g,legacyMeterSizes:x=!1}=t,{width:A,height:_,altitude:y=1.5}=t,T=Math.pow(2,s);A=A||1,_=_||1;let v,C=null;if(u)y=u[5]/2,v=gs(y);else{t.fovy?(v=t.fovy,y=xs(v)):v=gs(y);let E;if(g){let{top:b=0,bottom:R=0}=g;E=[0,xt((b+_-R)/2,0,_)-_/2]}C=cA({width:A,height:_,scale:T,center:m&&[0,0,m[2]*yo(r)],offset:E,pitch:i,fovy:v,nearZMultiplier:a,farZMultiplier:c}),Number.isFinite(l)&&(C.near=l),Number.isFinite(f)&&(C.far=f)}let w=Vm({height:_,pitch:i,bearing:o,scale:T,altitude:y});p&&(w=new rt().translate([512*p,0,0]).multiplyLeft(w)),super({...t,width:A,height:_,viewMatrix:w,longitude:n,latitude:r,zoom:s,...C,fovy:v,focalDistance:y}),this.latitude=r,this.longitude=n,this.zoom=s,this.pitch=i,this.bearing=o,this.altitude=y,this.fovy=v,this.orthographic=h,this._subViewports=d?[]:null,this._pseudoMeters=x,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){let t=this.getBounds(),r=Math.floor((t[0]+180)/360),n=Math.ceil((t[2]-180)/360);for(let s=r;s<=n;s++){let i=s?new To({...this,worldOffset:s}):this;this._subViewports.push(i)}}return this._subViewports}projectPosition(t){if(this._pseudoMeters)return super.projectPosition(t);let[r,n]=this.projectFlat(t),s=(t[2]||0)*yo(t[1]);return[r,n,s]}unprojectPosition(t){if(this._pseudoMeters)return super.unprojectPosition(t);let[r,n]=this.unprojectFlat(t),s=(t[2]||0)/yo(n);return[r,n,s]}addMetersToLngLat(t,r){return Jf(t,r)}panByPosition(t,r){let n=Wr(r,this.pixelUnprojectionMatrix),s=this.projectFlat(t),i=ge.add([],s,ge.negate([],n)),o=ge.add([],this.center,i),[a,c]=this.unprojectFlat(o);return{longitude:a,latitude:c}}getBounds(t={}){let r=Hm(this,t.z||0);return[Math.min(r[0][0],r[1][0],r[2][0],r[3][0]),Math.min(r[0][1],r[1][1],r[2][1],r[3][1]),Math.max(r[0][0],r[1][0],r[2][0],r[3][0]),Math.max(r[0][1],r[1][1],r[2][1],r[3][1])]}fitBounds(t,r={}){let{width:n,height:s}=this,{longitude:i,latitude:o,zoom:a}=Wm({width:n,height:s,bounds:t,...r});return new To({width:n,height:s,longitude:i,latitude:o,zoom:a})}};To.displayName="WebMercatorViewport";var We=To;var OC=[0,0,0];function dA(e,t,r=!1){let n=t.projectPosition(e);if(r&&t instanceof We){let[s,i,o=0]=e,a=t.getDistanceScales([s,i]);n[2]=o*a.unitsPerMeter[2]}return n}function oq(e){let{viewport:t,modelMatrix:r,coordinateOrigin:n}=e,{coordinateSystem:s,fromCoordinateSystem:i,fromCoordinateOrigin:o}=e;return s===q.DEFAULT&&(s=t.isGeospatial?q.LNGLAT:q.CARTESIAN),i===void 0&&(i=s),o===void 0&&(o=n),{viewport:t,coordinateSystem:s,coordinateOrigin:n,modelMatrix:r,fromCoordinateSystem:i,fromCoordinateOrigin:o}}function pA(e,{viewport:t,modelMatrix:r,coordinateSystem:n,coordinateOrigin:s,offsetMode:i}){let[o,a,c=0]=e;switch(r&&([o,a,c]=nr.transformMat4([],[o,a,c,1],r)),n){case q.LNGLAT:return dA([o,a,c],t,i);case q.LNGLAT_OFFSETS:return dA([o+s[0],a+s[1],c+(s[2]||0)],t,i);case q.METER_OFFSETS:return dA(Jf(s,[o,a,c]),t,i);case q.CARTESIAN:default:return t.isGeospatial?[o+s[0],a+s[1],c+s[2]]:t.projectPosition([o,a,c])}}function qm(e,t){let{viewport:r,coordinateSystem:n,coordinateOrigin:s,modelMatrix:i,fromCoordinateSystem:o,fromCoordinateOrigin:a}=oq(t),{autoOffset:c=!0}=t,{geospatialOrigin:l=OC,shaderCoordinateOrigin:f=OC,offsetMode:h=!1}=c?sA(r,n,s):{},u=pA(e,{viewport:r,modelMatrix:i,coordinateSystem:o,coordinateOrigin:a,offsetMode:h});if(h){let d=r.projectPosition(l||f);Ce.sub(u,u,d)}return u}var aq=[255,255,255],cq=1,lq=[1,0,0],fq=[0,0,1],hq=0,dc=class{constructor(t={}){this.type="point";let{color:r=aq}=t,{intensity:n=cq}=t,{position:s=fq}=t;this.id=t.id||`point-${hq++}`,this.color=r,this.intensity=n,this.type="point",this.position=s,this.attenuation=uq(t),this.projectedLight={...this}}getProjectedLight({layer:t}){let{projectedLight:r}=this,n=t.context.viewport,{coordinateSystem:s,coordinateOrigin:i}=t.props,o=qm(this.position,{viewport:n,coordinateSystem:s,coordinateOrigin:i,fromCoordinateSystem:n.isGeospatial?q.LNGLAT:q.CARTESIAN,fromCoordinateOrigin:[0,0,0]});return r.color=this.color,r.intensity=this.intensity,r.position=o,r}};function uq(e){return e.attenuation?e.attenuation:lq}var eh=class extends dc{getProjectedLight({layer:t}){let{projectedLight:r}=this,n=t.context.viewport,{coordinateSystem:s,coordinateOrigin:i,modelMatrix:o}=t.props,{cameraPosition:a}=km({viewport:n,modelMatrix:o,coordinateSystem:s,coordinateOrigin:i});return r.color=this.color,r.intensity=this.intensity,r.position=a,r}};var vo=Math.PI/180,dq=1e3*60*60*24,pq=2440588,mq=2451545,Xm=vo*23.4397,gq=357.5291,xq=.98560028,_q=280.147,yq=360.9856235;function LC(e,t,r){let n=vo*-r,s=vo*t,i=bq(e),o=Pq(i),a=Sq(i,n)-o.rightAscension;return{azimuth:Eq(a,s,o.declination),altitude:Mq(a,s,o.declination)}}function Ym(e,t,r){let{azimuth:n,altitude:s}=LC(e,t,r);return[Math.sin(n)*Math.cos(s),Math.cos(n)*Math.cos(s),-Math.sin(s)]}function Aq(e){return(typeof e=="number"?e:e.getTime())/dq-.5+pq}function bq(e){return Aq(e)-mq}function Tq(e,t){let r=e;return Math.atan2(Math.sin(r)*Math.cos(Xm)-Math.tan(t)*Math.sin(Xm),Math.cos(r))}function vq(e,t){let r=e;return Math.asin(Math.sin(t)*Math.cos(Xm)+Math.cos(t)*Math.sin(Xm)*Math.sin(r))}function Eq(e,t,r){let n=e,s=t,i=r;return Math.atan2(Math.sin(n),Math.cos(n)*Math.sin(s)-Math.tan(i)*Math.cos(s))}function Mq(e,t,r){let n=e,s=t,i=r;return Math.asin(Math.sin(s)*Math.sin(i)+Math.cos(s)*Math.cos(i)*Math.cos(n))}function Sq(e,t){return vo*(_q+yq*e)-t}function wq(e){return vo*(gq+xq*e)}function Cq(e){let t=e,r=vo*(1.9148*Math.sin(t)+.02*Math.sin(2*t)+3e-4*Math.sin(3*t)),n=vo*102.9372;return t+r+n+Math.PI}function Pq(e){let t=wq(e),r=Cq(t);return{declination:vq(r,0),rightAscension:Tq(r,0)}}var rh=class extends _s{constructor(t){super(t),this.timestamp=t.timestamp}getProjectedLight({layer:t}){let{viewport:r}=t.context;if(r.resolution&&r.resolution>0){let[s,i,o]=Ym(this.timestamp,0,0);this.direction=[s,-o,i]}else{let{latitude:s,longitude:i}=r;this.direction=Ym(this.timestamp,s,i)}return this}};var Iq=1,Rq=1,Eo=class{time=0;channels=new Map;animations=new Map;playing=!1;lastEngineTime=-1;constructor(){}addChannel(t){let{delay:r=0,duration:n=Number.POSITIVE_INFINITY,rate:s=1,repeat:i=1}=t,o=Iq++,a={time:0,delay:r,duration:n,rate:s,repeat:i};return this._setChannelTime(a,this.time),this.channels.set(o,a),o}removeChannel(t){this.channels.delete(t);for(let[r,n]of this.animations)n.channel===t&&this.detachAnimation(r)}isFinished(t){let r=this.channels.get(t);return r===void 0?!1:this.time>=r.delay+r.duration*r.repeat}getTime(t){if(t===void 0)return this.time;let r=this.channels.get(t);return r===void 0?-1:r.time}setTime(t){this.time=Math.max(0,t);let r=this.channels.values();for(let s of r)this._setChannelTime(s,this.time);let n=this.animations.values();for(let s of n){let{animation:i,channel:o}=s;i.setTime(this.getTime(o))}}play(){this.playing=!0}pause(){this.playing=!1,this.lastEngineTime=-1}reset(){this.setTime(0)}attachAnimation(t,r){let n=Rq++;return this.animations.set(n,{animation:t,channel:r}),t.setTime(this.getTime(r)),n}detachAnimation(t){this.animations.delete(t)}update(t){this.playing&&(this.lastEngineTime===-1&&(this.lastEngineTime=t),this.setTime(this.time+(t-this.lastEngineTime)),this.lastEngineTime=t)}_setChannelTime(t,r){let n=r-t.delay,s=t.duration*t.repeat;n>=s?t.time=t.duration*t.rate:(t.time=Math.max(0,n)%t.duration,t.time*=t.rate)}};function BC(e){return typeof window<"u"&&window.requestAnimationFrame?window.requestAnimationFrame(e):setTimeout(e,1e3/60)}function NC(e){return typeof window<"u"&&window.cancelAnimationFrame?window.cancelAnimationFrame(e):clearTimeout(e)}var Oq=0,Lq={device:null,onAddHTML:()=>"",onInitialize:async()=>null,onRender:()=>{},onFinalize:()=>{},onError:e=>console.error(e),stats:Js.stats.get(`animation-loop-${Oq++}`),useDevicePixels:!0,autoResizeViewport:!1,autoResizeDrawingBuffer:!1},nh=class{device=null;canvas=null;props;animationProps=null;timeline=null;stats;cpuTime;gpuTime;frameRate;display;needsRedraw="initialized";_initialized=!1;_running=!1;_animationFrameId=null;_nextFramePromise=null;_resolveNextFrame=null;_cpuStartTime=0;_error=null;constructor(t){if(this.props={...Lq,...t},t=this.props,!t.device)throw new Error("No device provided");let{useDevicePixels:r=!0}=this.props;this.stats=t.stats||new Ue({id:"animation-loop-stats"}),this.cpuTime=this.stats.get("CPU Time"),this.gpuTime=this.stats.get("GPU Time"),this.frameRate=this.stats.get("Frame Rate"),this.setProps({autoResizeViewport:t.autoResizeViewport,autoResizeDrawingBuffer:t.autoResizeDrawingBuffer,useDevicePixels:r}),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this._onMousemove=this._onMousemove.bind(this),this._onMouseleave=this._onMouseleave.bind(this)}destroy(){this.stop(),this._setDisplay(null)}delete(){this.destroy()}setError(t){if(this.props.onError(t),this._error=Error(),this.device?.canvasContext?.canvas instanceof HTMLCanvasElement){let n=document.createElement("h1");n.innerHTML=t.message,n.style.position="absolute",n.style.top="20%",n.style.left="10px",n.style.color="black",n.style.backgroundColor="red",document.body.appendChild(n)}}setNeedsRedraw(t){return this.needsRedraw=this.needsRedraw||t,this}setProps(t){return"autoResizeViewport"in t&&(this.props.autoResizeViewport=t.autoResizeViewport||!1),"autoResizeDrawingBuffer"in t&&(this.props.autoResizeDrawingBuffer=t.autoResizeDrawingBuffer||!1),"useDevicePixels"in t&&(this.props.useDevicePixels=t.useDevicePixels||!1),this}async start(){if(this._running)return this;this._running=!0;try{let t;return this._initialized||(this._initialized=!0,await this._initDevice(),this._initialize(),await this.props.onInitialize(this._getAnimationProps())),this._running?(t!==!1&&(this._cancelAnimationFrame(),this._requestAnimationFrame()),this):null}catch(t){let r=t instanceof Error?t:new Error("Unknown error");throw this.props.onError(r),r}}stop(){return this._running&&(this.animationProps&&!this._error&&this.props.onFinalize(this.animationProps),this._cancelAnimationFrame(),this._nextFramePromise=null,this._resolveNextFrame=null,this._running=!1),this}redraw(){return this.device?.isLost||this._error?this:(this._beginFrameTimers(),this._setupFrame(),this._updateAnimationProps(),this._renderFrame(this._getAnimationProps()),this._clearNeedsRedraw(),this._resolveNextFrame&&(this._resolveNextFrame(this),this._nextFramePromise=null,this._resolveNextFrame=null),this._endFrameTimers(),this)}attachTimeline(t){return this.timeline=t,this.timeline}detachTimeline(){this.timeline=null}waitForRender(){return this.setNeedsRedraw("waitForRender"),this._nextFramePromise||(this._nextFramePromise=new Promise(t=>{this._resolveNextFrame=t})),this._nextFramePromise}async toDataURL(){if(this.setNeedsRedraw("toDataURL"),await this.waitForRender(),this.canvas instanceof HTMLCanvasElement)return this.canvas.toDataURL();throw new Error("OffscreenCanvas")}_initialize(){this._startEventHandling(),this._initializeAnimationProps(),this._updateAnimationProps(),this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_setDisplay(t){this.display&&(this.display.destroy(),this.display.animationLoop=null),t&&(t.animationLoop=this),this.display=t}_requestAnimationFrame(){this._running&&(this._animationFrameId=BC(this._animationFrame.bind(this)))}_cancelAnimationFrame(){this._animationFrameId!==null&&(NC(this._animationFrameId),this._animationFrameId=null)}_animationFrame(){this._running&&(this.redraw(),this._requestAnimationFrame())}_renderFrame(t){if(this.display){this.display._renderFrame(t);return}this.props.onRender(this._getAnimationProps()),this.device?.submit()}_clearNeedsRedraw(){this.needsRedraw=!1}_setupFrame(){this._resizeCanvasDrawingBuffer(),this._resizeViewport()}_initializeAnimationProps(){let t=this.device?.canvasContext?.canvas;if(!this.device||!t)throw new Error("loop");this.animationProps={animationLoop:this,device:this.device,canvas:t,timeline:this.timeline,useDevicePixels:this.props.useDevicePixels,needsRedraw:!1,width:1,height:1,aspect:1,time:0,startTime:Date.now(),engineTime:0,tick:0,tock:0,_mousePosition:null}}_getAnimationProps(){if(!this.animationProps)throw new Error("animationProps");return this.animationProps}_updateAnimationProps(){if(!this.animationProps)return;let{width:t,height:r,aspect:n}=this._getSizeAndAspect();(t!==this.animationProps.width||r!==this.animationProps.height)&&this.setNeedsRedraw("drawing buffer resized"),n!==this.animationProps.aspect&&this.setNeedsRedraw("drawing buffer aspect changed"),this.animationProps.width=t,this.animationProps.height=r,this.animationProps.aspect=n,this.animationProps.needsRedraw=this.needsRedraw,this.animationProps.engineTime=Date.now()-this.animationProps.startTime,this.timeline&&this.timeline.update(this.animationProps.engineTime),this.animationProps.tick=Math.floor(this.animationProps.time/1e3*60),this.animationProps.tock++,this.animationProps.time=this.timeline?this.timeline.getTime():this.animationProps.engineTime}async _initDevice(){if(this.device=await this.props.device,!this.device)throw new Error("No device provided");this.canvas=this.device.canvasContext?.canvas||null}_createInfoDiv(){if(this.canvas&&this.props.onAddHTML){let t=document.createElement("div");document.body.appendChild(t),t.style.position="relative";let r=document.createElement("div");r.style.position="absolute",r.style.left="10px",r.style.bottom="10px",r.style.width="300px",r.style.background="white",this.canvas instanceof HTMLCanvasElement&&t.appendChild(this.canvas),t.appendChild(r);let n=this.props.onAddHTML(r);n&&(r.innerHTML=n)}}_getSizeAndAspect(){if(!this.device)return{width:1,height:1,aspect:1};let[t,r]=this.device?.canvasContext?.getPixelSize()||[1,1],n=1,s=this.device?.canvasContext?.canvas;return s&&s.clientHeight?n=s.clientWidth/s.clientHeight:t>0&&r>0&&(n=t/r),{width:t,height:r,aspect:n}}_resizeViewport(){this.props.autoResizeViewport&&this.device.gl&&this.device.gl.viewport(0,0,this.device.gl.drawingBufferWidth,this.device.gl.drawingBufferHeight)}_resizeCanvasDrawingBuffer(){this.props.autoResizeDrawingBuffer&&this.device?.canvasContext?.resize({useDevicePixels:this.props.useDevicePixels})}_beginFrameTimers(){this.frameRate.timeEnd(),this.frameRate.timeStart(),this.cpuTime.timeStart()}_endFrameTimers(){this.cpuTime.timeEnd()}_startEventHandling(){this.canvas&&(this.canvas.addEventListener("mousemove",this._onMousemove.bind(this)),this.canvas.addEventListener("mouseleave",this._onMouseleave.bind(this)))}_onMousemove(t){t instanceof MouseEvent&&(this._getAnimationProps()._mousePosition=[t.offsetX,t.offsetY])}_onMouseleave(t){this._getAnimationProps()._mousePosition=null}};var mA={};function He(e="id"){mA[e]=mA[e]||1;let t=mA[e]++;return`${e}-${t}`}var $m=class{id;userData={};topology;bufferLayout=[];vertexCount;indices;attributes;constructor(t){if(this.id=t.id||He("geometry"),this.topology=t.topology,this.indices=t.indices||null,this.attributes=t.attributes,this.vertexCount=t.vertexCount,this.bufferLayout=t.bufferLayout||[],this.indices&&!(this.indices.usage&et.INDEX))throw new Error("Index buffer must have INDEX usage")}destroy(){this.indices?.destroy();for(let t of Object.values(this.attributes))t.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices||null}_calculateVertexCount(t){return t.byteLength/12}};function FC(e,t){if(t instanceof $m)return t;let r=Bq(e,t),{attributes:n,bufferLayout:s}=Nq(e,t);return new $m({topology:t.topology||"triangle-list",bufferLayout:s,vertexCount:t.vertexCount,indices:r,attributes:n})}function Bq(e,t){if(!t.indices)return;let r=t.indices.value;return e.createBuffer({usage:et.INDEX,data:r})}function Nq(e,t){let r=[],n={};for(let[i,o]of Object.entries(t.attributes)){let a=i;switch(i){case"POSITION":a="positions";break;case"NORMAL":a="normals";break;case"TEXCOORD_0":a="texCoords";break;case"COLOR_0":a="colors";break}if(o){n[a]=e.createBuffer({data:o.value,id:`${i}-buffer`});let{value:c,size:l,normalized:f}=o;r.push({name:a,format:Py(c,l,f)})}}let s=t._calculateVertexCount(t.attributes,t.indices);return{attributes:n,bufferLayout:r,vertexCount:s}}var gA=class{static getDefaultPipelineFactory(t){return t._lumaData.defaultPipelineFactory=t._lumaData.defaultPipelineFactory||new gA(t),t._lumaData.defaultPipelineFactory}device;destroyPolicy;_hashCounter=0;_hashes={};_renderPipelineCache={};_computePipelineCache={};constructor(t){this.device=t,this.destroyPolicy=t.props._factoryDestroyPolicy}createRenderPipeline(t){let r={...Qr.defaultProps,...t},n=this._hashRenderPipeline(r);if(!this._renderPipelineCache[n]){let s=this.device.createRenderPipeline({...r,id:r.id?`${r.id}-cached`:void 0});s.hash=n,this._renderPipelineCache[n]={pipeline:s,useCount:0}}return this._renderPipelineCache[n].useCount++,this._renderPipelineCache[n].pipeline}createComputePipeline(t){let r={...oo.defaultProps,...t},n=this._hashComputePipeline(r);if(!this._computePipelineCache[n]){let s=this.device.createComputePipeline({...r,id:r.id?`${r.id}-cached`:void 0});s.hash=n,this._computePipelineCache[n]={pipeline:s,useCount:0}}return this._computePipelineCache[n].useCount++,this._computePipelineCache[n].pipeline}release(t){let r=t.hash,n=t instanceof oo?this._computePipelineCache:this._renderPipelineCache;n[r].useCount--,n[r].useCount===0&&this.destroyPolicy==="unused"&&(n[r].pipeline.destroy(),delete n[r])}_hashComputePipeline(t){return`${this._getHash(t.shader.source)}`}_hashRenderPipeline(t){let r=t.vs?this._getHash(t.vs.source):0,n=t.fs?this._getHash(t.fs.source):0,s="-",i=this._getHash(JSON.stringify(t.bufferLayout));switch(this.device.type){case"webgl":return`${r}/${n}V${s}BL${i}`;default:let o=this._getHash(JSON.stringify(t.parameters));return`${r}/${n}V${s}T${t.topology}P${o}BL${i}`}}_getHash(t){return this._hashes[t]===void 0&&(this._hashes[t]=this._hashCounter++),this._hashes[t]}},sh=gA;Y(sh,"defaultProps",{...Qr.defaultProps});var xA=class{static getDefaultShaderFactory(t){return t._lumaData.defaultShaderFactory||=new xA(t),t._lumaData.defaultShaderFactory}device;destroyPolicy;_cache={};constructor(t){this.device=t,this.destroyPolicy=t.props._factoryDestroyPolicy}createShader(t){let r=this._hashShader(t),n=this._cache[r];if(!n){let s=this.device.createShader({...t,id:t.id?`${t.id}-cached`:void 0});this._cache[r]=n={shader:s,useCount:0}}return n.useCount++,n.shader}release(t){let r=this._hashShader(t),n=this._cache[r];n&&(n.useCount--,n.useCount===0&&this.destroyPolicy==="unused"&&(delete this._cache[r],n.shader.destroy()))}_hashShader(t){return`${t.stage}:${t.source}`}},ih=xA;Y(ih,"defaultProps",{...ti.defaultProps});function DC(e,t){let r={},n="Values";if(e.attributes.length===0&&!e.varyings?.length)return{"No attributes or varyings":{[n]:"N/A"}};for(let s of e.attributes)if(s){let i=`${s.location} ${s.name}: ${s.type}`;r[`in ${i}`]={[n]:s.stepMode||"vertex"}}for(let s of e.varyings||[]){let i=`${s.location} ${s.name}`;r[`out ${i}`]={[n]:JSON.stringify(s)}}return r}var Pe=null,_A=null;function kC(e,{id:t,minimap:r,opaque:n,top:s="0",left:i="0",rgbaScale:o=1}){Pe||(Pe=document.createElement("canvas"),Pe.id=t,Pe.title=t,Pe.style.zIndex="100",Pe.style.position="absolute",Pe.style.top=s,Pe.style.left=i,Pe.style.border="blue 5px solid",Pe.style.transform="scaleY(-1)",document.body.appendChild(Pe),_A=Pe.getContext("2d")),(Pe.width!==e.width||Pe.height!==e.height)&&(Pe.width=e.width/2,Pe.height=e.height/2,Pe.style.width="400px",Pe.style.height="400px");let a=e.device.readPixelsToArrayWebGL(e),c=_A?.createImageData(e.width,e.height);if(c){for(let f=0;f<a.length;f+=4)c.data[0+f+0]=a[f+0]*o,c.data[0+f+1]=a[f+1]*o,c.data[0+f+2]=a[f+2]*o,c.data[0+f+3]=n?255:a[f+3]*o;_A?.putImageData(c,0,0)}}function Km(e,t,r){if(e===t)return!0;if(!r||!e||!t)return!1;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(!Km(e[n],t[n],r-1))return!1;return!0}if(Array.isArray(t))return!1;if(typeof e=="object"&&typeof t=="object"){let n=Object.keys(e),s=Object.keys(t);if(n.length!==s.length)return!1;for(let i of n)if(!t.hasOwnProperty(i)||!Km(e[i],t[i],r-1))return!1;return!0}return!1}function UC(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function zC(e){return Array.isArray(e)?e.length===0||typeof e[0]=="number":!1}function oh(e){return UC(e)||zC(e)}function Fq(e){return oh(e)||typeof e=="number"||typeof e=="boolean"}function Zm(e){let t={bindings:{},uniforms:{}};return Object.keys(e).forEach(r=>{let n=e[r];Fq(n)?t.uniforms[r]=n:t.bindings[r]=n}),t}var Jm=class{options={disableWarnings:!1};modules;moduleUniforms;moduleBindings;constructor(t,r){Object.assign(this.options,r);let n=Ia(Object.values(t).filter(s=>s.dependencies));for(let s of n)t[s.name]=s;U.log(1,"Creating ShaderInputs with modules",Object.keys(t))(),this.modules=t,this.moduleUniforms={},this.moduleBindings={};for(let[s,i]of Object.entries(t))this._addModule(i),i.name&&s!==i.name&&!this.options.disableWarnings&&U.warn(`Module name: ${s} vs ${i.name}`)()}destroy(){}setProps(t){for(let r of Object.keys(t)){let n=r,s=t[n]||{},i=this.modules[n];if(!i){this.options.disableWarnings||U.warn(`Module ${r} not found`)();continue}let o=this.moduleUniforms[n],a=this.moduleBindings[n],c=i.getUniforms?.(s,o)||s,{uniforms:l,bindings:f}=Zm(c);this.moduleUniforms[n]={...o,...l},this.moduleBindings[n]={...a,...f}}}getModules(){return Object.values(this.modules)}getUniformValues(){return this.moduleUniforms}getBindingValues(){let t={};for(let r of Object.values(this.moduleBindings))Object.assign(t,r);return t}getDebugTable(){let t={};for(let[r,n]of Object.entries(this.moduleUniforms))for(let[s,i]of Object.entries(n))t[`${r}.${s}`]={type:this.modules[r].uniformTypes?.[s],value:String(i)};return t}_addModule(t){let r=t.name;this.moduleUniforms[r]=t.defaultUniforms||{},this.moduleBindings[r]={}}};var Dq="";async function VC(e,t){let r=new Image;return r.crossOrigin=t?.crossOrigin||"anonymous",r.src=e.startsWith("http")?e:Dq+e,await r.decode(),t?await createImageBitmap(r,t):await createImageBitmap(r)}var pc=class{device;id;texture;sampler;view;ready;isReady=!1;destroyed=!1;resolveReady=()=>{};rejectReady=()=>{};get[Symbol.toStringTag](){return"AsyncTexture"}toString(){return`AsyncTexture:"${this.id}"(${this.isReady?"ready":"loading"})`}constructor(t,r){this.device=t,this.id=r.id||He("async-texture"),typeof r?.data=="string"&&r.dimension==="2d"&&(r={...r,data:VC(r.data)}),this.ready=new Promise((n,s)=>{this.resolveReady=()=>{this.isReady=!0,n()},this.rejectReady=s}),this.initAsync(r)}async initAsync(t){let r=t.data,n;try{n=await WC(r)}catch(i){this.rejectReady(i)}if(this.destroyed)return;let s={...t,data:n};this.texture=this.device.createTexture(s),this.sampler=this.texture.sampler,this.view=this.texture.view,this.isReady=!0,this.resolveReady()}destroy(){this.texture&&(this.texture.destroy(),this.texture=null),this.destroyed=!0}resize(t){if(!this.isReady)throw new Error("Cannot resize texture before it is ready");if(t.width===this.texture.width&&t.height===this.texture.height)return!1;if(this.texture){let r=this.texture;this.texture=r.clone(t),r.destroy()}return!0}};async function WC(e){if(e=await e,Array.isArray(e))return await Promise.all(e.map(WC));if(e&&typeof e=="object"&&e.constructor===Object){let t=e,r=await Promise.all(Object.values(t)),n=Object.keys(t),s={};for(let i=0;i<n.length;i++)s[n[i]]=r[i];return s}return e}var Mo=2,kq=1e4,AA=class{device;id;source;vs;fs;pipelineFactory;shaderFactory;userData={};parameters;topology;bufferLayout;isInstanced=void 0;instanceCount=0;vertexCount;indexBuffer=null;bufferAttributes={};constantAttributes={};bindings={};uniforms={};vertexArray;transformFeedback=null;pipeline;shaderInputs;_uniformStore;_attributeInfos={};_gpuGeometry=null;_getModuleUniforms;props;_pipelineNeedsUpdate="newly created";_needsRedraw="initializing";_destroyed=!1;_lastDrawTimestamp=-1;get[Symbol.toStringTag](){return"Model"}toString(){return`Model(${this.id})`}constructor(t,r){this.props={...AA.defaultProps,...r},r=this.props,this.id=r.id||He("model"),this.device=t,Object.assign(this.userData,r.userData);let n=Object.fromEntries(this.props.modules?.map(c=>[c.name,c])||[]),s=r.shaderInputs||new Jm(n,{disableWarnings:this.props.disableWarnings});this.setShaderInputs(s);let i=zq(t),o=(this.props.modules?.length>0?this.props.modules:this.shaderInputs?.getModules())||[];if(this.device.type==="webgpu"&&this.props.source){let{source:c,getUniforms:l}=this.props.shaderAssembler.assembleWGSLShader({platformInfo:i,...this.props,modules:o});this.source=c,this._getModuleUniforms=l,this.props.shaderLayout||=Jy(this.source)}else{let{vs:c,fs:l,getUniforms:f}=this.props.shaderAssembler.assembleGLSLShaderPair({platformInfo:i,...this.props,modules:o});this.vs=c,this.fs=l,this._getModuleUniforms=f}this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,r.geometry&&this.setGeometry(r.geometry),this.pipelineFactory=r.pipelineFactory||sh.getDefaultPipelineFactory(this.device),this.shaderFactory=r.shaderFactory||ih.getDefaultShaderFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=t.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),"isInstanced"in r&&(this.isInstanced=r.isInstanced),r.instanceCount&&this.setInstanceCount(r.instanceCount),r.vertexCount&&this.setVertexCount(r.vertexCount),r.indexBuffer&&this.setIndexBuffer(r.indexBuffer),r.attributes&&this.setAttributes(r.attributes),r.constantAttributes&&this.setConstantAttributes(r.constantAttributes),r.bindings&&this.setBindings(r.bindings),r.uniforms&&this.setUniformsWebGL(r.uniforms),r.moduleSettings&&this.updateModuleSettingsWebGL(r.moduleSettings),r.transformFeedback&&(this.transformFeedback=r.transformFeedback),Object.seal(this)}destroy(){this._destroyed||(this.pipelineFactory.release(this.pipeline),this.shaderFactory.release(this.pipeline.vs),this.pipeline.fs&&this.shaderFactory.release(this.pipeline.fs),this._uniformStore.destroy(),this._gpuGeometry?.destroy(),this._destroyed=!0)}needsRedraw(){this._getBindingsUpdateTimestamp()>this._lastDrawTimestamp&&this.setNeedsRedraw("contents of bound textures or buffers updated");let t=this._needsRedraw;return this._needsRedraw=!1,t}setNeedsRedraw(t){this._needsRedraw||=t}predraw(){this.updateShaderInputs(),this.pipeline=this._updatePipeline()}draw(t){let r=this._areBindingsLoading();if(r)return U.info(Mo,`>>> DRAWING ABORTED ${this.id}: ${r} not loaded`)(),!1;try{t.pushDebugGroup(`${this}.predraw(${t})`),this.predraw()}finally{t.popDebugGroup()}let n;try{t.pushDebugGroup(`${this}.draw(${t})`),this._logDrawCallStart(),this.pipeline=this._updatePipeline();let s=this._getBindings();this.pipeline.setBindings(s,{disableWarnings:this.props.disableWarnings}),yA(this.uniforms)||this.pipeline.setUniformsWebGL(this.uniforms);let{indexBuffer:i}=this.vertexArray,o=i?i.byteLength/(i.indexType==="uint32"?4:2):void 0;n=this.pipeline.draw({renderPass:t,vertexArray:this.vertexArray,isInstanced:this.isInstanced,vertexCount:this.vertexCount,instanceCount:this.instanceCount,indexCount:o,transformFeedback:this.transformFeedback||void 0,parameters:this.parameters,topology:this.topology})}finally{t.popDebugGroup(),this._logDrawCallEnd()}return this._logFramebuffer(t),n?(this._lastDrawTimestamp=this.device.timestamp,this._needsRedraw=!1):this._needsRedraw="waiting for resource initialization",n}setGeometry(t){this._gpuGeometry?.destroy();let r=t&&FC(this.device,t);if(r){this.setTopology(r.topology||"triangle-list");let n=new ao(this.bufferLayout);this.bufferLayout=n.mergeBufferLayouts(r.bufferLayout,this.bufferLayout),this.vertexArray&&this._setGeometryAttributes(r)}this._gpuGeometry=r}setTopology(t){t!==this.topology&&(this.topology=t,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(t){let r=new ao(this.bufferLayout);this.bufferLayout=this._gpuGeometry?r.mergeBufferLayouts(t,this._gpuGeometry.bufferLayout):t,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(t){Km(t,this.parameters,2)||(this.parameters=t,this._setPipelineNeedsUpdate("parameters"))}setInstanceCount(t){this.instanceCount=t,this.isInstanced===void 0&&t>0&&(this.isInstanced=!0),this.setNeedsRedraw("instanceCount")}setVertexCount(t){this.vertexCount=t,this.setNeedsRedraw("vertexCount")}setShaderInputs(t){this.shaderInputs=t,this._uniformStore=new _f(this.shaderInputs.modules);for(let[r,n]of Object.entries(this.shaderInputs.modules))if(Uq(n)){let s=this._uniformStore.getManagedUniformBuffer(this.device,r);this.bindings[`${r}Uniforms`]=s}this.setNeedsRedraw("shaderInputs")}updateShaderInputs(){this._uniformStore.setUniforms(this.shaderInputs.getUniformValues()),this.setBindings(this.shaderInputs.getBindingValues()),this.setNeedsRedraw("shaderInputs")}setBindings(t){Object.assign(this.bindings,t),this.setNeedsRedraw("bindings")}setTransformFeedback(t){this.transformFeedback=t,this.setNeedsRedraw("transformFeedback")}setIndexBuffer(t){this.vertexArray.setIndexBuffer(t),this.setNeedsRedraw("indexBuffer")}setAttributes(t,r){let n=r?.disableWarnings??this.props.disableWarnings;t.indices&&U.warn(`Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`)(),this.bufferLayout=Iy(this.pipeline.shaderLayout,this.bufferLayout);let s=new ao(this.bufferLayout);for(let[i,o]of Object.entries(t)){let a=s.getBufferLayout(i);if(!a){n||U.warn(`Model(${this.id}): Missing layout for buffer "${i}".`)();continue}let c=s.getAttributeNamesForBuffer(a),l=!1;for(let f of c){let h=this._attributeInfos[f];if(h){let u=this.device.type==="webgpu"?s.getBufferIndex(h.bufferName):h.location;this.vertexArray.setBuffer(u,o),l=!0}}!l&&!n&&U.warn(`Model(${this.id}): Ignoring buffer "${o.id}" for unknown attribute "${i}"`)()}this.setNeedsRedraw("attributes")}setConstantAttributes(t,r){for(let[n,s]of Object.entries(t)){let i=this._attributeInfos[n];i?this.vertexArray.setConstantWebGL(i.location,s):(r?.disableWarnings??this.props.disableWarnings)||U.warn(`Model "${this.id}: Ignoring constant supplied for unknown attribute "${n}"`)()}this.setNeedsRedraw("constants")}setUniforms(t){this.setUniformsWebGL(t)}setUniformsWebGL(t){yA(t)||(this.pipeline.setUniformsWebGL(t),Object.assign(this.uniforms,t)),this.setNeedsRedraw("uniforms")}updateModuleSettingsWebGL(t){let{bindings:r,uniforms:n}=Zm(this._getModuleUniforms(t));Object.assign(this.bindings,r),Object.assign(this.uniforms,n),this.setNeedsRedraw("moduleSettings")}_areBindingsLoading(){for(let t of Object.values(this.bindings))if(t instanceof pc&&!t.isReady)return t.id;return!1}_getBindings(){let t={};for(let[r,n]of Object.entries(this.bindings))n instanceof pc?n.isReady&&(t[r]=n.texture):t[r]=n;return t}_getBindingsUpdateTimestamp(){let t=0;for(let r of Object.values(this.bindings))r instanceof Qs?t=Math.max(t,r.texture.updateTimestamp):r instanceof et||r instanceof at?t=Math.max(t,r.updateTimestamp):r instanceof pc?t=r.texture?Math.max(t,r.texture.updateTimestamp):1/0:r instanceof ei||(t=Math.max(t,r.buffer.updateTimestamp));return t}_setGeometryAttributes(t){let r={...t.attributes};for(let[n]of Object.entries(r))!this.pipeline.shaderLayout.attributes.find(s=>s.name===n)&&n!=="positions"&&delete r[n];this.vertexCount=t.vertexCount,this.setIndexBuffer(t.indices||null),this.setAttributes(t.attributes,{disableWarnings:!0}),this.setAttributes(r,{disableWarnings:this.props.disableWarnings}),this.setNeedsRedraw("geometry attributes")}_setPipelineNeedsUpdate(t){this._pipelineNeedsUpdate||=t,this.setNeedsRedraw(t)}_updatePipeline(){if(this._pipelineNeedsUpdate){let t=null,r=null;this.pipeline&&(U.log(1,`Model ${this.id}: Recreating pipeline because "${this._pipelineNeedsUpdate}".`)(),t=this.pipeline.vs,r=this.pipeline.fs),this._pipelineNeedsUpdate=!1;let n=this.shaderFactory.createShader({id:`${this.id}-vertex`,stage:"vertex",source:this.source||this.vs,debugShaders:this.props.debugShaders}),s=null;this.source?s=n:this.fs&&(s=this.shaderFactory.createShader({id:`${this.id}-fragment`,stage:"fragment",source:this.source||this.fs,debugShaders:this.props.debugShaders})),this.pipeline=this.pipelineFactory.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,bindings:this._getBindings(),vs:n,fs:s}),this._attributeInfos=Ep(this.pipeline.shaderLayout,this.bufferLayout),t&&this.shaderFactory.release(t),r&&this.shaderFactory.release(r)}return this.pipeline}_lastLogTime=0;_logOpen=!1;_logDrawCallStart(){let t=U.level>3?0:kq;U.level<2||Date.now()-this._lastLogTime<t||(this._lastLogTime=Date.now(),this._logOpen=!0,U.group(Mo,`>>> DRAWING MODEL ${this.id}`,{collapsed:U.level<=2})())}_logDrawCallEnd(){if(this._logOpen){let t=DC(this.pipeline.shaderLayout,this.id);U.table(Mo,t)();let r=this.shaderInputs.getDebugTable();for(let[s,i]of Object.entries(this.uniforms))r[s]={value:i};U.table(Mo,r)();let n=this._getAttributeDebugTable();U.table(Mo,this._attributeInfos)(),U.table(Mo,n)(),U.groupEnd(Mo)(),this._logOpen=!1}}_drawCount=0;_logFramebuffer(t){let r=this.device.props.debugFramebuffers;if(this._drawCount++,!r)return;let n=t.props.framebuffer;n&&kC(n,{id:n.id,minimap:!0})}_getAttributeDebugTable(){let t={};for(let[r,n]of Object.entries(this._attributeInfos)){let s=this.vertexArray.attributes[n.location];t[n.location]={name:r,type:n.shaderType,values:s?this._getBufferOrConstantValues(s,n.bufferDataType):"null"}}if(this.vertexArray.indexBuffer){let{indexBuffer:r}=this.vertexArray,n=r.indexType==="uint32"?new Uint32Array(r.debugData):new Uint16Array(r.debugData);t.indices={name:"indices",type:r.indexType,values:n.toString()}}return t}_getBufferOrConstantValues(t,r){let n=yf(r);return(t instanceof et?new n(t.debugData):t).toString()}},tt=AA;Y(tt,"defaultProps",{...Qr.defaultProps,source:void 0,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:void 0,geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},varyings:[],isInstanced:void 0,instanceCount:0,vertexCount:0,shaderInputs:void 0,pipelineFactory:void 0,shaderFactory:void 0,transformFeedback:void 0,shaderAssembler:Ks.getDefaultShaderAssembler(),debugShaders:void 0,disableWarnings:void 0});function Uq(e){return Boolean(e.uniformTypes&&!yA(e.uniformTypes))}function zq(e){return{type:e.type,shaderLanguage:e.info.shadingLanguage,shaderLanguageVersion:e.info.shadingLanguageVersion,gpu:e.info.gpu,features:e.features}}function yA(e){for(let t in e)return!1;return!0}var Qm=class{device;model;transformFeedback;static isSupported(t){return t?.info?.type==="webgl"}constructor(t,r=Qm.defaultProps){if(!Qm.isSupported(t))throw new Error("BufferTransform not yet implemented on WebGPU");this.device=t,this.model=new tt(this.device,{id:r.id||"buffer-transform-model",fs:r.fs||hf(),topology:r.topology||"point-list",varyings:r.outputs||r.varyings,...r}),this.transformFeedback=this.device.createTransformFeedback({layout:this.model.pipeline.shaderLayout,buffers:r.feedbackBuffers}),this.model.setTransformFeedback(this.transformFeedback),Object.seal(this)}destroy(){this.model&&this.model.destroy()}delete(){this.destroy()}run(t){t?.inputBuffers&&this.model.setAttributes(t.inputBuffers),t?.outputBuffers&&this.transformFeedback.setBuffers(t.outputBuffers);let r=this.device.beginRenderPass(t);this.model.draw(r),r.end()}getBuffer(t){return this.transformFeedback.getBuffer(t)}readAsync(t){let r=this.getBuffer(t);if(!r)throw new Error("BufferTransform#getBuffer");if(r instanceof et)return r.readAsync();let{buffer:n,byteOffset:s=0,byteLength:i=n.byteLength}=r;return n.readAsync(s,i)}},Cr=Qm;Y(Cr,"defaultProps",{...tt.defaultProps,outputs:void 0,feedbackBuffers:void 0});var Vq="transform_output",pi=class{device;model;sampler;currentIndex=0;samplerTextureMap=null;bindings=[];resources={};constructor(t,r){this.device=t,this.sampler=t.createSampler({addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",minFilter:"nearest",magFilter:"nearest",mipmapFilter:"nearest"}),this.model=new tt(this.device,{id:r.id||"texture-transform-model",fs:r.fs||hf({input:r.targetTextureVarying,inputChannels:r.targetTextureChannels,output:Vq}),vertexCount:r.vertexCount,...r}),this._initialize(r),Object.seal(this)}destroy(){this.model.destroy();for(let t of this.bindings)t.framebuffer?.destroy()}delete(){this.destroy()}run(t){let{framebuffer:r}=this.bindings[this.currentIndex],n=this.device.beginRenderPass({framebuffer:r,...t});this.model.draw(n),n.end()}getTargetTexture(){let{targetTexture:t}=this.bindings[this.currentIndex];return t}getFramebuffer(){return this.bindings[this.currentIndex].framebuffer}_initialize(t){this._updateBindings(t)}_updateBindings(t){this.bindings[this.currentIndex]=this._updateBinding(this.bindings[this.currentIndex],t)}_updateBinding(t,{sourceBuffers:r,sourceTextures:n,targetTexture:s}){if(t||(t={sourceBuffers:{},sourceTextures:{},targetTexture:null}),Object.assign(t.sourceTextures,n),Object.assign(t.sourceBuffers,r),s){t.targetTexture=s;let{width:i,height:o}=s;t.framebuffer&&t.framebuffer.destroy(),t.framebuffer=this.device.createFramebuffer({id:"transform-framebuffer",width:i,height:o,colorAttachments:[s]}),t.framebuffer.resize({width:i,height:o})}return t}_setSourceTextureParameters(){let t=this.currentIndex,{sourceTextures:r}=this.bindings[t];for(let n in r)r[n].sampler=this.sampler}};var ht=class{id;topology;vertexCount;indices;attributes;userData={};constructor(t){let{attributes:r={},indices:n=null,vertexCount:s=null}=t;this.id=t.id||He("geometry"),this.topology=t.topology,n&&(this.indices=ArrayBuffer.isView(n)?{value:n,size:1}:n),this.attributes={};for(let[i,o]of Object.entries(r)){let a=ArrayBuffer.isView(o)?{value:o}:o;if(!ArrayBuffer.isView(a.value))throw new Error(`${this._print(i)}: must be typed array or object with value as typed array`);if((i==="POSITION"||i==="positions")&&!a.size&&(a.size=3),i==="indices"){if(this.indices)throw new Error("Multiple indices detected");this.indices=a}else this.attributes[i]=a}this.indices&&this.indices.isIndexed!==void 0&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=s||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(t){return`Geometry ${this.id} attribute ${t}`}_setAttributes(t,r){return this}_calculateVertexCount(t,r){if(r)return r.value.length;let n=1/0;for(let s of Object.values(t)){let{value:i,size:o,constant:a}=s;!a&&i&&o!==void 0&&o>=1&&(n=Math.min(n,i.length/o))}return n}};var Wq=`struct VertexInputs {
  @location(0) clipSpacePosition: vec2<f32>,
  @location(1) texCoord: vec2<f32>,
  @location(2) coordinate: vec2<f32>  
}

struct FragmentInputs {
  @builtin(position) Position : vec4<f32>,
  @location(0) position : vec2<f32>,
  @location(1) coordinate : vec2<f32>,
  @location(2) uv : vec2<f32>
};

@vertex
fn vertexMain(inputs: VertexInputs) -> FragmentInputs {
  var outputs: FragmentInputs;
  outputs.Position = vec4(inputs.clipSpacePosition, 0., 1.);
  outputs.position = inputs.clipSpacePosition;
  outputs.coordinate = inputs.coordinate;
  outputs.uv = inputs.texCoord;
  return outputs;
}
`,Hq=`#version 300 es
in vec2 clipSpacePositions;
in vec2 texCoords;
in vec2 coordinates;

out vec2 position;
out vec2 coordinate;
out vec2 uv;

void main(void) {
  gl_Position = vec4(clipSpacePositions, 0., 1.);
  position = clipSpacePositions;
  coordinate = coordinates;
  uv = texCoords;
}
`,HC=[-1,-1,1,-1,-1,1,1,1],ah=class extends tt{constructor(t,r){let n=HC.map(s=>s===-1?0:s);r.source&&(r={...r,source:`${Wq}
${r.source}`}),super(t,{id:r.id||He("clip-space"),...r,vs:Hq,vertexCount:4,geometry:new ht({topology:"triangle-strip",vertexCount:4,attributes:{clipSpacePositions:{size:2,value:new Float32Array(HC)},texCoords:{size:2,value:new Float32Array(n)},coordinates:{size:2,value:new Float32Array(n)}}})})}};var Hr=class{id;matrix=new rt;display=!0;position=new V;rotation=new V;scale=new V(1,1,1);userData={};props={};constructor(t={}){let{id:r}=t;this.id=r||He(this.constructor.name),this._setScenegraphNodeProps(t)}getBounds(){return null}destroy(){}delete(){this.destroy()}setProps(t){return this._setScenegraphNodeProps(t),this}toString(){return`{type: ScenegraphNode, id: ${this.id})}`}setPosition(t){return this.position=t,this}setRotation(t){return this.rotation=t,this}setScale(t){return this.scale=t,this}setMatrix(t,r=!0){r?this.matrix.copy(t):this.matrix=t}setMatrixComponents(t){let{position:r,rotation:n,scale:s,update:i=!0}=t;return r&&this.setPosition(r),n&&this.setRotation(n),s&&this.setScale(s),i&&this.updateMatrix(),this}updateMatrix(){let t=this.position,r=this.rotation,n=this.scale;return this.matrix.identity(),this.matrix.translate(t),this.matrix.rotateXYZ(r),this.matrix.scale(n),this}update(t={}){let{position:r,rotation:n,scale:s}=t;return r&&this.setPosition(r),n&&this.setRotation(n),s&&this.setScale(s),this.updateMatrix(),this}getCoordinateUniforms(t,r){r=r||this.matrix;let n=new rt(t).multiplyRight(r),s=n.invert(),i=s.transpose();return{viewMatrix:t,modelMatrix:r,objectMatrix:r,worldMatrix:n,worldInverseMatrix:s,worldInverseTransposeMatrix:i}}_setScenegraphNodeProps(t){"position"in t&&this.setPosition(t.position),"rotation"in t&&this.setRotation(t.rotation),"scale"in t&&this.setScale(t.scale),"matrix"in t&&this.setMatrix(t.matrix),Object.assign(this.props,t)}};var Pr=class extends Hr{children;constructor(t={}){t=Array.isArray(t)?{children:t}:t;let{children:r=[]}=t;U.assert(r.every(n=>n instanceof Hr),"every child must an instance of ScenegraphNode"),super(t),this.children=r}getBounds(){let t=[[1/0,1/0,1/0],[-1/0,-1/0,-1/0]];return this.traverse((r,{worldMatrix:n})=>{let s=r.getBounds();if(!s)return;let[i,o]=s,a=new V(i).add(o).divide([2,2,2]);n.transformAsPoint(a,a);let c=new V(o).subtract(i).divide([2,2,2]);n.transformAsVector(c,c);for(let l=0;l<8;l++){let f=new V(l&1?-1:1,l&2?-1:1,l&4?-1:1).multiply(c).add(a);for(let h=0;h<3;h++)t[0][h]=Math.min(t[0][h],f[h]),t[1][h]=Math.max(t[1][h],f[h])}}),Number.isFinite(t[0][0])?t:null}destroy(){this.children.forEach(t=>t.destroy()),this.removeAll(),super.destroy()}add(...t){for(let r of t)Array.isArray(r)?this.add(...r):this.children.push(r);return this}remove(t){let r=this.children,n=r.indexOf(t);return n>-1&&r.splice(n,1),this}removeAll(){return this.children=[],this}traverse(t,{worldMatrix:r=new rt}={}){let n=new rt(r).multiplyRight(this.matrix);for(let s of this.children)s instanceof Pr?s.traverse(t,{worldMatrix:n}):t(s,{worldMatrix:n})}};var kn=class extends Hr{model;bounds=null;managedResources;constructor(t){super(t),this.model=t.model,this.managedResources=t.managedResources||[],this.bounds=t.bounds||null,this.setProps(t)}destroy(){this.model&&(this.model.destroy(),this.model=null),this.managedResources.forEach(t=>t.destroy()),this.managedResources=[]}getBounds(){return this.bounds}draw(t){return this.model.draw(t)}};var ys=class extends ht{constructor(t={}){let{id:r=He("cube-geometry"),indices:n=!0}=t;super(n?{...t,id:r,topology:"triangle-list",indices:{size:1,value:Gq},attributes:{...Zq,...t.attributes}}:{...t,id:r,topology:"triangle-list",indices:void 0,attributes:{...Jq,...t.attributes}})}},Gq=new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),jq=new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),qq=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),Xq=new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),Yq=new Float32Array([1,-1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,1,1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1]),$q=new Float32Array([1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,1,0,0]),Kq=new Float32Array([1,0,1,1,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,0,1,1,0,1,1,1,0,1,0,1,0,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,0,1,1,1,0,1,1,0,0,1,0,1,0,1]),Zq={POSITION:{size:3,value:jq},NORMAL:{size:3,value:qq},TEXCOORD_0:{size:2,value:Xq}},Jq={POSITION:{size:3,value:Yq},TEXCOORD_0:{size:2,value:$q},COLOR_0:{size:3,value:Kq}};var ch=class extends ht{constructor(t={}){let{id:r=He("sphere-geometry")}=t,{indices:n,attributes:s}=Qq(t);super({...t,id:r,topology:"triangle-list",indices:n,attributes:{...s,...t.attributes}})}};function Qq(e){let{nlat:t=10,nlong:r=10}=e,i=Math.PI-0,o=0,c=2*Math.PI-o,l=(t+1)*(r+1),f=(x,A,_,y,T)=>e.radius||1,h=new Float32Array(l*3),u=new Float32Array(l*3),d=new Float32Array(l*2),p=l>65535?Uint32Array:Uint16Array,m=new p(t*r*6);for(let x=0;x<=t;x++)for(let A=0;A<=r;A++){let _=A/r,y=x/t,T=A+x*(r+1),v=T*2,C=T*3,w=c*_,E=i*y,b=Math.sin(w),R=Math.cos(w),k=Math.sin(E),D=Math.cos(E),P=R*k,j=D,ot=b*k,st=f(P,j,ot,_,y);h[C+0]=st*P,h[C+1]=st*j,h[C+2]=st*ot,u[C+0]=P,u[C+1]=j,u[C+2]=ot,d[v+0]=_,d[v+1]=1-y}let g=r+1;for(let x=0;x<r;x++)for(let A=0;A<t;A++){let _=(x*t+A)*6;m[_+0]=A*g+x,m[_+1]=A*g+x+1,m[_+2]=(A+1)*g+x,m[_+3]=(A+1)*g+x,m[_+4]=A*g+x+1,m[_+5]=(A+1)*g+x+1}return{indices:{size:1,value:m},attributes:{POSITION:{size:3,value:h},NORMAL:{size:3,value:u},TEXCOORD_0:{size:2,value:d}}}}var tX=`uniform screenUniforms {
  vec2 texSize;
} screen;
`,GC={name:"screen",fs:tX,uniformTypes:{texSize:"vec2<f32>"}};var lh=class extends Ao{constructor(t,r){super(t,r);let{module:n,fs:s,id:i}=r,o={depthWriteEnabled:!1,depthCompare:"always"};this.model=new ah(t,{id:i,fs:s,modules:[n,GC],parameters:o})}render(t){this._renderPass(this.device,t)}delete(){this.model.destroy(),this.model=null}_renderPass(t,r){let{clearCanvas:n,inputBuffer:s,outputBuffer:i}=r,o=[s.width,s.height],a={texSrc:s.colorAttachments[0],texSize:o};this.model.shaderInputs.setProps({screen:a,...r.moduleProps});let c=this.device.beginRenderPass({framebuffer:i,parameters:{viewport:[0,0,...o]},clearColor:n?[0,0,0,0]:!1,clearDepth:1,clearStencil:!1});this.model.draw(c),c.end()}};var fh=class{constructor(t,r){this.id=`${t.name}-pass`,this.props=r,gp(t),this.module=t}setup({device:t}){this.passes=eX(t,this.module,this.id)}setProps(t){this.props=t}preRender(){}postRender(t){let r=this.passes,{target:n}=t,s=t.inputBuffer,i=t.swapBuffer;for(let o=0;o<r.length;o++){let a=o===r.length-1,c=n!==void 0&&a;c&&(i=n);let l=!c||Boolean(t.clearCanvas),f={},h=this.module.passes[o].uniforms;f[this.module.name]={...this.props,...h},r[o].render({clearCanvas:l,inputBuffer:s,outputBuffer:i,moduleProps:f});let u=i;i=s,s=u}return s}cleanup(){if(this.passes){for(let t of this.passes)t.delete();this.passes=void 0}}};function eX(e,t,r){return t.passes.map((n,s)=>{let i=sX(t,n),o=`${r}-${s}`;return new lh(e,{id:o,module:t,fs:i})})}var jC=`#version 300 es
uniform sampler2D texSrc;

in vec2 position;
in vec2 coordinate;
in vec2 uv;

out vec4 fragColor;
`,rX=e=>`${jC}
void main() {
  fragColor = texture(texSrc, coordinate);
  fragColor = ${e}(fragColor, screen.texSize, coordinate);
}
`,nX=e=>`${jC}
void main() {
  fragColor = ${e}(texSrc, screen.texSize, coordinate);
}
`;function sX(e,t){if(t.filter){let r=typeof t.filter=="string"?t.filter:`${e.name}_filterColor_ext`;return rX(r)}if(t.sampler){let r=typeof t.sampler=="string"?t.sampler:`${e.name}_sampleColor`;return nX(r)}return""}var iX={blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaOperation:"add",blendAlphaSrcFactor:"constant-alpha",blendAlphaDstFactor:"zero"},cn=class extends Fe{constructor(){super(...arguments),this._colorEncoderState=null}render(t){return"pickingFBO"in t?this._drawPickingBuffer(t):super.render(t)}_drawPickingBuffer({layers:t,layerFilter:r,views:n,viewports:s,onViewportActive:i,pickingFBO:o,deviceRect:{x:a,y:c,width:l,height:f},cullRect:h,effects:u,pass:d="picking",pickZ:p,shaderModuleProps:m}){this.pickZ=p;let g=this._resetColorEncoder(p),x=[a,c,l,f],A=super.render({target:o,layers:t,layerFilter:r,views:n,viewports:s,onViewportActive:i,cullRect:h,effects:u?.filter(y=>y.useInPicking),pass:d,isPicking:!0,shaderModuleProps:m,clearColor:[0,0,0,0],colorMask:15,scissorRect:x});return this._colorEncoderState=null,{decodePickingColor:g&&aX.bind(null,g),stats:A}}shouldDrawLayer(t){let{pickable:r,operation:n}=t.props;return r&&n.includes("draw")||n.includes("terrain")||n.includes("mask")}getShaderModuleProps(t,r,n){return{picking:{isActive:1,isAttribute:this.pickZ},lighting:{enabled:!1}}}getLayerParameters(t,r,n){let s={...t.props.parameters},{pickable:i,operation:o}=t.props;return!this._colorEncoderState||o.includes("terrain")?s.blend=!1:i&&o.includes("draw")&&(Object.assign(s,iX),s.blend=!0,s.blendColor=oX(this._colorEncoderState,t,n)),s}_resetColorEncoder(t){return this._colorEncoderState=t?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}};function oX(e,t,r){let{byLayer:n,byAlpha:s}=e,i,o=n.get(t);return o?(o.viewports.push(r),i=o.a):(i=n.size+1,i<=255?(o={a:i,layer:t,viewports:[r]},n.set(t,o),s[i]=o):(W.warn("Too many pickable layers, only picking the first 255")(),i=0)),[0,0,0,i/255]}function aX(e,t){let r=e.byAlpha[t[3]];return r&&{pickedLayer:r.layer,pickedViewports:r.viewports,pickedObjectIndex:r.layer.decodePickingColor(t)}}var mi={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},mc=Symbol.for("component"),Gr=Symbol.for("propTypes"),tg=Symbol.for("deprecatedProps"),As=Symbol.for("asyncPropDefaults"),Un=Symbol.for("asyncPropOriginal"),ln=Symbol.for("asyncPropResolved");function sr(e,t=()=>!0){return Array.isArray(e)?qC(e,t,[]):t(e)?[e]:[]}function qC(e,t,r){let n=-1;for(;++n<e.length;){let s=e[n];Array.isArray(s)?qC(s,t,r):t(s)&&r.push(s)}return r}function eg({target:e,source:t,start:r=0,count:n=1}){let s=t.length,i=n*s,o=0;for(let a=r;o<s;o++)e[a++]=t[o];for(;o<i;)o<i-o?(e.copyWithin(r+o,r,r+o),o*=2):(e.copyWithin(r+o,r,r+i-o),o=i);return e}var hh=class{constructor(t,r,n){this._loadCount=0,this._subscribers=new Set,this.id=t,this.context=n,this.setData(r)}subscribe(t){this._subscribers.add(t)}unsubscribe(t){this._subscribers.delete(t)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then(()=>this.getData())}setData(t,r){if(t===this._data&&!r)return;this._data=t;let n=++this._loadCount,s=t;typeof t=="string"&&(s=me(t)),s instanceof Promise?(this.isLoaded=!1,this._loader=s.then(i=>{this._loadCount===n&&(this.isLoaded=!0,this._error=void 0,this._content=i)}).catch(i=>{this._loadCount===n&&(this.isLoaded=!0,this._error=i||!0)})):(this.isLoaded=!0,this._error=void 0,this._content=t);for(let i of this._subscribers)i.onChange(this.getData())}};var uh=class{constructor(t){this.protocol=t.protocol||"resource://",this._context={device:t.device,gl:t.device?.gl,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(t){return t.startsWith(this.protocol)?!0:t in this._resources}add({resourceId:t,data:r,forceUpdate:n=!1,persistent:s=!0}){let i=this._resources[t];i?i.setData(r,n):(i=new hh(t,r,this._context),this._resources[t]=i),i.persistent=s}remove(t){let r=this._resources[t];r&&(r.delete(),delete this._resources[t])}unsubscribe({consumerId:t}){let r=this._consumers[t];if(r){for(let n in r){let s=r[n],i=this._resources[s.resourceId];i&&i.unsubscribe(s)}delete this._consumers[t],this.prune()}}subscribe({resourceId:t,onChange:r,consumerId:n,requestId:s="default"}){let{_resources:i,protocol:o}=this;t.startsWith(o)&&(t=t.replace(o,""),i[t]||this.add({resourceId:t,data:null,persistent:!1}));let a=i[t];if(this._track(n,s,a,r),a)return a.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout(()=>this._prune(),0))}finalize(){for(let t in this._resources)this._resources[t].delete()}_track(t,r,n,s){let i=this._consumers,o=i[t]=i[t]||{},a=o[r],c=a&&a.resourceId&&this._resources[a.resourceId];c&&(c.unsubscribe(a),this.prune()),n&&(a?(a.onChange=s,a.resourceId=n.id):a={onChange:s,resourceId:n.id},o[r]=a,n.subscribe(a))}_prune(){this._pruneRequest=null;for(let t of Object.keys(this._resources)){let r=this._resources[t];!r.persistent&&!r.inUse()&&(r.delete(),delete this._resources[t])}}};var cX="layerManager.setLayers",lX="layerManager.activateViewport",So=class{constructor(t,r){this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this._defaultShaderModulesChanged=!1,this.activateViewport=a=>{te(lX,this,a),a&&(this.context.viewport=a)};let{deck:n,stats:s,viewport:i,timeline:o}=r||{};this.layers=[],this.resourceManager=new uh({device:t,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,device:t,gl:t?.gl,deck:n,shaderAssembler:Gm(t?.info?.shadingLanguage||"glsl"),defaultShaderModules:[Y2],renderPass:void 0,stats:s||new Ue({id:"deck.gl"}),viewport:i||new xe({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:o||new Eo,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(let t of this.layers)this._finalizeLayer(t)}needsRedraw(t={clearRedrawFlags:!1}){let r=this._needsRedraw;t.clearRedrawFlags&&(this._needsRedraw=!1);for(let n of this.layers){let s=n.getNeedsRedraw(t);r=r||s}return r}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._defaultShaderModulesChanged?"shader modules changed":this._needsUpdate}setNeedsRedraw(t){this._needsRedraw=this._needsRedraw||t}setNeedsUpdate(t){this._needsUpdate=this._needsUpdate||t}getLayers({layerIds:t}={}){return t?this.layers.filter(r=>t.find(n=>r.id.indexOf(n)===0)):this.layers}setProps(t){"debug"in t&&(this._debug=t.debug),"userData"in t&&(this.context.userData=t.userData),"layers"in t&&(this._nextLayers=t.layers),"onError"in t&&(this.context.onError=t.onError)}setLayers(t,r){te(cX,this,r,t),this._lastRenderedLayers=t;let n=sr(t,Boolean);for(let s of n)s.context=this.context;this._updateLayers(this.layers,n)}updateLayers(){let t=this.needsUpdate();t&&(this.setNeedsRedraw(`updating layers: ${t}`),this.setLayers(this._nextLayers||this._lastRenderedLayers,t)),this._nextLayers=null}addDefaultShaderModule(t){let{defaultShaderModules:r}=this.context;r.find(n=>n.name===t.name)||(r.push(t),this._defaultShaderModulesChanged=!0)}removeDefaultShaderModule(t){let{defaultShaderModules:r}=this.context,n=r.findIndex(s=>s.name===t.name);n>=0&&(r.splice(n,1),this._defaultShaderModulesChanged=!0)}_handleError(t,r,n){n.raiseError(r,`${t} of ${n}`)}_updateLayers(t,r){let n={};for(let o of t)n[o.id]?W.warn(`Multiple old layers with same id ${o.id}`)():n[o.id]=o;if(this._defaultShaderModulesChanged){for(let o of t)o.setNeedsUpdate(),o.setChangeFlags({extensionsChanged:!0});this._defaultShaderModulesChanged=!1}let s=[];this._updateSublayersRecursively(r,n,s),this._finalizeOldLayers(n);let i=!1;for(let o of s)if(o.hasUniformTransition()){i=`Uniform transition in ${o}`;break}this._needsUpdate=i,this.layers=s}_updateSublayersRecursively(t,r,n){for(let s of t){s.context=this.context;let i=r[s.id];i===null&&W.warn(`Multiple new layers with same id ${s.id}`)(),r[s.id]=null;let o=null;try{this._debug&&i!==s&&s.validateProps(),i?(this._transferLayerState(i,s),this._updateLayer(s)):this._initializeLayer(s),n.push(s),o=s.isComposite?s.getSubLayers():null}catch(a){this._handleError("matching",a,s)}o&&this._updateSublayersRecursively(o,r,n)}}_finalizeOldLayers(t){for(let r in t){let n=t[r];n&&this._finalizeLayer(n)}}_initializeLayer(t){try{t._initialize(),t.lifecycle=mi.INITIALIZED}catch(r){this._handleError("initialization",r,t)}}_transferLayerState(t,r){r._transferState(t),r.lifecycle=mi.MATCHED,r!==t&&(t.lifecycle=mi.AWAITING_GC)}_updateLayer(t){try{t._update()}catch(r){this._handleError("update",r,t)}}_finalizeLayer(t){this._needsRedraw=this._needsRedraw||`finalized ${t}`,t.lifecycle=mi.AWAITING_FINALIZATION;try{t._finalize(),t.lifecycle=mi.FINALIZED}catch(r){this._handleError("finalization",r,t)}}};function it(e,t,r){if(e===t)return!0;if(!r||!e||!t)return!1;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(!it(e[n],t[n],r-1))return!1;return!0}if(Array.isArray(t))return!1;if(typeof e=="object"&&typeof t=="object"){let n=Object.keys(e),s=Object.keys(t);if(n.length!==s.length)return!1;for(let i of n)if(!t.hasOwnProperty(i)||!it(e[i],t[i],r-1))return!1;return!0}return!1}var dh=class{constructor(t){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=t.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=t.eventManager,this._eventCallbacks={onViewStateChange:t.onViewStateChange,onInteractionStateChange:t.onInteractionStateChange},Object.seal(this),this.setProps(t)}finalize(){for(let t in this.controllers){let r=this.controllers[t];r&&r.finalize()}this.controllers={}}needsRedraw(t={clearRedrawFlags:!1}){let r=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),r}setNeedsUpdate(t){this._needsUpdate=this._needsUpdate||t,this._needsRedraw=this._needsRedraw||t}updateViewStates(){for(let t in this.controllers){let r=this.controllers[t];r&&r.updateTransition()}}getViewports(t){return t?this._viewports.filter(r=>r.containsPixel(t)):this._viewports}getViews(){let t={};return this.views.forEach(r=>{t[r.id]=r}),t}getView(t){return this.views.find(r=>r.id===t)}getViewState(t){let r=typeof t=="string"?this.getView(t):t,n=r&&this.viewState[r.getViewStateId()]||this.viewState;return r?r.filterViewState(n):n}getViewport(t){return this._viewportMap[t]}unproject(t,r){let n=this.getViewports(),s={x:t[0],y:t[1]};for(let i=n.length-1;i>=0;--i){let o=n[i];if(o.containsPixel(s)){let a=t.slice();return a[0]-=o.x,a[1]-=o.y,o.unproject(a,r)}}return null}setProps(t){t.views&&this._setViews(t.views),t.viewState&&this._setViewState(t.viewState),("width"in t||"height"in t)&&this._setSize(t.width,t.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(t,r){(t!==this.width||r!==this.height)&&(this.width=t,this.height=r,this.setNeedsUpdate("Size changed"))}_setViews(t){t=sr(t,Boolean),this._diffViews(t,this.views)&&this.setNeedsUpdate("views changed"),this.views=t}_setViewState(t){t?(!it(t,this.viewState,3)&&this.setNeedsUpdate("viewState changed"),this.viewState=t):W.warn("missing `viewState` or `initialViewState`")()}_createController(t,r){let n=r.type;return new n({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._eventCallbacks.onViewStateChange,onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:i=>this.getView(t.id)?.makeViewport({viewState:i,width:this.width,height:this.height})})}_updateController(t,r,n,s){let i=t.controller;if(i&&n){let o={...r,...i,id:t.id,x:n.x,y:n.y,width:n.width,height:n.height};return(!s||s.constructor!==i.type)&&(s=this._createController(t,o)),s&&s.setProps(o),s}return null}_rebuildViewports(){let{views:t}=this,r=this.controllers;this._viewports=[],this.controllers={};let n=!1;for(let s=t.length;s--;){let i=t[s],o=this.getViewState(i),a=i.makeViewport({viewState:o,width:this.width,height:this.height}),c=r[i.id],l=Boolean(i.controller);l&&!c&&(n=!0),(n||!l)&&c&&(c.finalize(),c=null),this.controllers[i.id]=this._updateController(i,o,a,c),a&&this._viewports.unshift(a)}for(let s in r){let i=r[s];i&&!this.controllers[s]&&i.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach(t=>{t.id&&(this._viewportMap[t.id]=this._viewportMap[t.id]||t)})}_diffViews(t,r){return t.length!==r.length?!0:t.some((n,s)=>!t[s].equals(r[s]))}};var fX=/([0-9]+\.?[0-9]*)(%|px)/;function bs(e){switch(typeof e){case"number":return{position:e,relative:!1};case"string":let t=fX.exec(e);if(t&&t.length>=3){let r=t[2]==="%",n=parseFloat(t[1]);return{position:r?n/100:n,relative:r}}default:throw new Error(`Could not parse position string ${e}`)}}function Ts(e,t){return e.relative?Math.round(e.position*t):e.position}var ir=class{constructor(t){let{id:r,x:n=0,y:s=0,width:i="100%",height:o="100%",padding:a=null}=t;this.id=r||this.constructor.displayName||"view",this.props={...t,id:this.id},this._x=bs(n),this._y=bs(s),this._width=bs(i),this._height=bs(o),this._padding=a&&{left:bs(a.left||0),right:bs(a.right||0),top:bs(a.top||0),bottom:bs(a.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(t){return this===t?!0:this.constructor===t.constructor&&it(this.props,t.props,2)}makeViewport({width:t,height:r,viewState:n}){n=this.filterViewState(n);let s=this.getDimensions({width:t,height:r});if(!s.height||!s.width)return null;let i=this.getViewportType(n);return new i({...n,...this.props,...s})}getViewStateId(){let{viewState:t}=this.props;return typeof t=="string"?t:t?.id||this.id}filterViewState(t){if(this.props.viewState&&typeof this.props.viewState=="object"){if(!this.props.viewState.id)return this.props.viewState;let r={...t};for(let n in this.props.viewState)n!=="id"&&(r[n]=this.props.viewState[n]);return r}return t}getDimensions({width:t,height:r}){let n={x:Ts(this._x,t),y:Ts(this._y,r),width:Ts(this._width,t),height:Ts(this._height,r)};return this._padding&&(n.padding={left:Ts(this._padding.left,t),top:Ts(this._padding.top,r),right:Ts(this._padding.right,t),bottom:Ts(this._padding.bottom,r)}),n}get controller(){let t=this.props.controller;return t?t===!0?{type:this.ControllerType}:typeof t=="function"?{type:t}:{type:this.ControllerType,...t}:null}};var fn=class{constructor(t){this._inProgress=!1,this._handle=null,this.time=0,this.settings={duration:0},this._timeline=t}get inProgress(){return this._inProgress}start(t){this.cancel(),this.settings=t,this._inProgress=!0,this.settings.onStart?.(this)}end(){this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,this.settings.onEnd?.(this))}cancel(){this._inProgress&&(this.settings.onInterrupt?.(this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){if(!this._inProgress)return!1;if(this._handle===null){let{_timeline:t,settings:r}=this;this._handle=t.addChannel({delay:t.getTime(),duration:r.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),this.settings.onUpdate?.(this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}};var XC=()=>{},ph={BREAK:1,SNAP_TO_END:2,IGNORE:3},hX=e=>e,uX=ph.BREAK,mh=class{constructor(t){this._onTransitionUpdate=r=>{let{time:n,settings:{interpolator:s,startProps:i,endProps:o,duration:a,easing:c}}=r,l=c(n/a),f=s.interpolateProps(i,o,l);this.propsInTransition=this.getControllerState({...this.props,...f}).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=t.getControllerState,this.propsInTransition=null,this.transition=new fn(t.timeline),this.onViewStateChange=t.onViewStateChange||XC,this.onStateChange=t.onStateChange||XC}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(t){let r=!1,n=this.props;if(this.props=t,!n||this._shouldIgnoreViewportChange(n,t))return!1;if(this._isTransitionEnabled(t)){let s=n;if(this.transition.inProgress){let{interruption:i,endProps:o}=this.transition.settings;s={...n,...i===ph.SNAP_TO_END?o:this.propsInTransition||n}}this._triggerTransition(s,t),r=!0}else this.transition.cancel();return r}updateTransition(){this.transition.update()}_isTransitionEnabled(t){let{transitionDuration:r,transitionInterpolator:n}=t;return(r>0||r==="auto")&&Boolean(n)}_isUpdateDueToCurrentTransition(t){return this.transition.inProgress&&this.propsInTransition?this.transition.settings.interpolator.arePropsEqual(t,this.propsInTransition):!1}_shouldIgnoreViewportChange(t,r){return this.transition.inProgress?this.transition.settings.interruption===ph.IGNORE||this._isUpdateDueToCurrentTransition(r):this._isTransitionEnabled(r)?r.transitionInterpolator.arePropsEqual(t,r):!0}_triggerTransition(t,r){let n=this.getControllerState(t),s=this.getControllerState(r).shortestPathFrom(n),i=r.transitionInterpolator,o=i.getDuration?i.getDuration(t,r):r.transitionDuration;if(o===0)return;let a=i.initializeProps(t,s);this.propsInTransition={};let c={duration:o,easing:r.transitionEasing||hX,interpolator:i,interruption:r.transitionInterruption||uX,startProps:a.start,endProps:a.end,onStart:r.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(r.onTransitionInterrupt),onEnd:this._onTransitionEnd(r.onTransitionEnd)};this.transition.start(c),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(t){return r=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),t?.(r)}}};function wt(e,t){if(!e)throw new Error(t||"deck.gl: assertion failed.")}var vs=class{constructor(t){let{compare:r,extract:n,required:s}=t;this._propsToCompare=r,this._propsToExtract=n||r,this._requiredProps=s}arePropsEqual(t,r){for(let n of this._propsToCompare)if(!(n in t)||!(n in r)||!Yt(t[n],r[n]))return!1;return!0}initializeProps(t,r){let n={},s={};for(let i of this._propsToExtract)(i in t||i in r)&&(n[i]=t[i],s[i]=r[i]);return this._checkRequiredProps(n),this._checkRequiredProps(s),{start:n,end:s}}getDuration(t,r){return r.transitionDuration}_checkRequiredProps(t){this._requiredProps&&this._requiredProps.forEach(r=>{let n=t[r];wt(Number.isFinite(n)||Array.isArray(n),`${r} is required for transition`)})}};var dX=["longitude","latitude","zoom","bearing","pitch"],pX=["longitude","latitude","zoom"],ve=class extends vs{constructor(t={}){let r=Array.isArray(t)?t:t.transitionProps,n=Array.isArray(t)?{}:t;n.transitionProps=Array.isArray(r)?{compare:r,required:r}:r||{compare:dX,required:pX},super(n.transitionProps),this.opts=n}initializeProps(t,r){let n=super.initializeProps(t,r),{makeViewport:s,around:i}=this.opts;if(s&&i){let o=s(t),a=s(r),c=o.unproject(i);n.start.around=i,Object.assign(n.end,{around:a.project(c),aroundPosition:c,width:r.width,height:r.height})}return n}interpolateProps(t,r,n){let s={};for(let i of this._propsToExtract)s[i]=be(t[i]||0,r[i]||0,n);if(r.aroundPosition&&this.opts.makeViewport){let i=this.opts.makeViewport({...r,...s});Object.assign(s,i.panByPosition(r.aroundPosition,be(t.around,r.around,n)))}return s}};var gi={transitionDuration:0},mX=300,rg=e=>1-(1-e)*(1-e),gc={WHEEL:["wheel"],PAN:["panstart","panmove","panend"],PINCH:["pinchstart","pinchmove","pinchend"],MULTI_PAN:["multipanstart","multipanmove","multipanend"],DOUBLE_CLICK:["dblclick"],KEYBOARD:["keydown"]},wo={},or=class{constructor(t){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new mh({...t,getControllerState:r=>new this.ControllerState(r),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)}),this.handleEvent=this.handleEvent.bind(this),this.eventManager=t.eventManager,this.onViewStateChange=t.onViewStateChange||(()=>{}),this.onStateChange=t.onStateChange||(()=>{}),this.makeViewport=t.makeViewport}set events(t){this.toggleEvents(this._customEvents,!1),this.toggleEvents(t,!0),this._customEvents=t,this.props&&this.setProps(this.props)}finalize(){for(let t in this._events)this._events[t]&&this.eventManager?.off(t,this.handleEvent);this.transitionManager.finalize()}handleEvent(t){this._controllerState=void 0;let r=this._eventStartBlocked;switch(t.type){case"panstart":return r?!1:this._onPanStart(t);case"panmove":return this._onPan(t);case"panend":return this._onPanEnd(t);case"pinchstart":return r?!1:this._onPinchStart(t);case"pinchmove":return this._onPinch(t);case"pinchend":return this._onPinchEnd(t);case"multipanstart":return r?!1:this._onMultiPanStart(t);case"multipanmove":return this._onMultiPan(t);case"multipanend":return this._onMultiPanEnd(t);case"dblclick":return this._onDoubleClick(t);case"wheel":return this._onWheel(t);case"keydown":return this._onKeyDown(t);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState({makeViewport:this.makeViewport,...this.props,...this.state}),this._controllerState}getCenter(t){let{x:r,y:n}=this.props,{offsetCenter:s}=t;return[s.x-r,s.y-n]}isPointInBounds(t,r){let{width:n,height:s}=this.props;if(r&&r.handled)return!1;let i=t[0]>=0&&t[0]<=n&&t[1]>=0&&t[1]<=s;return i&&r&&r.stopPropagation(),i}isFunctionKeyPressed(t){let{srcEvent:r}=t;return Boolean(r.metaKey||r.altKey||r.ctrlKey||r.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(t){let r=setTimeout(()=>{this._eventStartBlocked===r&&(this._eventStartBlocked=null)},t);this._eventStartBlocked=r}setProps(t){t.dragMode&&(this.dragMode=t.dragMode),this.props=t,"transitionInterpolator"in t||(t.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(t);let{inertia:r}=t;this.inertia=Number.isFinite(r)?r:r===!0?mX:0;let{scrollZoom:n=!0,dragPan:s=!0,dragRotate:i=!0,doubleClickZoom:o=!0,touchZoom:a=!0,touchRotate:c=!1,keyboard:l=!0}=t,f=Boolean(this.onViewStateChange);this.toggleEvents(gc.WHEEL,f&&n),this.toggleEvents(gc.PAN,f),this.toggleEvents(gc.PINCH,f&&(a||c)),this.toggleEvents(gc.MULTI_PAN,f&&c),this.toggleEvents(gc.DOUBLE_CLICK,f&&o),this.toggleEvents(gc.KEYBOARD,f&&l),this.scrollZoom=n,this.dragPan=s,this.dragRotate=i,this.doubleClickZoom=o,this.touchZoom=a,this.touchRotate=c,this.keyboard=l}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(t,r){this.eventManager&&t.forEach(n=>{this._events[n]!==r&&(this._events[n]=r,r?this.eventManager.on(n,this.handleEvent):this.eventManager.off(n,this.handleEvent))})}updateViewport(t,r=null,n={}){let s={...t.getViewportProps(),...r},i=this.controllerState!==t;if(this.state=t.getState(),this._setInteractionState(n),i){let o=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:s,interactionState:this._interactionState,oldViewState:o,viewId:this.props.id})}}_onTransition(t){this.onViewStateChange({...t,interactionState:this._interactionState,viewId:this.props.id})}_setInteractionState(t){Object.assign(this._interactionState,t),this.onStateChange(this._interactionState)}_onPanStart(t){let r=this.getCenter(t);if(!this.isPointInBounds(r,t))return!1;let n=this.isFunctionKeyPressed(t)||t.rightButton||!1;(this.invertPan||this.dragMode==="pan")&&(n=!n);let s=this.controllerState[n?"panStart":"rotateStart"]({pos:r});return this._panMove=n,this.updateViewport(s,gi,{isDragging:!0}),!0}_onPan(t){return this.isDragging()?this._panMove?this._onPanMove(t):this._onPanRotate(t):!1}_onPanEnd(t){return this.isDragging()?this._panMove?this._onPanMoveEnd(t):this._onPanRotateEnd(t):!1}_onPanMove(t){if(!this.dragPan)return!1;let r=this.getCenter(t),n=this.controllerState.pan({pos:r});return this.updateViewport(n,gi,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(t){let{inertia:r}=this;if(this.dragPan&&r&&t.velocity){let n=this.getCenter(t),s=[n[0]+t.velocityX*r/2,n[1]+t.velocityY*r/2],i=this.controllerState.pan({pos:s}).panEnd();this.updateViewport(i,{...this._getTransitionProps(),transitionDuration:r,transitionEasing:rg},{isDragging:!1,isPanning:!0})}else{let n=this.controllerState.panEnd();this.updateViewport(n,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(t){if(!this.dragRotate)return!1;let r=this.getCenter(t),n=this.controllerState.rotate({pos:r});return this.updateViewport(n,gi,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(t){let{inertia:r}=this;if(this.dragRotate&&r&&t.velocity){let n=this.getCenter(t),s=[n[0]+t.velocityX*r/2,n[1]+t.velocityY*r/2],i=this.controllerState.rotate({pos:s}).rotateEnd();this.updateViewport(i,{...this._getTransitionProps(),transitionDuration:r,transitionEasing:rg},{isDragging:!1,isRotating:!0})}else{let n=this.controllerState.rotateEnd();this.updateViewport(n,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(t){if(!this.scrollZoom)return!1;let r=this.getCenter(t);if(!this.isPointInBounds(r,t))return!1;t.srcEvent.preventDefault();let{speed:n=.01,smooth:s=!1}=this.scrollZoom===!0?{}:this.scrollZoom,{delta:i}=t,o=2/(1+Math.exp(-Math.abs(i*n)));i<0&&o!==0&&(o=1/o);let a=this.controllerState.zoom({pos:r,scale:o});return this.updateViewport(a,{...this._getTransitionProps({around:r}),transitionDuration:s?250:1},{isZooming:!0,isPanning:!0}),!0}_onMultiPanStart(t){let r=this.getCenter(t);if(!this.isPointInBounds(r,t))return!1;let n=this.controllerState.rotateStart({pos:r});return this.updateViewport(n,gi,{isDragging:!0}),!0}_onMultiPan(t){if(!this.touchRotate||!this.isDragging())return!1;let r=this.getCenter(t);r[0]-=t.deltaX;let n=this.controllerState.rotate({pos:r});return this.updateViewport(n,gi,{isDragging:!0,isRotating:!0}),!0}_onMultiPanEnd(t){if(!this.isDragging())return!1;let{inertia:r}=this;if(this.touchRotate&&r&&t.velocityY){let n=this.getCenter(t),s=[n[0],n[1]+=t.velocityY*r/2],i=this.controllerState.rotate({pos:s});this.updateViewport(i,{...this._getTransitionProps(),transitionDuration:r,transitionEasing:rg},{isDragging:!1,isRotating:!0}),this.blockEvents(r)}else{let n=this.controllerState.rotateEnd();this.updateViewport(n,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(t){let r=this.getCenter(t);if(!this.isPointInBounds(r,t))return!1;let n=this.controllerState.zoomStart({pos:r}).rotateStart({pos:r});return wo._startPinchRotation=t.rotation,wo._lastPinchEvent=t,this.updateViewport(n,gi,{isDragging:!0}),!0}_onPinch(t){if(!this.touchZoom&&!this.touchRotate||!this.isDragging())return!1;let r=this.controllerState;if(this.touchZoom){let{scale:n}=t,s=this.getCenter(t);r=r.zoom({pos:s,scale:n})}if(this.touchRotate){let{rotation:n}=t;r=r.rotate({deltaAngleX:wo._startPinchRotation-n})}return this.updateViewport(r,gi,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),wo._lastPinchEvent=t,!0}_onPinchEnd(t){if(!this.isDragging())return!1;let{inertia:r}=this,{_lastPinchEvent:n}=wo;if(this.touchZoom&&r&&n&&t.scale!==n.scale){let s=this.getCenter(t),i=this.controllerState.rotateEnd(),o=Math.log2(t.scale),a=(o-Math.log2(n.scale))/(t.deltaTime-n.deltaTime),c=Math.pow(2,o+a*r/2);i=i.zoom({pos:s,scale:c}).zoomEnd(),this.updateViewport(i,{...this._getTransitionProps({around:s}),transitionDuration:r,transitionEasing:rg},{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(r)}else{let s=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(s,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return wo._startPinchRotation=null,wo._lastPinchEvent=null,!0}_onDoubleClick(t){if(!this.doubleClickZoom)return!1;let r=this.getCenter(t);if(!this.isPointInBounds(r,t))return!1;let n=this.isFunctionKeyPressed(t),s=this.controllerState.zoom({pos:r,scale:n?.5:2});return this.updateViewport(s,this._getTransitionProps({around:r}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(t){if(!this.keyboard)return!1;let r=this.isFunctionKeyPressed(t),{zoomSpeed:n,moveSpeed:s,rotateSpeedX:i,rotateSpeedY:o}=this.keyboard===!0?{}:this.keyboard,{controllerState:a}=this,c,l={};switch(t.srcEvent.code){case"Minus":c=r?a.zoomOut(n).zoomOut(n):a.zoomOut(n),l.isZooming=!0;break;case"Equal":c=r?a.zoomIn(n).zoomIn(n):a.zoomIn(n),l.isZooming=!0;break;case"ArrowLeft":r?(c=a.rotateLeft(i),l.isRotating=!0):(c=a.moveLeft(s),l.isPanning=!0);break;case"ArrowRight":r?(c=a.rotateRight(i),l.isRotating=!0):(c=a.moveRight(s),l.isPanning=!0);break;case"ArrowUp":r?(c=a.rotateUp(o),l.isRotating=!0):(c=a.moveUp(s),l.isPanning=!0);break;case"ArrowDown":r?(c=a.rotateDown(o),l.isRotating=!0):(c=a.moveDown(s),l.isPanning=!0);break;default:return!1}return this.updateViewport(c,this._getTransitionProps(),l),!0}_getTransitionProps(t){let{transition:r}=this;return!r||!r.transitionInterpolator?gi:t?{...r,transitionInterpolator:new ve({...t,...r.transitionInterpolator.opts,makeViewport:this.controllerState.makeViewport})}:r}};var Es=class{constructor(t,r){this._viewportProps=this.applyConstraints(t),this._state=r}getViewportProps(){return this._viewportProps}getState(){return this._state}};var YC=5,gX=1.2,gh=class extends Es{constructor(t){let{width:r,height:n,latitude:s,longitude:i,zoom:o,bearing:a=0,pitch:c=0,altitude:l=1.5,position:f=[0,0,0],maxZoom:h=20,minZoom:u=0,maxPitch:d=60,minPitch:p=0,startPanLngLat:m,startZoomLngLat:g,startRotatePos:x,startBearing:A,startPitch:_,startZoom:y,normalize:T=!0}=t;wt(Number.isFinite(i)),wt(Number.isFinite(s)),wt(Number.isFinite(o)),super({width:r,height:n,latitude:s,longitude:i,zoom:o,bearing:a,pitch:c,altitude:l,maxZoom:h,minZoom:u,maxPitch:d,minPitch:p,normalize:T,position:f},{startPanLngLat:m,startZoomLngLat:g,startRotatePos:x,startBearing:A,startPitch:_,startZoom:y}),this.makeViewport=t.makeViewport}panStart({pos:t}){return this._getUpdatedState({startPanLngLat:this._unproject(t)})}pan({pos:t,startPos:r}){let n=this.getState().startPanLngLat||this._unproject(r);if(!n)return this;let i=this.makeViewport(this.getViewportProps()).panByPosition(n,t);return this._getUpdatedState(i)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart({pos:t}){return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate({pos:t,deltaAngleX:r=0,deltaAngleY:n=0}){let{startRotatePos:s,startBearing:i,startPitch:o}=this.getState();if(!s||i===void 0||o===void 0)return this;let a;return t?a=this._getNewRotation(t,s,o,i):a={bearing:i+r,pitch:o+n},this._getUpdatedState(a)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart({pos:t}){return this._getUpdatedState({startZoomLngLat:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom({pos:t,startPos:r,scale:n}){let{startZoom:s,startZoomLngLat:i}=this.getState();if(i||(s=this.getViewportProps().zoom,i=this._unproject(r)||this._unproject(t)),!i)return this;let{maxZoom:o,minZoom:a}=this.getViewportProps(),c=s+Math.log2(n);c=xt(c,a,o);let l=this.makeViewport({...this.getViewportProps(),zoom:c});return this._getUpdatedState({zoom:c,...l.panByPosition(i,t)})}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(t=2){return this._zoomFromCenter(t)}zoomOut(t=2){return this._zoomFromCenter(1/t)}moveLeft(t=100){return this._panFromCenter([t,0])}moveRight(t=100){return this._panFromCenter([-t,0])}moveUp(t=100){return this._panFromCenter([0,t])}moveDown(t=100){return this._panFromCenter([0,-t])}rotateLeft(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing-t})}rotateRight(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing+t})}rotateUp(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch+t})}rotateDown(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch-t})}shortestPathFrom(t){let r=t.getViewportProps(),n={...this.getViewportProps()},{bearing:s,longitude:i}=n;return Math.abs(s-r.bearing)>180&&(n.bearing=s<0?s+360:s-360),Math.abs(i-r.longitude)>180&&(n.longitude=i<0?i+360:i-360),n}applyConstraints(t){let{maxZoom:r,minZoom:n,zoom:s}=t;t.zoom=xt(s,n,r);let{maxPitch:i,minPitch:o,pitch:a}=t;t.pitch=xt(a,o,i);let{normalize:c=!0}=t;return c&&Object.assign(t,lA(t)),t}_zoomFromCenter(t){let{width:r,height:n}=this.getViewportProps();return this.zoom({pos:[r/2,n/2],scale:t})}_panFromCenter(t){let{width:r,height:n}=this.getViewportProps();return this.pan({startPos:[r/2,n/2],pos:[r/2+t[0],n/2+t[1]]})}_getUpdatedState(t){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...t})}_unproject(t){let r=this.makeViewport(this.getViewportProps());return t&&r.unproject(t)}_getNewRotation(t,r,n,s){let i=t[0]-r[0],o=t[1]-r[1],a=t[1],c=r[1],{width:l,height:f}=this.getViewportProps(),h=i/l,u=0;o>0?Math.abs(f-c)>YC&&(u=o/(c-f)*gX):o<0&&c>YC&&(u=1-a/c),u=xt(u,-1,1);let{minPitch:d,maxPitch:p}=this.getViewportProps(),m=s+180*h,g=n;return u>0?g=n+u*(p-n):u<0&&(g=n-u*(d-n)),{pitch:g,bearing:m}}},Co=class extends or{constructor(){super(...arguments),this.ControllerState=gh,this.transition={transitionDuration:300,transitionInterpolator:new ve({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(t){t.position=t.position||[0,0,0];let r=this.props;super.setProps(t),(!r||r.height!==t.height)&&this.updateViewport(new this.ControllerState({makeViewport:this.makeViewport,...t,...this.state}))}};var ng=class extends ir{constructor(t={}){super(t)}getViewportType(){return We}get ControllerType(){return Co}};ng.displayName="MapView";var xi=ng;var xX=new di;function _X(e,t){let r=e.order??1/0,n=t.order??1/0;return r-n}var xh=class{constructor(t){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._context=t,this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(t){let r=this._defaultEffects;if(!r.find(n=>n.id===t.id)){let n=r.findIndex(s=>_X(s,t)>0);n<0?r.push(t):r.splice(n,0,t),t.setup(this._context),this._setEffects(this.effects)}}setProps(t){"effects"in t&&(it(t.effects,this.effects,1)||this._setEffects(t.effects))}needsRedraw(t={clearRedrawFlags:!1}){let r=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),r}getEffects(){return this._resolvedEffects}_setEffects(t){let r={};for(let s of this.effects)r[s.id]=s;let n=[];for(let s of t){let i=r[s.id],o=s;i&&i!==s?i.setProps?(i.setProps(s.props),o=i):i.cleanup(this._context):i||s.setup(this._context),n.push(o),delete r[s.id]}for(let s in r)r[s].cleanup(this._context);this.effects=n,this._resolvedEffects=n.concat(this._defaultEffects),t.some(s=>s instanceof di)||this._resolvedEffects.push(xX),this._needsRedraw="effects changed"}finalize(){for(let t of this._resolvedEffects)t.cleanup(this._context);this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}};var _h=class extends Fe{shouldDrawLayer(t){let{operation:r}=t.props;return r.includes("draw")||r.includes("terrain")}};var yX="deckRenderer.renderLayers",Po=class{constructor(t){this.device=t,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new _h(t),this.pickLayersPass=new cn(t),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(t){this.layerFilter!==t.layerFilter&&(this.layerFilter=t.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==t.drawPickingColors&&(this.drawPickingColors=t.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(t){if(!t.viewports.length)return;let r=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,n={layerFilter:this.layerFilter,isPicking:this.drawPickingColors,...t};n.effects&&this._preRender(n.effects,n);let s=this.lastPostProcessEffect?this.renderBuffers[0]:n.target;this.lastPostProcessEffect&&(n.clearColor=[0,0,0,0],n.clearCanvas=!0);let i=r.render({...n,target:s});n.effects&&this._postRender(n.effects,n),this.renderCount++,te(yX,this,i,t)}needsRedraw(t={clearRedrawFlags:!1}){let r=this._needsRedraw;return t.clearRedrawFlags&&(this._needsRedraw=!1),r}finalize(){let{renderBuffers:t}=this;for(let r of t)r.delete();t.length=0}_preRender(t,r){this.lastPostProcessEffect=null,r.preRenderStats=r.preRenderStats||{};for(let n of t)r.preRenderStats[n.id]=n.preRender(r),n.postRender&&(this.lastPostProcessEffect=n.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){let{renderBuffers:t}=this,r=this.device.canvasContext.getDrawingBufferSize();t.length===0&&[0,1].map(n=>{let s=this.device.createTexture({sampler:{minFilter:"linear",magFilter:"linear"}});t.push(this.device.createFramebuffer({id:`deck-renderbuffer-${n}`,colorAttachments:[s]}))});for(let n of t)n.resize(r)}_postRender(t,r){let{renderBuffers:n}=this,s={...r,inputBuffer:n[0],swapBuffer:n[1]};for(let i of t)if(i.postRender){s.target=i.id===this.lastPostProcessEffect?r.target:void 0;let o=i.postRender(s);s.inputBuffer=o,s.swapBuffer=o===n[0]?n[1]:n[0]}}};var AX={pickedColor:null,pickedObjectIndex:-1};function $C({pickedColors:e,decodePickingColor:t,deviceX:r,deviceY:n,deviceRadius:s,deviceRect:i}){let{x:o,y:a,width:c,height:l}=i,f=s*s,h=-1,u=0;for(let d=0;d<l;d++){let p=d+a-n,m=p*p;if(m>f)u+=4*c;else for(let g=0;g<c;g++){if(e[u+3]-1>=0){let A=g+o-r,_=A*A+m;_<=f&&(f=_,h=u)}u+=4}}if(h>=0){let d=e.slice(h,h+4),p=t(d);if(p){let m=Math.floor(h/4/c),g=h/4-m*c;return{...p,pickedColor:d,pickedX:o+g,pickedY:a+m}}W.error("Picked non-existent layer. Is picking buffer corrupt?")()}return AX}function KC({pickedColors:e,decodePickingColor:t}){let r=new Map;if(e){for(let n=0;n<e.length;n+=4)if(e[n+3]-1>=0){let i=e.slice(n,n+4),o=i.join(",");if(!r.has(o)){let a=t(i);a?r.set(o,{...a,color:i}):W.error("Picked non-existent layer. Is picking buffer corrupt?")()}}}return Array.from(r.values())}function bA({pickInfo:e,viewports:t,pixelRatio:r,x:n,y:s,z:i}){let o=t[0];t.length>1&&(o=bX(e?.pickedViewports||t,{x:n,y:s}));let a;if(o){let c=[n-o.x,s-o.y];i!==void 0&&(c[2]=i),a=o.unproject(c)}return{color:null,layer:null,viewport:o,index:-1,picked:!1,x:n,y:s,pixel:[n,s],coordinate:a,devicePixel:e&&"pickedX"in e?[e.pickedX,e.pickedY]:void 0,pixelRatio:r}}function ZC(e){let{pickInfo:t,lastPickedInfo:r,mode:n,layers:s}=e,{pickedColor:i,pickedLayer:o,pickedObjectIndex:a}=t,c=o?[o]:[];if(n==="hover"){let h=r.index,u=r.layerId,d=o?o.props.id:null;if(d!==u||a!==h){if(d!==u){let p=s.find(m=>m.props.id===u);p&&c.unshift(p)}r.layerId=d,r.index=a,r.info=null}}let l=bA(e),f=new Map;return f.set(null,l),c.forEach(h=>{let u={...l};h===o&&(u.color=i,u.index=a,u.picked=!0),u=TA({layer:h,info:u,mode:n});let d=u.layer;h===o&&n==="hover"&&(r.info=u),f.set(d.id,u),n==="hover"&&d.updateAutoHighlight(u)}),f}function TA({layer:e,info:t,mode:r}){for(;e&&t;){let n=t.layer||null;t.sourceLayer=n,t.layer=e,t=e.getPickingInfo({info:t,mode:r,sourceLayer:n}),e=e.parent}return t}function bX(e,t){for(let r=e.length-1;r>=0;r--){let n=e[r];if(n.containsPixel(t))return n}return e[0]}var yh=class{constructor(t){this._pickable=!0,this.device=t,this.pickLayersPass=new cn(t),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(t){"layerFilter"in t&&(this.layerFilter=t.layerFilter),"_pickable"in t&&(this._pickable=t._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.destroy(),this.depthFBO&&this.depthFBO.destroy()}pickObject(t){return this._pickClosestObject(t)}pickObjects(t){return this._pickVisibleObjects(t)}getLastPickedObject({x:t,y:r,layers:n,viewports:s},i=this.lastPickedInfo.info){let o=i&&i.layer&&i.layer.id,a=i&&i.viewport&&i.viewport.id,c=o?n.find(u=>u.id===o):null,l=a&&s.find(u=>u.id===a)||s[0],f=l&&l.unproject([t-l.x,r-l.y]);return{...i,...{x:t,y:r,viewport:l,coordinate:f,layer:c}}}_resizeBuffer(){if(!this.pickingFBO&&(this.pickingFBO=this.device.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth16unorm"}),this.device.isTextureFormatRenderable("rgba32float"))){let r=this.device.createFramebuffer({colorAttachments:["rgba32float"],depthStencilAttachment:"depth16unorm"});this.depthFBO=r}let{canvas:t}=this.device.getDefaultCanvasContext();this.pickingFBO?.resize({width:t.width,height:t.height}),this.depthFBO?.resize({width:t.width,height:t.height})}_getPickable(t){if(this._pickable===!1)return null;let r=t.filter(n=>this.pickLayersPass.shouldDrawLayer(n)&&!n.isComposite);return r.length?r:null}_pickClosestObject({layers:t,views:r,viewports:n,x:s,y:i,radius:o=0,depth:a=1,mode:c="query",unproject3D:l,onViewportActive:f,effects:h}){let u=this.device.canvasContext.cssToDeviceRatio(),d=this._getPickable(t);if(!d||n.length===0)return{result:[],emptyInfo:bA({viewports:n,x:s,y:i,pixelRatio:u})};this._resizeBuffer();let p=this.device.canvasContext.cssToDevicePixels([s,i],!0),m=[p.x+Math.floor(p.width/2),p.y+Math.floor(p.height/2)],g=Math.round(o*u),{width:x,height:A}=this.pickingFBO,_=this._getPickingRect({deviceX:m[0],deviceY:m[1],deviceRadius:g,deviceWidth:x,deviceHeight:A}),y={x:s-o,y:i-o,width:o*2+1,height:o*2+1},T,v=[],C=new Set;for(let w=0;w<a;w++){let E;if(_){let R=this._drawAndSample({layers:d,views:r,viewports:n,onViewportActive:f,deviceRect:_,cullRect:y,effects:h,pass:`picking:${c}`});E=$C({...R,deviceX:m[0],deviceY:m[1],deviceRadius:g,deviceRect:_})}else E={pickedColor:null,pickedObjectIndex:-1};let b;if(E.pickedLayer&&l&&this.depthFBO){let{pickedColors:R}=this._drawAndSample({layers:[E.pickedLayer],views:r,viewports:n,onViewportActive:f,deviceRect:{x:E.pickedX,y:E.pickedY,width:1,height:1},cullRect:y,effects:h,pass:`picking:${c}:z`},!0);R[3]&&(b=R[0])}E.pickedLayer&&w+1<a&&(C.add(E.pickedLayer),E.pickedLayer.disablePickingIndex(E.pickedObjectIndex)),T=ZC({pickInfo:E,lastPickedInfo:this.lastPickedInfo,mode:c,layers:d,viewports:n,x:s,y:i,z:b,pixelRatio:u});for(let R of T.values())R.layer&&v.push(R);if(!E.pickedColor)break}for(let w of C)w.restorePickingColors();return{result:v,emptyInfo:T.get(null)}}_pickVisibleObjects({layers:t,views:r,viewports:n,x:s,y:i,width:o=1,height:a=1,mode:c="query",maxObjects:l=null,onViewportActive:f,effects:h}){let u=this._getPickable(t);if(!u||n.length===0)return[];this._resizeBuffer();let d=this.device.canvasContext.cssToDeviceRatio(),p=this.device.canvasContext.cssToDevicePixels([s,i],!0),m=p.x,g=p.y+p.height,x=this.device.canvasContext.cssToDevicePixels([s+o,i+a],!0),A=x.x+x.width,_=x.y,y={x:m,y:_,width:A-m,height:g-_},T=this._drawAndSample({layers:u,views:r,viewports:n,onViewportActive:f,deviceRect:y,cullRect:{x:s,y:i,width:o,height:a},effects:h,pass:`picking:${c}`}),v=KC(T),C=new Map,w=[],E=Number.isFinite(l);for(let b=0;b<v.length&&!(E&&w.length>=l);b++){let R=v[b],k={color:R.pickedColor,layer:null,index:R.pickedObjectIndex,picked:!0,x:s,y:i,pixelRatio:d};k=TA({layer:R.pickedLayer,info:k,mode:c});let D=k.layer.id;C.has(D)||C.set(D,new Set);let P=C.get(D),j=k.object??k.index;P.has(j)||(P.add(j),w.push(k))}return w}_drawAndSample({layers:t,views:r,viewports:n,onViewportActive:s,deviceRect:i,cullRect:o,effects:a,pass:c},l=!1){let f=l?this.depthFBO:this.pickingFBO,h={layers:t,layerFilter:this.layerFilter,views:r,viewports:n,onViewportActive:s,pickingFBO:f,deviceRect:i,cullRect:o,effects:a,pass:c,pickZ:l,preRenderStats:{},isPicking:!0};for(let A of a)A.useInPicking&&(h.preRenderStats[A.id]=A.preRender(h));let{decodePickingColor:u}=this.pickLayersPass.render(h),{x:d,y:p,width:m,height:g}=i,x=new(l?Float32Array:Uint8Array)(m*g*4);return this.device.readPixelsToArrayWebGL(f,{sourceX:d,sourceY:p,sourceWidth:m,sourceHeight:g,target:x}),{pickedColors:x,decodePickingColor:u}}_getPickingRect({deviceX:t,deviceY:r,deviceRadius:n,deviceWidth:s,deviceHeight:i}){let o=Math.max(0,t-n),a=Math.max(0,r-n),c=Math.min(s,t+n+1)-o,l=Math.min(i,r+n+1)-a;return c<=0||l<=0?null:{x:o,y:a,width:c,height:l}}};var TX={"top-left":{top:0,left:0},"top-right":{top:0,right:0},"bottom-left":{bottom:0,left:0},"bottom-right":{bottom:0,right:0},fill:{top:0,left:0,bottom:0,right:0}},vX="top-left",JC="__root",sg=class{constructor({deck:t,parentElement:r}){this.defaultWidgets=[],this.widgets=[],this.resolvedWidgets=[],this.containers={},this.lastViewports={},this.deck=t,this.parentElement=r}getWidgets(){return this.resolvedWidgets}setProps(t){t.widgets&&!it(t.widgets,this.widgets,1)&&this._setWidgets(t.widgets)}finalize(){for(let t of this.getWidgets())this._remove(t);this.defaultWidgets.length=0,this.resolvedWidgets.length=0;for(let t in this.containers)this.containers[t].remove()}addDefault(t){this.defaultWidgets.find(r=>r.id===t.id)||(this._add(t),this.defaultWidgets.push(t),this._setWidgets(this.widgets))}_setWidgets(t){let r={};for(let n of this.resolvedWidgets)r[n.id]=n;this.resolvedWidgets.length=0;for(let n of this.defaultWidgets)r[n.id]=null,this.resolvedWidgets.push(n);for(let n of t){let s=r[n.id];s?s.viewId!==n.viewId||s.placement!==n.placement?(this._remove(s),this._add(n)):n!==s&&(s.setProps(n.props),n=s):this._add(n),r[n.id]=null,this.resolvedWidgets.push(n)}for(let n in r){let s=r[n];s&&this._remove(s)}this.widgets=t}_add(t){let{viewId:r=null,placement:n=vX}=t,s=t.onAdd({deck:this.deck,viewId:r});s&&this._getContainer(r,n).append(s),t._element=s}_remove(t){t.onRemove?.(),t._element&&t._element.remove(),t._element=void 0}_getContainer(t,r){let n=t||JC,s=this.containers[n];s||(s=document.createElement("div"),s.style.pointerEvents="none",s.style.position="absolute",s.style.overflow="hidden",this.parentElement?.append(s),this.containers[n]=s);let i=s.querySelector(`.${r}`);return i||(i=document.createElement("div"),i.className=r,i.style.position="absolute",i.style.zIndex="2",Object.assign(i.style,TX[r]),s.append(i)),i}_updateContainers(){let t=this.deck.width,r=this.deck.height;for(let n in this.containers){let s=this.lastViewports[n]||null,i=n===JC||s,o=this.containers[n];i?(o.style.display="block",o.style.left=`${s?s.x:0}px`,o.style.top=`${s?s.y:0}px`,o.style.width=`${s?s.width:t}px`,o.style.height=`${s?s.height:r}px`):o.style.display="none"}}onRedraw({viewports:t,layers:r}){let n=t.reduce((s,i)=>(s[i.id]=i,s),{});for(let s of this.getWidgets()){let{viewId:i}=s;if(i){let o=n[i];o&&(s.onViewportChange&&s.onViewportChange(o),s.onRedraw?.({viewports:[o],layers:r}))}else{if(s.onViewportChange)for(let o of t)s.onViewportChange(o);s.onRedraw?.({viewports:t,layers:r})}}this.lastViewports=n,this._updateContainers()}onHover(t,r){for(let n of this.getWidgets()){let{viewId:s}=n;(!s||s===t.viewport?.id)&&n.onHover?.(t,r)}}onEvent(t,r){let n=Yf[r.type];if(n)for(let s of this.getWidgets()){let{viewId:i}=s;(!i||i===t.viewport?.id)&&s[n]?.(t,r)}}};var EX={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"},Ah=class{constructor(){this.id="default-tooltip",this.placement="fill",this.props={},this.isVisible=!1}onAdd({deck:t}){let r=document.createElement("div");return r.className="deck-tooltip",Object.assign(r.style,EX),this.deck=t,this.element=r,r}onRemove(){this.deck=void 0,this.element=void 0}setProps(){}onViewportChange(t){this.isVisible&&t.id===this.lastViewport?.id&&t!==this.lastViewport&&this.setTooltip(null)}onHover(t){let{deck:r}=this,n=r&&r.props.getTooltip;if(!n)return;let s=n(t);this.lastViewport=t.viewport,this.setTooltip(s,t.x,t.y)}setTooltip(t,r,n){let s=this.element;if(s){if(typeof t=="string")s.innerText=t;else if(t)t.text&&(s.innerText=t.text),t.html&&(s.innerHTML=t.html),t.className&&(s.className=t.className);else{this.isVisible=!1,s.style.display="none";return}this.isVisible=!0,s.style.display="block",s.style.transform=`translate(${r}px, ${n}px)`,t&&typeof t=="object"&&"style"in t&&Object.assign(s.style,t.style)}}};var _i;(function(e){e[e.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",e[e.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",e[e.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN",e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_COLOR=768]="SRC_COLOR",e[e.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.DST_ALPHA=772]="DST_ALPHA",e[e.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",e[e.DST_COLOR=774]="DST_COLOR",e[e.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=32769]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA",e[e.FUNC_ADD=32774]="FUNC_ADD",e[e.FUNC_SUBTRACT=32778]="FUNC_SUBTRACT",e[e.FUNC_REVERSE_SUBTRACT=32779]="FUNC_REVERSE_SUBTRACT",e[e.BLEND_EQUATION=32777]="BLEND_EQUATION",e[e.BLEND_EQUATION_RGB=32777]="BLEND_EQUATION_RGB",e[e.BLEND_EQUATION_ALPHA=34877]="BLEND_EQUATION_ALPHA",e[e.BLEND_DST_RGB=32968]="BLEND_DST_RGB",e[e.BLEND_SRC_RGB=32969]="BLEND_SRC_RGB",e[e.BLEND_DST_ALPHA=32970]="BLEND_DST_ALPHA",e[e.BLEND_SRC_ALPHA=32971]="BLEND_SRC_ALPHA",e[e.BLEND_COLOR=32773]="BLEND_COLOR",e[e.ARRAY_BUFFER_BINDING=34964]="ARRAY_BUFFER_BINDING",e[e.ELEMENT_ARRAY_BUFFER_BINDING=34965]="ELEMENT_ARRAY_BUFFER_BINDING",e[e.LINE_WIDTH=2849]="LINE_WIDTH",e[e.ALIASED_POINT_SIZE_RANGE=33901]="ALIASED_POINT_SIZE_RANGE",e[e.ALIASED_LINE_WIDTH_RANGE=33902]="ALIASED_LINE_WIDTH_RANGE",e[e.CULL_FACE_MODE=2885]="CULL_FACE_MODE",e[e.FRONT_FACE=2886]="FRONT_FACE",e[e.DEPTH_RANGE=2928]="DEPTH_RANGE",e[e.DEPTH_WRITEMASK=2930]="DEPTH_WRITEMASK",e[e.DEPTH_CLEAR_VALUE=2931]="DEPTH_CLEAR_VALUE",e[e.DEPTH_FUNC=2932]="DEPTH_FUNC",e[e.STENCIL_CLEAR_VALUE=2961]="STENCIL_CLEAR_VALUE",e[e.STENCIL_FUNC=2962]="STENCIL_FUNC",e[e.STENCIL_FAIL=2964]="STENCIL_FAIL",e[e.STENCIL_PASS_DEPTH_FAIL=2965]="STENCIL_PASS_DEPTH_FAIL",e[e.STENCIL_PASS_DEPTH_PASS=2966]="STENCIL_PASS_DEPTH_PASS",e[e.STENCIL_REF=2967]="STENCIL_REF",e[e.STENCIL_VALUE_MASK=2963]="STENCIL_VALUE_MASK",e[e.STENCIL_WRITEMASK=2968]="STENCIL_WRITEMASK",e[e.STENCIL_BACK_FUNC=34816]="STENCIL_BACK_FUNC",e[e.STENCIL_BACK_FAIL=34817]="STENCIL_BACK_FAIL",e[e.STENCIL_BACK_PASS_DEPTH_FAIL=34818]="STENCIL_BACK_PASS_DEPTH_FAIL",e[e.STENCIL_BACK_PASS_DEPTH_PASS=34819]="STENCIL_BACK_PASS_DEPTH_PASS",e[e.STENCIL_BACK_REF=36003]="STENCIL_BACK_REF",e[e.STENCIL_BACK_VALUE_MASK=36004]="STENCIL_BACK_VALUE_MASK",e[e.STENCIL_BACK_WRITEMASK=36005]="STENCIL_BACK_WRITEMASK",e[e.VIEWPORT=2978]="VIEWPORT",e[e.SCISSOR_BOX=3088]="SCISSOR_BOX",e[e.COLOR_CLEAR_VALUE=3106]="COLOR_CLEAR_VALUE",e[e.COLOR_WRITEMASK=3107]="COLOR_WRITEMASK",e[e.UNPACK_ALIGNMENT=3317]="UNPACK_ALIGNMENT",e[e.PACK_ALIGNMENT=3333]="PACK_ALIGNMENT",e[e.MAX_TEXTURE_SIZE=3379]="MAX_TEXTURE_SIZE",e[e.MAX_VIEWPORT_DIMS=3386]="MAX_VIEWPORT_DIMS",e[e.SUBPIXEL_BITS=3408]="SUBPIXEL_BITS",e[e.RED_BITS=3410]="RED_BITS",e[e.GREEN_BITS=3411]="GREEN_BITS",e[e.BLUE_BITS=3412]="BLUE_BITS",e[e.ALPHA_BITS=3413]="ALPHA_BITS",e[e.DEPTH_BITS=3414]="DEPTH_BITS",e[e.STENCIL_BITS=3415]="STENCIL_BITS",e[e.POLYGON_OFFSET_UNITS=10752]="POLYGON_OFFSET_UNITS",e[e.POLYGON_OFFSET_FACTOR=32824]="POLYGON_OFFSET_FACTOR",e[e.TEXTURE_BINDING_2D=32873]="TEXTURE_BINDING_2D",e[e.SAMPLE_BUFFERS=32936]="SAMPLE_BUFFERS",e[e.SAMPLES=32937]="SAMPLES",e[e.SAMPLE_COVERAGE_VALUE=32938]="SAMPLE_COVERAGE_VALUE",e[e.SAMPLE_COVERAGE_INVERT=32939]="SAMPLE_COVERAGE_INVERT",e[e.COMPRESSED_TEXTURE_FORMATS=34467]="COMPRESSED_TEXTURE_FORMATS",e[e.VENDOR=7936]="VENDOR",e[e.RENDERER=7937]="RENDERER",e[e.VERSION=7938]="VERSION",e[e.IMPLEMENTATION_COLOR_READ_TYPE=35738]="IMPLEMENTATION_COLOR_READ_TYPE",e[e.IMPLEMENTATION_COLOR_READ_FORMAT=35739]="IMPLEMENTATION_COLOR_READ_FORMAT",e[e.BROWSER_DEFAULT_WEBGL=37444]="BROWSER_DEFAULT_WEBGL",e[e.STATIC_DRAW=35044]="STATIC_DRAW",e[e.STREAM_DRAW=35040]="STREAM_DRAW",e[e.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",e[e.ARRAY_BUFFER=34962]="ARRAY_BUFFER",e[e.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",e[e.BUFFER_SIZE=34660]="BUFFER_SIZE",e[e.BUFFER_USAGE=34661]="BUFFER_USAGE",e[e.CURRENT_VERTEX_ATTRIB=34342]="CURRENT_VERTEX_ATTRIB",e[e.VERTEX_ATTRIB_ARRAY_ENABLED=34338]="VERTEX_ATTRIB_ARRAY_ENABLED",e[e.VERTEX_ATTRIB_ARRAY_SIZE=34339]="VERTEX_ATTRIB_ARRAY_SIZE",e[e.VERTEX_ATTRIB_ARRAY_STRIDE=34340]="VERTEX_ATTRIB_ARRAY_STRIDE",e[e.VERTEX_ATTRIB_ARRAY_TYPE=34341]="VERTEX_ATTRIB_ARRAY_TYPE",e[e.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922]="VERTEX_ATTRIB_ARRAY_NORMALIZED",e[e.VERTEX_ATTRIB_ARRAY_POINTER=34373]="VERTEX_ATTRIB_ARRAY_POINTER",e[e.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975]="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",e[e.CULL_FACE=2884]="CULL_FACE",e[e.FRONT=1028]="FRONT",e[e.BACK=1029]="BACK",e[e.FRONT_AND_BACK=1032]="FRONT_AND_BACK",e[e.BLEND=3042]="BLEND",e[e.DEPTH_TEST=2929]="DEPTH_TEST",e[e.DITHER=3024]="DITHER",e[e.POLYGON_OFFSET_FILL=32823]="POLYGON_OFFSET_FILL",e[e.SAMPLE_ALPHA_TO_COVERAGE=32926]="SAMPLE_ALPHA_TO_COVERAGE",e[e.SAMPLE_COVERAGE=32928]="SAMPLE_COVERAGE",e[e.SCISSOR_TEST=3089]="SCISSOR_TEST",e[e.STENCIL_TEST=2960]="STENCIL_TEST",e[e.NO_ERROR=0]="NO_ERROR",e[e.INVALID_ENUM=1280]="INVALID_ENUM",e[e.INVALID_VALUE=1281]="INVALID_VALUE",e[e.INVALID_OPERATION=1282]="INVALID_OPERATION",e[e.OUT_OF_MEMORY=1285]="OUT_OF_MEMORY",e[e.CONTEXT_LOST_WEBGL=37442]="CONTEXT_LOST_WEBGL",e[e.CW=2304]="CW",e[e.CCW=2305]="CCW",e[e.DONT_CARE=4352]="DONT_CARE",e[e.FASTEST=4353]="FASTEST",e[e.NICEST=4354]="NICEST",e[e.GENERATE_MIPMAP_HINT=33170]="GENERATE_MIPMAP_HINT",e[e.BYTE=5120]="BYTE",e[e.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",e[e.SHORT=5122]="SHORT",e[e.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",e[e.INT=5124]="INT",e[e.UNSIGNED_INT=5125]="UNSIGNED_INT",e[e.FLOAT=5126]="FLOAT",e[e.DOUBLE=5130]="DOUBLE",e[e.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",e[e.ALPHA=6406]="ALPHA",e[e.RGB=6407]="RGB",e[e.RGBA=6408]="RGBA",e[e.LUMINANCE=6409]="LUMINANCE",e[e.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",e[e.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",e[e.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",e[e.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",e[e.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",e[e.VERTEX_SHADER=35633]="VERTEX_SHADER",e[e.COMPILE_STATUS=35713]="COMPILE_STATUS",e[e.DELETE_STATUS=35712]="DELETE_STATUS",e[e.LINK_STATUS=35714]="LINK_STATUS",e[e.VALIDATE_STATUS=35715]="VALIDATE_STATUS",e[e.ATTACHED_SHADERS=35717]="ATTACHED_SHADERS",e[e.ACTIVE_ATTRIBUTES=35721]="ACTIVE_ATTRIBUTES",e[e.ACTIVE_UNIFORMS=35718]="ACTIVE_UNIFORMS",e[e.MAX_VERTEX_ATTRIBS=34921]="MAX_VERTEX_ATTRIBS",e[e.MAX_VERTEX_UNIFORM_VECTORS=36347]="MAX_VERTEX_UNIFORM_VECTORS",e[e.MAX_VARYING_VECTORS=36348]="MAX_VARYING_VECTORS",e[e.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661]="MAX_COMBINED_TEXTURE_IMAGE_UNITS",e[e.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660]="MAX_VERTEX_TEXTURE_IMAGE_UNITS",e[e.MAX_TEXTURE_IMAGE_UNITS=34930]="MAX_TEXTURE_IMAGE_UNITS",e[e.MAX_FRAGMENT_UNIFORM_VECTORS=36349]="MAX_FRAGMENT_UNIFORM_VECTORS",e[e.SHADER_TYPE=35663]="SHADER_TYPE",e[e.SHADING_LANGUAGE_VERSION=35724]="SHADING_LANGUAGE_VERSION",e[e.CURRENT_PROGRAM=35725]="CURRENT_PROGRAM",e[e.NEVER=512]="NEVER",e[e.LESS=513]="LESS",e[e.EQUAL=514]="EQUAL",e[e.LEQUAL=515]="LEQUAL",e[e.GREATER=516]="GREATER",e[e.NOTEQUAL=517]="NOTEQUAL",e[e.GEQUAL=518]="GEQUAL",e[e.ALWAYS=519]="ALWAYS",e[e.KEEP=7680]="KEEP",e[e.REPLACE=7681]="REPLACE",e[e.INCR=7682]="INCR",e[e.DECR=7683]="DECR",e[e.INVERT=5386]="INVERT",e[e.INCR_WRAP=34055]="INCR_WRAP",e[e.DECR_WRAP=34056]="DECR_WRAP",e[e.NEAREST=9728]="NEAREST",e[e.LINEAR=9729]="LINEAR",e[e.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",e[e.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR",e[e.TEXTURE_MAG_FILTER=10240]="TEXTURE_MAG_FILTER",e[e.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",e[e.TEXTURE_WRAP_S=10242]="TEXTURE_WRAP_S",e[e.TEXTURE_WRAP_T=10243]="TEXTURE_WRAP_T",e[e.TEXTURE_2D=3553]="TEXTURE_2D",e[e.TEXTURE=5890]="TEXTURE",e[e.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",e[e.TEXTURE_BINDING_CUBE_MAP=34068]="TEXTURE_BINDING_CUBE_MAP",e[e.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",e[e.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",e[e.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",e[e.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",e[e.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",e[e.MAX_CUBE_MAP_TEXTURE_SIZE=34076]="MAX_CUBE_MAP_TEXTURE_SIZE",e[e.TEXTURE0=33984]="TEXTURE0",e[e.ACTIVE_TEXTURE=34016]="ACTIVE_TEXTURE",e[e.REPEAT=10497]="REPEAT",e[e.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",e[e.TEXTURE_WIDTH=4096]="TEXTURE_WIDTH",e[e.TEXTURE_HEIGHT=4097]="TEXTURE_HEIGHT",e[e.FLOAT_VEC2=35664]="FLOAT_VEC2",e[e.FLOAT_VEC3=35665]="FLOAT_VEC3",e[e.FLOAT_VEC4=35666]="FLOAT_VEC4",e[e.INT_VEC2=35667]="INT_VEC2",e[e.INT_VEC3=35668]="INT_VEC3",e[e.INT_VEC4=35669]="INT_VEC4",e[e.BOOL=35670]="BOOL",e[e.BOOL_VEC2=35671]="BOOL_VEC2",e[e.BOOL_VEC3=35672]="BOOL_VEC3",e[e.BOOL_VEC4=35673]="BOOL_VEC4",e[e.FLOAT_MAT2=35674]="FLOAT_MAT2",e[e.FLOAT_MAT3=35675]="FLOAT_MAT3",e[e.FLOAT_MAT4=35676]="FLOAT_MAT4",e[e.SAMPLER_2D=35678]="SAMPLER_2D",e[e.SAMPLER_CUBE=35680]="SAMPLER_CUBE",e[e.LOW_FLOAT=36336]="LOW_FLOAT",e[e.MEDIUM_FLOAT=36337]="MEDIUM_FLOAT",e[e.HIGH_FLOAT=36338]="HIGH_FLOAT",e[e.LOW_INT=36339]="LOW_INT",e[e.MEDIUM_INT=36340]="MEDIUM_INT",e[e.HIGH_INT=36341]="HIGH_INT",e[e.FRAMEBUFFER=36160]="FRAMEBUFFER",e[e.RENDERBUFFER=36161]="RENDERBUFFER",e[e.RGBA4=32854]="RGBA4",e[e.RGB5_A1=32855]="RGB5_A1",e[e.RGB565=36194]="RGB565",e[e.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",e[e.STENCIL_INDEX=6401]="STENCIL_INDEX",e[e.STENCIL_INDEX8=36168]="STENCIL_INDEX8",e[e.DEPTH_STENCIL=34041]="DEPTH_STENCIL",e[e.RENDERBUFFER_WIDTH=36162]="RENDERBUFFER_WIDTH",e[e.RENDERBUFFER_HEIGHT=36163]="RENDERBUFFER_HEIGHT",e[e.RENDERBUFFER_INTERNAL_FORMAT=36164]="RENDERBUFFER_INTERNAL_FORMAT",e[e.RENDERBUFFER_RED_SIZE=36176]="RENDERBUFFER_RED_SIZE",e[e.RENDERBUFFER_GREEN_SIZE=36177]="RENDERBUFFER_GREEN_SIZE",e[e.RENDERBUFFER_BLUE_SIZE=36178]="RENDERBUFFER_BLUE_SIZE",e[e.RENDERBUFFER_ALPHA_SIZE=36179]="RENDERBUFFER_ALPHA_SIZE",e[e.RENDERBUFFER_DEPTH_SIZE=36180]="RENDERBUFFER_DEPTH_SIZE",e[e.RENDERBUFFER_STENCIL_SIZE=36181]="RENDERBUFFER_STENCIL_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048]="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",e[e.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049]="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051]="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",e[e.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",e[e.DEPTH_ATTACHMENT=36096]="DEPTH_ATTACHMENT",e[e.STENCIL_ATTACHMENT=36128]="STENCIL_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=33306]="DEPTH_STENCIL_ATTACHMENT",e[e.NONE=0]="NONE",e[e.FRAMEBUFFER_COMPLETE=36053]="FRAMEBUFFER_COMPLETE",e[e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054]="FRAMEBUFFER_INCOMPLETE_ATTACHMENT",e[e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055]="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",e[e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057]="FRAMEBUFFER_INCOMPLETE_DIMENSIONS",e[e.FRAMEBUFFER_UNSUPPORTED=36061]="FRAMEBUFFER_UNSUPPORTED",e[e.FRAMEBUFFER_BINDING=36006]="FRAMEBUFFER_BINDING",e[e.RENDERBUFFER_BINDING=36007]="RENDERBUFFER_BINDING",e[e.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",e[e.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER",e[e.MAX_RENDERBUFFER_SIZE=34024]="MAX_RENDERBUFFER_SIZE",e[e.INVALID_FRAMEBUFFER_OPERATION=1286]="INVALID_FRAMEBUFFER_OPERATION",e[e.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL",e[e.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441]="UNPACK_PREMULTIPLY_ALPHA_WEBGL",e[e.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443]="UNPACK_COLORSPACE_CONVERSION_WEBGL",e[e.READ_BUFFER=3074]="READ_BUFFER",e[e.UNPACK_ROW_LENGTH=3314]="UNPACK_ROW_LENGTH",e[e.UNPACK_SKIP_ROWS=3315]="UNPACK_SKIP_ROWS",e[e.UNPACK_SKIP_PIXELS=3316]="UNPACK_SKIP_PIXELS",e[e.PACK_ROW_LENGTH=3330]="PACK_ROW_LENGTH",e[e.PACK_SKIP_ROWS=3331]="PACK_SKIP_ROWS",e[e.PACK_SKIP_PIXELS=3332]="PACK_SKIP_PIXELS",e[e.TEXTURE_BINDING_3D=32874]="TEXTURE_BINDING_3D",e[e.UNPACK_SKIP_IMAGES=32877]="UNPACK_SKIP_IMAGES",e[e.UNPACK_IMAGE_HEIGHT=32878]="UNPACK_IMAGE_HEIGHT",e[e.MAX_3D_TEXTURE_SIZE=32883]="MAX_3D_TEXTURE_SIZE",e[e.MAX_ELEMENTS_VERTICES=33e3]="MAX_ELEMENTS_VERTICES",e[e.MAX_ELEMENTS_INDICES=33001]="MAX_ELEMENTS_INDICES",e[e.MAX_TEXTURE_LOD_BIAS=34045]="MAX_TEXTURE_LOD_BIAS",e[e.MAX_FRAGMENT_UNIFORM_COMPONENTS=35657]="MAX_FRAGMENT_UNIFORM_COMPONENTS",e[e.MAX_VERTEX_UNIFORM_COMPONENTS=35658]="MAX_VERTEX_UNIFORM_COMPONENTS",e[e.MAX_ARRAY_TEXTURE_LAYERS=35071]="MAX_ARRAY_TEXTURE_LAYERS",e[e.MIN_PROGRAM_TEXEL_OFFSET=35076]="MIN_PROGRAM_TEXEL_OFFSET",e[e.MAX_PROGRAM_TEXEL_OFFSET=35077]="MAX_PROGRAM_TEXEL_OFFSET",e[e.MAX_VARYING_COMPONENTS=35659]="MAX_VARYING_COMPONENTS",e[e.FRAGMENT_SHADER_DERIVATIVE_HINT=35723]="FRAGMENT_SHADER_DERIVATIVE_HINT",e[e.RASTERIZER_DISCARD=35977]="RASTERIZER_DISCARD",e[e.VERTEX_ARRAY_BINDING=34229]="VERTEX_ARRAY_BINDING",e[e.MAX_VERTEX_OUTPUT_COMPONENTS=37154]="MAX_VERTEX_OUTPUT_COMPONENTS",e[e.MAX_FRAGMENT_INPUT_COMPONENTS=37157]="MAX_FRAGMENT_INPUT_COMPONENTS",e[e.MAX_SERVER_WAIT_TIMEOUT=37137]="MAX_SERVER_WAIT_TIMEOUT",e[e.MAX_ELEMENT_INDEX=36203]="MAX_ELEMENT_INDEX",e[e.RED=6403]="RED",e[e.RGB8=32849]="RGB8",e[e.RGBA8=32856]="RGBA8",e[e.RGB10_A2=32857]="RGB10_A2",e[e.TEXTURE_3D=32879]="TEXTURE_3D",e[e.TEXTURE_WRAP_R=32882]="TEXTURE_WRAP_R",e[e.TEXTURE_MIN_LOD=33082]="TEXTURE_MIN_LOD",e[e.TEXTURE_MAX_LOD=33083]="TEXTURE_MAX_LOD",e[e.TEXTURE_BASE_LEVEL=33084]="TEXTURE_BASE_LEVEL",e[e.TEXTURE_MAX_LEVEL=33085]="TEXTURE_MAX_LEVEL",e[e.TEXTURE_COMPARE_MODE=34892]="TEXTURE_COMPARE_MODE",e[e.TEXTURE_COMPARE_FUNC=34893]="TEXTURE_COMPARE_FUNC",e[e.SRGB=35904]="SRGB",e[e.SRGB8=35905]="SRGB8",e[e.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",e[e.COMPARE_REF_TO_TEXTURE=34894]="COMPARE_REF_TO_TEXTURE",e[e.RGBA32F=34836]="RGBA32F",e[e.RGB32F=34837]="RGB32F",e[e.RGBA16F=34842]="RGBA16F",e[e.RGB16F=34843]="RGB16F",e[e.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",e[e.TEXTURE_BINDING_2D_ARRAY=35869]="TEXTURE_BINDING_2D_ARRAY",e[e.R11F_G11F_B10F=35898]="R11F_G11F_B10F",e[e.RGB9_E5=35901]="RGB9_E5",e[e.RGBA32UI=36208]="RGBA32UI",e[e.RGB32UI=36209]="RGB32UI",e[e.RGBA16UI=36214]="RGBA16UI",e[e.RGB16UI=36215]="RGB16UI",e[e.RGBA8UI=36220]="RGBA8UI",e[e.RGB8UI=36221]="RGB8UI",e[e.RGBA32I=36226]="RGBA32I",e[e.RGB32I=36227]="RGB32I",e[e.RGBA16I=36232]="RGBA16I",e[e.RGB16I=36233]="RGB16I",e[e.RGBA8I=36238]="RGBA8I",e[e.RGB8I=36239]="RGB8I",e[e.RED_INTEGER=36244]="RED_INTEGER",e[e.RGB_INTEGER=36248]="RGB_INTEGER",e[e.RGBA_INTEGER=36249]="RGBA_INTEGER",e[e.R8=33321]="R8",e[e.RG8=33323]="RG8",e[e.R16F=33325]="R16F",e[e.R32F=33326]="R32F",e[e.RG16F=33327]="RG16F",e[e.RG32F=33328]="RG32F",e[e.R8I=33329]="R8I",e[e.R8UI=33330]="R8UI",e[e.R16I=33331]="R16I",e[e.R16UI=33332]="R16UI",e[e.R32I=33333]="R32I",e[e.R32UI=33334]="R32UI",e[e.RG8I=33335]="RG8I",e[e.RG8UI=33336]="RG8UI",e[e.RG16I=33337]="RG16I",e[e.RG16UI=33338]="RG16UI",e[e.RG32I=33339]="RG32I",e[e.RG32UI=33340]="RG32UI",e[e.R8_SNORM=36756]="R8_SNORM",e[e.RG8_SNORM=36757]="RG8_SNORM",e[e.RGB8_SNORM=36758]="RGB8_SNORM",e[e.RGBA8_SNORM=36759]="RGBA8_SNORM",e[e.RGB10_A2UI=36975]="RGB10_A2UI",e[e.TEXTURE_IMMUTABLE_FORMAT=37167]="TEXTURE_IMMUTABLE_FORMAT",e[e.TEXTURE_IMMUTABLE_LEVELS=33503]="TEXTURE_IMMUTABLE_LEVELS",e[e.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",e[e.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",e[e.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",e[e.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",e[e.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",e[e.HALF_FLOAT=5131]="HALF_FLOAT",e[e.RG=33319]="RG",e[e.RG_INTEGER=33320]="RG_INTEGER",e[e.INT_2_10_10_10_REV=36255]="INT_2_10_10_10_REV",e[e.CURRENT_QUERY=34917]="CURRENT_QUERY",e[e.QUERY_RESULT=34918]="QUERY_RESULT",e[e.QUERY_RESULT_AVAILABLE=34919]="QUERY_RESULT_AVAILABLE",e[e.ANY_SAMPLES_PASSED=35887]="ANY_SAMPLES_PASSED",e[e.ANY_SAMPLES_PASSED_CONSERVATIVE=36202]="ANY_SAMPLES_PASSED_CONSERVATIVE",e[e.MAX_DRAW_BUFFERS=34852]="MAX_DRAW_BUFFERS",e[e.DRAW_BUFFER0=34853]="DRAW_BUFFER0",e[e.DRAW_BUFFER1=34854]="DRAW_BUFFER1",e[e.DRAW_BUFFER2=34855]="DRAW_BUFFER2",e[e.DRAW_BUFFER3=34856]="DRAW_BUFFER3",e[e.DRAW_BUFFER4=34857]="DRAW_BUFFER4",e[e.DRAW_BUFFER5=34858]="DRAW_BUFFER5",e[e.DRAW_BUFFER6=34859]="DRAW_BUFFER6",e[e.DRAW_BUFFER7=34860]="DRAW_BUFFER7",e[e.DRAW_BUFFER8=34861]="DRAW_BUFFER8",e[e.DRAW_BUFFER9=34862]="DRAW_BUFFER9",e[e.DRAW_BUFFER10=34863]="DRAW_BUFFER10",e[e.DRAW_BUFFER11=34864]="DRAW_BUFFER11",e[e.DRAW_BUFFER12=34865]="DRAW_BUFFER12",e[e.DRAW_BUFFER13=34866]="DRAW_BUFFER13",e[e.DRAW_BUFFER14=34867]="DRAW_BUFFER14",e[e.DRAW_BUFFER15=34868]="DRAW_BUFFER15",e[e.MAX_COLOR_ATTACHMENTS=36063]="MAX_COLOR_ATTACHMENTS",e[e.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",e[e.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",e[e.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",e[e.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",e[e.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",e[e.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",e[e.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",e[e.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",e[e.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",e[e.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",e[e.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",e[e.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",e[e.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",e[e.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",e[e.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15",e[e.SAMPLER_3D=35679]="SAMPLER_3D",e[e.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",e[e.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",e[e.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",e[e.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",e[e.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",e[e.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",e[e.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",e[e.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",e[e.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",e[e.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",e[e.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",e[e.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY",e[e.MAX_SAMPLES=36183]="MAX_SAMPLES",e[e.SAMPLER_BINDING=35097]="SAMPLER_BINDING",e[e.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",e[e.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",e[e.PIXEL_PACK_BUFFER_BINDING=35053]="PIXEL_PACK_BUFFER_BINDING",e[e.PIXEL_UNPACK_BUFFER_BINDING=35055]="PIXEL_UNPACK_BUFFER_BINDING",e[e.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",e[e.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",e[e.COPY_READ_BUFFER_BINDING=36662]="COPY_READ_BUFFER_BINDING",e[e.COPY_WRITE_BUFFER_BINDING=36663]="COPY_WRITE_BUFFER_BINDING",e[e.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",e[e.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",e[e.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",e[e.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",e[e.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",e[e.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",e[e.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",e[e.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",e[e.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",e[e.UNSIGNED_NORMALIZED=35863]="UNSIGNED_NORMALIZED",e[e.SIGNED_NORMALIZED=36764]="SIGNED_NORMALIZED",e[e.VERTEX_ATTRIB_ARRAY_INTEGER=35069]="VERTEX_ATTRIB_ARRAY_INTEGER",e[e.VERTEX_ATTRIB_ARRAY_DIVISOR=35070]="VERTEX_ATTRIB_ARRAY_DIVISOR",e[e.TRANSFORM_FEEDBACK_BUFFER_MODE=35967]="TRANSFORM_FEEDBACK_BUFFER_MODE",e[e.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=35968]="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",e[e.TRANSFORM_FEEDBACK_VARYINGS=35971]="TRANSFORM_FEEDBACK_VARYINGS",e[e.TRANSFORM_FEEDBACK_BUFFER_START=35972]="TRANSFORM_FEEDBACK_BUFFER_START",e[e.TRANSFORM_FEEDBACK_BUFFER_SIZE=35973]="TRANSFORM_FEEDBACK_BUFFER_SIZE",e[e.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=35976]="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",e[e.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=35978]="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",e[e.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=35979]="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",e[e.INTERLEAVED_ATTRIBS=35980]="INTERLEAVED_ATTRIBS",e[e.SEPARATE_ATTRIBS=35981]="SEPARATE_ATTRIBS",e[e.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER",e[e.TRANSFORM_FEEDBACK_BUFFER_BINDING=35983]="TRANSFORM_FEEDBACK_BUFFER_BINDING",e[e.TRANSFORM_FEEDBACK=36386]="TRANSFORM_FEEDBACK",e[e.TRANSFORM_FEEDBACK_PAUSED=36387]="TRANSFORM_FEEDBACK_PAUSED",e[e.TRANSFORM_FEEDBACK_ACTIVE=36388]="TRANSFORM_FEEDBACK_ACTIVE",e[e.TRANSFORM_FEEDBACK_BINDING=36389]="TRANSFORM_FEEDBACK_BINDING",e[e.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=33296]="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",e[e.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",e[e.FRAMEBUFFER_ATTACHMENT_RED_SIZE=33298]="FRAMEBUFFER_ATTACHMENT_RED_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=33299]="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=33300]="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=33301]="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=33302]="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",e[e.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=33303]="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",e[e.FRAMEBUFFER_DEFAULT=33304]="FRAMEBUFFER_DEFAULT",e[e.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",e[e.DRAW_FRAMEBUFFER_BINDING=36006]="DRAW_FRAMEBUFFER_BINDING",e[e.READ_FRAMEBUFFER_BINDING=36010]="READ_FRAMEBUFFER_BINDING",e[e.RENDERBUFFER_SAMPLES=36011]="RENDERBUFFER_SAMPLES",e[e.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=36052]="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",e[e.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=36182]="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",e[e.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",e[e.UNIFORM_BUFFER_BINDING=35368]="UNIFORM_BUFFER_BINDING",e[e.UNIFORM_BUFFER_START=35369]="UNIFORM_BUFFER_START",e[e.UNIFORM_BUFFER_SIZE=35370]="UNIFORM_BUFFER_SIZE",e[e.MAX_VERTEX_UNIFORM_BLOCKS=35371]="MAX_VERTEX_UNIFORM_BLOCKS",e[e.MAX_FRAGMENT_UNIFORM_BLOCKS=35373]="MAX_FRAGMENT_UNIFORM_BLOCKS",e[e.MAX_COMBINED_UNIFORM_BLOCKS=35374]="MAX_COMBINED_UNIFORM_BLOCKS",e[e.MAX_UNIFORM_BUFFER_BINDINGS=35375]="MAX_UNIFORM_BUFFER_BINDINGS",e[e.MAX_UNIFORM_BLOCK_SIZE=35376]="MAX_UNIFORM_BLOCK_SIZE",e[e.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=35377]="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",e[e.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=35379]="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",e[e.UNIFORM_BUFFER_OFFSET_ALIGNMENT=35380]="UNIFORM_BUFFER_OFFSET_ALIGNMENT",e[e.ACTIVE_UNIFORM_BLOCKS=35382]="ACTIVE_UNIFORM_BLOCKS",e[e.UNIFORM_TYPE=35383]="UNIFORM_TYPE",e[e.UNIFORM_SIZE=35384]="UNIFORM_SIZE",e[e.UNIFORM_BLOCK_INDEX=35386]="UNIFORM_BLOCK_INDEX",e[e.UNIFORM_OFFSET=35387]="UNIFORM_OFFSET",e[e.UNIFORM_ARRAY_STRIDE=35388]="UNIFORM_ARRAY_STRIDE",e[e.UNIFORM_MATRIX_STRIDE=35389]="UNIFORM_MATRIX_STRIDE",e[e.UNIFORM_IS_ROW_MAJOR=35390]="UNIFORM_IS_ROW_MAJOR",e[e.UNIFORM_BLOCK_BINDING=35391]="UNIFORM_BLOCK_BINDING",e[e.UNIFORM_BLOCK_DATA_SIZE=35392]="UNIFORM_BLOCK_DATA_SIZE",e[e.UNIFORM_BLOCK_ACTIVE_UNIFORMS=35394]="UNIFORM_BLOCK_ACTIVE_UNIFORMS",e[e.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=35395]="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",e[e.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=35396]="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",e[e.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=35398]="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",e[e.OBJECT_TYPE=37138]="OBJECT_TYPE",e[e.SYNC_CONDITION=37139]="SYNC_CONDITION",e[e.SYNC_STATUS=37140]="SYNC_STATUS",e[e.SYNC_FLAGS=37141]="SYNC_FLAGS",e[e.SYNC_FENCE=37142]="SYNC_FENCE",e[e.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE",e[e.UNSIGNALED=37144]="UNSIGNALED",e[e.SIGNALED=37145]="SIGNALED",e[e.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",e[e.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",e[e.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",e[e.WAIT_FAILED=37149]="WAIT_FAILED",e[e.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT",e[e.COLOR=6144]="COLOR",e[e.DEPTH=6145]="DEPTH",e[e.STENCIL=6146]="STENCIL",e[e.MIN=32775]="MIN",e[e.MAX=32776]="MAX",e[e.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",e[e.STREAM_READ=35041]="STREAM_READ",e[e.STREAM_COPY=35042]="STREAM_COPY",e[e.STATIC_READ=35045]="STATIC_READ",e[e.STATIC_COPY=35046]="STATIC_COPY",e[e.DYNAMIC_READ=35049]="DYNAMIC_READ",e[e.DYNAMIC_COPY=35050]="DYNAMIC_COPY",e[e.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",e[e.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8",e[e.INVALID_INDEX=4294967295]="INVALID_INDEX",e[e.TIMEOUT_IGNORED=-1]="TIMEOUT_IGNORED",e[e.MAX_CLIENT_WAIT_TIMEOUT_WEBGL=37447]="MAX_CLIENT_WAIT_TIMEOUT_WEBGL",e[e.UNMASKED_VENDOR_WEBGL=37445]="UNMASKED_VENDOR_WEBGL",e[e.UNMASKED_RENDERER_WEBGL=37446]="UNMASKED_RENDERER_WEBGL",e[e.MAX_TEXTURE_MAX_ANISOTROPY_EXT=34047]="MAX_TEXTURE_MAX_ANISOTROPY_EXT",e[e.TEXTURE_MAX_ANISOTROPY_EXT=34046]="TEXTURE_MAX_ANISOTROPY_EXT",e[e.R16_EXT=33322]="R16_EXT",e[e.RG16_EXT=33324]="RG16_EXT",e[e.RGB16_EXT=32852]="RGB16_EXT",e[e.RGBA16_EXT=32859]="RGBA16_EXT",e[e.R16_SNORM_EXT=36760]="R16_SNORM_EXT",e[e.RG16_SNORM_EXT=36761]="RG16_SNORM_EXT",e[e.RGB16_SNORM_EXT=36762]="RGB16_SNORM_EXT",e[e.RGBA16_SNORM_EXT=36763]="RGBA16_SNORM_EXT",e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",e[e.COMPRESSED_RED_RGTC1_EXT=36283]="COMPRESSED_RED_RGTC1_EXT",e[e.COMPRESSED_SIGNED_RED_RGTC1_EXT=36284]="COMPRESSED_SIGNED_RED_RGTC1_EXT",e[e.COMPRESSED_RED_GREEN_RGTC2_EXT=36285]="COMPRESSED_RED_GREEN_RGTC2_EXT",e[e.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT=36286]="COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT",e[e.COMPRESSED_RGBA_BPTC_UNORM_EXT=36492]="COMPRESSED_RGBA_BPTC_UNORM_EXT",e[e.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT=36493]="COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT",e[e.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT=36494]="COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT",e[e.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT=36495]="COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37493]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ETC2=37494]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37495]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37496]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37497]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",e[e.COMPRESSED_RGB_ATC_WEBGL=35986]="COMPRESSED_RGB_ATC_WEBGL",e[e.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL=35986]="COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL",e[e.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL=34798]="COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL",e[e.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",e[e.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",e[e.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",e[e.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR",e[e.QUERY_COUNTER_BITS_EXT=34916]="QUERY_COUNTER_BITS_EXT",e[e.CURRENT_QUERY_EXT=34917]="CURRENT_QUERY_EXT",e[e.QUERY_RESULT_EXT=34918]="QUERY_RESULT_EXT",e[e.QUERY_RESULT_AVAILABLE_EXT=34919]="QUERY_RESULT_AVAILABLE_EXT",e[e.TIME_ELAPSED_EXT=35007]="TIME_ELAPSED_EXT",e[e.TIMESTAMP_EXT=36392]="TIMESTAMP_EXT",e[e.GPU_DISJOINT_EXT=36795]="GPU_DISJOINT_EXT",e[e.COMPLETION_STATUS_KHR=37297]="COMPLETION_STATUS_KHR",e[e.DEPTH_CLAMP_EXT=34383]="DEPTH_CLAMP_EXT",e[e.FIRST_VERTEX_CONVENTION_WEBGL=36429]="FIRST_VERTEX_CONVENTION_WEBGL",e[e.LAST_VERTEX_CONVENTION_WEBGL=36430]="LAST_VERTEX_CONVENTION_WEBGL",e[e.PROVOKING_VERTEX_WEBL=36431]="PROVOKING_VERTEX_WEBL",e[e.POLYGON_MODE_WEBGL=2880]="POLYGON_MODE_WEBGL",e[e.POLYGON_OFFSET_LINE_WEBGL=10754]="POLYGON_OFFSET_LINE_WEBGL",e[e.LINE_WEBGL=6913]="LINE_WEBGL",e[e.FILL_WEBGL=6914]="FILL_WEBGL",e[e.MAX_CLIP_DISTANCES_WEBGL=3378]="MAX_CLIP_DISTANCES_WEBGL",e[e.MAX_CULL_DISTANCES_WEBGL=33529]="MAX_CULL_DISTANCES_WEBGL",e[e.MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL=33530]="MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL",e[e.CLIP_DISTANCE0_WEBGL=12288]="CLIP_DISTANCE0_WEBGL",e[e.CLIP_DISTANCE1_WEBGL=12289]="CLIP_DISTANCE1_WEBGL",e[e.CLIP_DISTANCE2_WEBGL=12290]="CLIP_DISTANCE2_WEBGL",e[e.CLIP_DISTANCE3_WEBGL=12291]="CLIP_DISTANCE3_WEBGL",e[e.CLIP_DISTANCE4_WEBGL=12292]="CLIP_DISTANCE4_WEBGL",e[e.CLIP_DISTANCE5_WEBGL=12293]="CLIP_DISTANCE5_WEBGL",e[e.CLIP_DISTANCE6_WEBGL=12294]="CLIP_DISTANCE6_WEBGL",e[e.CLIP_DISTANCE7_WEBGL=12295]="CLIP_DISTANCE7_WEBGL",e[e.POLYGON_OFFSET_CLAMP_EXT=36379]="POLYGON_OFFSET_CLAMP_EXT",e[e.LOWER_LEFT_EXT=36001]="LOWER_LEFT_EXT",e[e.UPPER_LEFT_EXT=36002]="UPPER_LEFT_EXT",e[e.NEGATIVE_ONE_TO_ONE_EXT=37726]="NEGATIVE_ONE_TO_ONE_EXT",e[e.ZERO_TO_ONE_EXT=37727]="ZERO_TO_ONE_EXT",e[e.CLIP_ORIGIN_EXT=37724]="CLIP_ORIGIN_EXT",e[e.CLIP_DEPTH_MODE_EXT=37725]="CLIP_DEPTH_MODE_EXT",e[e.SRC1_COLOR_WEBGL=35065]="SRC1_COLOR_WEBGL",e[e.SRC1_ALPHA_WEBGL=34185]="SRC1_ALPHA_WEBGL",e[e.ONE_MINUS_SRC1_COLOR_WEBGL=35066]="ONE_MINUS_SRC1_COLOR_WEBGL",e[e.ONE_MINUS_SRC1_ALPHA_WEBGL=35067]="ONE_MINUS_SRC1_ALPHA_WEBGL",e[e.MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL=35068]="MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL",e[e.MIRROR_CLAMP_TO_EDGE_EXT=34627]="MIRROR_CLAMP_TO_EDGE_EXT"})(_i||(_i={}));var Th={[3042]:!1,[32773]:new Float32Array([0,0,0,0]),[32777]:32774,[34877]:32774,[32969]:1,[32968]:0,[32971]:1,[32970]:0,[3106]:new Float32Array([0,0,0,0]),[3107]:[!0,!0,!0,!0],[2884]:!1,[2885]:1029,[2929]:!1,[2931]:1,[2932]:513,[2928]:new Float32Array([0,1]),[2930]:!0,[3024]:!0,[35725]:null,[36006]:null,[36007]:null,[34229]:null,[34964]:null,[2886]:2305,[33170]:4352,[2849]:1,[32823]:!1,[32824]:0,[10752]:0,[32926]:!1,[32928]:!1,[32938]:1,[32939]:!1,[3089]:!1,[3088]:new Int32Array([0,0,1024,1024]),[2960]:!1,[2961]:0,[2968]:4294967295,[36005]:4294967295,[2962]:519,[2967]:0,[2963]:4294967295,[34816]:519,[36003]:0,[36004]:4294967295,[2964]:7680,[2965]:7680,[2966]:7680,[34817]:7680,[34818]:7680,[34819]:7680,[2978]:[0,0,1024,1024],[36389]:null,[36662]:null,[36663]:null,[35053]:null,[35055]:null,[35723]:4352,[36010]:null,[35977]:!1,[3333]:4,[3317]:4,[37440]:!1,[37441]:!1,[37443]:37444,[3330]:0,[3332]:0,[3331]:0,[3314]:0,[32878]:0,[3316]:0,[3315]:0,[32877]:0},_e=(e,t,r)=>t?e.enable(r):e.disable(r),QC=(e,t,r)=>e.hint(r,t),Ir=(e,t,r)=>e.pixelStorei(r,t),tP=(e,t,r)=>{let n=r===36006?36009:36008;return e.bindFramebuffer(n,t)},bh=(e,t,r)=>{let s={[34964]:34962,[36662]:36662,[36663]:36663,[35053]:35051,[35055]:35052}[r];e.bindBuffer(s,t)};function vA(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}var eP={[3042]:_e,[32773]:(e,t)=>e.blendColor(...t),[32777]:"blendEquation",[34877]:"blendEquation",[32969]:"blendFunc",[32968]:"blendFunc",[32971]:"blendFunc",[32970]:"blendFunc",[3106]:(e,t)=>e.clearColor(...t),[3107]:(e,t)=>e.colorMask(...t),[2884]:_e,[2885]:(e,t)=>e.cullFace(t),[2929]:_e,[2931]:(e,t)=>e.clearDepth(t),[2932]:(e,t)=>e.depthFunc(t),[2928]:(e,t)=>e.depthRange(...t),[2930]:(e,t)=>e.depthMask(t),[3024]:_e,[35723]:QC,[35725]:(e,t)=>e.useProgram(t),[36007]:(e,t)=>e.bindRenderbuffer(36161,t),[36389]:(e,t)=>e.bindTransformFeedback?.(36386,t),[34229]:(e,t)=>e.bindVertexArray(t),[36006]:tP,[36010]:tP,[34964]:bh,[36662]:bh,[36663]:bh,[35053]:bh,[35055]:bh,[2886]:(e,t)=>e.frontFace(t),[33170]:QC,[2849]:(e,t)=>e.lineWidth(t),[32823]:_e,[32824]:"polygonOffset",[10752]:"polygonOffset",[35977]:_e,[32926]:_e,[32928]:_e,[32938]:"sampleCoverage",[32939]:"sampleCoverage",[3089]:_e,[3088]:(e,t)=>e.scissor(...t),[2960]:_e,[2961]:(e,t)=>e.clearStencil(t),[2968]:(e,t)=>e.stencilMaskSeparate(1028,t),[36005]:(e,t)=>e.stencilMaskSeparate(1029,t),[2962]:"stencilFuncFront",[2967]:"stencilFuncFront",[2963]:"stencilFuncFront",[34816]:"stencilFuncBack",[36003]:"stencilFuncBack",[36004]:"stencilFuncBack",[2964]:"stencilOpFront",[2965]:"stencilOpFront",[2966]:"stencilOpFront",[34817]:"stencilOpBack",[34818]:"stencilOpBack",[34819]:"stencilOpBack",[2978]:(e,t)=>e.viewport(...t),[34383]:_e,[10754]:_e,[12288]:_e,[12289]:_e,[12290]:_e,[12291]:_e,[12292]:_e,[12293]:_e,[12294]:_e,[12295]:_e,[3333]:Ir,[3317]:Ir,[37440]:Ir,[37441]:Ir,[37443]:Ir,[3330]:Ir,[3332]:Ir,[3331]:Ir,[3314]:Ir,[32878]:Ir,[3316]:Ir,[3315]:Ir,[32877]:Ir,framebuffer:(e,t)=>{let r=t&&"handle"in t?t.handle:t;return e.bindFramebuffer(36160,r)},blend:(e,t)=>t?e.enable(3042):e.disable(3042),blendColor:(e,t)=>e.blendColor(...t),blendEquation:(e,t)=>{let r=typeof t=="number"?[t,t]:t;e.blendEquationSeparate(...r)},blendFunc:(e,t)=>{let r=t?.length===2?[...t,...t]:t;e.blendFuncSeparate(...r)},clearColor:(e,t)=>e.clearColor(...t),clearDepth:(e,t)=>e.clearDepth(t),clearStencil:(e,t)=>e.clearStencil(t),colorMask:(e,t)=>e.colorMask(...t),cull:(e,t)=>t?e.enable(2884):e.disable(2884),cullFace:(e,t)=>e.cullFace(t),depthTest:(e,t)=>t?e.enable(2929):e.disable(2929),depthFunc:(e,t)=>e.depthFunc(t),depthMask:(e,t)=>e.depthMask(t),depthRange:(e,t)=>e.depthRange(...t),dither:(e,t)=>t?e.enable(3024):e.disable(3024),derivativeHint:(e,t)=>{e.hint(35723,t)},frontFace:(e,t)=>e.frontFace(t),mipmapHint:(e,t)=>e.hint(33170,t),lineWidth:(e,t)=>e.lineWidth(t),polygonOffsetFill:(e,t)=>t?e.enable(32823):e.disable(32823),polygonOffset:(e,t)=>e.polygonOffset(...t),sampleCoverage:(e,t)=>e.sampleCoverage(t[0],t[1]||!1),scissorTest:(e,t)=>t?e.enable(3089):e.disable(3089),scissor:(e,t)=>e.scissor(...t),stencilTest:(e,t)=>t?e.enable(2960):e.disable(2960),stencilMask:(e,t)=>{t=vA(t)?t:[t,t];let[r,n]=t;e.stencilMaskSeparate(1028,r),e.stencilMaskSeparate(1029,n)},stencilFunc:(e,t)=>{t=vA(t)&&t.length===3?[...t,...t]:t;let[r,n,s,i,o,a]=t;e.stencilFuncSeparate(1028,r,n,s),e.stencilFuncSeparate(1029,i,o,a)},stencilOp:(e,t)=>{t=vA(t)&&t.length===3?[...t,...t]:t;let[r,n,s,i,o,a]=t;e.stencilOpSeparate(1028,r,n,s),e.stencilOpSeparate(1029,i,o,a)},viewport:(e,t)=>e.viewport(...t)};function se(e,t,r){return t[e]!==void 0?t[e]:r[e]}var rP={blendEquation:(e,t,r)=>e.blendEquationSeparate(se(32777,t,r),se(34877,t,r)),blendFunc:(e,t,r)=>e.blendFuncSeparate(se(32969,t,r),se(32968,t,r),se(32971,t,r),se(32970,t,r)),polygonOffset:(e,t,r)=>e.polygonOffset(se(32824,t,r),se(10752,t,r)),sampleCoverage:(e,t,r)=>e.sampleCoverage(se(32938,t,r),se(32939,t,r)),stencilFuncFront:(e,t,r)=>e.stencilFuncSeparate(1028,se(2962,t,r),se(2967,t,r),se(2963,t,r)),stencilFuncBack:(e,t,r)=>e.stencilFuncSeparate(1029,se(34816,t,r),se(36003,t,r),se(36004,t,r)),stencilOpFront:(e,t,r)=>e.stencilOpSeparate(1028,se(2964,t,r),se(2965,t,r),se(2966,t,r)),stencilOpBack:(e,t,r)=>e.stencilOpSeparate(1029,se(34817,t,r),se(34818,t,r),se(34819,t,r))},EA={enable:(e,t)=>e({[t]:!0}),disable:(e,t)=>e({[t]:!1}),pixelStorei:(e,t,r)=>e({[t]:r}),hint:(e,t,r)=>e({[t]:r}),useProgram:(e,t)=>e({[35725]:t}),bindRenderbuffer:(e,t,r)=>e({[36007]:r}),bindTransformFeedback:(e,t,r)=>e({[36389]:r}),bindVertexArray:(e,t)=>e({[34229]:t}),bindFramebuffer:(e,t,r)=>{switch(t){case 36160:return e({[36006]:r,[36010]:r});case 36009:return e({[36006]:r});case 36008:return e({[36010]:r});default:return null}},bindBuffer:(e,t,r)=>{let n={[34962]:[34964],[36662]:[36662],[36663]:[36663],[35051]:[35053],[35052]:[35055]}[t];return n?e({[n]:r}):{valueChanged:!0}},blendColor:(e,t,r,n,s)=>e({[32773]:new Float32Array([t,r,n,s])}),blendEquation:(e,t)=>e({[32777]:t,[34877]:t}),blendEquationSeparate:(e,t,r)=>e({[32777]:t,[34877]:r}),blendFunc:(e,t,r)=>e({[32969]:t,[32968]:r,[32971]:t,[32970]:r}),blendFuncSeparate:(e,t,r,n,s)=>e({[32969]:t,[32968]:r,[32971]:n,[32970]:s}),clearColor:(e,t,r,n,s)=>e({[3106]:new Float32Array([t,r,n,s])}),clearDepth:(e,t)=>e({[2931]:t}),clearStencil:(e,t)=>e({[2961]:t}),colorMask:(e,t,r,n,s)=>e({[3107]:[t,r,n,s]}),cullFace:(e,t)=>e({[2885]:t}),depthFunc:(e,t)=>e({[2932]:t}),depthRange:(e,t,r)=>e({[2928]:new Float32Array([t,r])}),depthMask:(e,t)=>e({[2930]:t}),frontFace:(e,t)=>e({[2886]:t}),lineWidth:(e,t)=>e({[2849]:t}),polygonOffset:(e,t,r)=>e({[32824]:t,[10752]:r}),sampleCoverage:(e,t,r)=>e({[32938]:t,[32939]:r}),scissor:(e,t,r,n,s)=>e({[3088]:new Int32Array([t,r,n,s])}),stencilMask:(e,t)=>e({[2968]:t,[36005]:t}),stencilMaskSeparate:(e,t,r)=>e({[t===1028?2968:36005]:r}),stencilFunc:(e,t,r,n)=>e({[2962]:t,[2967]:r,[2963]:n,[34816]:t,[36003]:r,[36004]:n}),stencilFuncSeparate:(e,t,r,n,s)=>e({[t===1028?2962:34816]:r,[t===1028?2967:36003]:n,[t===1028?2963:36004]:s}),stencilOp:(e,t,r,n)=>e({[2964]:t,[2965]:r,[2966]:n,[34817]:t,[34818]:r,[34819]:n}),stencilOpSeparate:(e,t,r,n,s)=>e({[t===1028?2964:34817]:r,[t===1028?2965:34818]:n,[t===1028?2966:34819]:s}),viewport:(e,t,r,n,s)=>e({[2978]:[t,r,n,s]})},zn=(e,t)=>e.isEnabled(t),MA={[3042]:zn,[2884]:zn,[2929]:zn,[3024]:zn,[32823]:zn,[32926]:zn,[32928]:zn,[3089]:zn,[2960]:zn,[35977]:zn},nP=new Set([34016,36388,36387,35983,35368,34965,35739,35738,3074,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34866,34867,34868,35097,32873,35869,32874,34068]);function hn(e,t){if(MX(t))return;let r={};for(let s in t){let i=Number(s),o=eP[s];o&&(typeof o=="string"?r[o]=!0:o(e,t[s],i))}let n=e.state&&e.state.cache;if(n)for(let s in r){let i=rP[s];i(e,t,n)}}function ig(e,t=Th){if(typeof t=="number"){let s=t,i=MA[s];return i?i(e,s):e.getParameter(s)}let r=Array.isArray(t)?t:Object.keys(t),n={};for(let s of r){let i=MA[s];n[s]=i?i(e,Number(s)):e.getParameter(Number(s))}return n}function sP(e){hn(e,Th)}function MX(e){for(let t in e)return!1;return!0}function iP(e,t){if(e===t)return!0;let r=Array.isArray(e)||ArrayBuffer.isView(e),n=Array.isArray(t)||ArrayBuffer.isView(t);if(r&&n&&e.length===t.length){for(let s=0;s<e.length;++s)if(e[s]!==t[s])return!1;return!0}return!1}var un=class{static get(t){return t.state}gl;program=null;stateStack=[];enable=!0;cache=null;log;initialized=!1;constructor(t,r){this.gl=t,this.log=r?.log||(()=>{}),this._updateCache=this._updateCache.bind(this),Object.seal(this)}push(t={}){this.stateStack.push({})}pop(){let t=this.stateStack[this.stateStack.length-1];hn(this.gl,t),this.stateStack.pop()}trackState(t,r){if(this.cache=r.copyState?ig(t):Object.assign({},Th),this.initialized)throw new Error("WebGLStateTracker");this.initialized=!0,this.gl.state=this,wX(t);for(let n in EA){let s=EA[n];SX(t,n,s)}oP(t,"getParameter"),oP(t,"isEnabled")}_updateCache(t){let r=!1,n,s=this.stateStack.length>0?this.stateStack[this.stateStack.length-1]:null;for(let i in t){let o=t[i],a=this.cache[i];iP(o,a)||(r=!0,n=a,s&&!(i in s)&&(s[i]=a),this.cache[i]=o)}return{valueChanged:r,oldValue:n}}};function oP(e,t){let r=e[t].bind(e);e[t]=function(s){if(s===void 0||nP.has(s))return r(s);let i=un.get(e);return s in i.cache||(i.cache[s]=r(s)),i.enable?i.cache[s]:r(s)},Object.defineProperty(e[t],"name",{value:`${t}-from-cache`,configurable:!1})}function SX(e,t,r){if(!e[t])return;let n=e[t].bind(e);e[t]=function(...i){let o=un.get(e),{valueChanged:a,oldValue:c}=r(o._updateCache,...i);return a&&n(...i),c},Object.defineProperty(e[t],"name",{value:`${t}-to-cache`,configurable:!1})}function wX(e){let t=e.useProgram.bind(e);e.useProgram=function(n){let s=un.get(e);s.program!==n&&(t(n),s.program=n)}}function aP(e,t,r){let n="",s={preserveDrawingBuffer:!0,...r},i=null;if(i||=e.getContext("webgl2",s),s.failIfMajorPerformanceCaveat&&(n||="Only software GPU is available. Set `failIfMajorPerformanceCaveat: false` to allow."),!i&&!r.failIfMajorPerformanceCaveat&&(s.failIfMajorPerformanceCaveat=!1,i=e.getContext("webgl2",s),i.luma||={},i.luma.softwareRenderer=!0),i||(i=e.getContext("webgl",{}),i&&(i=null,n||="Your browser only supports WebGL1")),!i)throw n||="Your browser does not support WebGL",new Error(`Failed to create WebGL context: ${n}`);let{onContextLost:o,onContextRestored:a}=t;return e.addEventListener("webglcontextlost",c=>o(c),!1),e.addEventListener("webglcontextrestored",c=>a(c),!1),i.luma||={},i}function Vn(e,t,r){return r[t]===void 0&&(r[t]=e.getExtension(t)||null),r[t]}function cP(e,t){let r=e.getParameter(7936),n=e.getParameter(7937);Vn(e,"WEBGL_debug_renderer_info",t);let s=t.WEBGL_debug_renderer_info,i=e.getParameter(s?s.UNMASKED_VENDOR_WEBGL:7936),o=e.getParameter(s?s.UNMASKED_RENDERER_WEBGL:7937),a=i||r,c=o||n,l=e.getParameter(7938),f=lP(a,c),h=CX(a,c),u=PX(a,c);return{type:"webgl",gpu:f,gpuType:u,gpuBackend:h,vendor:a,renderer:c,version:l,shadingLanguage:"glsl",shadingLanguageVersion:300}}function lP(e,t){return/NVIDIA/i.exec(e)||/NVIDIA/i.exec(t)?"nvidia":/INTEL/i.exec(e)||/INTEL/i.exec(t)?"intel":/Apple/i.exec(e)||/Apple/i.exec(t)?"apple":/AMD/i.exec(e)||/AMD/i.exec(t)||/ATI/i.exec(e)||/ATI/i.exec(t)?"amd":/SwiftShader/i.exec(e)||/SwiftShader/i.exec(t)?"software":"unknown"}function CX(e,t){return/Metal/i.exec(e)||/Metal/i.exec(t)?"metal":/ANGLE/i.exec(e)||/ANGLE/i.exec(t)?"opengl":"unknown"}function PX(e,t){if(/SwiftShader/i.exec(e)||/SwiftShader/i.exec(t))return"cpu";switch(lP(e,t)){case"intel":return"integrated";case"software":return"cpu";case"unknown":return"unknown";default:return"discrete"}}function og(e){switch(e){case"uint8":return 5121;case"sint8":return 5120;case"unorm8":return 5121;case"snorm8":return 5120;case"uint16":return 5123;case"sint16":return 5122;case"unorm16":return 5123;case"snorm16":return 5122;case"uint32":return 5125;case"sint32":return 5124;case"float16":return 5131;case"float32":return 5126}throw new Error(String(e))}var vh="WEBGL_compressed_texture_s3tc",Eh="WEBGL_compressed_texture_s3tc_srgb",xc="EXT_texture_compression_rgtc",_c="EXT_texture_compression_bptc",IX="WEBGL_compressed_texture_etc",RX="WEBGL_compressed_texture_astc",OX="WEBGL_compressed_texture_etc1",LX="WEBGL_compressed_texture_pvrtc",BX="WEBGL_compressed_texture_atc",fP="EXT_texture_norm16",hP="EXT_render_snorm",NX="EXT_color_buffer_float",ag={"float32-renderable-webgl":["EXT_color_buffer_float"],"float16-renderable-webgl":["EXT_color_buffer_half_float"],"rgb9e5ufloat-renderable-webgl":["WEBGL_render_shared_exponent"],"snorm8-renderable-webgl":[hP],"norm16-renderable-webgl":[fP],"snorm16-renderable-webgl":[fP,hP],"float32-filterable":["OES_texture_float_linear"],"float16-filterable-webgl":["OES_texture_half_float_linear"],"texture-filterable-anisotropic-webgl":["EXT_texture_filter_anisotropic"],"texture-blend-float-webgl":["EXT_float_blend"],"texture-compression-bc":[vh,Eh,xc,_c],"texture-compression-bc5-webgl":[xc],"texture-compression-bc7-webgl":[_c],"texture-compression-etc2":[IX],"texture-compression-astc":[RX],"texture-compression-etc1-webgl":[OX],"texture-compression-pvrtc-webgl":[LX],"texture-compression-atc-webgl":[BX]};function uP(e){return e in ag}function dP(e,t,r){return(ag[t]||[]).every(s=>Vn(e,s,r))}var SA={r8unorm:{gl:33321,rb:!0},r8snorm:{gl:36756},r8uint:{gl:33330,rb:!0},r8sint:{gl:33329,rb:!0},rg8unorm:{gl:33323,rb:!0},rg8snorm:{gl:36757},rg8uint:{gl:33336,rb:!0},rg8sint:{gl:33335,rb:!0},r16uint:{gl:33332,rb:!0},r16sint:{gl:33331,rb:!0},r16float:{gl:33325,rb:!0},"r16unorm-webgl":{gl:33322,rb:!0},"r16snorm-webgl":{gl:36760},"rgba4unorm-webgl":{gl:32854,rb:!0},"rgb565unorm-webgl":{gl:36194,rb:!0},"rgb5a1unorm-webgl":{gl:32855,rb:!0},"rgb8unorm-webgl":{gl:32849},"rgb8snorm-webgl":{gl:36758},rgba8unorm:{gl:32856},"rgba8unorm-srgb":{gl:35907},rgba8snorm:{gl:36759},rgba8uint:{gl:36220},rgba8sint:{gl:36238},bgra8unorm:{},"bgra8unorm-srgb":{},rg16uint:{gl:33338},rg16sint:{gl:33337},rg16float:{gl:33327,rb:!0},"rg16unorm-webgl":{gl:33324},"rg16snorm-webgl":{gl:36761},r32uint:{gl:33334,rb:!0},r32sint:{gl:33333,rb:!0},r32float:{gl:33326},rgb9e5ufloat:{gl:35901},rg11b10ufloat:{gl:35898,rb:!0},rgb10a2unorm:{gl:32857,rb:!0},"rgb10a2uint-webgl":{gl:36975,rb:!0},"rgb16unorm-webgl":{gl:32852},"rgb16snorm-webgl":{gl:36762},rg32uint:{gl:33340,rb:!0},rg32sint:{gl:33339,rb:!0},rg32float:{gl:33328,rb:!0},rgba16uint:{gl:36214,rb:!0},rgba16sint:{gl:36232,rb:!0},rgba16float:{gl:34842},"rgba16unorm-webgl":{gl:32859,rb:!0},"rgba16snorm-webgl":{gl:36763},"rgb32float-webgl":{gl:34837,x:NX,dataFormat:6407,types:[5126]},rgba32uint:{gl:36208,rb:!0},rgba32sint:{gl:36226,rb:!0},rgba32float:{gl:34836,rb:!0},stencil8:{gl:36168,rb:!0},depth16unorm:{gl:33189,dataFormat:6402,types:[5123],rb:!0},depth24plus:{gl:33190,dataFormat:6402,types:[5125]},depth32float:{gl:36012,dataFormat:6402,types:[5126],rb:!0},"depth24plus-stencil8":{gl:35056,rb:!0,depthTexture:!0,dataFormat:34041,types:[34042]},"depth32float-stencil8":{gl:36013,dataFormat:34041,types:[36269],rb:!0},"bc1-rgb-unorm-webgl":{gl:33776,x:vh},"bc1-rgb-unorm-srgb-webgl":{gl:35916,x:Eh},"bc1-rgba-unorm":{gl:33777,x:vh},"bc1-rgba-unorm-srgb":{gl:35916,x:Eh},"bc2-rgba-unorm":{gl:33778,x:vh},"bc2-rgba-unorm-srgb":{gl:35918,x:Eh},"bc3-rgba-unorm":{gl:33779,x:vh},"bc3-rgba-unorm-srgb":{gl:35919,x:Eh},"bc4-r-unorm":{gl:36283,x:xc},"bc4-r-snorm":{gl:36284,x:xc},"bc5-rg-unorm":{gl:36285,x:xc},"bc5-rg-snorm":{gl:36286,x:xc},"bc6h-rgb-ufloat":{gl:36495,x:_c},"bc6h-rgb-float":{gl:36494,x:_c},"bc7-rgba-unorm":{gl:36492,x:_c},"bc7-rgba-unorm-srgb":{gl:36493,x:_c},"etc2-rgb8unorm":{gl:37492},"etc2-rgb8unorm-srgb":{gl:37494},"etc2-rgb8a1unorm":{gl:37496},"etc2-rgb8a1unorm-srgb":{gl:37497},"etc2-rgba8unorm":{gl:37493},"etc2-rgba8unorm-srgb":{gl:37495},"eac-r11unorm":{gl:37488},"eac-r11snorm":{gl:37489},"eac-rg11unorm":{gl:37490},"eac-rg11snorm":{gl:37491},"astc-4x4-unorm":{gl:37808},"astc-4x4-unorm-srgb":{gl:37840},"astc-5x4-unorm":{gl:37809},"astc-5x4-unorm-srgb":{gl:37841},"astc-5x5-unorm":{gl:37810},"astc-5x5-unorm-srgb":{gl:37842},"astc-6x5-unorm":{gl:37811},"astc-6x5-unorm-srgb":{gl:37843},"astc-6x6-unorm":{gl:37812},"astc-6x6-unorm-srgb":{gl:37844},"astc-8x5-unorm":{gl:37813},"astc-8x5-unorm-srgb":{gl:37845},"astc-8x6-unorm":{gl:37814},"astc-8x6-unorm-srgb":{gl:37846},"astc-8x8-unorm":{gl:37815},"astc-8x8-unorm-srgb":{gl:37847},"astc-10x5-unorm":{gl:37819},"astc-10x5-unorm-srgb":{gl:37851},"astc-10x6-unorm":{gl:37817},"astc-10x6-unorm-srgb":{gl:37849},"astc-10x8-unorm":{gl:37818},"astc-10x8-unorm-srgb":{gl:37850},"astc-10x10-unorm":{gl:37819},"astc-10x10-unorm-srgb":{gl:37851},"astc-12x10-unorm":{gl:37820},"astc-12x10-unorm-srgb":{gl:37852},"astc-12x12-unorm":{gl:37821},"astc-12x12-unorm-srgb":{gl:37853},"pvrtc-rgb4unorm-webgl":{gl:35840},"pvrtc-rgba4unorm-webgl":{gl:35842},"pvrtc-rbg2unorm-webgl":{gl:35841},"pvrtc-rgba2unorm-webgl":{gl:35843},"etc1-rbg-unorm-webgl":{gl:36196},"atc-rgb-unorm-webgl":{gl:35986},"atc-rgba-unorm-webgl":{gl:35986},"atc-rgbai-unorm-webgl":{gl:34798}};function pP(e,t,r){let n=t.create,s=SA[t.format];return s?.gl===void 0&&(n=!1),s?.x&&(n=n&&Boolean(Vn(e,s.x,r))),{format:t.format,create:n&&t.create,render:n&&t.render,filter:n&&t.filter,blend:n&&t.blend,store:n&&t.store}}function cg(e){let t=SA[e],r=DX(e),n=Oa(e);return{internalFormat:r,format:t?.dataFormat||FX(n.channels,n.integer,n.normalized,r),type:n.dataType?og(n.dataType):t?.types?.[0]||5121,compressed:n.compressed||!1}}function mP(e){switch(Oa(e).attachment){case"depth":return 36096;case"stencil":return 36128;case"depth-stencil":return 33306;default:throw new Error(`Not a depth stencil format: ${e}`)}}function FX(e,t,r,n){if(n===6408||n===6407)return n;switch(e){case"r":return t&&!r?36244:6403;case"rg":return t&&!r?33320:33319;case"rgb":return t&&!r?36248:6407;case"rgba":return t&&!r?36249:6408;case"bgra":throw new Error("bgra pixels not supported by WebGL");default:return 6408}}function DX(e){let r=SA[e]?.gl;if(r===void 0)throw new Error(`Unsupported texture format ${e}`);return r}var gP={"depth-clip-control":"EXT_depth_clamp","timer-query-webgl":"EXT_disjoint_timer_query_webgl2","compilation-status-async-webgl":"KHR_parallel_shader_compile","polygon-mode-webgl":"WEBGL_polygon_mode","provoking-vertex-webgl":"WEBGL_provoking_vertex","shader-clip-cull-distance-webgl":"WEBGL_clip_cull_distance","shader-noperspective-interpolation-webgl":"NV_shader_noperspective_interpolation","shader-conservative-depth-webgl":"EXT_conservative_depth"},lg=class extends mf{gl;extensions;testedFeatures=new Set;constructor(t,r,n){super([],n),this.gl=t,this.extensions=r,Vn(t,"EXT_color_buffer_float",r)}*[Symbol.iterator](){let t=this.getFeatures();for(let r of t)this.has(r)&&(yield r);return[]}has(t){return this.disabledFeatures?.[t]?!1:(this.testedFeatures.has(t)||(this.testedFeatures.add(t),uP(t)&&dP(this.gl,t,this.extensions)&&this.features.add(t),this.getWebGLFeature(t)&&this.features.add(t)),this.features.has(t))}initializeFeatures(){let t=this.getFeatures().filter(r=>r!=="polygon-mode-webgl");for(let r of t)this.has(r)}getFeatures(){return[...Object.keys(gP),...Object.keys(ag)]}getWebGLFeature(t){let r=gP[t];return Boolean(typeof r=="string"?Vn(this.gl,r,this.extensions):r)}};var fg=class extends pf{get maxTextureDimension1D(){return 0}get maxTextureDimension2D(){return this.getParameter(3379)}get maxTextureDimension3D(){return this.getParameter(32883)}get maxTextureArrayLayers(){return this.getParameter(35071)}get maxBindGroups(){return 0}get maxDynamicUniformBuffersPerPipelineLayout(){return 0}get maxDynamicStorageBuffersPerPipelineLayout(){return 0}get maxSampledTexturesPerShaderStage(){return this.getParameter(35660)}get maxSamplersPerShaderStage(){return this.getParameter(35661)}get maxStorageBuffersPerShaderStage(){return 0}get maxStorageTexturesPerShaderStage(){return 0}get maxUniformBuffersPerShaderStage(){return this.getParameter(35375)}get maxUniformBufferBindingSize(){return this.getParameter(35376)}get maxStorageBufferBindingSize(){return 0}get minUniformBufferOffsetAlignment(){return this.getParameter(35380)}get minStorageBufferOffsetAlignment(){return 0}get maxVertexBuffers(){return 16}get maxVertexAttributes(){return this.getParameter(34921)}get maxVertexBufferArrayStride(){return 2048}get maxInterStageShaderComponents(){return this.getParameter(35659)}get maxComputeWorkgroupStorageSize(){return 0}get maxComputeInvocationsPerWorkgroup(){return 0}get maxComputeWorkgroupSizeX(){return 0}get maxComputeWorkgroupSizeY(){return 0}get maxComputeWorkgroupSizeZ(){return 0}get maxComputeWorkgroupsPerDimension(){return 0}gl;limits={};constructor(t){super(),this.gl=t}getParameter(t){return this.limits[t]===void 0&&(this.limits[t]=this.gl.getParameter(t)),this.limits[t]||0}};var Wn=class extends On{device;gl;handle;colorAttachments=[];depthStencilAttachment=null;constructor(t,r){super(t,r);let n=r.handle===null;this.device=t,this.gl=t.gl,this.handle=this.props.handle||n?this.props.handle:this.gl.createFramebuffer(),n||(t.setSpectorMetadata(this.handle,{id:this.props.id,props:this.props}),this.autoCreateAttachmentTextures(),this.updateAttachments())}destroy(){super.destroy(),!this.destroyed&&this.handle!==null&&this.gl.deleteFramebuffer(this.handle)}updateAttachments(){let t=this.gl.bindFramebuffer(36160,this.handle);for(let r=0;r<this.colorAttachments.length;++r){let n=this.colorAttachments[r];if(n){let s=36064+r;this._attachTextureView(s,n)}}if(this.depthStencilAttachment){let r=mP(this.depthStencilAttachment.props.format);this._attachTextureView(r,this.depthStencilAttachment)}if(this.device.props.debug){let r=this.gl.checkFramebufferStatus(36160);if(r!==36053)throw new Error(`Framebuffer ${UX(r)}`)}this.gl.bindFramebuffer(36160,t)}_attachTextureView(t,r){let{gl:n}=this.device,{texture:s}=r,i=r.props.baseMipLevel,o=r.props.baseArrayLayer;switch(n.bindTexture(s.glTarget,s.handle),s.glTarget){case 35866:case 32879:n.framebufferTextureLayer(36160,t,s.handle,i,o);break;case 34067:let a=kX(o);n.framebufferTexture2D(36160,t,a,s.handle,i);break;case 3553:n.framebufferTexture2D(36160,t,3553,s.handle,i);break;default:throw new Error("Illegal texture type")}n.bindTexture(s.glTarget,null)}};function kX(e){return e<34069?e+34069:e}function UX(e){switch(e){case 36053:return"success";case 36054:return"Mismatched attachments";case 36055:return"No attachments";case 36057:return"Height/width mismatch";case 36061:return"Unsupported or split attachments";case 36182:return"Samples mismatch";default:return`${e}`}}var hg=class extends Ba{device;format="rgba8unorm";depthStencilFormat="depth24plus";presentationSize;_framebuffer=null;get[Symbol.toStringTag](){return"WebGLCanvasContext"}constructor(t,r){super(r),this.device=t,this.presentationSize=[-1,-1],this._setAutoCreatedCanvasId(`${this.device.id}-canvas`),this.update()}getCurrentFramebuffer(){return this.update(),this._framebuffer=this._framebuffer||new Wn(this.device,{handle:null}),this._framebuffer}update(){let t=this.getPixelSize();(t[0]!==this.presentationSize[0]||t[1]!==this.presentationSize[1])&&(this.presentationSize=t,this.resize())}resize(t){if(this.device.gl&&this.canvas){let r=this.getDevicePixelRatio(t?.useDevicePixels);this.setDevicePixelRatio(r,t);return}}commit(){}};async function ug(e,t){let r=document.getElementsByTagName("head")[0];if(!r)throw new Error("loadScript");let n=document.createElement("script");return n.setAttribute("type","text/javascript"),n.setAttribute("src",e),t&&(n.id=t),new Promise((s,i)=>{n.onload=s,n.onerror=o=>i(new Error(`Unable to load script '${e}': ${o}`)),r.appendChild(n)})}var zX=1,Rr=null,xP=!1,dg={debugSpectorJS:U.get("debug-spectorjs"),debugSpectorJSUrl:"https://cdn.jsdelivr.net/npm/spectorjs@0.9.30/dist/spector.bundle.js",gl:void 0};async function _P(e){if(!globalThis.SPECTOR)try{await ug(e.debugSpectorJSUrl||dg.debugSpectorJSUrl)}catch(t){U.warn(String(t))}}function yP(e){if(e={...dg,...e},!e.debugSpectorJS)return null;if(!Rr&&globalThis.SPECTOR&&!globalThis.luma?.spector){U.probe(zX,"SPECTOR found and initialized. Start with `luma.spector.displayUI()`")();let{Spector:t}=globalThis.SPECTOR;Rr=new t,globalThis.luma&&(globalThis.luma.spector=Rr)}if(!Rr)return null;if(xP||(xP=!0,Rr.spyCanvases(),Rr?.onCaptureStarted.add(t=>U.info("Spector capture started:",t)()),Rr?.onCapture.add(t=>{U.info("Spector capture complete:",t)(),Rr?.getResultUI(),Rr?.resultView.display(),Rr?.resultView.addCapture(t)})),e.gl){let t=e.gl,r=t.device;Rr?.startCapture(e.gl,500),t.device=r,new Promise(n=>setTimeout(n,2e3)).then(n=>{U.info("Spector capture stopped after 2 seconds")(),Rr?.stopCapture()})}return Rr}var VX="https://unpkg.com/webgl-debug@2.0.1/index.js";function bP(e){return e.luma=e.luma||{},e.luma}async function TP(){Qe()&&!globalThis.WebGLDebugUtils&&(globalThis.global=globalThis.global||globalThis,globalThis.global.module={},await ug(VX))}function vP(e,t={}){return t.debugWebGL||t.traceWebGL?HX(e,t):WX(e)}function WX(e){let t=bP(e);return t.realContext?t.realContext:e}function HX(e,t){if(!globalThis.WebGLDebugUtils)return U.warn("webgl-debug not loaded")(),e;let r=bP(e);if(r.debugContext)return r.debugContext;globalThis.WebGLDebugUtils.init({..._i,...e});let n=globalThis.WebGLDebugUtils.makeDebugContext(e,GX.bind(null,t),jX.bind(null,t));for(let o in _i)!(o in n)&&typeof _i[o]=="number"&&(n[o]=_i[o]);class s{}Object.setPrototypeOf(n,Object.getPrototypeOf(e)),Object.setPrototypeOf(s,n);let i=Object.create(s);return r.realContext=e,r.debugContext=i,i.debug=!0,i}function AP(e,t){t=Array.from(t).map(n=>n===void 0?"undefined":n);let r=globalThis.WebGLDebugUtils.glFunctionArgsToString(e,t);return r=`${r.slice(0,100)}${r.length>100?"...":""}`,`gl.${e}(${r})`}function GX(e,t,r,n){n=Array.from(n).map(a=>a===void 0?"undefined":a);let s=globalThis.WebGLDebugUtils.glEnumToString(t),i=globalThis.WebGLDebugUtils.glFunctionArgsToString(r,n),o=`${s} in gl.${r}(${i})`;U.error(o)();debugger}function jX(e,t,r){let n="";U.level>=1&&(n=AP(t,r),e.traceWebGL&&U.log(1,n)());for(let s of r)if(s===void 0){n=n||AP(t,r);debugger}}var wA={};function EP(e="id"){wA[e]=wA[e]||1;let t=wA[e]++;return`${e}-${t}`}var dn=class extends et{device;gl;handle;glTarget;glUsage;glIndexType=5123;byteLength;bytesUsed;constructor(t,r={}){super(t,r),this.device=t,this.gl=this.device.gl;let n=typeof r=="object"?r.handle:void 0;this.handle=n||this.gl.createBuffer(),t.setSpectorMetadata(this.handle,{...this.props,data:typeof this.props.data}),this.glTarget=qX(this.props.usage),this.glUsage=XX(this.props.usage),this.glIndexType=this.props.indexType==="uint32"?5125:5123,r.data?this._initWithData(r.data,r.byteOffset,r.byteLength):this._initWithByteLength(r.byteLength||0)}_initWithData(t,r=0,n=t.byteLength+r){let s=this.glTarget;this.gl.bindBuffer(s,this.handle),this.gl.bufferData(s,n,this.glUsage),this.gl.bufferSubData(s,r,t),this.gl.bindBuffer(s,null),this.bytesUsed=n,this.byteLength=n,this._setDebugData(t,r,n),this.trackAllocatedMemory(n)}_initWithByteLength(t){let r=t;t===0&&(r=new Float32Array(0));let n=this.glTarget;return this.gl.bindBuffer(n,this.handle),this.gl.bufferData(n,r,this.glUsage),this.gl.bindBuffer(n,null),this.bytesUsed=t,this.byteLength=t,this._setDebugData(null,0,t),this.trackAllocatedMemory(t),this}destroy(){!this.destroyed&&this.handle&&(this.removeStats(),this.trackDeallocatedMemory(),this.gl.deleteBuffer(this.handle),this.destroyed=!0,this.handle=null)}write(t,r=0){this.gl.bindBuffer(36663,this.handle),this.gl.bufferSubData(36663,r,t),this.gl.bindBuffer(36663,null),this._setDebugData(t,r,t.byteLength)}async readAsync(t=0,r){return this.readSyncWebGL(t,r)}readSyncWebGL(t=0,r){r=r??this.byteLength-t;let n=new Uint8Array(r),s=0;return this.gl.bindBuffer(36662,this.handle),this.gl.getBufferSubData(36662,t,n,s,r),this.gl.bindBuffer(36662,null),this._setDebugData(n,t,r),n}};function qX(e){return e&et.INDEX?34963:e&et.VERTEX?34962:e&et.UNIFORM?35345:34962}function XX(e){return e&et.INDEX||e&et.VERTEX?35044:e&et.UNIFORM?35048:35044}function SP(e){let t=e.split(/\r?\n/),r=[];for(let n of t){if(n.length<=1)continue;let s=n.split(":");if(s.length===2){let[h,u]=s;r.push({message:u.trim(),type:MP(h),lineNum:0,linePos:0});continue}let[i,o,a,...c]=s,l=parseInt(a,10);isNaN(l)&&(l=0);let f=parseInt(o,10);isNaN(f)&&(f=0),r.push({message:c.join(":").trim(),type:MP(i),lineNum:l,linePos:f})}return r}function MP(e){let t=["warning","error","info"],r=e.toLowerCase();return t.includes(r)?r:"info"}var pg=class extends ti{device;handle;constructor(t,r){switch(super(t,r),this.device=t,this.props.stage){case"vertex":this.handle=this.props.handle||this.device.gl.createShader(35633);break;case"fragment":this.handle=this.props.handle||this.device.gl.createShader(35632);break;default:throw new Error(this.props.stage)}this._compile(this.source)}destroy(){this.handle&&(this.removeStats(),this.device.gl.deleteShader(this.handle),this.destroyed=!0)}get asyncCompilationStatus(){return this._waitForCompilationComplete().then(()=>this.compilationStatus)}async getCompilationInfo(){return await this._waitForCompilationComplete(),this.getCompilationInfoSync()}getCompilationInfoSync(){let t=this.device.gl.getShaderInfoLog(this.handle);return t?SP(t):[]}getTranslatedSource(){return this.device.getExtension("WEBGL_debug_shaders").WEBGL_debug_shaders?.getTranslatedShaderSource(this.handle)||null}async _compile(t){t=t.startsWith("#version ")?t:`#version 300 es
${t}`;let{gl:r}=this.device;if(r.shaderSource(this.handle,t),r.compileShader(this.handle),!this.device.props.debug){this.compilationStatus="pending";return}if(!this.device.features.has("compilation-status-async-webgl")){if(this._getCompilationStatus(),this.debugShader(),this.compilationStatus==="error")throw new Error(`GLSL compilation errors in ${this.props.stage} shader ${this.props.id}`);return}U.once(1,"Shader compilation is asynchronous")(),await this._waitForCompilationComplete(),U.info(2,`Shader ${this.id} - async compilation complete: ${this.compilationStatus}`)(),this._getCompilationStatus(),this.debugShader()}async _waitForCompilationComplete(){let t=async s=>await new Promise(i=>setTimeout(i,s));if(!this.device.features.has("compilation-status-async-webgl")){await t(10);return}let{gl:n}=this.device;for(;;){if(n.getShaderParameter(this.handle,37297))return;await t(10)}}_getCompilationStatus(){this.compilationStatus=this.device.gl.getShaderParameter(this.handle,35713)?"success":"error"}};function CP(e,t,r,n){if(ZX(t))return n(e);let s=e;s.pushState();try{return YX(e,t),hn(s.gl,r),n(e)}finally{s.popState()}}function YX(e,t){let r=e,{gl:n}=r;if(t.cullMode)switch(t.cullMode){case"none":n.disable(2884);break;case"front":n.enable(2884),n.cullFace(1028);break;case"back":n.enable(2884),n.cullFace(1029);break}if(t.frontFace&&n.frontFace(Io("frontFace",t.frontFace,{ccw:2305,cw:2304})),t.unclippedDepth&&e.features.has("depth-clip-control")&&n.enable(34383),t.depthBias!==void 0&&(n.enable(32823),n.polygonOffset(t.depthBias,t.depthBiasSlopeScale||0)),t.provokingVertex&&e.features.has("provoking-vertex-webgl")){let i=r.getExtension("WEBGL_provoking_vertex").WEBGL_provoking_vertex,o=Io("provokingVertex",t.provokingVertex,{first:36429,last:36430});i?.provokingVertexWEBGL(o)}if((t.polygonMode||t.polygonOffsetLine)&&e.features.has("polygon-mode-webgl")){if(t.polygonMode){let i=r.getExtension("WEBGL_polygon_mode").WEBGL_polygon_mode,o=Io("polygonMode",t.polygonMode,{fill:6914,line:6913});i?.polygonModeWEBGL(1028,o),i?.polygonModeWEBGL(1029,o)}t.polygonOffsetLine&&n.enable(10754)}if(e.features.has("shader-clip-cull-distance-webgl")&&(t.clipDistance0&&n.enable(12288),t.clipDistance1&&n.enable(12289),t.clipDistance2&&n.enable(12290),t.clipDistance3&&n.enable(12291),t.clipDistance4&&n.enable(12292),t.clipDistance5&&n.enable(12293),t.clipDistance6&&n.enable(12294),t.clipDistance7&&n.enable(12295)),t.depthWriteEnabled!==void 0&&n.depthMask(KX("depthWriteEnabled",t.depthWriteEnabled)),t.depthCompare&&(t.depthCompare!=="always"?n.enable(2929):n.disable(2929),n.depthFunc(gg("depthCompare",t.depthCompare))),t.stencilWriteMask){let s=t.stencilWriteMask;n.stencilMaskSeparate(1028,s),n.stencilMaskSeparate(1029,s)}if(t.stencilReadMask&&U.warn("stencilReadMask not supported under WebGL"),t.stencilCompare){let s=t.stencilReadMask||4294967295,i=gg("depthCompare",t.stencilCompare);t.stencilCompare!=="always"?n.enable(2960):n.disable(2960),n.stencilFuncSeparate(1028,i,0,s),n.stencilFuncSeparate(1029,i,0,s)}if(t.stencilPassOperation&&t.stencilFailOperation&&t.stencilDepthFailOperation){let s=CA("stencilPassOperation",t.stencilPassOperation),i=CA("stencilFailOperation",t.stencilFailOperation),o=CA("stencilDepthFailOperation",t.stencilDepthFailOperation);n.stencilOpSeparate(1028,i,o,s),n.stencilOpSeparate(1029,i,o,s)}switch(t.blend){case!0:n.enable(3042);break;case!1:n.disable(3042);break;default:}if(t.blendColorOperation||t.blendAlphaOperation){let s=wP("blendColorOperation",t.blendColorOperation||"add"),i=wP("blendAlphaOperation",t.blendAlphaOperation||"add");n.blendEquationSeparate(s,i);let o=mg("blendColorSrcFactor",t.blendColorSrcFactor||"one"),a=mg("blendColorDstFactor",t.blendColorDstFactor||"zero"),c=mg("blendAlphaSrcFactor",t.blendAlphaSrcFactor||"one"),l=mg("blendAlphaDstFactor",t.blendAlphaDstFactor||"zero");n.blendFuncSeparate(o,a,c,l)}}function gg(e,t){return Io(e,t,{never:512,less:513,equal:514,"less-equal":515,greater:516,"not-equal":517,"greater-equal":518,always:519})}function CA(e,t){return Io(e,t,{keep:7680,zero:0,replace:7681,invert:5386,"increment-clamp":7682,"decrement-clamp":7683,"increment-wrap":34055,"decrement-wrap":34056})}function wP(e,t){return Io(e,t,{add:32774,subtract:32778,"reverse-subtract":32779,min:32775,max:32776})}function mg(e,t){return Io(e,t,{one:1,zero:0,"src-color":768,"one-minus-src-color":769,"dst-color":774,"one-minus-dst-color":775,"src-alpha":770,"one-minus-src-alpha":771,"dst-alpha":772,"one-minus-dst-alpha":773,"src-alpha-saturated":776,"constant-color":32769,"one-minus-constant-color":32770,"constant-alpha":32771,"one-minus-constant-alpha":32772})}function $X(e,t){return`Illegal parameter ${t} for ${e}`}function Io(e,t,r){if(!(t in r))throw new Error($X(e,t));return r[t]}function KX(e,t){return t}function ZX(e){let t=!0;for(let r in e){t=!1;break}return t}function xg(e){let t={};return e.addressModeU&&(t[10242]=PA(e.addressModeU)),e.addressModeV&&(t[10243]=PA(e.addressModeV)),e.addressModeW&&(t[32882]=PA(e.addressModeW)),e.magFilter&&(t[10240]=IA(e.magFilter)),(e.minFilter||e.mipmapFilter)&&(t[10241]=JX(e.minFilter||"linear",e.mipmapFilter)),e.lodMinClamp!==void 0&&(t[33082]=e.lodMinClamp),e.lodMaxClamp!==void 0&&(t[33083]=e.lodMaxClamp),e.type==="comparison-sampler"&&(t[34892]=34894),e.compare&&(t[34893]=gg("compare",e.compare)),e.maxAnisotropy&&(t[34046]=e.maxAnisotropy),t}function PA(e){switch(e){case"clamp-to-edge":return 33071;case"repeat":return 10497;case"mirror-repeat":return 33648}}function IA(e){switch(e){case"nearest":return 9728;case"linear":return 9729}}function JX(e,t="none"){if(!t)return IA(e);switch(t){case"none":return IA(e);case"nearest":return e==="nearest"?9984:9986;case"linear":return e==="nearest"?9985:9987}}var Ro=class extends ei{device;handle;parameters;constructor(t,r){super(t,r),this.device=t,this.parameters=xg(r),this.handle=this.handle||this.device.gl.createSampler(),this._setSamplerParameters(this.parameters)}destroy(){this.handle&&(this.device.gl.deleteSampler(this.handle),this.handle=void 0)}toString(){return`Sampler(${this.id},${JSON.stringify(this.props)})`}_setSamplerParameters(t){for(let[r,n]of Object.entries(t)){let s=Number(r);switch(s){case 33082:case 33083:this.device.gl.samplerParameterf(this.handle,s,n);break;default:this.device.gl.samplerParameteri(this.handle,s,n);break}}}};var Hn=class extends Qs{device;gl;handle;texture;constructor(t,r){super(t,{...at.defaultProps,...r}),this.device=t,this.gl=this.device.gl,this.handle=null,this.texture=r.texture}};var QX="Failed to deduce GL constant from typed array";function PP(e){switch(ArrayBuffer.isView(e)?e.constructor:e){case Float32Array:return 5126;case Uint16Array:return 5123;case Uint32Array:return 5125;case Uint8Array:return 5121;case Uint8ClampedArray:return 5121;case Int8Array:return 5120;case Int16Array:return 5122;case Int32Array:return 5124;default:throw new Error(QX)}}function IP(e,t){let{clamped:r=!0}=t||{};switch(e){case 5126:return Float32Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return r?Uint8ClampedArray:Uint8Array;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;default:throw new Error("Failed to deduce typed array type from GL constant")}}function RA(e){switch(e){case 6406:case 33326:case 6403:case 36244:return 1;case 33339:case 33340:case 33328:case 33320:case 33319:return 2;case 6407:case 36248:case 34837:return 3;case 6408:case 36249:case 34836:return 4;default:return 0}}function RP(e){switch(e){case 5121:return 1;case 33635:case 32819:case 32820:return 2;case 5126:return 4;default:return 0}}function Oo(e,t,r){if(tY(t))return r(e);let{nocatch:n=!0}=t,s=un.get(e);s.push(),hn(e,t);let i;if(n)i=r(e),s.pop();else try{i=r(e)}finally{s.pop()}return i}function tY(e){for(let t in e)return!1;return!0}function OP(e,t,r){let{dimension:n,width:s,height:i,depth:o=0}=r,{glInternalFormat:a}=r,c=r.glTarget;switch(n){case"2d-array":case"3d":e.texStorage3D(c,t,a,s,i,o);break;default:e.texStorage2D(c,t,a,s,i)}}function OA(e,t,r,n){let{width:s,height:i}=n,{dimension:o,depth:a=0,mipLevel:c=0}=n,{x:l=0,y:f=0,z:h=0}=n,{glFormat:u,glType:d}=n,p=BP(n.glTarget,o,a),m=n.flipY?{[37440]:!0}:{};Oo(e,m,()=>{switch(o){case"2d-array":case"3d":e.bindTexture(p,t),e.texSubImage3D(p,c,l,f,h,s,i,a,u,d,r),e.bindTexture(p,null);break;case"2d":case"cube":e.bindTexture(p,t),e.texSubImage2D(p,c,l,f,s,i,u,d,r),e.bindTexture(p,null);break;default:throw new Error(o)}})}function LA(e,t,r){let{dimension:n,width:s,height:i,depth:o=0,mipLevel:a=0,byteOffset:c=0}=r,{x:l=0,y:f=0,z:h=0}=r,{glFormat:u,glType:d,compressed:p}=r,m=BP(r.glTarget,n,o);switch(n){case"2d-array":case"3d":p?e.compressedTexSubImage3D(m,a,l,f,h,s,i,o,u,t,c):e.texSubImage3D(m,a,l,f,h,s,i,o,u,d,t,c);break;case"2d":case"cube":p?e.compressedTexSubImage2D(m,a,l,f,s,i,u,t,c):e.texSubImage2D(m,a,l,f,s,i,u,d,t,c);break;default:throw new Error(n)}}function LP(e){switch(e){case"1d":break;case"2d":return 3553;case"3d":return 32879;case"cube":return 34067;case"2d-array":return 35866;case"cube-array":break}throw new Error(e)}function BP(e,t,r){return t==="cube"?34069+r:e}function NP(e,t){let{sourceX:r=0,sourceY:n=0,sourceAttachment:s=0}=t||{},{target:i=null,sourceWidth:o,sourceHeight:a,sourceDepth:c,sourceFormat:l,sourceType:f}=t||{},{framebuffer:h,deleteFramebuffer:u}=DP(e),{gl:d,handle:p}=h;o||=h.width,a||=h.height;let m=h.colorAttachments[s]?.texture;if(!m)throw new Error(`Invalid framebuffer attachment ${s}`);c=m?.depth||1,l||=m?.glFormat||6408,f||=m?.glType||5121,i=rY(i,f,l,o,a,c),f=f||PP(i);let g=d.bindFramebuffer(36160,p);return d.readBuffer(36064+s),d.readPixels(r,n,o,a,l,f,i),d.readBuffer(36064),d.bindFramebuffer(36160,g||null),u&&h.destroy(),i}function FP(e,t){let{target:r,sourceX:n=0,sourceY:s=0,sourceFormat:i=6408,targetByteOffset:o=0}=t||{},{sourceWidth:a,sourceHeight:c,sourceType:l}=t||{},{framebuffer:f,deleteFramebuffer:h}=DP(e);a=a||f.width,c=c||f.height;let u=f;l=l||5121;let d=r;if(!d){let m=RA(i),g=RP(l),x=o+a*c*m*g;d=u.device.createBuffer({byteLength:x})}let p=e.device.createCommandEncoder();return p.copyTextureToBuffer({sourceTexture:e,width:a,height:c,origin:[n,s],destinationBuffer:d,byteOffset:o}),p.destroy(),h&&f.destroy(),d}function DP(e){return e instanceof On?{framebuffer:e,deleteFramebuffer:!1}:{framebuffer:eY(e),deleteFramebuffer:!0}}function eY(e,t){let{device:r,width:n,height:s,id:i}=e;return r.createFramebuffer({...t,id:`framebuffer-for-${i}`,width:n,height:s,colorAttachments:[e]})}function rY(e,t,r,n,s,i){if(e)return e;t||=5121;let o=IP(t,{clamped:!1}),a=RA(r);return new o(n*s*a)}var Gn=class extends at{device;gl;handle;sampler=void 0;view=void 0;mipmaps;compressed;glTarget;glFormat;glType;glInternalFormat;textureUnit=0;constructor(t,r){super(t,r);let n={...this.props};n.data=r.data,this.device=t,this.gl=this.device.gl,this.glTarget=LP(this.props.dimension);let s=cg(this.props.format);this.glInternalFormat=s.internalFormat,this.glFormat=s.format,this.glType=s.type,this.compressed=s.compressed,this.mipmaps=Boolean(this.props.mipmaps),this._initialize(n),Object.seal(this)}_initialize(t){this.handle=this.props.handle||this.gl.createTexture(),this.device.setSpectorMetadata(this.handle,{...this.props,data:t.data});let{width:r,height:n}=t;if(!r||!n){let s=at.getTextureDataSize(t.data);r=s?.width||1,n=s?.height||1}if(this.width=r,this.height=n,this.depth=t.depth,this.setSampler(t.sampler),this.view=new Hn(this.device,{...this.props,texture:this}),this.bind(),OP(this.gl,this.mipLevels,this),t.data)switch(t.dimension){case"1d":this.setTexture1DData(t.data);break;case"2d":this.setTexture2DData(t.data);break;case"3d":this.setTexture3DData(t.data);break;case"cube":this.setTextureCubeData(t.data);break;case"2d-array":this.setTextureArrayData(t.data);break;case"cube-array":this.setTextureCubeArrayData(t.data);break;default:throw new Error(t.dimension)}this.mipmaps&&this.generateMipmap()}destroy(){this.handle&&(this.gl.deleteTexture(this.handle),this.removeStats(),this.trackDeallocatedMemory("Texture"),this.destroyed=!0)}createView(t){return new Hn(this.device,{...t,texture:this})}setSampler(t={}){let r;t instanceof Ro?(this.sampler=t,r=t.props):(this.sampler=new Ro(this.device,t),r=t);let n=xg(r);this._setSamplerParameters(n)}generateMipmap(t){if(!(!(this.device.isTextureFormatRenderable(this.props.format)&&this.device.isTextureFormatFilterable(this.props.format))&&(U.warn(`${this} is not renderable or filterable, may not be able to generate mipmaps`)(),!t?.force)))try{this.gl.bindTexture(this.glTarget,this.handle),this.gl.generateMipmap(this.glTarget)}catch(n){U.warn(`Error generating mipmap for ${this}: ${n.message}`)()}finally{this.gl.bindTexture(this.glTarget,null)}}copyExternalImage(t){let r=at.getExternalImageSize(t.image),n={...at.defaultCopyExternalImageOptions,...r,...t},{image:s,depth:i,mipLevel:o,x:a,y:c,z:l,flipY:f}=n,{width:h,height:u}=n,{dimension:d,glTarget:p,glFormat:m,glInternalFormat:g,glType:x}=this;if(h=Math.min(h,this.width-a),u=Math.min(u,this.height-c),t.sourceX||t.sourceY)throw new Error("WebGL does not support sourceX/sourceY)");return OA(this.device.gl,this.handle,s,{dimension:d,mipLevel:o,x:a,y:c,z:l,width:h,height:u,depth:i,glFormat:m,glInternalFormat:g,glType:x,glTarget:p,flipY:f}),{width:n.width,height:n.height}}setTexture1DData(t){throw new Error("setTexture1DData not supported in WebGL.")}setTexture2DData(t,r=0){this.bind();let n=at.normalizeTextureData(t,this);n.length>1&&this.props.mipmaps!==!1&&U.warn(`Texture ${this.id} mipmap and multiple LODs.`)();for(let s=0;s<n.length;s++){let i=n[s];this._setMipLevel(r,s,i)}this.unbind()}setTexture3DData(t){if(this.props.dimension!=="3d")throw new Error(this.id);ArrayBuffer.isView(t)&&(this.bind(),LA(this.device.gl,t,this),this.unbind())}setTextureCubeData(t,r=0){if(this.props.dimension!=="cube")throw new Error(this.id);for(let n of at.CubeFaces)this.setTextureCubeFaceData(t[n],n)}setTextureArrayData(t){throw this.props.dimension!=="2d-array"?new Error(this.id):new Error("setTextureArrayData not implemented.")}setTextureCubeArrayData(t){throw new Error("setTextureCubeArrayData not supported in WebGL2.")}setTextureCubeFaceData(t,r,n=0){Array.isArray(t)&&t.length>1&&this.props.mipmaps!==!1&&U.warn(`${this.id} has mipmap and multiple LODs.`)();let s=at.CubeFaces.indexOf(r);this.setTexture2DData(t,s)}update(){throw new Error("Texture.update() not implemented. Use ExternalTexture")}setImageDataForFace(t){let{face:r,width:n,height:s,pixels:i,data:o,format:a=6408,type:c=5121}=t,{gl:l}=this,f=i||o;this.bind(),f instanceof Promise?f.then(h=>this.setImageDataForFace(Object.assign({},t,{face:r,data:h,pixels:h}))):this.width||this.height?l.texImage2D(r,0,a,n,s,0,a,c,f):l.texImage2D(r,0,a,a,c,f)}_getImageDataMap(t){for(let r=0;r<at.CubeFaces.length;++r){let n=at.CubeFaces[r];t[n]&&(t[34069+r]=t[n],delete t[n])}return t}_setSamplerParameters(t){U.log(1,`${this.id} sampler parameters`,this.device.getGLKeys(t))(),this.gl.bindTexture(this.glTarget,this.handle);for(let[r,n]of Object.entries(t)){let s=Number(r),i=n;switch(s){case 33082:case 33083:this.gl.texParameterf(this.glTarget,s,i);break;case 10241:this.gl.texParameteri(this.glTarget,s,i);break;case 10242:case 10243:this.gl.texParameteri(this.glTarget,s,i);break;case 34046:this.device.features.has("texture-filterable-anisotropic-webgl")&&this.gl.texParameteri(this.glTarget,s,i);break;default:this.gl.texParameteri(this.glTarget,s,i);break}}this.gl.bindTexture(this.glTarget,null)}_setMipLevel(t,r,n,s=this.glTarget){if(at.isExternalImage(n)){OA(this.device.gl,this.handle,n,{...this,depth:t,mipLevel:r,glTarget:s,flipY:this.props.flipY});return}if(at.isTextureLevelData(n)){LA(this.device.gl,n.data,{...this,depth:t,mipLevel:r,glTarget:s});return}throw new Error("Texture: invalid image data")}getActiveUnit(){return this.gl.getParameter(34016)-33984}bind(t){let{gl:r}=this;return t!==void 0&&(this.textureUnit=t,r.activeTexture(33984+t)),r.bindTexture(this.glTarget,this.handle),t}unbind(t){let{gl:r}=this;return t!==void 0&&(this.textureUnit=t,r.activeTexture(33984+t)),r.bindTexture(this.glTarget,null),t}};var nY=[1,2,4,8],_g=class extends fs{device;glParameters;constructor(t,r){super(t,r),this.device=t;let n;if(!r?.parameters?.viewport)if(r?.framebuffer){let{width:i,height:o}=r.framebuffer;n=[0,0,i,o]}else{let[i,o]=t.getCanvasContext().getDrawingBufferSize();n=[0,0,i,o]}if(this.device.pushState(),this.setParameters({viewport:n,...this.props.parameters}),this.props.framebuffer?.handle)if(this.props.framebuffer){let i=this.props.framebuffer.colorAttachments.map((o,a)=>36064+a);this.device.gl.drawBuffers(i)}else this.device.gl.drawBuffers([1029]);this.clear()}end(){this.device.popState()}pushDebugGroup(t){}popDebugGroup(){}insertDebugMarker(t){}setParameters(t={}){let r={...this.glParameters};r.framebuffer=this.props.framebuffer||null,this.props.depthReadOnly&&(r.depthMask=!this.props.depthReadOnly),r.stencilMask=this.props.stencilReadOnly?0:1,r[35977]=this.props.discard,t.viewport&&(t.viewport.length>=6?(r.viewport=t.viewport.slice(0,4),r.depthRange=[t.viewport[4],t.viewport[5]]):r.viewport=t.viewport),t.scissorRect&&(r.scissorTest=!0,r.scissor=t.scissorRect),t.blendConstant&&(r.blendColor=t.blendConstant),t.stencilReference&&(console.warn("RenderPassParameters.stencilReference not yet implemented in WebGL"),t[2967]=t.stencilReference),t.colorMask&&(r.colorMask=nY.map(n=>Boolean(n&t.colorMask))),this.glParameters=r,hn(this.device.gl,r)}beginOcclusionQuery(t){this.props.occlusionQuerySet?.beginOcclusionQuery()}endOcclusionQuery(){this.props.occlusionQuerySet?.endOcclusionQuery()}clear(){let t={...this.glParameters},r=0;this.props.clearColors&&this.props.clearColors.forEach((n,s)=>{n&&this.clearColorBuffer(s,n)}),this.props.clearColor!==!1&&this.props.clearColors===void 0&&(r|=16384,t.clearColor=this.props.clearColor),this.props.clearDepth!==!1&&(r|=256,t.clearDepth=this.props.clearDepth),this.props.clearStencil!==!1&&(r|=1024,t.clearStencil=this.props.clearStencil),r!==0&&Oo(this.device.gl,t,()=>{this.device.gl.clear(r)})}clearColorBuffer(t=0,r=[0,0,0,0]){Oo(this.device.gl,{framebuffer:this.props.framebuffer},()=>{switch(r.constructor){case Int8Array:case Int16Array:case Int32Array:this.device.gl.clearBufferiv(6144,t,r);break;case Uint8Array:case Uint8ClampedArray:case Uint16Array:case Uint32Array:this.device.gl.clearBufferuiv(6144,t,r);break;case Float32Array:this.device.gl.clearBufferfv(6144,t,r);break;default:throw new Error("clearColorBuffer: color must be typed array")}})}};function kP(e){return sY.includes(e)}var sY=[35678,35680,35679,35682,36289,36292,36293,36298,36299,36300,36303,36306,36307,36308,36311],UP={[5126]:[5126,1,"float","f32","float32"],[35664]:[5126,2,"vec2","vec2<f32>","float32x2"],[35665]:[5126,3,"vec3","vec3<f32>","float32x3"],[35666]:[5126,4,"vec4","vec4<f32>","float32x4"],[5124]:[5124,1,"int","i32","sint32"],[35667]:[5124,2,"ivec2","vec2<i32>","sint32x2"],[35668]:[5124,3,"ivec3","vec3<i32>","sint32x3"],[35669]:[5124,4,"ivec4","vec4<i32>","sint32x4"],[5125]:[5125,1,"uint","u32","uint32"],[36294]:[5125,2,"uvec2","vec2<u32>","uint32x2"],[36295]:[5125,3,"uvec3","vec3<u32>","uint32x3"],[36296]:[5125,4,"uvec4","vec4<u32>","uint32x4"],[35670]:[5126,1,"bool","f32","float32"],[35671]:[5126,2,"bvec2","vec2<f32>","float32x2"],[35672]:[5126,3,"bvec3","vec3<f32>","float32x3"],[35673]:[5126,4,"bvec4","vec4<f32>","float32x4"],[35674]:[5126,8,"mat2","mat2x2<f32>"],[35685]:[5126,8,"mat2x3","mat2x3<f32>"],[35686]:[5126,8,"mat2x4","mat2x4<f32>"],[35687]:[5126,12,"mat3x2","mat3x2<f32>"],[35675]:[5126,12,"mat3","mat3x3<f32>"],[35688]:[5126,12,"mat3x4","mat3x4<f32>"],[35689]:[5126,16,"mat4x2","mat4x2<f32>"],[35690]:[5126,16,"mat4x3","mat4x3<f32>"],[35676]:[5126,16,"mat4","mat4x4<f32>"]};function BA(e){let t=UP[e];if(!t)throw new Error("uniform");let[r,n,,s]=t;return{format:s,components:n,glType:r}}function zP(e){let t=UP[e];if(!t)throw new Error("attribute");let[,r,,n,s]=t;return{attributeType:n,vertexFormat:s,components:r}}function VP(e,t){let r={attributes:[],bindings:[]};r.attributes=iY(e,t);let n=cY(e,t);for(let a of n){let c=a.uniforms.map(l=>({name:l.name,format:l.format,byteOffset:l.byteOffset,byteStride:l.byteStride,arrayLength:l.arrayLength}));r.bindings.push({type:"uniform",name:a.name,group:0,location:a.location,visibility:(a.vertex?1:0)&(a.fragment?2:0),minBindingSize:a.byteLength,uniforms:c})}let s=aY(e,t),i=0;for(let a of s)if(kP(a.type)){let{viewDimension:c,sampleType:l}=fY(a.type);r.bindings.push({type:"texture",name:a.name,group:0,location:i,viewDimension:c,sampleType:l}),a.textureUnit=i,i+=1}s.length&&(r.uniforms=s);let o=oY(e,t);return o?.length&&(r.varyings=o),r}function iY(e,t){let r=[],n=e.getProgramParameter(t,35721);for(let s=0;s<n;s++){let i=e.getActiveAttrib(t,s);if(!i)throw new Error("activeInfo");let{name:o,type:a}=i,c=e.getAttribLocation(t,o);if(c>=0){let{attributeType:l}=zP(a),f=/instance/i.test(o)?"instance":"vertex";r.push({name:o,location:c,stepMode:f,type:l})}}return r.sort((s,i)=>s.location-i.location),r}function oY(e,t){let r=[],n=e.getProgramParameter(t,35971);for(let s=0;s<n;s++){let i=e.getTransformFeedbackVarying(t,s);if(!i)throw new Error("activeInfo");let{name:o,type:a,size:c}=i,{glType:l,components:f}=BA(a),h={location:s,name:o,type:l,size:c*f};r.push(h)}return r.sort((s,i)=>s.location-i.location),r}function aY(e,t){let r=[],n=e.getProgramParameter(t,35718);for(let s=0;s<n;s++){let i=e.getActiveUniform(t,s);if(!i)throw new Error("activeInfo");let{name:o,size:a,type:c}=i,{name:l,isArray:f}=hY(o),h=e.getUniformLocation(t,l),u={location:h,name:l,size:a,type:c,isArray:f};if(r.push(u),u.size>1)for(let d=0;d<u.size;d++){let p=`${l}[${d}]`;h=e.getUniformLocation(t,p);let m={...u,name:p,location:h};r.push(m)}}return r}function cY(e,t){let r=(i,o)=>e.getActiveUniformBlockParameter(t,i,o),n=[],s=e.getProgramParameter(t,35382);for(let i=0;i<s;i++){let o={name:e.getActiveUniformBlockName(t,i)||"",location:r(i,35391),byteLength:r(i,35392),vertex:r(i,35396),fragment:r(i,35398),uniformCount:r(i,35394),uniforms:[]},a=r(i,35395)||[],c=e.getActiveUniforms(t,a,35383),l=e.getActiveUniforms(t,a,35384),f=e.getActiveUniforms(t,a,35387),h=e.getActiveUniforms(t,a,35388);for(let u=0;u<o.uniformCount;++u){let d=e.getActiveUniform(t,a[u]);if(!d)throw new Error("activeInfo");o.uniforms.push({name:d.name,format:BA(c[u]).format,type:c[u],arrayLength:l[u],byteOffset:f[u],byteStride:h[u]})}n.push(o)}return n.sort((i,o)=>i.location-o.location),n}var lY={[35678]:["2d","float"],[35680]:["cube","float"],[35679]:["3d","float"],[35682]:["3d","depth"],[36289]:["2d-array","float"],[36292]:["2d-array","depth"],[36293]:["cube","float"],[36298]:["2d","sint"],[36299]:["3d","sint"],[36300]:["cube","sint"],[36303]:["2d-array","uint"],[36306]:["2d","uint"],[36307]:["3d","uint"],[36308]:["cube","uint"],[36311]:["2d-array","uint"]};function fY(e){let t=lY[e];if(!t)throw new Error("sampler");let[r,n]=t;return{viewDimension:r,sampleType:n}}function hY(e){if(e[e.length-1]!=="]")return{name:e,length:1,isArray:!1};let r=/([^[]*)(\[[0-9]+\])?/.exec(e);if(!r||r.length<2)throw new Error(`Failed to parse GLSL uniform name ${e}`);return{name:r[1],length:r[2]?1:0,isArray:Boolean(r[2])}}function WP(e,t,r,n){let s=e,i=n;i===!0&&(i=1),i===!1&&(i=0);let o=typeof i=="number"?[i]:i;switch(r){case 35678:case 35680:case 35679:case 35682:case 36289:case 36292:case 36293:case 36298:case 36299:case 36300:case 36303:case 36306:case 36307:case 36308:case 36311:if(typeof n!="number")throw new Error("samplers must be set to integers");return e.uniform1i(t,n);case 5126:return e.uniform1fv(t,o);case 35664:return e.uniform2fv(t,o);case 35665:return e.uniform3fv(t,o);case 35666:return e.uniform4fv(t,o);case 5124:return e.uniform1iv(t,o);case 35667:return e.uniform2iv(t,o);case 35668:return e.uniform3iv(t,o);case 35669:return e.uniform4iv(t,o);case 35670:return e.uniform1iv(t,o);case 35671:return e.uniform2iv(t,o);case 35672:return e.uniform3iv(t,o);case 35673:return e.uniform4iv(t,o);case 5125:return s.uniform1uiv(t,o,1);case 36294:return s.uniform2uiv(t,o,2);case 36295:return s.uniform3uiv(t,o,3);case 36296:return s.uniform4uiv(t,o,4);case 35674:return e.uniformMatrix2fv(t,!1,o);case 35675:return e.uniformMatrix3fv(t,!1,o);case 35676:return e.uniformMatrix4fv(t,!1,o);case 35685:return s.uniformMatrix2x3fv(t,!1,o);case 35686:return s.uniformMatrix2x4fv(t,!1,o);case 35687:return s.uniformMatrix3x2fv(t,!1,o);case 35688:return s.uniformMatrix3x4fv(t,!1,o);case 35689:return s.uniformMatrix4x2fv(t,!1,o);case 35690:return s.uniformMatrix4x3fv(t,!1,o)}throw new Error("Illegal uniform")}function uY(e){return oh(e)!==null||typeof e=="number"||typeof e=="boolean"}function HP(e){let t={bindings:{},uniforms:{}};return Object.keys(e).forEach(r=>{let n=e[r];uY(n)?t.uniforms[r]=n:t.bindings[r]=n}),t}function GP(e){switch(e){case"point-list":return 0;case"line-list":return 1;case"line-strip":return 3;case"triangle-list":return 4;case"triangle-strip":return 5;default:throw new Error(e)}}function jP(e){switch(e){case"point-list":return 0;case"line-list":return 1;case"line-strip":return 1;case"triangle-list":return 4;case"triangle-strip":return 4;default:throw new Error(e)}}var qP=4,yg=class extends Qr{device;handle;vs;fs;introspectedLayout;uniforms={};bindings={};varyings=null;_uniformCount=0;_uniformSetters={};constructor(t,r){super(t,r),this.device=t,this.handle=this.props.handle||this.device.gl.createProgram(),this.device.setSpectorMetadata(this.handle,{id:this.props.id}),this.vs=r.vs,this.fs=r.fs;let{varyings:n,bufferMode:s=35981}=r;n&&n.length>0&&(this.varyings=n,this.device.gl.transformFeedbackVaryings(this.handle,n,s)),this._linkShaders(),U.time(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.introspectedLayout=VP(this.device.gl,this.handle),U.timeEnd(1,`RenderPipeline ${this.id} - shaderLayout introspection`)(),this.shaderLayout=dY(this.introspectedLayout,r.shaderLayout)}destroy(){this.handle&&(this.device.gl.deleteProgram(this.handle),this.destroyed=!0)}setBindings(t,r){for(let[n,s]of Object.entries(t)){let i=this.shaderLayout.bindings.find(o=>o.name===n)||this.shaderLayout.bindings.find(o=>o.name===`${n}Uniforms`);if(!i){let o=this.shaderLayout.bindings.map(a=>`"${a.name}"`).join(", ");r?.disableWarnings||U.warn(`No binding "${n}" in render pipeline "${this.id}", expected one of ${o}`,s)();continue}switch(s||U.warn(`Unsetting binding "${n}" in render pipeline "${this.id}"`)(),i.type){case"uniform":if(!(s instanceof dn)&&!(s.buffer instanceof dn))throw new Error("buffer value");break;case"texture":if(!(s instanceof Hn||s instanceof Gn||s instanceof Wn))throw new Error("texture value");break;case"sampler":U.warn(`Ignoring sampler ${n}`)();break;default:throw new Error(i.type)}this.bindings[n]=s}}draw(t){let{renderPass:r,parameters:n=this.props.parameters,topology:s=this.props.topology,vertexArray:i,vertexCount:o,instanceCount:a,isInstanced:c=!1,firstVertex:l=0,transformFeedback:f}=t,h=GP(s),u=Boolean(i.indexBuffer),d=i.indexBuffer?.glIndexType;if(this.linkStatus!=="success")return U.info(2,`RenderPipeline:${this.id}.draw() aborted - waiting for shader linking`)(),!1;if(!this._areTexturesRenderable())return U.info(2,`RenderPipeline:${this.id}.draw() aborted - textures not yet loaded`)(),!1;this.device.gl.useProgram(this.handle),i.bindBeforeRender(r),f&&f.begin(this.props.topology),this._applyBindings(),this._applyUniforms();let p=r;return CP(this.device,n,p.glParameters,()=>{u&&c?this.device.gl.drawElementsInstanced(h,o||0,d,l,a||0):u?this.device.gl.drawElements(h,o||0,d,l):c?this.device.gl.drawArraysInstanced(h,l,o||0,a||0):this.device.gl.drawArrays(h,l,o||0),f&&f.end()}),i.unbindAfterRender(r),!0}setUniformsWebGL(t){let{bindings:r}=HP(t);Object.keys(r).forEach(n=>{U.warn(`Unsupported value "${JSON.stringify(r[n])}" used in setUniforms() for key ${n}. Use setBindings() instead?`)()}),Object.assign(this.uniforms,t)}async _linkShaders(){let{gl:t}=this.device;if(t.attachShader(this.handle,this.vs.handle),t.attachShader(this.handle,this.fs.handle),U.time(qP,`linkProgram for ${this.id}`)(),t.linkProgram(this.handle),U.timeEnd(qP,`linkProgram for ${this.id}`)(),U.level,!this.device.features.has("compilation-status-async-webgl")){let n=this._getLinkStatus();this._reportLinkStatus(n);return}U.once(1,"RenderPipeline linking is asynchronous")(),await this._waitForLinkComplete(),U.info(2,`RenderPipeline ${this.id} - async linking complete: ${this.linkStatus}`)();let r=this._getLinkStatus();this._reportLinkStatus(r)}async _reportLinkStatus(t){switch(t){case"success":return;default:switch(this.vs.compilationStatus){case"error":throw this.vs.debugShader(),new Error(`Error during compilation of shader ${this.vs.id}`);case"pending":this.vs.asyncCompilationStatus.then(()=>this.vs.debugShader());break;case"success":break}switch(this.fs?.compilationStatus){case"error":throw this.fs.debugShader(),new Error(`Error during compilation of shader ${this.fs.id}`);case"pending":this.fs.asyncCompilationStatus.then(()=>this.fs.debugShader());break;case"success":break}let r=this.device.gl.getProgramInfoLog(this.handle);throw new Error(`Error during ${t}: ${r}`)}}_getLinkStatus(){let{gl:t}=this.device;return t.getProgramParameter(this.handle,35714)?(t.validateProgram(this.handle),t.getProgramParameter(this.handle,35715)?(this.linkStatus="success","success"):(this.linkStatus="error","validation")):(this.linkStatus="error","linking")}async _waitForLinkComplete(){let t=async s=>await new Promise(i=>setTimeout(i,s));if(!this.device.features.has("compilation-status-async-webgl")){await t(10);return}let{gl:n}=this.device;for(;;){if(n.getProgramParameter(this.handle,37297))return;await t(10)}}_areTexturesRenderable(){let t=!0;for(let r of this.shaderLayout.bindings)!this.bindings[r.name]&&!this.bindings[r.name.replace(/Uniforms$/,"")]&&(U.warn(`Binding ${r.name} not found in ${this.id}`)(),t=!1);return t}_applyBindings(){if(this.linkStatus!=="success")return;let{gl:t}=this.device;t.useProgram(this.handle);let r=0,n=0;for(let s of this.shaderLayout.bindings){let i=this.bindings[s.name]||this.bindings[s.name.replace(/Uniforms$/,"")];if(!i)throw new Error(`No value for binding ${s.name} in ${this.id}`);switch(s.type){case"uniform":let{name:o}=s,a=t.getUniformBlockIndex(this.handle,o);if(a===4294967295)throw new Error(`Invalid uniform block name ${o}`);t.uniformBlockBinding(this.handle,n,a),i instanceof dn?t.bindBufferBase(35345,n,i.handle):t.bindBufferRange(35345,n,i.buffer.handle,i.offset||0,i.size||i.buffer.byteLength-i.offset),n+=1;break;case"texture":if(!(i instanceof Hn||i instanceof Gn||i instanceof Wn))throw new Error("texture");let c;if(i instanceof Hn)c=i.texture;else if(i instanceof Gn)c=i;else if(i instanceof Wn&&i.colorAttachments[0]instanceof Hn)U.warn("Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead")(),c=i.colorAttachments[0].texture;else throw new Error("No texture");t.activeTexture(33984+r),t.bindTexture(c.glTarget,c.handle),r+=1;break;case"sampler":break;case"storage":case"read-only-storage":throw new Error(`binding type '${s.type}' not supported in WebGL`)}}}_applyUniforms(){for(let t of this.shaderLayout.uniforms||[]){let{name:r,location:n,type:s,textureUnit:i}=t,o=this.uniforms[r]??i;o!==void 0&&WP(this.device.gl,n,s,o)}}};function dY(e,t){let r={...e,attributes:e.attributes.map(n=>({...n}))};for(let n of t?.attributes||[]){let s=r.attributes.find(i=>i.name===n.name);s?(s.type=n.type||s.type,s.stepMode=n.stepMode||s.stepMode):U.warn(`shader layout attribute ${n.name} not present in shader`)}return r}var Ag=class extends Fa{device;commands=[];constructor(t){super(t,{}),this.device=t}submitCommands(t=this.commands){for(let r of t)switch(r.name){case"copy-buffer-to-buffer":pY(this.device,r.options);break;case"copy-buffer-to-texture":mY(this.device,r.options);break;case"copy-texture-to-buffer":gY(this.device,r.options);break;case"copy-texture-to-texture":xY(this.device,r.options);break;default:throw new Error(r.name)}}};function pY(e,t){let r=t.sourceBuffer,n=t.destinationBuffer;e.gl.bindBuffer(36662,r.handle),e.gl.bindBuffer(36663,n.handle),e.gl.copyBufferSubData(36662,36663,t.sourceOffset??0,t.destinationOffset??0,t.size),e.gl.bindBuffer(36662,null),e.gl.bindBuffer(36663,null)}function mY(e,t){throw new Error("Not implemented")}function gY(e,t){let{sourceTexture:r,mipLevel:n=0,aspect:s="all",width:i=t.sourceTexture.width,height:o=t.sourceTexture.height,depthOrArrayLayers:a=0,origin:c=[0,0],destinationBuffer:l,byteOffset:f=0,bytesPerRow:h,rowsPerImage:u}=t;if(s!=="all")throw new Error("aspect not supported in WebGL");if(n!==0||a!==0||h||u)throw new Error("not implemented");let{framebuffer:d,destroyFramebuffer:p}=XP(r),m;try{let g=l,x=i||d.width,A=o||d.height,_=cg(d.colorAttachments[0].texture.props.format),y=_.format,T=_.type;e.gl.bindBuffer(35051,g.handle),m=e.gl.bindFramebuffer(36160,d.handle),e.gl.readPixels(c[0],c[1],x,A,y,T,f)}finally{e.gl.bindBuffer(35051,null),m!==void 0&&e.gl.bindFramebuffer(36160,m),p&&d.destroy()}}function xY(e,t){let{sourceTexture:r,destinationMipLevel:n=0,origin:s=[0,0],destinationOrigin:i=[0,0],destinationTexture:o}=t,{width:a=t.destinationTexture.width,height:c=t.destinationTexture.height}=t,{framebuffer:l,destroyFramebuffer:f}=XP(r),[h,u]=s,[d,p,m]=i,g=e.gl.bindFramebuffer(36160,l.handle),x=null,A;if(o instanceof Gn)x=o,a=Number.isFinite(a)?a:x.width,c=Number.isFinite(c)?c:x.height,x.bind(0),A=x.glTarget;else throw new Error("invalid destination");switch(A){case 3553:case 34067:e.gl.copyTexSubImage2D(A,n,d,p,h,u,a,c);break;case 35866:case 32879:e.gl.copyTexSubImage3D(A,n,d,p,m,h,u,a,c);break;default:}x&&x.unbind(),e.gl.bindFramebuffer(36160,g),f&&l.destroy()}function XP(e){if(e instanceof at){let{width:t,height:r,id:n}=e;return{framebuffer:e.device.createFramebuffer({id:`framebuffer-for-${n}`,width:t,height:r,colorAttachments:[e]}),destroyFramebuffer:!0}}return{framebuffer:e,destroyFramebuffer:!1}}var bg=class extends Na{device;commandBuffer;constructor(t,r){super(t,r),this.device=t,this.commandBuffer=new Ag(t)}destroy(){}finish(){this.commandBuffer.submitCommands()}copyBufferToBuffer(t){this.commandBuffer.commands.push({name:"copy-buffer-to-buffer",options:t})}copyBufferToTexture(t){this.commandBuffer.commands.push({name:"copy-buffer-to-texture",options:t})}copyTextureToBuffer(t){this.commandBuffer.commands.push({name:"copy-texture-to-buffer",options:t})}copyTextureToTexture(t){this.commandBuffer.commands.push({name:"copy-texture-to-texture",options:t})}pushDebugGroup(t){}popDebugGroup(){}insertDebugMarker(t){}resolveQuerySet(t,r,n){}};function YP(e){let{target:t,source:r,start:n=0,count:s=1}=e,i=r.length,o=s*i,a=0;for(let c=n;a<i;a++)t[c++]=r[a];for(;a<o;)a<o-a?(t.copyWithin(n+a,n,n+a),a*=2):(t.copyWithin(n+a,n,n+o-a),a=o);return e.target}var yc=class extends Da{get[Symbol.toStringTag](){return"VertexArray"}device;handle;buffer=null;bufferValue=null;static isConstantAttributeZeroSupported(t){return x_()==="Chrome"}constructor(t,r){super(t,r),this.device=t,this.handle=this.device.gl.createVertexArray()}destroy(){super.destroy(),this.buffer&&this.buffer?.destroy(),this.handle&&(this.device.gl.deleteVertexArray(this.handle),this.handle=void 0)}setIndexBuffer(t){let r=t;if(r&&r.glTarget!==34963)throw new Error("Use .setBuffer()");this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34963,r?r.handle:null),this.indexBuffer=r,this.device.gl.bindVertexArray(null)}setBuffer(t,r){let n=r;if(n.glTarget===34963)throw new Error("Use .setIndexBuffer()");let{size:s,type:i,stride:o,offset:a,normalized:c,integer:l,divisor:f}=this._getAccessor(t);this.device.gl.bindVertexArray(this.handle),this.device.gl.bindBuffer(34962,n.handle),l?this.device.gl.vertexAttribIPointer(t,s,i,o,a):this.device.gl.vertexAttribPointer(t,s,i,c,o,a),this.device.gl.bindBuffer(34962,null),this.device.gl.enableVertexAttribArray(t),this.device.gl.vertexAttribDivisor(t,f||0),this.attributes[t]=n,this.device.gl.bindVertexArray(null)}setConstantWebGL(t,r){this._enable(t,!1),this.attributes[t]=r}bindBeforeRender(){this.device.gl.bindVertexArray(this.handle),this._applyConstantAttributes()}unbindAfterRender(){this.device.gl.bindVertexArray(null)}_applyConstantAttributes(){for(let t=0;t<this.maxVertexAttributes;++t){let r=this.attributes[t];ArrayBuffer.isView(r)&&this.device.setConstantAttributeWebGL(t,r)}}_getAccessor(t){let r=this.attributeInfos[t];if(!r)throw new Error(`Unknown attribute location ${t}`);let n=og(r.bufferDataType);return{size:r.bufferComponents,type:n,stride:r.byteStride,offset:r.byteOffset,normalized:r.normalized,integer:r.integer,divisor:r.stepMode==="instance"?1:0}}_enable(t,r=!0){let s=yc.isConstantAttributeZeroSupported(this.device)||t!==0;(r||s)&&(t=Number(t),this.device.gl.bindVertexArray(this.handle),r?this.device.gl.enableVertexAttribArray(t):this.device.gl.disableVertexAttribArray(t),this.device.gl.bindVertexArray(null))}getConstantBuffer(t,r){let n=_Y(r),s=n.byteLength*t,i=n.length*t;if(this.buffer&&s!==this.buffer.byteLength)throw new Error(`Buffer size is immutable, byte length ${s} !== ${this.buffer.byteLength}.`);let o=!this.buffer;if(this.buffer=this.buffer||this.device.createBuffer({byteLength:s}),o=o||!yY(n,this.bufferValue),o){let a=Cy(r.constructor,i);YP({target:a,source:n,start:0,count:i}),this.buffer.write(a),this.bufferValue=r}return this.buffer}};function _Y(e){return Array.isArray(e)?new Float32Array(e):e}function yY(e,t){if(!e||!t||e.length!==t.length||e.constructor!==t.constructor)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r])return!1;return!0}var Tg=class extends ka{device;gl;handle;layout;buffers={};unusedBuffers={};bindOnUse=!0;_bound=!1;constructor(t,r){super(t,r),this.device=t,this.gl=t.gl,this.handle=this.props.handle||this.gl.createTransformFeedback(),this.layout=this.props.layout,r.buffers&&this.setBuffers(r.buffers),Object.seal(this)}destroy(){this.gl.deleteTransformFeedback(this.handle),super.destroy()}begin(t="point-list"){this.gl.bindTransformFeedback(36386,this.handle),this.bindOnUse&&this._bindBuffers(),this.gl.beginTransformFeedback(jP(t))}end(){this.gl.endTransformFeedback(),this.bindOnUse&&this._unbindBuffers(),this.gl.bindTransformFeedback(36386,null)}setBuffers(t){this.buffers={},this.unusedBuffers={},this.bind(()=>{for(let r in t)this.setBuffer(r,t[r])})}setBuffer(t,r){let n=this._getVaryingIndex(t),{buffer:s,byteLength:i,byteOffset:o}=this._getBufferRange(r);if(n<0){this.unusedBuffers[t]=s,U.warn(`${this.id} unusedBuffers varying buffer ${t}`)();return}this.buffers[n]={buffer:s,byteLength:i,byteOffset:o},this.bindOnUse||this._bindBuffer(n,s,o,i)}getBuffer(t){if($P(t))return this.buffers[t]||null;let r=this._getVaryingIndex(t);return r>=0?this.buffers[r]:null}bind(t=this.handle){if(typeof t!="function")return this.gl.bindTransformFeedback(36386,t),this;let r;return this._bound?r=t():(this.gl.bindTransformFeedback(36386,this.handle),this._bound=!0,r=t(),this._bound=!1,this.gl.bindTransformFeedback(36386,null)),r}unbind(){this.bind(null)}_getBufferRange(t){if(t instanceof dn)return{buffer:t,byteOffset:0,byteLength:t.byteLength};let{buffer:r,byteOffset:n=0,byteLength:s=t.buffer.byteLength}=t;return{buffer:r,byteOffset:n,byteLength:s}}_getVaryingIndex(t){if($P(t))return Number(t);for(let r of this.layout.varyings)if(t===r.name)return r.location;return-1}_bindBuffers(){for(let t in this.buffers){let{buffer:r,byteLength:n,byteOffset:s}=this._getBufferRange(this.buffers[t]);this._bindBuffer(Number(t),r,s,n)}}_unbindBuffers(){for(let t in this.buffers)this.gl.bindBufferBase(35982,Number(t),null)}_bindBuffer(t,r,n=0,s){let i=r&&r.handle;!i||s===void 0?this.gl.bindBufferBase(35982,t,i):this.gl.bindBufferRange(35982,t,i,n,s)}};function $P(e){return typeof e=="number"?Number.isInteger(e):/^\d+$/.test(e)}var vg=class extends Ua{device;handle;target=null;_queryPending=!1;_pollingPromise=null;get[Symbol.toStringTag](){return"Query"}constructor(t,r){if(super(t,r),this.device=t,r.count>1)throw new Error("WebGL QuerySet can only have one value");this.handle=this.device.gl.createQuery(),Object.seal(this)}destroy(){this.device.gl.deleteQuery(this.handle)}beginTimestampQuery(){return this._begin(35007)}endTimestampQuery(){this._end()}beginOcclusionQuery(t){return this._begin(t?.conservative?36202:35887)}endOcclusionQuery(){this._end()}beginTransformFeedbackQuery(){return this._begin(35976)}endTransformFeedbackQuery(){this._end()}async resolveQuery(){return[await this.pollQuery()]}_begin(t){this._queryPending||(this.target=t,this.device.gl.beginQuery(this.target,this.handle))}_end(){this._queryPending||this.target&&(this.device.gl.endQuery(this.target),this.target=null,this._queryPending=!0)}isResultAvailable(){if(!this._queryPending)return!1;let t=this.device.gl.getQueryParameter(this.handle,34919);return t&&(this._queryPending=!1),t}isTimerDisjoint(){return this.device.gl.getParameter(36795)}getResult(){return this.device.gl.getQueryParameter(this.handle,34918)}getTimerMilliseconds(){return this.getResult()/1e6}pollQuery(t=Number.POSITIVE_INFINITY){if(this._pollingPromise)return this._pollingPromise;let r=0;return this._pollingPromise=new Promise((n,s)=>{let i=()=>{this.isResultAvailable()?(n(this.getResult()),this._pollingPromise=null):r++>t?(s("Timed out"),this._pollingPromise=null):requestAnimationFrame(i)};requestAnimationFrame(i)}),this._pollingPromise}};var gr=class extends tr{type="webgl";handle;features;limits;info;canvasContext;lost;_resolveContextLost;gl;debug=!1;_canvasSizeInfo={clientWidth:0,clientHeight:0,devicePixelRatio:1};_extensions={};_polyfilled=!1;spectorJS;constructor(t){super({...t,id:t.id||EP("webgl-device")});let r=tr._getCanvasContextProps(t);if(!r)throw new Error("WebGLDevice requires props.createCanvasContext to be set");let n=r.canvas?.gl?.device;if(n)throw new Error(`WebGL context already attached to device ${n.id}`);this.canvasContext=new hg(this,r),this.lost=new Promise(f=>{this._resolveContextLost=f});let s={...t.webgl};r.alphaMode==="premultiplied"&&(s.premultipliedAlpha=!0),t.powerPreference!==void 0&&(s.powerPreference=t.powerPreference);let o=this.props._handle||aP(this.canvasContext.canvas,{onContextLost:f=>this._resolveContextLost?.({reason:"destroyed",message:"Entered sleep mode, or too many apps or browser tabs are using the GPU."}),onContextRestored:f=>console.log("WebGL context restored")},s);if(!o)throw new Error("WebGL context creation failed");if(n=o.device,n){if(t._reuseDevices)return U.log(1,`Not creating a new Device, instead returning a reference to Device ${n.id} already attached to WebGL context`,n)(),n._reused=!0,n;throw new Error(`WebGL context already attached to device ${n.id}`)}this.handle=o,this.gl=o,this.spectorJS=yP({...this.props,gl:this.handle}),this.gl.device=this,this.gl._version=2,this.info=cP(this.gl,this._extensions),this.limits=new fg(this.gl),this.features=new lg(this.gl,this._extensions,this.props._disabledFeatures),this.props._initializeFeatures&&this.features.initializeFeatures(),r.autoResize!==!1&&this.canvasContext.resize(),new un(this.gl,{log:(...f)=>U.log(1,...f)()}).trackState(this.gl,{copyState:!1});let c=t.debugWebGL||t.debug,l=t.debugWebGL;c&&(this.gl=vP(this.gl,{debugWebGL:c,traceWebGL:l}),U.warn("WebGL debug mode activated. Performance reduced.")(),t.debugWebGL&&(U.level=Math.max(U.level,1)))}destroy(){!this.props._reuseDevices&&!this._reused&&delete this.gl.device}get isLost(){return this.gl.isContextLost()}createCanvasContext(t){throw new Error("WebGL only supports a single canvas")}createBuffer(t){let r=this._normalizeBufferProps(t);return new dn(this,r)}createTexture(t){return new Gn(this,t)}createExternalTexture(t){throw new Error("createExternalTexture() not implemented")}createSampler(t){return new Ro(this,t)}createShader(t){return new pg(this,t)}createFramebuffer(t){return new Wn(this,t)}createVertexArray(t){return new yc(this,t)}createTransformFeedback(t){return new Tg(this,t)}createQuerySet(t){return new vg(this,t)}createRenderPipeline(t){return new yg(this,t)}beginRenderPass(t){return new _g(this,t)}createComputePipeline(t){throw new Error("ComputePipeline not supported in WebGL")}beginComputePass(t){throw new Error("ComputePass not supported in WebGL")}renderPass=null;createCommandEncoder(t={}){return new bg(this,t)}submit(){this.renderPass?.end(),this.renderPass=null}readPixelsToArrayWebGL(t,r){return NP(t,r)}readPixelsToBufferWebGL(t,r){return FP(t,r)}setParametersWebGL(t){hn(this.gl,t)}getParametersWebGL(t){return ig(this.gl,t)}withParametersWebGL(t,r){return Oo(this.gl,t,r)}resetWebGL(){U.warn("WebGLDevice.resetWebGL is deprecated, use only for debugging")(),sP(this.gl)}_getDeviceSpecificTextureFormatCapabilities(t){return pP(this.gl,t,this._extensions)}loseDevice(){let t=!1,n=this.getExtension("WEBGL_lose_context").WEBGL_lose_context;return n&&(t=!0,n.loseContext()),this._resolveContextLost?.({reason:"destroyed",message:"Application triggered context loss"}),t}pushState(){un.get(this.gl).push()}popState(){un.get(this.gl).pop()}setSpectorMetadata(t,r){t.__SPECTOR_Metadata=r}getGLKey(t,r){let n=Number(t);for(let s in this.gl)if(this.gl[s]===n)return`GL.${s}`;return r?.emptyIfUnknown?"":String(t)}getGLKeys(t){let r={emptyIfUnknown:!0};return Object.entries(t).reduce((n,[s,i])=>(n[`${s}:${this.getGLKey(s,r)}`]=`${i}:${this.getGLKey(i,r)}`,n),{})}_constants;setConstantAttributeWebGL(t,r){let n=this.limits.maxVertexAttributes;this._constants=this._constants||new Array(n).fill(null);let s=this._constants[t];switch(s&&vY(s,r)&&U.info(1,`setConstantAttributeWebGL(${t}) could have been skipped, value unchanged`)(),this._constants[t]=r,r.constructor){case Float32Array:AY(this,t,r);break;case Int32Array:bY(this,t,r);break;case Uint32Array:TY(this,t,r);break;default:throw new Error("constant")}}getExtension(t){return Vn(this.gl,t,this._extensions),this._extensions}};function AY(e,t,r){switch(r.length){case 1:e.gl.vertexAttrib1fv(t,r);break;case 2:e.gl.vertexAttrib2fv(t,r);break;case 3:e.gl.vertexAttrib3fv(t,r);break;case 4:e.gl.vertexAttrib4fv(t,r);break;default:}}function bY(e,t,r){e.gl.vertexAttribI4iv(t,r)}function TY(e,t,r){e.gl.vertexAttribI4uiv(t,r)}function vY(e,t){if(!e||!t||e.length!==t.length||e.constructor!==t.constructor)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r])return!1;return!0}var EY={WEBGL_depth_texture:{UNSIGNED_INT_24_8_WEBGL:34042},OES_element_index_uint:{},OES_texture_float:{},OES_texture_half_float:{HALF_FLOAT_OES:5131},EXT_color_buffer_float:{},OES_standard_derivatives:{FRAGMENT_SHADER_DERIVATIVE_HINT_OES:35723},EXT_frag_depth:{},EXT_blend_minmax:{MIN_EXT:32775,MAX_EXT:32776},EXT_shader_texture_lod:{}},MY=e=>({drawBuffersWEBGL(t){return e.drawBuffers(t)},COLOR_ATTACHMENT0_WEBGL:36064,COLOR_ATTACHMENT1_WEBGL:36065,COLOR_ATTACHMENT2_WEBGL:36066,COLOR_ATTACHMENT3_WEBGL:36067}),SY=e=>({VERTEX_ARRAY_BINDING_OES:34229,createVertexArrayOES(){return e.createVertexArray()},deleteVertexArrayOES(t){return e.deleteVertexArray(t)},isVertexArrayOES(t){return e.isVertexArray(t)},bindVertexArrayOES(t){return e.bindVertexArray(t)}}),wY=e=>({VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE:35070,drawArraysInstancedANGLE(...t){return e.drawArraysInstanced(...t)},drawElementsInstancedANGLE(...t){return e.drawElementsInstanced(...t)},vertexAttribDivisorANGLE(...t){return e.vertexAttribDivisor(...t)}});function KP(e=!0){let t=HTMLCanvasElement.prototype;if(!e&&t.originalGetContext){t.getContext=t.originalGetContext,t.originalGetContext=void 0;return}t.originalGetContext=t.getContext,t.getContext=function(r,n){if(r==="webgl"||r==="experimental-webgl"){let s=this.originalGetContext("webgl2",n);return s instanceof HTMLElement&&CY(s),s}return this.originalGetContext(r,n)}}function CY(e){e.getExtension("EXT_color_buffer_float");let t={...EY,WEBGL_disjoint_timer_query:e.getExtension("EXT_disjoint_timer_query_webgl2"),WEBGL_draw_buffers:MY(e),OES_vertex_array_object:SY(e),ANGLE_instanced_arrays:wY(e)},r=e.getExtension;e.getExtension=function(s){let i=r.call(e,s);return i||(s in t?t[s]:null)};let n=e.getSupportedExtensions;e.getSupportedExtensions=function(){return(n.apply(e)||[])?.concat(Object.keys(t))}}var Eg=1,NA=class extends xf{type="webgl";constructor(){super(),tr.defaultProps={...tr.defaultProps,...dg},gr.adapter=this}isSupported(){return typeof WebGL2RenderingContext<"u"}enforceWebGL2(t){KP(t)}async attach(t){if(t instanceof gr)return t;if(t?.device instanceof tr)return t.device;if(!PY(t))throw new Error("Invalid WebGL2RenderingContext");return new gr({_handle:t,createCanvasContext:{canvas:t.canvas,autoResize:!1}})}async create(t={}){U.groupCollapsed(Eg,"WebGLDevice created")();let r=[];(t.debugWebGL||t.debug)&&r.push(TP()),t.debugSpectorJS&&r.push(_P(t));let n=await Promise.allSettled(r);for(let o of n)o.status==="rejected"&&U.error(`Failed to initialize debug libraries ${o.reason}`)();let s=new gr(t),i=`${s._reused?"Reusing":"Created"} device with WebGL2 ${s.debug?"debug ":""}context: ${s.info.vendor}, ${s.info.renderer} for canvas: ${s.canvasContext.id}`;return U.probe(Eg,i)(),U.table(Eg,s.info)(),U.groupEnd(Eg)(),s}};function PY(e){return typeof WebGL2RenderingContext<"u"&&e instanceof WebGL2RenderingContext?!0:Boolean(e&&Number.isFinite(e._version))}var Mg=new NA;function yi(){}var IY=({isDragging:e})=>e?"grabbing":"grab",ZP={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,parameters:{},parent:null,device:null,deviceProps:{},gl:null,canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,widgets:[],onDeviceInitialized:yi,onWebGLInitialized:yi,onResize:yi,onViewStateChange:yi,onInteractionStateChange:yi,onBeforeRender:yi,onAfterRender:yi,onLoad:yi,onError:e=>W.error(e.message,e.cause)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:IY,getTooltip:null,debug:!1,drawPickingColors:!1},Mh=class{constructor(t){this.width=0,this.height=0,this.userData={},this.device=null,this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.widgetManager=null,this.tooltip=null,this.animationLoop=null,this.cursorState={isHovering:!1,isDragging:!1},this.stats=new Ue({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this._lastPointerDownInfo=null,this._onPointerMove=n=>{let{_pickRequest:s}=this;if(n.type==="pointerleave")s.x=-1,s.y=-1,s.radius=0;else{if(n.leftButton||n.rightButton)return;{let i=n.offsetCenter;if(!i)return;s.x=i.x,s.y=i.y,s.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:s.x,y:s.y}),s.event=n},this._onEvent=n=>{let s=Yf[n.type],i=n.offsetCenter;if(!s||!i||!this.layerManager)return;let o=this.layerManager.getLayers(),a=this.deckPicker.getLastPickedObject({x:i.x,y:i.y,layers:o,viewports:this.getViewports(i)},this._lastPointerDownInfo),{layer:c}=a,l=c&&(c[s]||c.props[s]),f=this.props[s],h=!1;l&&(h=l.call(c,a,n)),h||(f?.(a,n),this.widgetManager.onEvent(a,n))},this._onPointerDown=n=>{if(this.device?.type==="webgpu")return;let s=n.offsetCenter,i=this._pick("pickObject","pickObject Time",{x:s.x,y:s.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=i.result[0]||i.emptyInfo},this.props={...ZP,...t},t=this.props,t.viewState&&t.initialViewState&&W.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),this.viewState=this.props.initialViewState,t.device&&(this.device=t.device);let r=this.device;!r&&t.gl&&(t.gl instanceof WebGLRenderingContext&&W.error("WebGL1 context not supported.")(),r=Mg.attach(t.gl)),r||(r=Js.createDevice({type:"best-available",_reuseDevices:!0,adapters:[Mg],...t.deviceProps,createCanvasContext:{canvas:this._createCanvas(t),useDevicePixels:this.props.useDevicePixels,autoResize:!1}})),this.animationLoop=this._createAnimationLoop(r,t),this.setProps(t),t._typedArrayManagerProps&&an.setOptions(t._typedArrayManagerProps),this.animationLoop.start()}finalize(){this.animationLoop?.stop(),this.animationLoop?.destroy(),this.animationLoop=null,this._lastPointerDownInfo=null,this.layerManager?.finalize(),this.layerManager=null,this.viewManager?.finalize(),this.viewManager=null,this.effectManager?.finalize(),this.effectManager=null,this.deckRenderer?.finalize(),this.deckRenderer=null,this.deckPicker?.finalize(),this.deckPicker=null,this.eventManager?.destroy(),this.eventManager=null,this.widgetManager?.finalize(),this.widgetManager=null,!this.props.canvas&&!this.props.device&&!this.props.gl&&this.canvas&&(this.canvas.parentElement?.removeChild(this.canvas),this.canvas=null)}setProps(t){this.stats.get("setProps Time").timeStart(),"onLayerHover"in t&&W.removed("onLayerHover","onHover")(),"onLayerClick"in t&&W.removed("onLayerClick","onClick")(),t.initialViewState&&!it(this.props.initialViewState,t.initialViewState,3)&&(this.viewState=t.initialViewState),Object.assign(this.props,t),this._setCanvasSize(this.props);let r=Object.create(this.props);Object.assign(r,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),this.animationLoop?.setProps(r),this.layerManager&&(this.viewManager.setProps(r),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(r),this.effectManager.setProps(r),this.deckRenderer.setProps(r),this.deckPicker.setProps(r),this.widgetManager.setProps(r)),this.stats.get("setProps Time").timeEnd()}needsRedraw(t={clearRedrawFlags:!1}){if(!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let r=this._needsRedraw;t.clearRedrawFlags&&(this._needsRedraw=!1);let n=this.viewManager.needsRedraw(t),s=this.layerManager.needsRedraw(t),i=this.effectManager.needsRedraw(t),o=this.deckRenderer.needsRedraw(t);return r=r||n||s||i||o,r}redraw(t){if(!this.layerManager)return;let r=this.needsRedraw({clearRedrawFlags:!0});r=t||r,r&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(r):this._drawLayers(r))}get isInitialized(){return this.viewManager!==null}getViews(){return wt(this.viewManager),this.viewManager.views}getViewports(t){return wt(this.viewManager),this.viewManager.getViewports(t)}getCanvas(){return this.canvas}pickObject(t){let r=this._pick("pickObject","pickObject Time",t).result;return r.length?r[0]:null}pickMultipleObjects(t){return t.depth=t.depth||10,this._pick("pickObject","pickMultipleObjects Time",t).result}pickObjects(t){return this._pick("pickObjects","pickObjects Time",t)}_addResources(t,r=!1){for(let n in t)this.layerManager.resourceManager.add({resourceId:n,data:t[n],forceUpdate:r})}_removeResources(t){for(let r of t)this.layerManager.resourceManager.remove(r)}_addDefaultEffect(t){this.effectManager.addDefaultEffect(t)}_addDefaultShaderModule(t){this.layerManager.addDefaultShaderModule(t)}_removeDefaultShaderModule(t){this.layerManager?.removeDefaultShaderModule(t)}_pick(t,r,n){wt(this.deckPicker);let{stats:s}=this;s.get("Pick Count").incrementCount(),s.get(r).timeStart();let i=this.deckPicker[t]({layers:this.layerManager.getLayers(n),views:this.viewManager.getViews(),viewports:this.getViewports(n),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects(),...n});return s.get(r).timeEnd(),i}_createCanvas(t){let r=t.canvas;return typeof r=="string"&&(r=document.getElementById(r),wt(r)),r||(r=document.createElement("canvas"),r.id=t.id||"deckgl-overlay",(t.parent||document.body).appendChild(r)),Object.assign(r.style,t.style),r}_setCanvasSize(t){if(!this.canvas)return;let{width:r,height:n}=t;if(r||r===0){let s=Number.isFinite(r)?`${r}px`:r;this.canvas.style.width=s}if(n||n===0){let s=Number.isFinite(n)?`${n}px`:n;this.canvas.style.position=t.style?.position||"absolute",this.canvas.style.height=s}}_updateCanvasSize(){let{canvas:t}=this;if(!t)return;let r=t.clientWidth??t.width,n=t.clientHeight??t.height;(r!==this.width||n!==this.height)&&(this.width=r,this.height=n,this.viewManager?.setProps({width:r,height:n}),this.layerManager?.activateViewport(this.getViewports()[0]),this.props.onResize({width:r,height:n}))}_createAnimationLoop(t,r){let{gl:n,onError:s,useDevicePixels:i}=r;return new nh({device:t,useDevicePixels:i,autoResizeDrawingBuffer:!n,autoResizeViewport:!1,onInitialize:o=>this._setDevice(o.device),onRender:this._onRenderFrame.bind(this),onError:s})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){let{views:t}=this.props,r=Array.isArray(t)?t:t?[t]:[new xi({id:"default-view"})];return r.length&&this.props.controller&&(r[0].props.controller=this.props.controller),r}_onContextLost(){let{onError:t}=this.props;this.animationLoop&&t&&t(new Error("WebGL context is lost"))}_pickAndCallback(){if(this.device?.type==="webgpu")return;let{_pickRequest:t}=this;if(t.event){let{result:r,emptyInfo:n}=this._pick("pickObject","pickObject Time",t);this.cursorState.isHovering=r.length>0;let s=n,i=!1;for(let o of r)s=o,i=o.layer?.onHover(o,t.event)||i;i||(this.props.onHover?.(s,t.event),this.widgetManager.onHover(s,t.event)),t.event=null}}_updateCursor(){let t=this.props.parent||this.canvas;t&&(t.style.cursor=this.props.getCursor(this.cursorState))}_setDevice(t){if(this.device=t,!this.animationLoop)return;this.canvas||(this.canvas=this.device.canvasContext?.canvas),this.device.type==="webgl"&&this.device.setParametersWebGL({blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onDeviceInitialized(this.device),this.device.type==="webgl"&&this.props.onWebGLInitialized(this.device.gl);let r=new Eo;r.play(),this.animationLoop.attachTimeline(r),this.eventManager=new Xf(this.props.parent||this.canvas,{touchAction:this.props.touchAction,recognizers:Object.keys(nA).map(s=>{let[i,o,a,c]=nA[s],l=this.props.eventRecognizerOptions?.[s],f={...o,...l,event:s};return{recognizer:new i(f),recognizeWith:a,requestFailure:c}}),events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(let s in Yf)this.eventManager.on(s,this._onEvent);this.viewManager=new dh({timeline:r,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});let n=this.viewManager.getViewports()[0];this.layerManager=new So(this.device,{deck:this,stats:this.stats,viewport:n,timeline:r}),this.effectManager=new xh({deck:this,device:this.device}),this.deckRenderer=new Po(this.device),this.deckPicker=new yh(this.device),this.widgetManager=new sg({deck:this,parentElement:this.canvas?.parentElement}),this.widgetManager.addDefault(new Ah),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(t,r){let{device:n,gl:s}=this.layerManager.context;this.props.onBeforeRender({device:n,gl:s});let i={target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects(),...r};this.deckRenderer?.renderLayers(i),i.pass==="screen"&&this.widgetManager.onRedraw({viewports:i.viewports,layers:i.layers}),this.props.onAfterRender({device:n,gl:s})}_onRenderFrame(){this._getFrameStats(),this._metricsCounter++%60===0&&(this._getMetrics(),this.stats.reset(),W.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.layerManager.updateLayers(),this.device?.type!=="webgpu"&&this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(t){let r=this.props.onViewStateChange(t)||t.viewState;this.viewState&&(this.viewState={...this.viewState,[t.viewId]:r},this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(t){this.cursorState.isDragging=t.isDragging||!1,this.props.onInteractionStateChange(t)}_getFrameStats(){let{stats:t}=this;t.get("frameRate").timeEnd(),t.get("frameRate").timeStart();let r=this.animationLoop.stats;t.get("GPU Time").addTime(r.get("GPU Time").lastTiming),t.get("CPU Time").addTime(r.get("CPU Time").lastTiming)}_getMetrics(){let{metrics:t,stats:r}=this;t.fps=r.get("frameRate").getHz(),t.setPropsTime=r.get("setProps Time").time,t.updateAttributesTime=r.get("Update Attributes").time,t.framesRedrawn=r.get("Redraw Count").count,t.pickTime=r.get("pickObject Time").time+r.get("pickMultipleObjects Time").time+r.get("pickObjects Time").time,t.pickCount=r.get("Pick Count").count,t.gpuTime=r.get("GPU Time").time,t.cpuTime=r.get("CPU Time").time,t.gpuTimePerFrame=r.get("GPU Time").getAverageTime(),t.cpuTimePerFrame=r.get("CPU Time").getAverageTime();let n=Js.stats.get("Memory Usage");t.bufferMemory=n.get("Buffer Memory").count,t.textureMemory=n.get("Texture Memory").count,t.renderbufferMemory=n.get("Renderbuffer Memory").count,t.gpuMemory=n.get("GPU Memory").count}};Mh.defaultProps=ZP;Mh.VERSION=pp;var pn=Mh;function JP(e){switch(e){case"float64":return Float64Array;case"uint8":case"unorm8":return Uint8ClampedArray;default:return yf(e)}}var QP=Cp;function Sh(e,t,r){let n=r==="webgpu"&&t.type==="uint8"?"unorm8":t.type;return{attribute:e,format:t.size>1?`${n}x${t.size}`:t.type,byteOffset:t.offset||0}}function Ai(e){return e.stride||e.size*e.bytesPerElement}function tI(e,t){return e.type===t.type&&e.size===t.size&&Ai(e)===Ai(t)&&(e.offset||0)===(t.offset||0)}function FA(e,t){t.offset&&W.removed("shaderAttribute.offset","vertexOffset, elementOffset")();let r=Ai(e),n=t.vertexOffset!==void 0?t.vertexOffset:e.vertexOffset||0,s=t.elementOffset||0,i=n*r+s*e.bytesPerElement+(e.offset||0);return{...t,offset:i,stride:r}}function RY(e,t){let r=FA(e,t);return{high:r,low:{...r,offset:r.offset+e.size*4}}}var wh=class{constructor(t,r,n){this._buffer=null,this.device=t,this.id=r.id||"",this.size=r.size||1;let s=r.logicalType||r.type,i=s==="float64",{defaultValue:o}=r;o=Number.isFinite(o)?[o]:o||new Array(this.size).fill(0);let a;i?a="float32":!s&&r.isIndexed?a="uint32":a=s||"float32";let c=JP(s||a);this.doublePrecision=i,i&&r.fp64===!1&&(c=Float32Array),this.value=null,this.settings={...r,defaultType:c,defaultValue:o,logicalType:s,type:a,normalized:a.includes("norm"),size:this.size,bytesPerElement:c.BYTES_PER_ELEMENT},this.state={...n,externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1}}get isConstant(){return this.state.constant}get buffer(){return this._buffer}get byteOffset(){let t=this.getAccessor();return t.vertexOffset?t.vertexOffset*Ai(t):0}get numInstances(){return this.state.numInstances}set numInstances(t){this.state.numInstances=t}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),an.release(this.state.allocatedValue)}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(t=this.id,r=null){let n={};if(this.state.constant){let s=this.value;if(r){let i=FA(this.getAccessor(),r),o=i.offset/s.BYTES_PER_ELEMENT,a=i.size||this.size;n[t]=s.subarray(o,o+a)}else n[t]=s}else n[t]=this.getBuffer();return this.doublePrecision&&(this.value instanceof Float64Array?n[`${t}64Low`]=n[t]:n[`${t}64Low`]=new Float32Array(this.size)),n}_getBufferLayout(t=this.id,r=null){let n=this.getAccessor(),s=[],i={name:this.id,byteStride:Ai(n),attributes:s};if(this.doublePrecision){let o=RY(n,r||{});s.push(Sh(t,{...n,...o.high},this.device.type),Sh(`${t}64Low`,{...n,...o.low},this.device.type))}else if(r){let o=FA(n,r);s.push(Sh(t,{...n,...o},this.device.type))}else s.push(Sh(t,n,this.device.type));return i}setAccessor(t){this.state.bufferAccessor=t}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let t=null;if(this.state.constant&&this.value){let r=Array.from(this.value);t=[r,r]}else{let{value:r,numInstances:n,size:s}=this,i=n*s;if(r&&i&&r.length>=i){let o=new Array(s).fill(1/0),a=new Array(s).fill(-1/0);for(let c=0;c<i;)for(let l=0;l<s;l++){let f=r[c++];f<o[l]&&(o[l]=f),f>a[l]&&(a[l]=f)}t=[o,a]}}return this.state.bounds=t,t}setData(t){let{state:r}=this,n;ArrayBuffer.isView(t)?n={value:t}:t instanceof et?n={buffer:t}:n=t;let s={...this.settings,...n};if(ArrayBuffer.isView(n.value)){if(!n.type)if(this.doublePrecision&&n.value instanceof Float64Array)s.type="float32";else{let o=QP(n.value);s.type=s.normalized?o.replace("int","norm"):o}s.bytesPerElement=n.value.BYTES_PER_ELEMENT,s.stride=Ai(s)}if(r.bounds=null,n.constant){let i=n.value;if(i=this._normalizeValue(i,[],0),this.settings.normalized&&(i=this.normalizeConstant(i)),!(!r.constant||!this._areValuesEqual(i,this.value)))return!1;r.externalBuffer=null,r.constant=!0,this.value=ArrayBuffer.isView(i)?i:new Float32Array(i)}else if(n.buffer){let i=n.buffer;r.externalBuffer=i,r.constant=!1,this.value=n.value||null}else if(n.value){this._checkExternalBuffer(n);let i=n.value;r.externalBuffer=null,r.constant=!1,this.value=i;let{buffer:o}=this,a=Ai(s),c=(s.vertexOffset||0)*a;if(this.doublePrecision&&i instanceof Float64Array&&(i=jm(i,s)),this.settings.isIndexed){let f=this.settings.defaultType;i.constructor!==f&&(i=new f(i))}let l=i.byteLength+c+a*2;(!o||o.byteLength<l)&&(o=this._createBuffer(l)),o.write(i,c)}return this.setAccessor(s),!0}updateSubBuffer(t={}){this.state.bounds=null;let r=this.value,{startOffset:n=0,endOffset:s}=t;this.buffer.write(this.doublePrecision&&r instanceof Float64Array?jm(r,{size:this.size,startIndex:n,endIndex:s}):r.subarray(n,s),n*r.BYTES_PER_ELEMENT+this.byteOffset)}allocate(t,r=!1){let{state:n}=this,s=n.allocatedValue,i=an.allocate(s,t+1,{size:this.size,type:this.settings.defaultType,copy:r});this.value=i;let{byteOffset:o}=this,{buffer:a}=this;return(!a||a.byteLength<i.byteLength+o)&&(a=this._createBuffer(i.byteLength+o),r&&s&&a.write(s instanceof Float64Array?jm(s,this):s,o)),n.allocatedValue=i,n.constant=!1,n.externalBuffer=null,this.setAccessor(this.settings),!0}_checkExternalBuffer(t){let{value:r}=t;if(!ArrayBuffer.isView(r))throw new Error(`Attribute ${this.id} value is not TypedArray`);let n=this.settings.defaultType,s=!1;if(this.doublePrecision&&(s=r.BYTES_PER_ELEMENT<4),s)throw new Error(`Attribute ${this.id} does not support ${r.constructor.name}`);!(r instanceof n)&&this.settings.normalized&&!("normalized"in t)&&W.warn(`Attribute ${this.id} is normalized`)()}normalizeConstant(t){switch(this.settings.type){case"snorm8":return new Float32Array(t).map(r=>(r+128)/255*2-1);case"snorm16":return new Float32Array(t).map(r=>(r+32768)/65535*2-1);case"unorm8":return new Float32Array(t).map(r=>r/255);case"unorm16":return new Float32Array(t).map(r=>r/65535);default:return t}}_normalizeValue(t,r,n){let{defaultValue:s,size:i}=this.settings;if(Number.isFinite(t))return r[n]=t,r;if(!t){let o=i;for(;--o>=0;)r[n+o]=s[o];return r}switch(i){case 4:r[n+3]=Number.isFinite(t[3])?t[3]:s[3];case 3:r[n+2]=Number.isFinite(t[2])?t[2]:s[2];case 2:r[n+1]=Number.isFinite(t[1])?t[1]:s[1];case 1:r[n+0]=Number.isFinite(t[0])?t[0]:s[0];break;default:let o=i;for(;--o>=0;)r[n+o]=Number.isFinite(t[o])?t[o]:s[o]}return r}_areValuesEqual(t,r){if(!t||!r)return!1;let{size:n}=this;for(let s=0;s<n;s++)if(t[s]!==r[s])return!1;return!0}_createBuffer(t){this._buffer&&this._buffer.destroy();let{isIndexed:r,type:n}=this.settings;return this._buffer=this.device.createBuffer({...this._buffer?.props,id:this.id,usage:(r?et.INDEX:et.VERTEX)|et.COPY_DST,indexType:r?n:void 0,byteLength:t}),this._buffer}};var eI=[],rI=[];function ie(e,t=0,r=1/0){let n=eI,s={index:-1,data:e,target:[]};return e?typeof e[Symbol.iterator]=="function"?n=e:e.length>0&&(rI.length=e.length,n=rI):n=eI,(t>0||Number.isFinite(r))&&(n=(Array.isArray(n)?n:Array.from(n)).slice(t,r),s.index=t-1),{iterable:n,objectInfo:s}}function Sg(e){return e&&e[Symbol.asyncIterator]}function wg(e,t){let{size:r,stride:n,offset:s,startIndices:i,nested:o}=t,a=e.BYTES_PER_ELEMENT,c=n?n/a:r,l=s?s/a:0,f=Math.floor((e.length-l)/c);return(h,{index:u,target:d})=>{if(!i){let x=u*c+l;for(let A=0;A<r;A++)d[A]=e[x+A];return d}let p=i[u],m=i[u+1]||f,g;if(o){g=new Array(m-p);for(let x=p;x<m;x++){let A=x*c+l;d=new Array(r);for(let _=0;_<r;_++)d[_]=e[A+_];g[x-p]=d}}else if(c===r)g=e.subarray(p*r+l,m*r+l);else{g=new e.constructor((m-p)*r);let x=0;for(let A=p;A<m;A++){let _=A*c+l;for(let y=0;y<r;y++)g[x++]=e[_+y]}}return g}}var nI=[],Ch=[[0,1/0]];function sI(e,t){if(e===Ch||(t[0]<0&&(t[0]=0),t[0]>=t[1]))return e;let r=[],n=e.length,s=0;for(let i=0;i<n;i++){let o=e[i];o[1]<t[0]?(r.push(o),s=i+1):o[0]>t[1]?r.push(o):t=[Math.min(o[0],t[0]),Math.max(o[1],t[1])]}return r.splice(s,0,t),r}var LY={interpolation:{duration:0,easing:e=>e},spring:{stiffness:.05,damping:.5}};function Cg(e,t){if(!e)return null;Number.isFinite(e)&&(e={type:"interpolation",duration:e});let r=e.type||"interpolation";return{...LY[r],...t,...e,type:r}}var Ms=class extends wh{constructor(t,r){super(t,r,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,layoutChanged:!1,updateRanges:Ch}),this.constant=!1,this.settings.update=r.update||(r.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(t){this.state.startIndices=t}needsUpdate(){return this.state.needsUpdate}needsRedraw({clearChangedFlags:t=!1}={}){let r=this.state.needsRedraw;return this.state.needsRedraw=r&&!t,r}layoutChanged(){return this.state.layoutChanged}setAccessor(t){var r;(r=this.state).layoutChanged||(r.layoutChanged=!tI(t,this.getAccessor())),super.setAccessor(t)}getUpdateTriggers(){let{accessor:t}=this.settings;return[this.id].concat(typeof t!="function"&&t||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(t){if(!t||!this.supportsTransition())return null;let{accessor:r}=this.settings,n=this.settings.transition,s=Array.isArray(r)?t[r.find(i=>t[i])]:t[r];return Cg(s,n)}setNeedsUpdate(t=this.id,r){if(this.state.needsUpdate=this.state.needsUpdate||t,this.setNeedsRedraw(t),r){let{startRow:n=0,endRow:s=1/0}=r;this.state.updateRanges=sI(this.state.updateRanges,[n,s])}else this.state.updateRanges=Ch}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=nI}setNeedsRedraw(t=this.id){this.state.needsRedraw=this.state.needsRedraw||t}allocate(t){let{state:r,settings:n}=this;return n.noAlloc?!1:n.update?(super.allocate(t,r.updateRanges!==Ch),!0):!1}updateBuffer({numInstances:t,data:r,props:n,context:s}){if(!this.needsUpdate())return!1;let{state:{updateRanges:i},settings:{update:o,noAlloc:a}}=this,c=!0;if(o){for(let[l,f]of i)o.call(s,this,{data:r,startRow:l,endRow:f,props:n,numInstances:t});if(this.value)if(this.constant||!this.buffer||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(let[l,f]of i){let h=Number.isFinite(l)?this.getVertexOffset(l):0,u=Number.isFinite(f)?this.getVertexOffset(f):a||!Number.isFinite(t)?this.value.length:t*this.size;super.updateSubBuffer({startOffset:h,endOffset:u})}this._checkAttributeArray()}else c=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),c}setConstantValue(t){return this.device.type==="webgpu"||t===void 0||typeof t=="function"?!1:(this.setData({constant:!0,value:t})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0)}setExternalBuffer(t){let{state:r}=this;return t?(this.clearNeedsUpdate(),r.lastExternalBuffer===t||(r.lastExternalBuffer=t,this.setNeedsRedraw(),this.setData(t)),!0):(r.lastExternalBuffer=null,!1)}setBinaryValue(t,r=null){let{state:n,settings:s}=this;if(!t)return n.binaryValue=null,n.binaryAccessor=null,!1;if(s.noAlloc)return!1;if(n.binaryValue===t)return this.clearNeedsUpdate(),!0;if(n.binaryValue=t,this.setNeedsRedraw(),s.transform||r!==this.startIndices){ArrayBuffer.isView(t)&&(t={value:t});let o=t;wt(ArrayBuffer.isView(o.value),`invalid ${s.accessor}`);let a=Boolean(o.size)&&o.size!==this.size;return n.binaryAccessor=wg(o.value,{size:o.size||this.size,stride:o.stride,offset:o.offset,startIndices:r,nested:a}),!1}return this.clearNeedsUpdate(),this.setData(t),!0}getVertexOffset(t){let{startIndices:r}=this;return(r?t<r.length?r[t]:this.numInstances:t)*this.size}getValue(){let t=this.settings.shaderAttributes,r=super.getValue();if(!t)return r;for(let n in t)Object.assign(r,super.getValue(n,t[n]));return r}getBufferLayout(t){this.state.layoutChanged=!1;let r=this.settings.shaderAttributes,n=super._getBufferLayout(),{stepMode:s}=this.settings;if(s==="dynamic"?n.stepMode=t?t.isInstanced?"instance":"vertex":"instance":n.stepMode=s??"vertex",!r)return n;for(let i in r){let o=super._getBufferLayout(i,r[i]);n.attributes.push(...o.attributes)}return n}_autoUpdater(t,{data:r,startRow:n,endRow:s,props:i,numInstances:o}){if(t.constant&&this.context.device.type!=="webgpu")return;let{settings:a,state:c,value:l,size:f,startIndices:h}=t,{accessor:u,transform:d}=a,p=c.binaryAccessor||(typeof u=="function"?u:i[u]);typeof p!="function"&&(p=()=>p),wt(typeof p=="function",`accessor "${u}" is not a function`);let m=t.getVertexOffset(n),{iterable:g,objectInfo:x}=ie(r,n,s);for(let A of g){x.index++;let _=p(A,x);if(d&&(_=d.call(this,_)),h){let y=(x.index<h.length-1?h[x.index+1]:o)-h[x.index];if(_&&Array.isArray(_[0])){let T=m;for(let v of _)t._normalizeValue(v,l,T),T+=f}else _&&_.length>f?l.set(_,m):(t._normalizeValue(_,x.target,0),eg({target:l,source:x.target,start:m,count:y}));m+=y*f}else t._normalizeValue(_,l,m),m+=f}}_validateAttributeUpdaters(){let{settings:t}=this;if(!(t.noAlloc||typeof t.update=="function"))throw new Error(`Attribute ${this.id} missing update or accessor`)}_checkAttributeArray(){let{value:t}=this,r=Math.min(4,this.size);if(t&&t.length>=r){let n=!0;switch(r){case 4:n=n&&Number.isFinite(t[3]);case 3:n=n&&Number.isFinite(t[2]);case 2:n=n&&Number.isFinite(t[1]);case 1:n=n&&Number.isFinite(t[0]);break;default:n=!1}if(!n)throw new Error(`Illegal attribute generated for ${this.id}`)}}};function DA(e){let{source:t,target:r,start:n=0,size:s,getData:i}=e,o=e.end||r.length,a=t.length,c=o-n;if(a>c){r.set(t.subarray(0,c),n);return}if(r.set(t,n),!i)return;let l=a;for(;l<c;){let f=i(l,t);for(let h=0;h<s;h++)r[n+l]=f[h]||0,l++}}function iI({source:e,target:t,size:r,getData:n,sourceStartIndices:s,targetStartIndices:i}){if(!s||!i)return DA({source:e,target:t,size:r,getData:n}),t;let o=0,a=0,c=n&&((f,h)=>n(f+a,h)),l=Math.min(s.length,i.length);for(let f=1;f<l;f++){let h=s[f]*r,u=i[f]*r;DA({source:e.subarray(o,h),target:t,start:a,end:u,size:r,getData:c}),o=h,a=u}return a<t.length&&DA({source:[],target:t,start:a,size:r,getData:c}),t}function oI(e){let{device:t,settings:r,value:n}=e,s=new Ms(t,r);return s.setData({value:n instanceof Float64Array?new Float64Array(0):new Float32Array(0),normalized:r.normalized}),s}function Pg(e){switch(e){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error(`No defined attribute type for size "${e}"`)}}function Ig(e){switch(e){case 1:return"float32";case 2:return"float32x2";case 3:return"float32x3";case 4:return"float32x4";default:throw new Error("invalid type size")}}function Rg(e){e.push(e.shift())}function aI(e,t){let{doublePrecision:r,settings:n,value:s,size:i}=e,o=r&&s instanceof Float64Array?2:1,a=0,{shaderAttributes:c}=e.settings;if(c)for(let l of Object.values(c))a=Math.max(a,l.vertexOffset??0);return(n.noAlloc?s.length:(t+a)*i)*o}function Og({device:e,source:t,target:r}){return(!r||r.byteLength<t.byteLength)&&(r?.destroy(),r=e.createBuffer({byteLength:t.byteLength,usage:t.usage})),r}function Lg({device:e,buffer:t,attribute:r,fromLength:n,toLength:s,fromStartIndices:i,getData:o=a=>a}){let a=r.doublePrecision&&r.value instanceof Float64Array?2:1,c=r.size*a,l=r.byteOffset,f=r.settings.bytesPerElement<4?l/r.settings.bytesPerElement*4:l,h=r.startIndices,u=i&&h,d=r.isConstant;if(!u&&t&&n>=s)return t;let p=r.value instanceof Float64Array?Float32Array:r.value.constructor,m=d?r.value:new p(r.getBuffer().readSyncWebGL(l,s*p.BYTES_PER_ELEMENT).buffer);if(r.settings.normalized&&!d){let _=o;o=(y,T)=>r.normalizeConstant(_(y,T))}let g=d?(_,y)=>o(m,y):(_,y)=>o(m.subarray(_+l,_+l+c),y),x=t?new Float32Array(t.readSyncWebGL(f,n*4).buffer):new Float32Array(0),A=new Float32Array(s);return iI({source:x,target:A,sourceStartIndices:i,targetStartIndices:h,size:c,getData:g}),(!t||t.byteLength<A.byteLength+f)&&(t?.destroy(),t=e.createBuffer({byteLength:A.byteLength+f,usage:35050})),t.write(A,f),t}var Ac=class{constructor({device:t,attribute:r,timeline:n}){this.buffers=[],this.currentLength=0,this.device=t,this.transition=new fn(n),this.attribute=r,this.attributeInTransition=oI(r),this.currentStartIndices=r.startIndices}get inProgress(){return this.transition.inProgress}start(t,r,n=1/0){this.settings=t,this.currentStartIndices=this.attribute.startIndices,this.currentLength=aI(this.attribute,r),this.transition.start({...t,duration:n})}update(){let t=this.transition.update();return t&&this.onUpdate(),t}setBuffer(t){this.attributeInTransition.setData({buffer:t,normalized:this.attribute.settings.normalized,value:this.attributeInTransition.value})}cancel(){this.transition.cancel()}delete(){this.cancel();for(let t of this.buffers)t.destroy();this.buffers.length=0}};var Ph=class extends Ac{constructor({device:t,attribute:r,timeline:n}){super({device:t,attribute:r,timeline:n}),this.type="interpolation",this.transform=DY(t,r)}start(t,r){let n=this.currentLength,s=this.currentStartIndices;if(super.start(t,r,t.duration),t.duration<=0){this.transition.cancel();return}let{buffers:i,attribute:o}=this;Rg(i),i[0]=Lg({device:this.device,buffer:i[0],attribute:o,fromLength:n,toLength:this.currentLength,fromStartIndices:s,getData:t.enter}),i[1]=Og({device:this.device,source:i[0],target:i[1]}),this.setBuffer(i[1]);let{transform:a}=this,c=a.model,l=Math.floor(this.currentLength/o.size);lI(o)&&(l/=2),c.setVertexCount(l),o.isConstant?(c.setAttributes({aFrom:i[0]}),c.setConstantAttributes({aTo:o.value})):c.setAttributes({aFrom:i[0],aTo:o.getBuffer()}),a.transformFeedback.setBuffers({vCurrent:i[1]})}onUpdate(){let{duration:t,easing:r}=this.settings,{time:n}=this.transition,s=n/t;r&&(s=r(s));let{model:i}=this.transform,o={time:s};i.shaderInputs.setProps({interpolation:o}),this.transform.run({discard:!0})}delete(){super.delete(),this.transform.destroy()}},BY=`uniform interpolationUniforms {
  float time;
} interpolation;
`,cI={name:"interpolation",vs:BY,uniformTypes:{time:"f32"}},NY=`#version 300 es
#define SHADER_NAME interpolation-transition-vertex-shader

in ATTRIBUTE_TYPE aFrom;
in ATTRIBUTE_TYPE aTo;
out ATTRIBUTE_TYPE vCurrent;

void main(void) {
  vCurrent = mix(aFrom, aTo, interpolation.time);
  gl_Position = vec4(0.0);
}
`,FY=`#version 300 es
#define SHADER_NAME interpolation-transition-vertex-shader

in ATTRIBUTE_TYPE aFrom;
in ATTRIBUTE_TYPE aFrom64Low;
in ATTRIBUTE_TYPE aTo;
in ATTRIBUTE_TYPE aTo64Low;
out ATTRIBUTE_TYPE vCurrent;
out ATTRIBUTE_TYPE vCurrent64Low;

vec2 mix_fp64(vec2 a, vec2 b, float x) {
  vec2 range = sub_fp64(b, a);
  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));
}

void main(void) {
  for (int i=0; i<ATTRIBUTE_SIZE; i++) {
    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), interpolation.time);
    vCurrent[i] = value.x;
    vCurrent64Low[i] = value.y;
  }
  gl_Position = vec4(0.0);
}
`;function lI(e){return e.doublePrecision&&e.value instanceof Float64Array}function DY(e,t){let r=t.size,n=Pg(r),s=Ig(r),i=t.getBufferLayout();return lI(t)?new Cr(e,{vs:FY,bufferLayout:[{name:"aFrom",byteStride:8*r,attributes:[{attribute:"aFrom",format:s,byteOffset:0},{attribute:"aFrom64Low",format:s,byteOffset:4*r}]},{name:"aTo",byteStride:8*r,attributes:[{attribute:"aTo",format:s,byteOffset:0},{attribute:"aTo64Low",format:s,byteOffset:4*r}]}],modules:[_m,cI],defines:{ATTRIBUTE_TYPE:n,ATTRIBUTE_SIZE:r},moduleSettings:{},varyings:["vCurrent","vCurrent64Low"],bufferMode:35980,disableWarnings:!0}):new Cr(e,{vs:NY,bufferLayout:[{name:"aFrom",format:s},{name:"aTo",format:i.attributes[0].format}],modules:[cI],defines:{ATTRIBUTE_TYPE:n},varyings:["vCurrent"],disableWarnings:!0})}var Ih=class extends Ac{constructor({device:t,attribute:r,timeline:n}){super({device:t,attribute:r,timeline:n}),this.type="spring",this.texture=HY(t),this.framebuffer=GY(t,this.texture),this.transform=WY(t,r)}start(t,r){let n=this.currentLength,s=this.currentStartIndices;super.start(t,r);let{buffers:i,attribute:o}=this;for(let c=0;c<2;c++)i[c]=Lg({device:this.device,buffer:i[c],attribute:o,fromLength:n,toLength:this.currentLength,fromStartIndices:s,getData:t.enter});i[2]=Og({device:this.device,source:i[0],target:i[2]}),this.setBuffer(i[1]);let{model:a}=this.transform;a.setVertexCount(Math.floor(this.currentLength/o.size)),o.isConstant?a.setConstantAttributes({aTo:o.value}):a.setAttributes({aTo:o.getBuffer()})}onUpdate(){let{buffers:t,transform:r,framebuffer:n,transition:s}=this,i=this.settings;r.model.setAttributes({aPrev:t[0],aCur:t[1]}),r.transformFeedback.setBuffers({vNext:t[2]});let o={stiffness:i.stiffness,damping:i.damping};r.model.shaderInputs.setProps({spring:o}),r.run({framebuffer:n,discard:!1,parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]}),Rg(t),this.setBuffer(t[1]),this.device.readPixelsToArrayWebGL(n)[0]>0||s.end()}delete(){super.delete(),this.transform.destroy(),this.texture.destroy(),this.framebuffer.destroy()}},kY=`uniform springUniforms {
  float damping;
  float stiffness;
} spring;
`,UY={name:"spring",vs:kY,uniformTypes:{damping:"f32",stiffness:"f32"}},zY=`#version 300 es
#define SHADER_NAME spring-transition-vertex-shader

#define EPSILON 0.00001

in ATTRIBUTE_TYPE aPrev;
in ATTRIBUTE_TYPE aCur;
in ATTRIBUTE_TYPE aTo;
out ATTRIBUTE_TYPE vNext;
out float vIsTransitioningFlag;

ATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {
  ATTRIBUTE_TYPE velocity = cur - prev;
  ATTRIBUTE_TYPE delta = dest - cur;
  ATTRIBUTE_TYPE force = delta * spring.stiffness;
  ATTRIBUTE_TYPE resistance = velocity * spring.damping;
  return force - resistance + velocity + cur;
}

void main(void) {
  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;
  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;

  vNext = getNextValue(aCur, aPrev, aTo);
  gl_Position = vec4(0, 0, 0, 1);
  gl_PointSize = 100.0;
}
`,VY=`#version 300 es
#define SHADER_NAME spring-transition-is-transitioning-fragment-shader

in float vIsTransitioningFlag;

out vec4 fragColor;

void main(void) {
  if (vIsTransitioningFlag == 0.0) {
    discard;
  }
  fragColor = vec4(1.0);
}`;function WY(e,t){let r=Pg(t.size),n=Ig(t.size);return new Cr(e,{vs:zY,fs:VY,bufferLayout:[{name:"aPrev",format:n},{name:"aCur",format:n},{name:"aTo",format:t.getBufferLayout().attributes[0].format}],varyings:["vNext"],modules:[UY],defines:{ATTRIBUTE_TYPE:r},parameters:{depthCompare:"always",blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})}function HY(e){return e.createTexture({data:new Uint8Array(4),format:"rgba8unorm",mipmaps:!1,width:1,height:1})}function GY(e,t){return e.createFramebuffer({id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,colorAttachments:[t]})}var jY={interpolation:Ph,spring:Ih},Rh=class{constructor(t,{id:r,timeline:n}){if(!t)throw new Error("AttributeTransitionManager is constructed without device");this.id=r,this.device=t,this.timeline=n,this.transitions={},this.needsRedraw=!1,this.numInstances=1}finalize(){for(let t in this.transitions)this._removeTransition(t)}update({attributes:t,transitions:r,numInstances:n}){this.numInstances=n||1;for(let s in t){let i=t[s],o=i.getTransitionSetting(r);o&&this._updateAttribute(s,i,o)}for(let s in this.transitions){let i=t[s];(!i||!i.getTransitionSetting(r))&&this._removeTransition(s)}}hasAttribute(t){let r=this.transitions[t];return r&&r.inProgress}getAttributes(){let t={};for(let r in this.transitions){let n=this.transitions[r];n.inProgress&&(t[r]=n.attributeInTransition)}return t}run(){if(this.numInstances===0)return!1;for(let r in this.transitions)this.transitions[r].update()&&(this.needsRedraw=!0);let t=this.needsRedraw;return this.needsRedraw=!1,t}_removeTransition(t){this.transitions[t].delete(),delete this.transitions[t]}_updateAttribute(t,r,n){let s=this.transitions[t],i=!s||s.type!==n.type;if(i){s&&this._removeTransition(t);let o=jY[n.type];o?this.transitions[t]=new o({attribute:r,timeline:this.timeline,device:this.device}):(W.error(`unsupported transition type '${n.type}'`)(),i=!1)}(i||r.needsRedraw())&&(this.needsRedraw=!0,this.transitions[t].start(n,this.numInstances))}};var fI="attributeManager.invalidate",qY="attributeManager.updateStart",XY="attributeManager.updateEnd",YY="attribute.updateStart",$Y="attribute.allocate",KY="attribute.updateEnd",Or=class{constructor(t,{id:r="attribute-manager",stats:n,timeline:s}={}){this.mergeBoundsMemoized=mr(IC),this.id=r,this.device=t,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=n,this.attributeTransitionManager=new Rh(t,{id:`${r}-transitions`,timeline:s}),Object.seal(this)}finalize(){for(let t in this.attributes)this.attributes[t].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(t={clearRedrawFlags:!1}){let r=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!t.clearRedrawFlags,r&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(t){this._add(t)}addInstanced(t){this._add(t,{stepMode:"instance"})}remove(t){for(let r of t)this.attributes[r]!==void 0&&(this.attributes[r].delete(),delete this.attributes[r])}invalidate(t,r){let n=this._invalidateTrigger(t,r);te(fI,this,t,n)}invalidateAll(t){for(let r in this.attributes)this.attributes[r].setNeedsUpdate(r,t);te(fI,this,"all")}update({data:t,numInstances:r,startIndices:n=null,transitions:s,props:i={},buffers:o={},context:a={}}){let c=!1;te(qY,this),this.stats&&this.stats.get("Update Attributes").timeStart();for(let l in this.attributes){let f=this.attributes[l],h=f.settings.accessor;f.startIndices=n,f.numInstances=r,i[l]&&W.removed(`props.${l}`,`data.attributes.${l}`)(),f.setExternalBuffer(o[l])||f.setBinaryValue(typeof h=="string"?o[h]:void 0,t.startIndices)||typeof h=="string"&&!o[h]&&f.setConstantValue(i[h])||f.needsUpdate()&&(c=!0,this._updateAttribute({attribute:f,numInstances:r,data:t,props:i,context:a})),this.needsRedraw=this.needsRedraw||f.needsRedraw()}c&&te(XY,this,r),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:r,transitions:s})}updateTransition(){let{attributeTransitionManager:t}=this,r=t.run();return this.needsRedraw=this.needsRedraw||r,r}getAttributes(){return{...this.attributes,...this.attributeTransitionManager.getAttributes()}}getBounds(t){let r=t.map(n=>this.attributes[n]?.getBounds());return this.mergeBoundsMemoized(r)}getChangedAttributes(t={clearChangedFlags:!1}){let{attributes:r,attributeTransitionManager:n}=this,s={...n.getAttributes()};for(let i in r){let o=r[i];o.needsRedraw(t)&&!n.hasAttribute(i)&&(s[i]=o)}return s}getBufferLayouts(t){return Object.values(this.getAttributes()).map(r=>r.getBufferLayout(t))}_add(t,r){for(let n in t){let s=t[n],i={...s,id:n,size:s.isIndexed&&1||s.size||1,...r};this.attributes[n]=new Ms(this.device,i)}this._mapUpdateTriggersToAttributes()}_mapUpdateTriggersToAttributes(){let t={};for(let r in this.attributes)this.attributes[r].getUpdateTriggers().forEach(s=>{t[s]||(t[s]=[]),t[s].push(r)});this.updateTriggers=t}_invalidateTrigger(t,r){let{attributes:n,updateTriggers:s}=this,i=s[t];return i&&i.forEach(o=>{let a=n[o];a&&a.setNeedsUpdate(a.id,r)}),i}_updateAttribute(t){let{attribute:r,numInstances:n}=t;if(te(YY,r),r.constant){r.setConstantValue(r.value);return}r.allocate(n)&&te($Y,r,n),r.updateBuffer(t)&&(this.needsRedraw=!0,te(KY,r,n))}};var Oh=class extends fn{get value(){return this._value}_onUpdate(){let{time:t,settings:{fromValue:r,toValue:n,duration:s,easing:i}}=this,o=i(t/s);this._value=be(r,n,o)}};var hI=1e-5;function uI(e,t,r,n,s){let i=t-e,a=(r-t)*s,c=-i*n;return a+c+i+t}function ZY(e,t,r,n,s){if(Array.isArray(r)){let i=[];for(let o=0;o<r.length;o++)i[o]=uI(e[o],t[o],r[o],n,s);return i}return uI(e,t,r,n,s)}function dI(e,t){if(Array.isArray(e)){let r=0;for(let n=0;n<e.length;n++){let s=e[n]-t[n];r+=s*s}return Math.sqrt(r)}return Math.abs(e-t)}var Lh=class extends fn{get value(){return this._currValue}_onUpdate(){let{fromValue:t,toValue:r,damping:n,stiffness:s}=this.settings,{_prevValue:i=t,_currValue:o=t}=this,a=ZY(i,o,r,n,s),c=dI(a,r),l=dI(a,o);c<hI&&l<hI&&(a=r,this.end()),this._prevValue=o,this._currValue=a}};var JY={interpolation:Oh,spring:Lh},Bh=class{constructor(t){this.transitions=new Map,this.timeline=t}get active(){return this.transitions.size>0}add(t,r,n,s){let{transitions:i}=this;if(i.has(t)){let c=i.get(t),{value:l=c.settings.fromValue}=c;r=l,this.remove(t)}if(s=Cg(s),!s)return;let o=JY[s.type];if(!o){W.error(`unsupported transition type '${s.type}'`)();return}let a=new o(this.timeline);a.start({...s,fromValue:r,toValue:n}),i.set(t,a)}remove(t){let{transitions:r}=this;r.has(t)&&(r.get(t).cancel(),r.delete(t))}update(){let t={};for(let[r,n]of this.transitions)n.update(),t[r]=n.value,n.inProgress||this.remove(r);return t}clear(){for(let t of this.transitions.keys())this.remove(t)}};function mI(e){let t=e[Gr];for(let r in t){let n=t[r],{validate:s}=n;if(s&&!s(e[r],n))throw new Error(`Invalid prop ${r}: ${e[r]}`)}}function gI(e,t){let r=bc({newProps:e,oldProps:t,propTypes:e[Gr],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),n=t$(e,t),s=!1;return n||(s=e$(e,t)),{dataChanged:n,propsChanged:r,updateTriggersChanged:s,extensionsChanged:r$(e,t),transitionsChanged:QY(e,t)}}function QY(e,t){if(!e.transitions)return!1;let r={},n=e[Gr],s=!1;for(let i in e.transitions){let o=n[i],a=o&&o.type;(a==="number"||a==="color"||a==="array")&&kA(e[i],t[i],o)&&(r[i]=!0,s=!0)}return s?r:!1}function bc({newProps:e,oldProps:t,ignoreProps:r={},propTypes:n={},triggerName:s="props"}){if(t===e)return!1;if(typeof e!="object"||e===null)return`${s} changed shallowly`;if(typeof t!="object"||t===null)return`${s} changed shallowly`;for(let i of Object.keys(e))if(!(i in r)){if(!(i in t))return`${s}.${i} added`;let o=kA(e[i],t[i],n[i]);if(o)return`${s}.${i} ${o}`}for(let i of Object.keys(t))if(!(i in r)){if(!(i in e))return`${s}.${i} dropped`;if(!Object.hasOwnProperty.call(e,i)){let o=kA(e[i],t[i],n[i]);if(o)return`${s}.${i} ${o}`}}return!1}function kA(e,t,r){let n=r&&r.equal;return n&&!n(e,t,r)||!n&&(n=e&&t&&e.equals,n&&!n.call(e,t))?"changed deeply":!n&&t!==e?"changed shallowly":null}function t$(e,t){if(t===null)return"oldProps is null, initial diff";let r=!1,{dataComparator:n,_dataDiff:s}=e;return n?n(e.data,t.data)||(r="Data comparator detected a change"):e.data!==t.data&&(r="A new data container was supplied"),r&&s&&(r=s(e.data,t.data)||r),r}function e$(e,t){if(t===null)return{all:!0};if("all"in e.updateTriggers&&pI(e,t,"all"))return{all:!0};let r={},n=!1;for(let s in e.updateTriggers)s!=="all"&&pI(e,t,s)&&(r[s]=!0,n=!0);return n?r:!1}function r$(e,t){if(t===null)return!0;let r=t.extensions,{extensions:n}=e;if(n===r)return!1;if(!r||!n||n.length!==r.length)return!0;for(let s=0;s<n.length;s++)if(!n[s].equals(r[s]))return!0;return!1}function pI(e,t,r){let n=e.updateTriggers[r];n=n??{};let s=t.updateTriggers[r];return s=s??{},bc({oldProps:s,newProps:n,triggerName:r})}var n$="count(): argument not an object",s$="count(): argument not a container";function Bg(e){if(!o$(e))throw new Error(n$);if(typeof e.count=="function")return e.count();if(Number.isFinite(e.size))return e.size;if(Number.isFinite(e.length))return e.length;if(i$(e))return Object.keys(e).length;throw new Error(s$)}function i$(e){return e!==null&&typeof e=="object"&&e.constructor===Object}function o$(e){return e!==null&&typeof e=="object"}function bi(e,t){if(!t)return e;let r={...e,...t};if("defines"in t&&(r.defines={...e.defines,...t.defines}),"modules"in t&&(r.modules=(e.modules||[]).concat(t.modules),t.modules.some(n=>n.name==="project64"))){let n=r.modules.findIndex(s=>s.name==="project32");n>=0&&r.modules.splice(n,1)}if("inject"in t)if(!e.inject)r.inject=t.inject;else{let n={...e.inject};for(let s in t.inject)n[s]=(n[s]||"")+t.inject[s];r.inject=n}return r}var a$={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},UA={};function xI(e,t,r,n){if(r instanceof at)return r;r.constructor&&r.constructor.name!=="Object"&&(r={data:r});let s=null;r.compressed&&(s={minFilter:"linear",mipmapFilter:r.data.length>1?"nearest":"linear"});let i=t.createTexture({...r,sampler:{...a$,...s,...n},mipmaps:!0});return UA[i.id]=e,i}function _I(e,t){!t||!(t instanceof at)||UA[t.id]===e&&(t.delete(),delete UA[t.id])}var c$={boolean:{validate(e,t){return!0},equal(e,t,r){return Boolean(e)===Boolean(t)}},number:{validate(e,t){return Number.isFinite(e)&&(!("max"in t)||e<=t.max)&&(!("min"in t)||e>=t.min)}},color:{validate(e,t){return t.optional&&!e||zA(e)&&(e.length===3||e.length===4)},equal(e,t,r){return it(e,t,1)}},accessor:{validate(e,t){let r=Ng(e);return r==="function"||r===Ng(t.value)},equal(e,t,r){return typeof t=="function"?!0:it(e,t,1)}},array:{validate(e,t){return t.optional&&!e||zA(e)},equal(e,t,r){let{compare:n}=r,s=Number.isInteger(n)?n:n?1:0;return n?it(e,t,s):e===t}},object:{equal(e,t,r){if(r.ignore)return!0;let{compare:n}=r,s=Number.isInteger(n)?n:n?1:0;return n?it(e,t,s):e===t}},function:{validate(e,t){return t.optional&&!e||typeof e=="function"},equal(e,t,r){return!r.compare&&r.ignore!==!1||e===t}},data:{transform:(e,t,r)=>{if(!e)return e;let{dataTransform:n}=r.props;return n?n(e):typeof e.shape=="string"&&e.shape.endsWith("-table")&&Array.isArray(e.data)?e.data:e}},image:{transform:(e,t,r)=>{let n=r.context;return!n||!n.device?null:xI(r.id,n.device,e,{...t.parameters,...r.props.textureParameters})},release:(e,t,r)=>{_I(r.id,e)}}};function yI(e){let t={},r={},n={};for(let[s,i]of Object.entries(e)){let o=i?.deprecatedFor;if(o)n[s]=Array.isArray(o)?o:[o];else{let a=l$(s,i);t[s]=a,r[s]=a.value}}return{propTypes:t,defaultProps:r,deprecatedProps:n}}function l$(e,t){switch(Ng(t)){case"object":return Nh(e,t);case"array":return Nh(e,{type:"array",value:t,compare:!1});case"boolean":return Nh(e,{type:"boolean",value:t});case"number":return Nh(e,{type:"number",value:t});case"function":return Nh(e,{type:"function",value:t,compare:!0});default:return{name:e,type:"unknown",value:t}}}function Nh(e,t){return"type"in t?{name:e,...c$[t.type],...t}:"value"in t?{name:e,type:Ng(t.value),...t}:{name:e,type:"object",value:t}}function zA(e){return Array.isArray(e)||ArrayBuffer.isView(e)}function Ng(e){return zA(e)?"array":e===null?"null":typeof e}function AI(e,t){let r;for(let i=t.length-1;i>=0;i--){let o=t[i];"extensions"in o&&(r=o.extensions)}let n=VA(e.constructor,r),s=Object.create(n);s[mc]=e,s[Un]={},s[ln]={};for(let i=0;i<t.length;++i){let o=t[i];for(let a in o)s[a]=o[a]}return Object.freeze(s),s}var f$="_mergedDefaultProps";function VA(e,t){if(!(e instanceof Tc.constructor))return{};let r=f$;if(t)for(let s of t){let i=s.constructor;i&&(r+=`:${i.extensionName||i.name}`)}let n=bI(e,r);return n||(e[r]=h$(e,t||[]))}function h$(e,t){if(!e.prototype)return null;let n=Object.getPrototypeOf(e),s=VA(n),i=bI(e,"defaultProps")||{},o=yI(i),a=Object.assign(Object.create(null),s,o.defaultProps),c=Object.assign(Object.create(null),s?.[Gr],o.propTypes),l=Object.assign(Object.create(null),s?.[tg],o.deprecatedProps);for(let f of t){let h=VA(f.constructor);h&&(Object.assign(a,h),Object.assign(c,h[Gr]),Object.assign(l,h[tg]))}return u$(a,e),p$(a,c),d$(a,l),a[Gr]=c,a[tg]=l,t.length===0&&!WA(e,"_propTypes")&&(e._propTypes=c),a}function u$(e,t){let r=g$(t);Object.defineProperties(e,{id:{writable:!0,value:r}})}function d$(e,t){for(let r in t)Object.defineProperty(e,r,{enumerable:!1,set(n){let s=`${this.id}: ${r}`;for(let i of t[r])WA(this,i)||(this[i]=n);W.deprecated(s,t[r].join("/"))()}})}function p$(e,t){let r={},n={};for(let s in t){let i=t[s],{name:o,value:a}=i;i.async&&(r[o]=a,n[o]=m$(o))}e[As]=r,e[Un]={},Object.defineProperties(e,n)}function m$(e){return{enumerable:!0,set(t){typeof t=="string"||t instanceof Promise||Sg(t)?this[Un][e]=t:this[ln][e]=t},get(){if(this[ln]){if(e in this[ln])return this[ln][e]||this[As][e];if(e in this[Un]){let t=this[mc]&&this[mc].internalState;if(t&&t.hasAsyncProp(e))return t.getAsyncProp(e)||this[As][e]}}return this[As][e]}}}function WA(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function bI(e,t){return WA(e,t)&&e[t]}function g$(e){let t=e.componentName;return t||W.warn(`${e.name}.componentName not specified`)(),t||e.name}var x$=0,Fh=class{constructor(...t){this.props=AI(this,t),this.id=this.props.id,this.count=x$++}clone(t){let{props:r}=this,n={};for(let s in r[As])s in r[ln]?n[s]=r[ln][s]:s in r[Un]&&(n[s]=r[Un][s]);return new this.constructor({...r,...n,...t})}};Fh.componentName="Component";Fh.defaultProps={};var Tc=Fh;var _$=Object.freeze({}),Lo=class{constructor(t){this.component=t,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(let t in this.asyncProps){let r=this.asyncProps[t];r&&r.type&&r.type.release&&r.type.release(r.resolvedValue,r.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||_$}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(t){return t in this.asyncProps}getAsyncProp(t){let r=this.asyncProps[t];return r&&r.resolvedValue}isAsyncPropLoading(t){if(t){let r=this.asyncProps[t];return Boolean(r&&r.pendingLoadCount>0&&r.pendingLoadCount!==r.resolvedLoadCount)}for(let r in this.asyncProps)if(this.isAsyncPropLoading(r))return!0;return!1}reloadAsyncProp(t,r){this._watchPromise(t,Promise.resolve(r))}setAsyncProps(t){this.component=t[mc]||this.component;let r=t[ln]||{},n=t[Un]||t,s=t[As]||{};for(let i in r){let o=r[i];this._createAsyncPropData(i,s[i]),this._updateAsyncProp(i,o),r[i]=this.getAsyncProp(i)}for(let i in n){let o=n[i];this._createAsyncPropData(i,s[i]),this._updateAsyncProp(i,o)}}_fetch(t,r){return null}_onResolve(t,r){}_onError(t,r){}_updateAsyncProp(t,r){if(this._didAsyncInputValueChange(t,r)){if(typeof r=="string"&&(r=this._fetch(t,r)),r instanceof Promise){this._watchPromise(t,r);return}if(Sg(r)){this._resolveAsyncIterable(t,r);return}this._setPropValue(t,r)}}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(let t in this.asyncProps)Object.defineProperty(this.oldAsyncProps,t,{enumerable:!0,value:this.oldProps[t]})}}_didAsyncInputValueChange(t,r){let n=this.asyncProps[t];return r===n.resolvedValue||r===n.lastValue?!1:(n.lastValue=r,!0)}_setPropValue(t,r){this._freezeAsyncOldProps();let n=this.asyncProps[t];n&&(r=this._postProcessValue(n,r),n.resolvedValue=r,n.pendingLoadCount++,n.resolvedLoadCount=n.pendingLoadCount)}_setAsyncPropValue(t,r,n){let s=this.asyncProps[t];s&&n>=s.resolvedLoadCount&&r!==void 0&&(this._freezeAsyncOldProps(),s.resolvedValue=r,s.resolvedLoadCount=n,this.onAsyncPropUpdated(t,r))}_watchPromise(t,r){let n=this.asyncProps[t];if(n){n.pendingLoadCount++;let s=n.pendingLoadCount;r.then(i=>{this.component&&(i=this._postProcessValue(n,i),this._setAsyncPropValue(t,i,s),this._onResolve(t,i))}).catch(i=>{this._onError(t,i)})}}async _resolveAsyncIterable(t,r){if(t!=="data"){this._setPropValue(t,r);return}let n=this.asyncProps[t];if(!n)return;n.pendingLoadCount++;let s=n.pendingLoadCount,i=[],o=0;for await(let a of r){if(!this.component)return;let{dataTransform:c}=this.component.props;c?i=c(a,i):i=i.concat(a),Object.defineProperty(i,"__diff",{enumerable:!1,value:[{startRow:o,endRow:i.length}]}),o=i.length,this._setAsyncPropValue(t,i,s)}this._onResolve(t,i)}_postProcessValue(t,r){let n=t.type;return n&&this.component&&(n.release&&n.release(t.resolvedValue,n,this.component),n.transform)?n.transform(r,n,this.component):r}_createAsyncPropData(t,r){if(!this.asyncProps[t]){let s=this.component&&this.component.props[Gr];this.asyncProps[t]={type:s&&s[t],lastValue:null,resolvedValue:r,pendingLoadCount:0,resolvedLoadCount:0}}}};var Dh=class extends Lo{constructor({attributeManager:t,layer:r}){super(r),this.attributeManager=t,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(t,r){let n=this.layer,s=n?.props.fetch;return s?s(r,{propName:t,layer:n}):super._fetch(t,r)}_onResolve(t,r){let n=this.layer;if(n){let s=n.props.onDataLoad;t==="data"&&s&&s(r,{propName:t,layer:n})}}_onError(t,r){let n=this.layer;n&&n.raiseError(r,`loading ${t} of ${this.layer}`)}};var y$="layer.changeFlag",A$="layer.initialize",b$="layer.update",T$="layer.finalize",v$="layer.matched",TI=2**24-1,E$=Object.freeze([]),M$=mr(({oldViewport:e,viewport:t})=>e.equals(t)),mn=new Uint8ClampedArray(0),S$={data:{type:"data",value:E$,async:!0},dataComparator:{type:"function",value:null,optional:!0},_dataDiff:{type:"function",value:e=>e&&e.__diff,optional:!0},dataTransform:{type:"function",value:null,optional:!0},onDataLoad:{type:"function",value:null,optional:!0},onError:{type:"function",value:null,optional:!0},fetch:{type:"function",value:(e,{propName:t,layer:r,loaders:n,loadOptions:s,signal:i})=>{let{resourceManager:o}=r.context;s=s||r.getLoadOptions(),n=n||r.props.loaders,i&&(s={...s,fetch:{...s?.fetch,signal:i}});let a=o.contains(e);return!a&&!s&&(o.add({resourceId:e,data:me(e,n),persistent:!1}),a=!0),a?o.subscribe({resourceId:e,onChange:c=>r.internalState?.reloadAsyncProp(t,c),consumerId:r.id,requestId:t}):me(e,n,s)}},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,optional:!0},onClick:{type:"function",value:null,optional:!0},onDragStart:{type:"function",value:null,optional:!0},onDrag:{type:"function",value:null,optional:!0},onDragEnd:{type:"function",value:null,optional:!0},coordinateSystem:q.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:2},loadOptions:{type:"object",value:null,optional:!0,ignore:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,ignore:!0},getPolygonOffset:{type:"function",value:({layerIndex:e})=>[0,-e*100]},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}},kh=class extends Tc{constructor(){super(...arguments),this.internalState=null,this.lifecycle=mi.NO_STATE,this.parent=null}static get componentName(){return Object.prototype.hasOwnProperty.call(this,"layerName")?this.layerName:""}get root(){let t=this;for(;t.parent;)t=t.parent;return t}toString(){return`${this.constructor.layerName||this.constructor.name}({id: '${this.props.id}'})`}project(t){wt(this.internalState);let r=this.internalState.viewport||this.context.viewport,n=pA(t,{viewport:r,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[s,i,o]=oc(n,r.pixelProjectionMatrix);return t.length===2?[s,i]:[s,i,o]}unproject(t){return wt(this.internalState),(this.internalState.viewport||this.context.viewport).unproject(t)}projectPosition(t,r){wt(this.internalState);let n=this.internalState.viewport||this.context.viewport;return qm(t,{viewport:n,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem,...r})}get isComposite(){return!1}get isDrawable(){return!0}setState(t){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,t),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return this.internalState?!this.internalState.isAsyncPropLoading():!1}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){let t=this.state;return t&&(t.models||t.model&&[t.model])||[]}setShaderModuleProps(...t){for(let r of this.getModels())r.shaderInputs.setProps(...t)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){let{coordinateSystem:t}=this.props;return t===q.DEFAULT||t===q.LNGLAT||t===q.CARTESIAN}onHover(t,r){return this.props.onHover&&this.props.onHover(t,r)||!1}onClick(t,r){return this.props.onClick&&this.props.onClick(t,r)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(t,r=[]){return r[0]=t+1&255,r[1]=t+1>>8&255,r[2]=t+1>>8>>8&255,r}decodePickingColor(t){wt(t instanceof Uint8Array);let[r,n,s]=t;return r+n*256+s*65536-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&this.state.numInstances!==void 0?this.state.numInstances:Bg(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){return this.getAttributeManager()?.getBounds(["positions","instancePositions"])}getShaders(t){t=bi(t,{disableWarnings:!0,modules:this.context.defaultShaderModules});for(let r of this.props.extensions)t=bi(t,r.getShaders.call(this,r));return t}shouldUpdateState(t){return t.changeFlags.propsOrDataChanged}updateState(t){let r=this.getAttributeManager(),{dataChanged:n}=t.changeFlags;if(n&&r)if(Array.isArray(n))for(let s of n)r.invalidateAll(s);else r.invalidateAll();if(r){let{props:s}=t,i=this.internalState.hasPickingBuffer,o=Number.isInteger(s.highlightedObjectIndex)||s.pickable||s.extensions.some(a=>a.getNeedsPickingBuffer.call(this,a));if(i!==o){this.internalState.hasPickingBuffer=o;let{pickingColors:a,instancePickingColors:c}=r.attributes,l=a||c;l&&(o&&l.constant&&(l.constant=!1,r.invalidate(l.id)),!l.value&&!o&&(l.constant=!0,l.value=[0,0,0]))}}}finalizeState(t){for(let n of this.getModels())n.destroy();let r=this.getAttributeManager();r&&r.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(t){for(let r of this.getModels())r.draw(t.renderPass)}getPickingInfo({info:t,mode:r,sourceLayer:n}){let{index:s}=t;return s>=0&&Array.isArray(this.props.data)&&(t.object=this.props.data[s]),t}raiseError(t,r){r&&(t=new Error(`${r}: ${t.message}`,{cause:t})),this.props.onError?.(t)||this.context?.onError?.(t,this)}getNeedsRedraw(t={clearRedrawFlags:!1}){return this._getNeedsRedraw(t)}needsUpdate(){return this.internalState?this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()):!1}hasUniformTransition(){return this.internalState?.uniformTransitions.active||!1}activateViewport(t){if(!this.internalState)return;let r=this.internalState.viewport;this.internalState.viewport=t,(!r||!M$({oldViewport:r,viewport:t}))&&(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(t="all"){let r=this.getAttributeManager();r&&(t==="all"?r.invalidateAll():r.invalidate(t))}updateAttributes(t){let r=!1;for(let n in t)t[n].layoutChanged()&&(r=!0);for(let n of this.getModels())this._setModelAttributes(n,t,r)}_updateAttributes(){let t=this.getAttributeManager();if(!t)return;let r=this.props,n=this.getNumInstances(),s=this.getStartIndices();t.update({data:r.data,numInstances:n,startIndices:s,props:r,transitions:r.transitions,buffers:r.data.attributes,context:this});let i=t.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(i)}_updateAttributeTransition(){let t=this.getAttributeManager();t&&t.updateTransition()}_updateUniformTransition(){let{uniformTransitions:t}=this.internalState;if(t.active){let r=t.update(),n=Object.create(this.props);for(let s in r)Object.defineProperty(n,s,{value:r[s]});return n}return this.props}calculateInstancePickingColors(t,{numInstances:r}){if(t.constant)return;let n=Math.floor(mn.length/4);if(this.internalState.usesPickingColorCache=!0,n<r){r>TI&&W.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),mn=an.allocate(mn,r,{size:4,copy:!0,maxCount:Math.max(r,TI)});let s=Math.floor(mn.length/4),i=[0,0,0];for(let o=n;o<s;o++)this.encodePickingColor(o,i),mn[o*4+0]=i[0],mn[o*4+1]=i[1],mn[o*4+2]=i[2],mn[o*4+3]=0}t.value=mn.subarray(0,r*4)}_setModelAttributes(t,r,n=!1){if(!Object.keys(r).length)return;if(n){let a=this.getAttributeManager();t.setBufferLayout(a.getBufferLayouts(t)),r=a.getAttributes()}let s=t.userData?.excludeAttributes||{},i={},o={};for(let a in r){if(s[a])continue;let c=r[a].getValue();for(let l in c){let f=c[l];f instanceof et?r[a].settings.isIndexed?t.setIndexBuffer(f):i[l]=f:f&&(o[l]=f)}}t.setAttributes(i),t.setConstantAttributes(o)}disablePickingIndex(t){let r=this.props.data;if(!("attributes"in r)){this._disablePickingIndex(t);return}let{pickingColors:n,instancePickingColors:s}=this.getAttributeManager().attributes,i=n||s,o=i&&r.attributes&&r.attributes[i.id];if(o&&o.value){let a=o.value,c=this.encodePickingColor(t);for(let l=0;l<r.length;l++){let f=i.getVertexOffset(l);a[f]===c[0]&&a[f+1]===c[1]&&a[f+2]===c[2]&&this._disablePickingIndex(l)}}else this._disablePickingIndex(t)}_disablePickingIndex(t){let{pickingColors:r,instancePickingColors:n}=this.getAttributeManager().attributes,s=r||n;if(!s)return;let i=s.getVertexOffset(t),o=s.getVertexOffset(t+1);s.buffer.write(new Uint8Array(o-i),i)}restorePickingColors(){let{pickingColors:t,instancePickingColors:r}=this.getAttributeManager().attributes,n=t||r;n&&(this.internalState.usesPickingColorCache&&n.value.buffer!==mn.buffer&&(n.value=mn.subarray(0,n.value.length)),n.updateSubBuffer({startOffset:0}))}_initialize(){wt(!this.internalState),wt(Number.isFinite(this.props.coordinateSystem)),te(A$,this);let t=this._getAttributeManager();t&&t.addInstanced({instancePickingColors:{type:"uint8",size:4,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new Dh({attributeManager:t,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(W.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),t)}),this.internalState.uniformTransitions=new Bh(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(let r of this.props.extensions)r.initializeState.call(this,this.context,r);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(t){te(v$,this,this===t);let{state:r,internalState:n}=t;this!==t&&(this.internalState=n,this.state=r,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){let t=this.needsUpdate();if(te(b$,this,t),!t)return;let r=this.props,n=this.context,s=this.internalState,i=n.viewport,o=this._updateUniformTransition();s.propsInTransition=o,n.viewport=s.viewport||i,this.props=o;try{let a=this._getUpdateParams(),c=this.getModels();if(n.device)this.updateState(a);else try{this.updateState(a)}catch{}for(let f of this.props.extensions)f.updateState.call(this,a,f);this.setNeedsRedraw(),this._updateAttributes();let l=this.getModels()[0]!==c[0];this._postUpdate(a,l)}finally{n.viewport=i,this.props=r,this._clearChangeFlags(),s.needsUpdate=!1,s.resetOldProps()}}_finalize(){te(T$,this),this.finalizeState(this.context);for(let t of this.props.extensions)t.finalizeState.call(this,this.context,t)}_drawLayer({renderPass:t,shaderModuleProps:r=null,uniforms:n={},parameters:s={}}){this._updateAttributeTransition();let i=this.props,o=this.context;this.props=this.internalState.propsInTransition||i;try{r&&this.setShaderModuleProps(r);let{getPolygonOffset:a}=this.props,c=a&&a(n)||[0,0];o.device instanceof gr&&o.device.setParametersWebGL({polygonOffset:c});for(let l of this.getModels())l.device.type==="webgpu"?l.setParameters({...l.parameters,...s}):l.setParameters(s);if(o.device instanceof gr)o.device.withParametersWebGL(s,()=>{let l={renderPass:t,shaderModuleProps:r,uniforms:n,parameters:s,context:o};for(let f of this.props.extensions)f.draw.call(this,l,f);this.draw(l)});else{let l={renderPass:t,shaderModuleProps:r,uniforms:n,parameters:s,context:o};for(let f of this.props.extensions)f.draw.call(this,l,f);this.draw(l)}}finally{this.props=i}}getChangeFlags(){return this.internalState?.changeFlags}setChangeFlags(t){if(!this.internalState)return;let{changeFlags:r}=this.internalState;for(let s in t)if(t[s]){let i=!1;switch(s){case"dataChanged":let o=t[s],a=r[s];o&&Array.isArray(a)&&(r.dataChanged=Array.isArray(o)?a.concat(o):o,i=!0);default:r[s]||(r[s]=t[s],i=!0)}i&&te(y$,this,s,t)}let n=Boolean(r.dataChanged||r.updateTriggersChanged||r.propsChanged||r.extensionsChanged);r.propsOrDataChanged=n,r.somethingChanged=n||r.viewportChanged||r.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(t,r){let n=gI(t,r);if(n.updateTriggersChanged)for(let s in n.updateTriggersChanged)n.updateTriggersChanged[s]&&this.invalidateAttribute(s);if(n.transitionsChanged)for(let s in n.transitionsChanged)this.internalState.uniformTransitions.add(s,r[s],t[s],t.transitions?.[s]);return this.setChangeFlags(n)}validateProps(){mI(this.props)}updateAutoHighlight(t){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(t)}_updateAutoHighlight(t){let r={highlightedObjectColor:t.picked?t.color:null},{highlightColor:n}=this.props;t.picked&&typeof n=="function"&&(r.highlightColor=n(t)),this.setShaderModuleProps({picking:r}),this.setNeedsRedraw()}_getAttributeManager(){let t=this.context;return new Or(t.device,{id:this.props.id,stats:t.stats,timeline:t.timeline})}_postUpdate(t,r){let{props:n,oldProps:s}=t,i=this.state.model;i?.isInstanced&&i.setInstanceCount(this.getNumInstances());let{autoHighlight:o,highlightedObjectIndex:a,highlightColor:c}=n;if(r||s.autoHighlight!==o||s.highlightedObjectIndex!==a||s.highlightColor!==c){let l={};Array.isArray(c)&&(l.highlightColor=c),(r||s.autoHighlight!==o||a!==s.highlightedObjectIndex)&&(l.highlightedObjectColor=Number.isFinite(a)&&a>=0?this.encodePickingColor(a):null),this.setShaderModuleProps({picking:l})}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(t){if(!this.internalState)return!1;let r=!1;r=r||this.internalState.needsRedraw&&this.id;let n=this.getAttributeManager(),s=n?n.getNeedsRedraw(t):!1;if(r=r||s,r)for(let i of this.props.extensions)i.onNeedsRedraw.call(this,i);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!t.clearRedrawFlags,r}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}};kh.defaultProps=S$;kh.layerName="Layer";var _t=kh;var w$="compositeLayer.renderLayers",Fg=class extends _t{get isComposite(){return!0}get isDrawable(){return!1}get isLoaded(){return super.isLoaded&&this.getSubLayers().every(t=>t.isLoaded)}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(t){}setState(t){super.setState(t),this.setNeedsUpdate()}getPickingInfo({info:t}){let{object:r}=t;return r&&r.__source&&r.__source.parent&&r.__source.parent.id===this.id&&(t.object=r.__source.object,t.index=r.__source.index),t}filterSubLayer(t){return!0}shouldRenderSubLayer(t,r){return r&&r.length}getSubLayerClass(t,r){let{_subLayerProps:n}=this.props;return n&&n[t]&&n[t].type||r}getSubLayerRow(t,r,n){return t.__source={parent:this,object:r,index:n},t}getSubLayerAccessor(t){if(typeof t=="function"){let r={index:-1,data:this.props.data,target:[]};return(n,s)=>n&&n.__source?(r.index=n.__source.index,t(n.__source.object,r)):t(n,s)}return t}getSubLayerProps(t={}){let{opacity:r,pickable:n,visible:s,parameters:i,getPolygonOffset:o,highlightedObjectIndex:a,autoHighlight:c,highlightColor:l,coordinateSystem:f,coordinateOrigin:h,wrapLongitude:u,positionFormat:d,modelMatrix:p,extensions:m,fetch:g,operation:x,_subLayerProps:A}=this.props,_={id:"",updateTriggers:{},opacity:r,pickable:n,visible:s,parameters:i,getPolygonOffset:o,highlightedObjectIndex:a,autoHighlight:c,highlightColor:l,coordinateSystem:f,coordinateOrigin:h,wrapLongitude:u,positionFormat:d,modelMatrix:p,extensions:m,fetch:g,operation:x},y=A&&t.id&&A[t.id],T=y&&y.updateTriggers,v=t.id||"sublayer";if(y){let C=this.props[Gr],w=t.type?t.type._propTypes:{};for(let E in y){let b=w[E]||C[E];b&&b.type==="accessor"&&(y[E]=this.getSubLayerAccessor(y[E]))}}Object.assign(_,t,y),_.id=`${this.props.id}-${v}`,_.updateTriggers={all:this.props.updateTriggers?.all,...t.updateTriggers,...T};for(let C of m){let w=C.getSubLayerProps.call(this,C);w&&Object.assign(_,w,{updateTriggers:Object.assign(_.updateTriggers,w.updateTriggers)})}return _}_updateAutoHighlight(t){for(let r of this.getSubLayers())r.updateAutoHighlight(t)}_getAttributeManager(){return null}_postUpdate(t,r){let n=this.internalState.subLayers,s=!n||this.needsUpdate();if(s){let i=this.renderLayers();n=sr(i,Boolean),this.internalState.subLayers=n}te(w$,this,s,n);for(let i of n)i.parent=this}};Fg.layerName="CompositeLayer";var qt=Fg;var Dg=Math.PI/180,vI=180/Math.PI,kg=6370972,vc=256;function C$(){let e=vc/kg,t=Math.PI/180*vc;return{unitsPerMeter:[e,e,e],unitsPerMeter2:[0,0,0],metersPerUnit:[1/e,1/e,1/e],unitsPerDegree:[t,t,e],unitsPerDegree2:[0,0,0],degreesPerUnit:[1/t,1/t,1/e]}}var gn=class extends xe{constructor(t={}){let{longitude:r=0,zoom:n=0,nearZMultiplier:s=.5,farZMultiplier:i=1,resolution:o=10}=t,{latitude:a=0,height:c,altitude:l=1.5,fovy:f}=t;a=Math.max(Math.min(a,Vr),-Vr),c=c||1,f?l=xs(f):f=gs(l);let h=1/Math.PI/Math.cos(a*Math.PI/180),u=Math.pow(2,n)*h,d=t.nearZ??s,p=t.farZ??(l+vc*2*u/c)*i,m=new rt().lookAt({eye:[0,-l,0],up:[0,0,1]});m.rotateX(a*Dg),m.rotateZ(-r*Dg),m.scale(u/c),super({...t,height:c,viewMatrix:m,longitude:r,latitude:a,zoom:n,distanceScales:C$(),fovy:f,focalDistance:l,near:d,far:p}),this.scale=u,this.latitude=a,this.longitude=r,this.resolution=o}get projectionMode(){return Te.GLOBE}getDistanceScales(){return this.distanceScales}getBounds(t={}){let r={targetZ:t.z||0},n=this.unproject([0,this.height/2],r),s=this.unproject([this.width/2,0],r),i=this.unproject([this.width,this.height/2],r),o=this.unproject([this.width/2,this.height],r);return i[0]<this.longitude&&(i[0]+=360),n[0]>this.longitude&&(n[0]-=360),[Math.min(n[0],i[0],s[0],o[0]),Math.min(n[1],i[1],s[1],o[1]),Math.max(n[0],i[0],s[0],o[0]),Math.max(n[1],i[1],s[1],o[1])]}unproject(t,{topLeft:r=!0,targetZ:n}={}){let[s,i,o]=t,a=r?i:this.height-i,{pixelUnprojectionMatrix:c}=this,l;if(Number.isFinite(o))l=HA(c,[s,a,o,1]);else{let d=HA(c,[s,a,-1,1]),p=HA(c,[s,a,1,1]),m=((n||0)/kg+1)*vc,g=Ce.sqrLen(Ce.sub([],d,p)),x=Ce.sqrLen(d),A=Ce.sqrLen(p),y=4*((4*x*A-(g-x-A)**2)/16)/g,T=Math.sqrt(x-y),v=Math.sqrt(Math.max(0,m*m-y)),C=(T-v)/Math.sqrt(g);l=Ce.lerp([],d,p,C)}let[f,h,u]=this.unprojectPosition(l);return Number.isFinite(o)?[f,h,u]:Number.isFinite(n)?[f,h,n]:[f,h]}projectPosition(t){let[r,n,s=0]=t,i=r*Dg,o=n*Dg,a=Math.cos(o),c=(s/kg+1)*vc;return[Math.sin(i)*a*c,-Math.cos(i)*a*c,Math.sin(o)*c]}unprojectPosition(t){let[r,n,s]=t,i=Ce.len(t),o=Math.asin(s/i),c=Math.atan2(r,-n)*vI,l=o*vI,f=(i/vc-1)*kg;return[c,l,f]}projectFlat(t){return t}unprojectFlat(t){return t}panByPosition(t,r){let n=this.unproject(r);return{longitude:t[0]-n[0]+this.longitude,latitude:t[1]-n[1]+this.latitude}}};function HA(e,t){let r=nr.transformMat4([],t,e);return nr.scale(r,r,1/r[3]),r}var GA=Math.PI/180;function P$({height:e,focalDistance:t,orbitAxis:r,rotationX:n,rotationOrbit:s,zoom:i}){let o=r==="Z"?[0,0,1]:[0,1,0],a=r==="Z"?[0,-t,0]:[0,0,t],c=new rt().lookAt({eye:a,up:o});c.rotateX(n*GA),r==="Z"?c.rotateZ(s*GA):c.rotateY(s*GA);let l=Math.pow(2,i)/e;return c.scale(l),c}var Bo=class extends xe{constructor(t){let{height:r,projectionMatrix:n,fovy:s=50,orbitAxis:i="Z",target:o=[0,0,0],rotationX:a=0,rotationOrbit:c=0,zoom:l=0}=t,f=n?n[5]/2:xs(s);super({...t,longitude:void 0,viewMatrix:P$({height:r||1,focalDistance:f,orbitAxis:i,rotationX:a,rotationOrbit:c,zoom:l}),fovy:s,focalDistance:f,position:o,zoom:l}),this.projectedCenter=this.project(this.center)}unproject(t,{topLeft:r=!0}={}){let[n,s,i=this.projectedCenter[2]]=t,o=r?s:this.height-s,[a,c,l]=Wr([n,o,i],this.pixelUnprojectionMatrix);return[a,c,l]}panByPosition(t,r){let n=this.project(t),s=[this.width/2+n[0]-r[0],this.height/2+n[1]-r[1],this.projectedCenter[2]];return{target:this.unproject(s)}}};var I$=new rt().lookAt({eye:[0,0,1]});function R$({width:e,height:t,near:r,far:n,padding:s}){let i=-e/2,o=e/2,a=-t/2,c=t/2;if(s){let{left:l=0,right:f=0,top:h=0,bottom:u=0}=s,d=xt((l+e-f)/2,0,e)-e/2,p=xt((h+t-u)/2,0,t)-t/2;i-=d,o-=d,a+=p,c+=p}return new rt().ortho({left:i,right:o,bottom:a,top:c,near:r,far:n})}var Ss=class extends xe{constructor(t){let{width:r,height:n,near:s=.1,far:i=1e3,zoom:o=0,target:a=[0,0,0],padding:c=null,flipY:l=!0}=t,f=Array.isArray(o)?o[0]:o,h=Array.isArray(o)?o[1]:o,u=Math.min(f,h),d=Math.pow(2,u),p;if(f!==h){let m=Math.pow(2,f),g=Math.pow(2,h);p={unitsPerMeter:[m/d,g/d,1],metersPerUnit:[d/m,d/g,1]}}super({...t,longitude:void 0,position:a,viewMatrix:I$.clone().scale([d,d*(l?-1:1),d]),projectionMatrix:R$({width:r||1,height:n||1,padding:c,near:s,far:i}),zoom:u,distanceScales:p})}projectFlat([t,r]){let{unitsPerMeter:n}=this.distanceScales;return[t*n[0],r*n[1]]}unprojectFlat([t,r]){let{metersPerUnit:n}=this.distanceScales;return[t*n[0],r*n[1]]}panByPosition(t,r){let n=Wr(r,this.pixelUnprojectionMatrix),s=this.projectFlat(t),i=ge.add([],s,ge.negate([],n)),o=ge.add([],this.center,i);return{target:this.unprojectFlat(o)}}};var No=class extends xe{constructor(t){let{longitude:r,latitude:n,modelMatrix:s,bearing:i=0,pitch:o=0,up:a=[0,0,1]}=t,l=new nn({bearing:i,pitch:o===-90?1e-4:90+o}).toVector3().normalize(),f=s?new rt(s).transformAsVector(l):l,h=Number.isFinite(n)?Zf({latitude:n}):0,u=Math.pow(2,h),d=new rt().lookAt({eye:[0,0,0],center:f,up:a}).scale(u);super({...t,zoom:h,viewMatrix:d}),this.latitude=n,this.longitude=r}};var Fo=20,EI=500,Uh=class extends Es{constructor(t){let{width:r,height:n,position:s=[0,0,0],bearing:i=0,pitch:o=0,longitude:a=null,latitude:c=null,maxPitch:l=90,minPitch:f=-90,startRotatePos:h,startBearing:u,startPitch:d,startZoomPosition:p,startPanPos:m,startPanPosition:g}=t;super({width:r,height:n,position:s,bearing:i,pitch:o,longitude:a,latitude:c,maxPitch:l,minPitch:f},{startRotatePos:h,startBearing:u,startPitch:d,startZoomPosition:p,startPanPos:m,startPanPosition:g}),this.makeViewport=t.makeViewport}panStart({pos:t}){let{position:r}=this.getViewportProps();return this._getUpdatedState({startPanPos:t,startPanPosition:r})}pan({pos:t}){if(!t)return this;let{startPanPos:r=[0,0],startPanPosition:n=[0,0]}=this.getState(),{width:s,height:i,bearing:o,pitch:a}=this.getViewportProps(),c=EI*(t[0]-r[0])/s,l=EI*(t[1]-r[1])/i,f=new nn({bearing:o,pitch:a}),h=new nn({bearing:o,pitch:-90}),u=f.toVector3().normalize(),d=h.toVector3().cross(u).normalize();return this._getUpdatedState({position:new V(n).add(d.scale(c)).add(u.scale(l))})}panEnd(){return this._getUpdatedState({startPanPos:null,startPanPosition:null})}rotateStart({pos:t}){return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate({pos:t,deltaAngleX:r=0,deltaAngleY:n=0}){let{startRotatePos:s,startBearing:i,startPitch:o}=this.getState(),{width:a,height:c}=this.getViewportProps();if(!s||i===void 0||o===void 0)return this;let l;if(t){let f=(t[0]-s[0])/a,h=(t[1]-s[1])/c;l={bearing:i-f*180,pitch:o-h*90}}else l={bearing:i-r,pitch:o-n};return this._getUpdatedState(l)}rotateEnd(){return this._getUpdatedState({startRotatePos:null,startBearing:null,startPitch:null})}zoomStart(){return this._getUpdatedState({startZoomPosition:this.getViewportProps().position})}zoom({pos:t,scale:r}){let n=this.getViewportProps(),s=this.getState().startZoomPosition||n.position,i=this.makeViewport(n),{projectionMatrix:o,width:a}=i,l=2*Math.atan(1/o[0])*(t[0]/a-.5),f=this.getDirection(!0);return this._move(f.rotateZ({radians:-l}),Math.log2(r)*Fo,s)}zoomEnd(){return this._getUpdatedState({startZoomPosition:null})}moveLeft(t=Fo){let r=this.getDirection(!0);return this._move(r.rotateZ({radians:Math.PI/2}),t)}moveRight(t=Fo){let r=this.getDirection(!0);return this._move(r.rotateZ({radians:-Math.PI/2}),t)}moveUp(t=Fo){let r=this.getDirection(!0);return this._move(r,t)}moveDown(t=Fo){let r=this.getDirection(!0);return this._move(r.negate(),t)}rotateLeft(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing-t})}rotateRight(t=15){return this._getUpdatedState({bearing:this.getViewportProps().bearing+t})}rotateUp(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch+t})}rotateDown(t=10){return this._getUpdatedState({pitch:this.getViewportProps().pitch-t})}zoomIn(t=Fo){return this._move(new V(0,0,1),t)}zoomOut(t=Fo){return this._move(new V(0,0,-1),t)}shortestPathFrom(t){let r=t.getViewportProps(),n={...this.getViewportProps()},{bearing:s,longitude:i}=n;return Math.abs(s-r.bearing)>180&&(n.bearing=s<0?s+360:s-360),i!==null&&r.longitude!==null&&Math.abs(i-r.longitude)>180&&(n.longitude=i<0?i+360:i-360),n}_move(t,r,n=this.getViewportProps().position){let s=t.scale(r);return this._getUpdatedState({position:new V(n).add(s)})}getDirection(t=!1){return new nn({bearing:this.getViewportProps().bearing,pitch:t?90:90+this.getViewportProps().pitch}).toVector3().normalize()}_getUpdatedState(t){return new Uh({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...t})}applyConstraints(t){let{pitch:r,maxPitch:n,minPitch:s,longitude:i,bearing:o}=t;return t.pitch=xt(r,s,n),i!==null&&(i<-180||i>180)&&(t.longitude=bo(i+180,360)-180),(o<-180||o>180)&&(t.bearing=bo(o+180,360)-180),t}},Do=class extends or{constructor(){super(...arguments),this.ControllerState=Uh,this.transition={transitionDuration:300,transitionInterpolator:new ve(["position","pitch","bearing"])}}};var Ug=class extends ir{constructor(t={}){super(t)}getViewportType(){return No}get ControllerType(){return Do}};Ug.displayName="FirstPersonView";var MI=Ug;var zh=class extends Es{constructor(t){let{width:r,height:n,rotationX:s=0,rotationOrbit:i=0,target:o=[0,0,0],zoom:a=0,minRotationX:c=-90,maxRotationX:l=90,minZoom:f=-1/0,maxZoom:h=1/0,startPanPosition:u,startRotatePos:d,startRotationX:p,startRotationOrbit:m,startZoomPosition:g,startZoom:x}=t;super({width:r,height:n,rotationX:s,rotationOrbit:i,target:o,zoom:a,minRotationX:c,maxRotationX:l,minZoom:f,maxZoom:h},{startPanPosition:u,startRotatePos:d,startRotationX:p,startRotationOrbit:m,startZoomPosition:g,startZoom:x}),this.makeViewport=t.makeViewport}panStart({pos:t}){return this._getUpdatedState({startPanPosition:this._unproject(t)})}pan({pos:t,startPosition:r}){let n=this.getState().startPanPosition||r;if(!n)return this;let i=this.makeViewport(this.getViewportProps()).panByPosition(n,t);return this._getUpdatedState(i)}panEnd(){return this._getUpdatedState({startPanPosition:null})}rotateStart({pos:t}){return this._getUpdatedState({startRotatePos:t,startRotationX:this.getViewportProps().rotationX,startRotationOrbit:this.getViewportProps().rotationOrbit})}rotate({pos:t,deltaAngleX:r=0,deltaAngleY:n=0}){let{startRotatePos:s,startRotationX:i,startRotationOrbit:o}=this.getState(),{width:a,height:c}=this.getViewportProps();if(!s||i===void 0||o===void 0)return this;let l;if(t){let f=(t[0]-s[0])/a,h=(t[1]-s[1])/c;(i<-90||i>90)&&(f*=-1),l={rotationX:i+h*180,rotationOrbit:o+f*180}}else l={rotationX:i+n,rotationOrbit:o+r};return this._getUpdatedState(l)}rotateEnd(){return this._getUpdatedState({startRotationX:null,startRotationOrbit:null})}shortestPathFrom(t){let r=t.getViewportProps(),n={...this.getViewportProps()},{rotationOrbit:s}=n;return Math.abs(s-r.rotationOrbit)>180&&(n.rotationOrbit=s<0?s+360:s-360),n}zoomStart({pos:t}){return this._getUpdatedState({startZoomPosition:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom({pos:t,startPos:r,scale:n}){let{startZoom:s,startZoomPosition:i}=this.getState();if(i||(s=this.getViewportProps().zoom,i=this._unproject(r)||this._unproject(t)),!i)return this;let o=this._calculateNewZoom({scale:n,startZoom:s}),a=this.makeViewport({...this.getViewportProps(),zoom:o});return this._getUpdatedState({zoom:o,...a.panByPosition(i,t)})}zoomEnd(){return this._getUpdatedState({startZoomPosition:null,startZoom:null})}zoomIn(t=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:t})})}zoomOut(t=2){return this._getUpdatedState({zoom:this._calculateNewZoom({scale:1/t})})}moveLeft(t=50){return this._panFromCenter([-t,0])}moveRight(t=50){return this._panFromCenter([t,0])}moveUp(t=50){return this._panFromCenter([0,-t])}moveDown(t=50){return this._panFromCenter([0,t])}rotateLeft(t=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit-t})}rotateRight(t=15){return this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit+t})}rotateUp(t=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX-t})}rotateDown(t=10){return this._getUpdatedState({rotationX:this.getViewportProps().rotationX+t})}_unproject(t){let r=this.makeViewport(this.getViewportProps());return t&&r.unproject(t)}_calculateNewZoom({scale:t,startZoom:r}){let{maxZoom:n,minZoom:s}=this.getViewportProps();r===void 0&&(r=this.getViewportProps().zoom);let i=r+Math.log2(t);return xt(i,s,n)}_panFromCenter(t){let{width:r,height:n,target:s}=this.getViewportProps();return this.pan({startPosition:s,pos:[r/2+t[0],n/2+t[1]]})}_getUpdatedState(t){return new this.constructor({makeViewport:this.makeViewport,...this.getViewportProps(),...this.getState(),...t})}applyConstraints(t){let{maxZoom:r,minZoom:n,zoom:s,maxRotationX:i,minRotationX:o,rotationOrbit:a}=t;return t.zoom=Array.isArray(s)?[xt(s[0],n,r),xt(s[1],n,r)]:xt(s,n,r),t.rotationX=xt(t.rotationX,o,i),(a<-180||a>180)&&(t.rotationOrbit=bo(a+180,360)-180),t}},ko=class extends or{constructor(){super(...arguments),this.ControllerState=zh,this.transition={transitionDuration:300,transitionInterpolator:new ve({transitionProps:{compare:["target","zoom","rotationX","rotationOrbit"],required:["target","zoom"]}})}}};var zg=class extends ir{constructor(t={}){super(t),this.props.orbitAxis=t.orbitAxis||"Z"}getViewportType(){return Bo}get ControllerType(){return ko}};zg.displayName="OrbitView";var SI=zg;var jA=class extends zh{constructor(t){super(t),this.zoomAxis=t.zoomAxis||"all"}_calculateNewZoom({scale:t,startZoom:r}){let{maxZoom:n,minZoom:s}=this.getViewportProps();r===void 0&&(r=this.getViewportProps().zoom);let i=Math.log2(t);if(Array.isArray(r)){let[o,a]=r;switch(this.zoomAxis){case"X":o=xt(o+i,s,n);break;case"Y":a=xt(a+i,s,n);break;default:let c=Math.min(o+i,a+i);c<s&&(i+=s-c),c=Math.max(o+i,a+i),c>n&&(i+=n-c),o+=i,a+=i}return[o,a]}return xt(r+i,s,n)}},Uo=class extends or{constructor(){super(...arguments),this.ControllerState=jA,this.transition={transitionDuration:300,transitionInterpolator:new ve(["target","zoom"])},this.dragMode="pan"}_onPanRotate(){return!1}};var Vg=class extends ir{constructor(t={}){super(t)}getViewportType(){return Ss}get ControllerType(){return Uo}};Vg.displayName="OrthographicView";var wI=Vg;var qA=class extends gh{applyConstraints(t){let{maxZoom:r,minZoom:n,zoom:s}=t;t.zoom=xt(s,n,r);let{longitude:i,latitude:o}=t;return(i<-180||i>180)&&(t.longitude=bo(i+180,360)-180),t.latitude=xt(o,-Vr,Vr),t}},zo=class extends or{constructor(){super(...arguments),this.ControllerState=qA,this.transition={transitionDuration:300,transitionInterpolator:new ve(["longitude","latitude","zoom"])},this.dragMode="pan"}setProps(t){super.setProps(t),this.dragRotate=!1,this.touchRotate=!1}};var Wg=class extends ir{constructor(t={}){super(t)}getViewportType(t){return t.zoom>12?We:gn}get ControllerType(){return zo}};Wg.displayName="GlobeView";var Hg=Wg;var Vh=class{static get componentName(){return Object.prototype.hasOwnProperty.call(this,"extensionName")?this.extensionName:""}constructor(t){t&&(this.opts=t)}equals(t){return this===t?!0:this.constructor===t.constructor&&it(this.opts,t.opts,1)}getShaders(t){return null}getSubLayerProps(t){let{defaultProps:r}=t.constructor,n={updateTriggers:{}};for(let s in r)if(s in this.props){let i=r[s],o=this.props[s];n[s]=o,i&&i.type==="accessor"&&(n.updateTriggers[s]=this.props.updateTriggers[s],typeof o=="function"&&(n[s]=this.getSubLayerAccessor(o)))}return n}initializeState(t,r){}updateState(t,r){}onNeedsRedraw(t){}getNeedsPickingBuffer(t){return!1}draw(t,r){}finalizeState(t,r){}};Vh.defaultProps={};Vh.extensionName="LayerExtension";var ye=Vh;var XA={bearing:0,pitch:0,position:[0,0,0]},O$={speed:1.2,curve:1.414},ws=class extends vs{constructor(t={}){super({compare:["longitude","latitude","zoom","bearing","pitch","position"],extract:["width","height","longitude","latitude","zoom","bearing","pitch","position"],required:["width","height","latitude","longitude","zoom"]}),this.opts={...O$,...t}}interpolateProps(t,r,n){let s=fA(t,r,n,this.opts);for(let i in XA)s[i]=be(t[i]||XA[i],r[i]||XA[i],n);return s}getDuration(t,r){let{transitionDuration:n}=r;return n==="auto"&&(n=hA(t,r,this.opts)),n}};var Cs=class{constructor(t){this.indexStarts=[0],this.vertexStarts=[0],this.vertexCount=0,this.instanceCount=0;let{attributes:r={}}=t;this.typedArrayManager=an,this.attributes={},this._attributeDefs=r,this.opts=t,this.updateGeometry(t)}updateGeometry(t){Object.assign(this.opts,t);let{data:r,buffers:n={},getGeometry:s,geometryBuffer:i,positionFormat:o,dataChanged:a,normalize:c=!0}=this.opts;if(this.data=r,this.getGeometry=s,this.positionSize=i&&i.size||(o==="XY"?2:3),this.buffers=n,this.normalize=c,i&&(wt(r.startIndices),this.getGeometry=this.getGeometryFromBuffer(i),c||(n.vertexPositions=i)),this.geometryBuffer=n.vertexPositions,Array.isArray(a))for(let l of a)this._rebuildGeometry(l);else this._rebuildGeometry()}updatePartialGeometry({startRow:t,endRow:r}){this._rebuildGeometry({startRow:t,endRow:r})}getGeometryFromBuffer(t){let r=t.value||t;return ArrayBuffer.isView(r)?wg(r,{size:this.positionSize,offset:t.offset,stride:t.stride,startIndices:this.data.startIndices}):null}_allocate(t,r){let{attributes:n,buffers:s,_attributeDefs:i,typedArrayManager:o}=this;for(let a in i)if(a in s)o.release(n[a]),n[a]=null;else{let c=i[a];c.copy=r,n[a]=o.allocate(n[a],t,c)}}_forEachGeometry(t,r,n){let{data:s,getGeometry:i}=this,{iterable:o,objectInfo:a}=ie(s,r,n);for(let c of o){a.index++;let l=i?i(c,a):null;t(l,a.index)}}_rebuildGeometry(t){if(!this.data)return;let{indexStarts:r,vertexStarts:n,instanceCount:s}=this,{data:i,geometryBuffer:o}=this,{startRow:a=0,endRow:c=1/0}=t||{},l={};if(t||(r=[0],n=[0]),this.normalize||!o)this._forEachGeometry((h,u)=>{let d=h&&this.normalizeGeometry(h);l[u]=d,n[u+1]=n[u]+(d?this.getGeometrySize(d):0)},a,c),s=n[n.length-1];else if(n=i.startIndices,s=n[i.length]||0,ArrayBuffer.isView(o))s=s||o.length/this.positionSize;else if(o instanceof et){let h=this.positionSize*4;s=s||o.byteLength/h}else if(o.buffer){let h=o.stride||this.positionSize*4;s=s||o.buffer.byteLength/h}else if(o.value){let h=o.value,u=o.stride/h.BYTES_PER_ELEMENT||this.positionSize;s=s||h.length/u}this._allocate(s,Boolean(t)),this.indexStarts=r,this.vertexStarts=n,this.instanceCount=s;let f={};this._forEachGeometry((h,u)=>{let d=l[u]||h;f.vertexStart=n[u],f.indexStart=r[u];let p=u<n.length-1?n[u+1]:s;f.geometrySize=p-n[u],f.geometryIndex=u,this.updateGeometryAttributes(d,f)},a,c),this.vertexCount=r[r.length-1]}};function xr(e,t){t&&Object.entries(t).map(([r,n])=>{r.startsWith("--")?e.style.setProperty(r,n):e.style[r]=n})}function jn(e,t){t&&Object.keys(t).map(r=>{r.startsWith("--")?e.style.removeProperty(r):e.style[r]=""})}var CI=`uniform arcUniforms {
  bool greatCircle;
  bool useShortestPath;
  float numSegments;
  float widthScale;
  float widthMinPixels;
  float widthMaxPixels;
  highp int widthUnits;
} arc;
`,PI={name:"arc",vs:CI,fs:CI,uniformTypes:{greatCircle:"f32",useShortestPath:"f32",numSegments:"f32",widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",widthUnits:"i32"}};var II=`#version 300 es
#define SHADER_NAME arc-layer-vertex-shader
in vec4 instanceSourceColors;
in vec4 instanceTargetColors;
in vec3 instanceSourcePositions;
in vec3 instanceSourcePositions64Low;
in vec3 instanceTargetPositions;
in vec3 instanceTargetPositions64Low;
in vec3 instancePickingColors;
in float instanceWidths;
in float instanceHeights;
in float instanceTilts;
out vec4 vColor;
out vec2 uv;
out float isValid;
float paraboloid(float distance, float sourceZ, float targetZ, float ratio) {
float deltaZ = targetZ - sourceZ;
float dh = distance * instanceHeights;
if (dh == 0.0) {
return sourceZ + deltaZ * ratio;
}
float unitZ = deltaZ / dh;
float p2 = unitZ * unitZ + 1.0;
float dir = step(deltaZ, 0.0);
float z0 = mix(sourceZ, targetZ, dir);
float r = mix(ratio, 1.0 - ratio, dir);
return sqrt(r * (p2 - r)) * dh + z0;
}
vec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {
vec2 dir_screenspace = normalize(line_clipspace * project.viewportSize);
dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);
return dir_screenspace * offset_direction * width / 2.0;
}
float getSegmentRatio(float index) {
return smoothstep(0.0, 1.0, index / (arc.numSegments - 1.0));
}
vec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {
float distance = length(source.xy - target.xy);
float z = paraboloid(distance, source.z, target.z, segmentRatio);
float tiltAngle = radians(instanceTilts);
vec2 tiltDirection = normalize(target.xy - source.xy);
vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);
return vec3(
mix(source.xy, target.xy, segmentRatio) + tilt,
z * cos(tiltAngle)
);
}
float getAngularDist (vec2 source, vec2 target) {
vec2 sourceRadians = radians(source);
vec2 targetRadians = radians(target);
vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);
vec2 shd_sq = sin_half_delta * sin_half_delta;
float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;
return 2.0 * asin(sqrt(a));
}
vec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {
vec2 lngLat;
if(abs(angularDist - PI) < 0.001) {
lngLat = (1.0 - t) * source.xy + t * target.xy;
} else {
float a = sin((1.0 - t) * angularDist);
float b = sin(t * angularDist);
vec3 p = source3D.yxz * a + target3D.yxz * b;
lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));
}
float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);
return vec3(lngLat, z);
}
void main(void) {
geometry.worldPosition = instanceSourcePositions;
geometry.worldPositionAlt = instanceTargetPositions;
float segmentIndex = float(gl_VertexID / 2);
float segmentSide = mod(float(gl_VertexID), 2.) == 0. ? -1. : 1.;
float segmentRatio = getSegmentRatio(segmentIndex);
float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));
float nextSegmentRatio = getSegmentRatio(min(arc.numSegments - 1.0, segmentIndex + 1.0));
float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));
isValid = 1.0;
uv = vec2(segmentRatio, segmentSide);
geometry.uv = uv;
geometry.pickingColor = instancePickingColors;
vec4 curr;
vec4 next;
vec3 source;
vec3 target;
if ((arc.greatCircle || project.projectionMode == PROJECTION_MODE_GLOBE) && project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {
source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));
target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));
float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);
vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);
vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);
vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);
if (abs(currPos.x - prevPos.x) > 180.0) {
indexDir = -1.0;
isValid = 0.0;
} else if (abs(currPos.x - nextPos.x) > 180.0) {
indexDir = 1.0;
isValid = 0.0;
}
nextPos = indexDir < 0.0 ? prevPos : nextPos;
nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;
if (isValid == 0.0) {
nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;
float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);
currPos = mix(currPos, nextPos, t);
segmentRatio = mix(segmentRatio, nextSegmentRatio, t);
}
vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);
vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);
curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);
next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));
} else {
vec3 source_world = instanceSourcePositions;
vec3 target_world = instanceTargetPositions;
if (arc.useShortestPath) {
source_world.x = mod(source_world.x + 180., 360.0) - 180.;
target_world.x = mod(target_world.x + 180., 360.0) - 180.;
float deltaLng = target_world.x - source_world.x;
if (deltaLng > 180.) target_world.x -= 360.;
if (deltaLng < -180.) source_world.x -= 360.;
}
source = project_position(source_world, instanceSourcePositions64Low);
target = project_position(target_world, instanceTargetPositions64Low);
float antiMeridianX = 0.0;
if (arc.useShortestPath) {
if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {
antiMeridianX = -(project.coordinateOrigin.x + 180.) / 360. * TILE_SIZE;
}
float thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);
if (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {
isValid = 0.0;
indexDir = sign(segmentRatio - thresholdRatio);
segmentRatio = thresholdRatio;
}
}
nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;
vec3 currPos = interpolateFlat(source, target, segmentRatio);
vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);
if (arc.useShortestPath) {
if (nextPos.x < antiMeridianX) {
currPos.x += TILE_SIZE;
nextPos.x += TILE_SIZE;
}
}
curr = project_common_position_to_clipspace(vec4(currPos, 1.0));
next = project_common_position_to_clipspace(vec4(nextPos, 1.0));
geometry.position = vec4(currPos, 1.0);
}
float widthPixels = clamp(
project_size_to_pixel(instanceWidths * arc.widthScale, arc.widthUnits),
arc.widthMinPixels, arc.widthMaxPixels
);
vec3 offset = vec3(
getExtrusionOffset((next.xy - curr.xy) * indexDir, segmentSide, widthPixels),
0.0);
DECKGL_FILTER_SIZE(offset, geometry);
DECKGL_FILTER_GL_POSITION(curr, geometry);
gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);
vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);
vColor = vec4(color.rgb, color.a * layer.opacity);
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var RI=`#version 300 es
#define SHADER_NAME arc-layer-fragment-shader
precision highp float;
in vec4 vColor;
in vec2 uv;
in float isValid;
out vec4 fragColor;
void main(void) {
if (isValid == 0.0) {
discard;
}
fragColor = vColor;
geometry.uv = uv;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var Gg=[0,0,0,255],L$={getSourcePosition:{type:"accessor",value:e=>e.sourcePosition},getTargetPosition:{type:"accessor",value:e=>e.targetPosition},getSourceColor:{type:"accessor",value:Gg},getTargetColor:{type:"accessor",value:Gg},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},greatCircle:!1,numSegments:{type:"number",value:50,min:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}},Wh=class extends _t{getBounds(){return this.getAttributeManager()?.getBounds(["instanceSourcePositions","instanceTargetPositions"])}getShaders(){return super.getShaders({vs:II,fs:RI,modules:[ft,Pt,PI]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getSourceColor",defaultValue:Gg},instanceTargetColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getTargetColor",defaultValue:Gg},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}updateState(t){super.updateState(t),t.changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:t}){let{widthUnits:r,widthScale:n,widthMinPixels:s,widthMaxPixels:i,greatCircle:o,wrapLongitude:a,numSegments:c}=this.props,l={numSegments:c,widthUnits:Lt[r],widthScale:n,widthMinPixels:s,widthMaxPixels:i,greatCircle:o,useShortestPath:a},f=this.state.model;f.shaderInputs.setProps({arc:l}),f.setVertexCount(c*2),f.draw(this.context.renderPass)}_getModel(){return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),topology:"triangle-strip",isInstanced:!0})}};Wh.layerName="ArcLayer";Wh.defaultProps=L$;var jg=Wh;var B$=new Uint32Array([0,2,1,0,3,2]),N$=new Float32Array([0,1,0,0,1,0,1,1]);function YA(e,t){if(!t)return F$(e);let r=Math.max(Math.abs(e[0][0]-e[3][0]),Math.abs(e[1][0]-e[2][0])),n=Math.max(Math.abs(e[1][1]-e[0][1]),Math.abs(e[2][1]-e[3][1])),s=Math.ceil(r/t)+1,i=Math.ceil(n/t)+1,o=(s-1)*(i-1)*6,a=new Uint32Array(o),c=new Float32Array(s*i*2),l=new Float64Array(s*i*3),f=0,h=0;for(let u=0;u<s;u++){let d=u/(s-1);for(let p=0;p<i;p++){let m=p/(i-1),g=D$(e,d,m);l[f*3+0]=g[0],l[f*3+1]=g[1],l[f*3+2]=g[2]||0,c[f*2+0]=d,c[f*2+1]=1-m,u>0&&p>0&&(a[h++]=f-i,a[h++]=f-i-1,a[h++]=f-1,a[h++]=f-i,a[h++]=f-1,a[h++]=f),f++}}return{vertexCount:o,positions:l,indices:a,texCoords:c}}function F$(e){let t=new Float64Array(12);for(let r=0;r<e.length;r++)t[r*3+0]=e[r][0],t[r*3+1]=e[r][1],t[r*3+2]=e[r][2]||0;return{vertexCount:6,positions:t,indices:B$,texCoords:N$}}function D$(e,t,r){return be(be(e[0],e[1],r),be(e[3],e[2],r),t)}var OI=`uniform bitmapUniforms {
  vec4 bounds;
  float coordinateConversion;
  float desaturate;
  vec3 tintColor;
  vec4 transparentColor;
} bitmap;
`,LI={name:"bitmap",vs:OI,fs:OI,uniformTypes:{bounds:"vec4<f32>",coordinateConversion:"f32",desaturate:"f32",tintColor:"vec3<f32>",transparentColor:"vec4<f32>"}};var BI=`#version 300 es
#define SHADER_NAME bitmap-layer-vertex-shader

in vec2 texCoords;
in vec3 positions;
in vec3 positions64Low;

out vec2 vTexCoord;
out vec2 vTexPos;

const vec3 pickingColor = vec3(1.0, 0.0, 0.0);

void main(void) {
  geometry.worldPosition = positions;
  geometry.uv = texCoords;
  geometry.pickingColor = pickingColor;

  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);

  vTexCoord = texCoords;

  if (bitmap.coordinateConversion < -0.5) {
    vTexPos = geometry.position.xy + project.commonOrigin.xy;
  } else if (bitmap.coordinateConversion > 0.5) {
    vTexPos = geometry.worldPosition.xy;
  }

  vec4 color = vec4(0.0);
  DECKGL_FILTER_COLOR(color, geometry);
}
`;var k$=`
vec3 packUVsIntoRGB(vec2 uv) {
  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction
  vec2 uv8bit = floor(uv * 256.);

  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits
  // Scale and clamp to 0-1 range
  vec2 uvFraction = fract(uv * 256.);
  vec2 uvFraction4bit = floor(uvFraction * 16.);

  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates
  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;

  return vec3(uv8bit, fractions) / 255.;
}
`,NI=`#version 300 es
#define SHADER_NAME bitmap-layer-fragment-shader

#ifdef GL_ES
precision highp float;
#endif

uniform sampler2D bitmapTexture;

in vec2 vTexCoord;
in vec2 vTexPos;

out vec4 fragColor;

/* projection utils */
const float TILE_SIZE = 512.0;
const float PI = 3.1415926536;
const float WORLD_SCALE = TILE_SIZE / PI / 2.0;

// from degrees to Web Mercator
vec2 lnglat_to_mercator(vec2 lnglat) {
  float x = lnglat.x;
  float y = clamp(lnglat.y, -89.9, 89.9);
  return vec2(
    radians(x) + PI,
    PI + log(tan(PI * 0.25 + radians(y) * 0.5))
  ) * WORLD_SCALE;
}

// from Web Mercator to degrees
vec2 mercator_to_lnglat(vec2 xy) {
  xy /= WORLD_SCALE;
  return degrees(vec2(
    xy.x - PI,
    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5
  ));
}
/* End projection utils */

// apply desaturation
vec3 color_desaturate(vec3 color) {
  float luminance = (color.r + color.g + color.b) * 0.333333333;
  return mix(color, vec3(luminance), bitmap.desaturate);
}

// apply tint
vec3 color_tint(vec3 color) {
  return color * bitmap.tintColor;
}

// blend with background color
vec4 apply_opacity(vec3 color, float alpha) {
  if (bitmap.transparentColor.a == 0.0) {
    return vec4(color, alpha);
  }
  float blendedAlpha = alpha + bitmap.transparentColor.a * (1.0 - alpha);
  float highLightRatio = alpha / blendedAlpha;
  vec3 blendedRGB = mix(bitmap.transparentColor.rgb, color, highLightRatio);
  return vec4(blendedRGB, blendedAlpha);
}

vec2 getUV(vec2 pos) {
  return vec2(
    (pos.x - bitmap.bounds[0]) / (bitmap.bounds[2] - bitmap.bounds[0]),
    (pos.y - bitmap.bounds[3]) / (bitmap.bounds[1] - bitmap.bounds[3])
  );
}

${k$}

void main(void) {
  vec2 uv = vTexCoord;
  if (bitmap.coordinateConversion < -0.5) {
    vec2 lnglat = mercator_to_lnglat(vTexPos);
    uv = getUV(lnglat);
  } else if (bitmap.coordinateConversion > 0.5) {
    vec2 commonPos = lnglat_to_mercator(vTexPos);
    uv = getUV(commonPos);
  }
  vec4 bitmapColor = texture(bitmapTexture, uv);

  fragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * layer.opacity);

  geometry.uv = uv;
  DECKGL_FILTER_COLOR(fragColor, geometry);

  if (bool(picking.isActive) && !bool(picking.isAttribute)) {
    // Since instance information is not used, we can use picking color for pixel index
    fragColor.rgb = packUVsIntoRGB(uv);
  }
}
`;var U$={image:{type:"image",value:null,async:!0},bounds:{type:"array",value:[1,0,0,1],compare:!0},_imageCoordinateSystem:q.DEFAULT,desaturate:{type:"number",min:0,max:1,value:0},transparentColor:{type:"color",value:[0,0,0,0]},tintColor:{type:"color",value:[255,255,255]},textureParameters:{type:"object",ignore:!0,value:null}},Hh=class extends _t{getShaders(){return super.getShaders({vs:BI,fs:NI,modules:[ft,Pt,LI]})}initializeState(){let t=this.getAttributeManager();t.remove(["instancePickingColors"]);let r=!0;t.add({indices:{size:1,isIndexed:!0,update:n=>n.value=this.state.mesh.indices,noAlloc:r},positions:{size:3,type:"float64",fp64:this.use64bitPositions(),update:n=>n.value=this.state.mesh.positions,noAlloc:r},texCoords:{size:2,update:n=>n.value=this.state.mesh.texCoords,noAlloc:r}})}updateState({props:t,oldProps:r,changeFlags:n}){let s=this.getAttributeManager();if(n.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),s.invalidateAll()),t.bounds!==r.bounds){let i=this.state.mesh,o=this._createMesh();this.state.model.setVertexCount(o.vertexCount);for(let a in o)i&&i[a]!==o[a]&&s.invalidate(a);this.setState({mesh:o,...this._getCoordinateUniforms()})}else t._imageCoordinateSystem!==r._imageCoordinateSystem&&this.setState(this._getCoordinateUniforms())}getPickingInfo(t){let{image:r}=this.props,n=t.info;if(!n.color||!r)return n.bitmap=null,n;let{width:s,height:i}=r;n.index=0;let o=z$(n.color);return n.bitmap={size:{width:s,height:i},uv:o,pixel:[Math.floor(o[0]*s),Math.floor(o[1]*i)]},n}disablePickingIndex(){this.setState({disablePicking:!0})}restorePickingColors(){this.setState({disablePicking:!1})}_updateAutoHighlight(t){super._updateAutoHighlight({...t,color:this.encodePickingColor(0)})}_createMesh(){let{bounds:t}=this.props,r=t;return FI(t)&&(r=[[t[0],t[1]],[t[0],t[3]],[t[2],t[3]],[t[2],t[1]]]),YA(r,this.context.viewport.resolution)}_getModel(){return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),topology:"triangle-list",isInstanced:!1})}draw(t){let{shaderModuleProps:r}=t,{model:n,coordinateConversion:s,bounds:i,disablePicking:o}=this.state,{image:a,desaturate:c,transparentColor:l,tintColor:f}=this.props;if(!(r.picking.isActive&&o)&&a&&n){let h={bitmapTexture:a,bounds:i,coordinateConversion:s,desaturate:c,tintColor:f.slice(0,3).map(u=>u/255),transparentColor:l.map(u=>u/255)};n.shaderInputs.setProps({bitmap:h}),n.draw(this.context.renderPass)}}_getCoordinateUniforms(){let{LNGLAT:t,CARTESIAN:r,DEFAULT:n}=q,{_imageCoordinateSystem:s}=this.props;if(s!==n){let{bounds:i}=this.props;if(!FI(i))throw new Error("_imageCoordinateSystem only supports rectangular bounds");let o=this.context.viewport.resolution?t:r;if(s=s===t?t:r,s===t&&o===r)return{coordinateConversion:-1,bounds:i};if(s===r&&o===t){let a=ae([i[0],i[1]]),c=ae([i[2],i[3]]);return{coordinateConversion:1,bounds:[a[0],a[1],c[0],c[1]]}}}return{coordinateConversion:0,bounds:[0,0,0,0]}}};Hh.layerName="BitmapLayer";Hh.defaultProps=U$;var qg=Hh;function z$(e){let[t,r,n]=e,s=(n&240)/256,i=(n&15)/16;return[(t+i)/256,(r+s)/256]}function FI(e){return Number.isFinite(e[0])}var DI=`uniform iconUniforms {
  float sizeScale;
  vec2 iconsTextureDim;
  float sizeMinPixels;
  float sizeMaxPixels;
  bool billboard;
  highp int sizeUnits;
  float alphaCutoff;
} icon;
`,kI={name:"icon",vs:DI,fs:DI,uniformTypes:{sizeScale:"f32",iconsTextureDim:"vec2<f32>",sizeMinPixels:"f32",sizeMaxPixels:"f32",billboard:"f32",sizeUnits:"i32",alphaCutoff:"f32"}};var UI=`#version 300 es
#define SHADER_NAME icon-layer-vertex-shader
in vec2 positions;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in float instanceSizes;
in float instanceAngles;
in vec4 instanceColors;
in vec3 instancePickingColors;
in vec4 instanceIconFrames;
in float instanceColorModes;
in vec2 instanceOffsets;
in vec2 instancePixelOffset;
out float vColorMode;
out vec4 vColor;
out vec2 vTextureCoords;
out vec2 uv;
vec2 rotate_by_angle(vec2 vertex, float angle) {
float angle_radian = angle * PI / 180.0;
float cos_angle = cos(angle_radian);
float sin_angle = sin(angle_radian);
mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);
return rotationMatrix * vertex;
}
void main(void) {
geometry.worldPosition = instancePositions;
geometry.uv = positions;
geometry.pickingColor = instancePickingColors;
uv = positions;
vec2 iconSize = instanceIconFrames.zw;
float sizePixels = clamp(
project_size_to_pixel(instanceSizes * icon.sizeScale, icon.sizeUnits),
icon.sizeMinPixels, icon.sizeMaxPixels
);
float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;
vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;
pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;
pixelOffset += instancePixelOffset;
pixelOffset.y *= -1.0;
if (icon.billboard)  {
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vec3 offset = vec3(pixelOffset, 0.0);
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);
} else {
vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);
DECKGL_FILTER_SIZE(offset_common, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
vTextureCoords = mix(
instanceIconFrames.xy,
instanceIconFrames.xy + iconSize,
(positions.xy + 1.0) / 2.0
) / icon.iconsTextureDim;
vColor = instanceColors;
DECKGL_FILTER_COLOR(vColor, geometry);
vColorMode = instanceColorModes;
}
`;var zI=`#version 300 es
#define SHADER_NAME icon-layer-fragment-shader
precision highp float;
uniform sampler2D iconsTexture;
in float vColorMode;
in vec4 vColor;
in vec2 vTextureCoords;
in vec2 uv;
out vec4 fragColor;
void main(void) {
geometry.uv = uv;
vec4 texColor = texture(iconsTexture, vTextureCoords);
vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);
float a = texColor.a * layer.opacity * vColor.a;
if (a < icon.alphaCutoff) {
discard;
}
fragColor = vec4(color, a);
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var V$=1024,W$=4,VI=()=>{},WI={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},H$={x:0,y:0,width:0,height:0};function G$(e){return Math.pow(2,Math.ceil(Math.log2(e)))}function j$(e,t,r,n){let s=Math.min(r/t.width,n/t.height),i=Math.floor(t.width*s),o=Math.floor(t.height*s);return s===1?{image:t,width:i,height:o}:(e.canvas.height=o,e.canvas.width=i,e.clearRect(0,0,i,o),e.drawImage(t,0,0,t.width,t.height,0,0,i,o),{image:e.canvas,width:i,height:o})}function Gh(e){return e&&(e.id||e.url)}function q$(e,t,r,n){let{width:s,height:i,device:o}=e,a=o.createTexture({format:"rgba8unorm",width:t,height:r,sampler:n,mipmaps:!0}),c=o.createCommandEncoder();return c.copyTextureToTexture({sourceTexture:e,destinationTexture:a,width:s,height:i}),c.finish(),e.destroy(),a}function HI(e,t,r){for(let n=0;n<t.length;n++){let{icon:s,xOffset:i}=t[n],o=Gh(s);e[o]={...s,x:i,y:r}}}function X$({icons:e,buffer:t,mapping:r={},xOffset:n=0,yOffset:s=0,rowHeight:i=0,canvasWidth:o}){let a=[];for(let c=0;c<e.length;c++){let l=e[c],f=Gh(l);if(!r[f]){let{height:h,width:u}=l;n+u+t>o&&(HI(r,a,s),n=0,s=i+s+t,i=0,a=[]),a.push({icon:l,xOffset:n}),n=n+u+t,i=Math.max(i,h)}}return a.length>0&&HI(r,a,s),{mapping:r,rowHeight:i,xOffset:n,yOffset:s,canvasWidth:o,canvasHeight:G$(i+s+t)}}function Y$(e,t,r){if(!e||!t)return null;r=r||{};let n={},{iterable:s,objectInfo:i}=ie(e);for(let o of s){i.index++;let a=t(o,i),c=Gh(a);if(!a)throw new Error("Icon is missing.");if(!a.url)throw new Error("Icon url is missing.");!n[c]&&(!r[c]||a.url!==r[c].url)&&(n[c]={...a,source:o,sourceIndex:i.index})}return n}var jh=class{constructor(t,{onUpdate:r=VI,onError:n=VI}){this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._samplerParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=W$,this._canvasWidth=V$,this._canvasHeight=0,this._canvas=null,this.device=t,this.onUpdate=r,this.onError=n}finalize(){this._texture?.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(t){let r=this._autoPacking?Gh(t):t;return this._mapping[r]||H$}setProps({loadOptions:t,autoPacking:r,iconAtlas:n,iconMapping:s,textureParameters:i}){t&&(this._loadOptions=t),r!==void 0&&(this._autoPacking=r),s&&(this._mapping=s),n&&(this._texture?.delete(),this._texture=null,this._externalTexture=n),i&&(this._samplerParameters=i)}get isLoaded(){return this._pendingCount===0}packIcons(t,r){if(!this._autoPacking||typeof document>"u")return;let n=Object.values(Y$(t,r,this._mapping)||{});if(n.length>0){let{mapping:s,xOffset:i,yOffset:o,rowHeight:a,canvasHeight:c}=X$({icons:n,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=a,this._mapping=s,this._xOffset=i,this._yOffset=o,this._canvasHeight=c,this._texture||(this._texture=this.device.createTexture({format:"rgba8unorm",width:this._canvasWidth,height:this._canvasHeight,sampler:this._samplerParameters||WI,mipmaps:!0})),this._texture.height!==this._canvasHeight&&(this._texture=q$(this._texture,this._canvasWidth,this._canvasHeight,this._samplerParameters||WI)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(n)}}_loadIcons(t){let r=this._canvas.getContext("2d",{willReadFrequently:!0});for(let n of t)this._pendingCount++,me(n.url,this._loadOptions).then(s=>{let i=Gh(n),o=this._mapping[i],{x:a,y:c,width:l,height:f}=o,{image:h,width:u,height:d}=j$(r,s,l,f);this._texture?.copyExternalImage({image:h,x:a+(l-u)/2,y:c+(f-d)/2,width:u,height:d}),o.width=u,o.height=d,this._texture.generateMipmap(),this.onUpdate()}).catch(s=>{this.onError({url:n.url,source:n.source,sourceIndex:n.sourceIndex,loadOptions:this._loadOptions,error:s})}).finally(()=>{this._pendingCount--})}};var GI=[0,0,0,255],$$={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:e=>e.position},getIcon:{type:"accessor",value:e=>e.icon},getColor:{type:"accessor",value:GI},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,optional:!0},textureParameters:{type:"object",ignore:!0,value:null}},qh=class extends _t{getShaders(){return super.getShaders({vs:UI,fs:zI,modules:[ft,Pt,kI]})}initializeState(){this.state={iconManager:new jh(this.context.device,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})},this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:"uint8",accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:GI},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(t){super.updateState(t);let{props:r,oldProps:n,changeFlags:s}=t,i=this.getAttributeManager(),{iconAtlas:o,iconMapping:a,data:c,getIcon:l,textureParameters:f}=r,{iconManager:h}=this.state;if(typeof o=="string")return;let u=o||this.internalState.isAsyncPropLoading("iconAtlas");h.setProps({loadOptions:r.loadOptions,autoPacking:!u,iconAtlas:o,iconMapping:u?a:null,textureParameters:f}),u?n.iconMapping!==r.iconMapping&&i.invalidate("getIcon"):(s.dataChanged||s.updateTriggersChanged&&(s.updateTriggersChanged.all||s.updateTriggersChanged.getIcon))&&h.packIcons(c,l),s.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),i.invalidateAll())}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(t){super.finalizeState(t),this.state.iconManager.finalize()}draw({uniforms:t}){let{sizeScale:r,sizeMinPixels:n,sizeMaxPixels:s,sizeUnits:i,billboard:o,alphaCutoff:a}=this.props,{iconManager:c}=this.state,l=c.getTexture();if(l){let f=this.state.model,h={iconsTexture:l,iconsTextureDim:[l.width,l.height],sizeUnits:Lt[i],sizeScale:r,sizeMinPixels:n,sizeMaxPixels:s,billboard:o,alphaCutoff:a};f.shaderInputs.setProps({icon:h}),f.draw(this.context.renderPass)}}_getModel(){let t=[-1,-1,1,-1,-1,1,1,1];return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new ht({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array(t)}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(t){let r=this.getCurrentLayer()?.props.onIconError;r?r(t):W.error(t.error.message)()}getInstanceOffset(t){let{width:r,height:n,anchorX:s=r/2,anchorY:i=n/2}=this.state.iconManager.getIconMapping(t);return[r/2-s,n/2-i]}getInstanceColorMode(t){return this.state.iconManager.getIconMapping(t).mask?1:0}getInstanceIconFrame(t){let{x:r,y:n,width:s,height:i}=this.state.iconManager.getIconMapping(t);return[r,n,s,i]}};qh.defaultProps=$$;qh.layerName="IconLayer";var Ec=qh;var K$=`struct LineUniforms {
  widthScale: f32,
  widthMinPixels: f32,
  widthMaxPixels: f32,
  useShortestPath: f32,
  widthUnits: i32,
};

@group(0) @binding(1)
var<uniform> line: LineUniforms;
`,jI=`uniform lineUniforms {
  float widthScale;
  float widthMinPixels;
  float widthMaxPixels;
  float useShortestPath;
  highp int widthUnits;
} line;
`,qI={name:"line",source:K$,vs:jI,fs:jI,uniformTypes:{widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",useShortestPath:"f32",widthUnits:"i32"}};var XI=`// TODO(ibgreen): Hack for Layer uniforms (move to new "color" module?)
struct LayerUniforms {
  opacity: f32,
};
var<private> layer: LayerUniforms = LayerUniforms(1.0);
// @group(0) @binding(1) var<uniform> layer: LayerUniforms;

// ---------- Helper Structures & Functions ----------

// Placeholder filter functions.
fn deckgl_filter_size(offset: vec3<f32>, geometry: Geometry) -> vec3<f32> {
  return offset;
}
fn deckgl_filter_gl_position(p: vec4<f32>, geometry: Geometry) -> vec4<f32> {
  return p;
}
fn deckgl_filter_color(color: vec4<f32>, geometry: Geometry) -> vec4<f32> {
  return color;
}

// Compute an extrusion offset given a line direction (in clipspace),
// an offset direction (-1 or 1), and a width in pixels.
// Assumes a uniform "project" with a viewportSize field is available.
fn getExtrusionOffset(line_clipspace: vec2<f32>, offset_direction: f32, width: f32) -> vec2<f32> {
  // project.viewportSize should be provided as a uniform (not shown here)
  let dir_screenspace = normalize(line_clipspace * project.viewportSize);
  // Rotate by 90\xB0: (x,y) becomes (-y,x)
  let rotated = vec2<f32>(-dir_screenspace.y, dir_screenspace.x);
  return rotated * offset_direction * width / 2.0;
}

// Splits the line between two points at a given x coordinate.
// Interpolates the y and z components.
fn splitLine(a: vec3<f32>, b: vec3<f32>, x: f32) -> vec3<f32> {
  let t: f32 = (x - a.x) / (b.x - a.x);
  return vec3<f32>(x, a.yz + t * (b.yz - a.yz));
}

// ---------- Uniforms & Global Structures ----------

// Uniforms for line, layer, and project are assumed to be defined elsewhere.
// For example:
//
// @group(0) @binding(0)
// var<uniform> line: LineUniform;
//
// struct LayerUniform {
//   opacity: f32,
// };
// @group(0) @binding(1)
// var<uniform> layer: LayerUniform;
//
// struct ProjectUniform {
//   viewportSize: vec2<f32>,
// };
// @group(0) @binding(2)
// var<uniform> project: ProjectUniform;



// ---------- Vertex Output Structure ----------

struct Varyings {
  @builtin(position) gl_Position: vec4<f32>,
  @location(0) vColor: vec4<f32>,
  @location(1) uv: vec2<f32>,
};

// ---------- Vertex Shader Entry Point ----------

@vertex
fn vertexMain(
  @location(0) positions: vec3<f32>,
  @location(1) instanceSourcePositions: vec3<f32>,
  @location(2) instanceTargetPositions: vec3<f32>,
  @location(3) instanceSourcePositions64Low: vec3<f32>,
  @location(4) instanceTargetPositions64Low: vec3<f32>,
  @location(5) instanceColors: vec4<f32>,
  @location(6) instancePickingColors: vec3<f32>,
  @location(7) instanceWidths: f32
) -> Varyings {
  var geometry: Geometry;
  geometry.worldPosition = instanceSourcePositions;
  geometry.worldPositionAlt = instanceTargetPositions;

  var source_world: vec3<f32> = instanceSourcePositions;
  var target_world: vec3<f32> = instanceTargetPositions;
  var source_world_64low: vec3<f32> = instanceSourcePositions64Low;
  var target_world_64low: vec3<f32> = instanceTargetPositions64Low;

  // Apply shortest-path adjustments if needed.
  if (line.useShortestPath > 0.5 || line.useShortestPath < -0.5) {
    source_world.x = (source_world.x + 180.0 % 360.0) - 180.0;
    target_world.x = (target_world.x + 180.0 % 360.0) - 180.0;
    let deltaLng: f32 = target_world.x - source_world.x;

    if (deltaLng * line.useShortestPath > 180.0) {
      source_world.x = source_world.x + 360.0 * line.useShortestPath;
      source_world = splitLine(source_world, target_world, 180.0 * line.useShortestPath);
      source_world_64low = vec3<f32>(0.0, 0.0, 0.0);
    } else if (deltaLng * line.useShortestPath < -180.0) {
      target_world.x = target_world.x + 360.0 * line.useShortestPath;
      target_world = splitLine(source_world, target_world, 180.0 * line.useShortestPath);
      target_world_64low = vec3<f32>(0.0, 0.0, 0.0);
    } else if (line.useShortestPath < 0.0) {
      var abortOut: Varyings;
      abortOut.gl_Position = vec4<f32>(0.0);
      abortOut.vColor = vec4<f32>(0.0);
      abortOut.uv = vec2<f32>(0.0);
      return abortOut;
    }
  }

  // Project Pos and target positions to clip space.
  let sourceResult = project_position_to_clipspace_and_commonspace(source_world, source_world_64low, vec3<f32>(0.0));
  let targetResult = project_position_to_clipspace_and_commonspace(target_world, target_world_64low, vec3<f32>(0.0));
  let sourcePos: vec4<f32> = sourceResult.clipPosition;
  let targetPos: vec4<f32> = targetResult.clipPosition;
  let source_commonspace: vec4<f32> = sourceResult.commonPosition;
  let target_commonspace: vec4<f32> = targetResult.commonPosition;

  // Interpolate along the line segment.
  let segmentIndex: f32 = positions.x;
  let p: vec4<f32> = sourcePos + segmentIndex * (targetPos - sourcePos);
  geometry.position = source_commonspace + segmentIndex * (target_commonspace - source_commonspace);
  let uv: vec2<f32> = positions.xy;
  geometry.uv = uv;
  geometry.pickingColor = instancePickingColors;

  // Determine width in pixels.
  let widthPixels: f32 = clamp(
    project_unit_size_to_pixel(instanceWidths * line.widthScale, line.widthUnits),
    line.widthMinPixels, line.widthMaxPixels
  );

  // Compute extrusion offset.
  let extrusion: vec2<f32> = getExtrusionOffset(targetPos.xy - sourcePos.xy, positions.y, widthPixels);
  let offset: vec3<f32> = vec3<f32>(extrusion, 0.0);

  // Apply deck.gl filter functions.
  let filteredOffset = deckgl_filter_size(offset, geometry);
  let filteredP = deckgl_filter_gl_position(p, geometry);

  let clipOffset: vec2<f32> = project_pixel_size_to_clipspace(filteredOffset.xy);
  let finalPosition: vec4<f32> = filteredP + vec4<f32>(clipOffset, 0.0, 0.0);

  // Compute color.
  var vColor: vec4<f32> = vec4<f32>(instanceColors.rgb, instanceColors.a * layer.opacity);
  // vColor = deckgl_filter_color(vColor, geometry);

  var output: Varyings;
  output.gl_Position = finalPosition;
  output.vColor = vColor;
  output.uv = uv;
  return output;
}

@fragment
fn fragmentMain(
  @location(0) vColor: vec4<f32>,
  @location(1) uv: vec2<f32>
) -> @location(0) vec4<f32> {
  // Create and initialize geometry with the provided uv.
  var geometry: Geometry;
  geometry.uv = uv;

  // Start with the input color.
  var fragColor: vec4<f32> = vColor;

  // Apply the deck.gl filter to the color.
  fragColor = deckgl_filter_color(fragColor, geometry);

  return fragColor;
}
`;var YI=`#version 300 es
#define SHADER_NAME line-layer-vertex-shader
in vec3 positions;
in vec3 instanceSourcePositions;
in vec3 instanceTargetPositions;
in vec3 instanceSourcePositions64Low;
in vec3 instanceTargetPositions64Low;
in vec4 instanceColors;
in vec3 instancePickingColors;
in float instanceWidths;
out vec4 vColor;
out vec2 uv;
vec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {
vec2 dir_screenspace = normalize(line_clipspace * project.viewportSize);
dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);
return dir_screenspace * offset_direction * width / 2.0;
}
vec3 splitLine(vec3 a, vec3 b, float x) {
float t = (x - a.x) / (b.x - a.x);
return vec3(x, mix(a.yz, b.yz, t));
}
void main(void) {
geometry.worldPosition = instanceSourcePositions;
geometry.worldPositionAlt = instanceTargetPositions;
vec3 source_world = instanceSourcePositions;
vec3 target_world = instanceTargetPositions;
vec3 source_world_64low = instanceSourcePositions64Low;
vec3 target_world_64low = instanceTargetPositions64Low;
if (line.useShortestPath > 0.5 || line.useShortestPath < -0.5) {
source_world.x = mod(source_world.x + 180., 360.0) - 180.;
target_world.x = mod(target_world.x + 180., 360.0) - 180.;
float deltaLng = target_world.x - source_world.x;
if (deltaLng * line.useShortestPath > 180.) {
source_world.x += 360. * line.useShortestPath;
source_world = splitLine(source_world, target_world, 180. * line.useShortestPath);
source_world_64low = vec3(0.0);
} else if (deltaLng * line.useShortestPath < -180.) {
target_world.x += 360. * line.useShortestPath;
target_world = splitLine(source_world, target_world, 180. * line.useShortestPath);
target_world_64low = vec3(0.0);
} else if (line.useShortestPath < 0.) {
gl_Position = vec4(0.);
return;
}
}
vec4 source_commonspace;
vec4 target_commonspace;
vec4 source = project_position_to_clipspace(source_world, source_world_64low, vec3(0.), source_commonspace);
vec4 target = project_position_to_clipspace(target_world, target_world_64low, vec3(0.), target_commonspace);
float segmentIndex = positions.x;
vec4 p = mix(source, target, segmentIndex);
geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);
uv = positions.xy;
geometry.uv = uv;
geometry.pickingColor = instancePickingColors;
float widthPixels = clamp(
project_size_to_pixel(instanceWidths * line.widthScale, line.widthUnits),
line.widthMinPixels, line.widthMaxPixels
);
vec3 offset = vec3(
getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),
0.0);
DECKGL_FILTER_SIZE(offset, geometry);
DECKGL_FILTER_GL_POSITION(p, geometry);
gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);
vColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var $I=`#version 300 es
#define SHADER_NAME line-layer-fragment-shader
precision highp float;
in vec4 vColor;
in vec2 uv;
out vec4 fragColor;
void main(void) {
geometry.uv = uv;
fragColor = vColor;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var Z$=[0,0,0,255],J$={getSourcePosition:{type:"accessor",value:e=>e.sourcePosition},getTargetPosition:{type:"accessor",value:e=>e.targetPosition},getColor:{type:"accessor",value:Z$},getWidth:{type:"accessor",value:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}},Xh=class extends _t{getBounds(){return this.getAttributeManager()?.getBounds(["instanceSourcePositions","instanceTargetPositions"])}getShaders(){return super.getShaders({vs:YI,fs:$I,source:XI,modules:[ft,Pt,qI]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1}})}updateState(t){super.updateState(t),t.changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:t}){let{widthUnits:r,widthScale:n,widthMinPixels:s,widthMaxPixels:i,wrapLongitude:o}=this.props,a=this.state.model,c={widthUnits:Lt[r],widthScale:n,widthMinPixels:s,widthMaxPixels:i,useShortestPath:o?1:0};a.shaderInputs.setProps({line:c}),a.draw(this.context.renderPass),o&&(a.shaderInputs.setProps({line:{...c,useShortestPath:-1}}),a.draw(this.context.renderPass))}_getModel(){let t=[0,-1,0,0,1,0,1,-1,0,1,1,0];return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new ht({topology:"triangle-strip",attributes:{positions:{size:3,value:new Float32Array(t)}}}),isInstanced:!0})}};Xh.layerName="LineLayer";Xh.defaultProps=J$;var KI=Xh;var ZI=`uniform pointCloudUniforms {
  float radiusPixels;
  highp int sizeUnits;
} pointCloud;
`,JI={name:"pointCloud",vs:ZI,fs:ZI,uniformTypes:{radiusPixels:"f32",sizeUnits:"i32"}};var QI=`#version 300 es
#define SHADER_NAME point-cloud-layer-vertex-shader
in vec3 positions;
in vec3 instanceNormals;
in vec4 instanceColors;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in vec3 instancePickingColors;
out vec4 vColor;
out vec2 unitPosition;
void main(void) {
geometry.worldPosition = instancePositions;
geometry.normal = project_normal(instanceNormals);
unitPosition = positions.xy;
geometry.uv = unitPosition;
geometry.pickingColor = instancePickingColors;
vec3 offset = vec3(positions.xy * project_size_to_pixel(pointCloud.radiusPixels, pointCloud.sizeUnits), 0.0);
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);
vec3 lightColor = lighting_getLightColor(instanceColors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);
vColor = vec4(lightColor, instanceColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var tR=`#version 300 es
#define SHADER_NAME point-cloud-layer-fragment-shader
precision highp float;
in vec4 vColor;
in vec2 unitPosition;
out vec4 fragColor;
void main(void) {
geometry.uv = unitPosition.xy;
float distToCenter = length(unitPosition);
if (distToCenter > 1.0) {
discard;
}
fragColor = vColor;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var eR=[0,0,0,255],rR=[0,0,1],Q$={sizeUnits:"pixels",pointSize:{type:"number",min:0,value:10},getPosition:{type:"accessor",value:e=>e.position},getNormal:{type:"accessor",value:rR},getColor:{type:"accessor",value:eR},material:!0,radiusPixels:{deprecatedFor:"pointSize"}};function tK(e){let{header:t,attributes:r}=e;if(!(!t||!r)&&(e.length=t.vertexCount,r.POSITION&&(r.instancePositions=r.POSITION),r.NORMAL&&(r.instanceNormals=r.NORMAL),r.COLOR_0)){let{size:n,value:s}=r.COLOR_0;r.instanceColors={size:n,type:"unorm8",value:s}}}var Yh=class extends _t{getShaders(){return super.getShaders({vs:QI,fs:tR,modules:[ft,fi,Pt,JI]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceNormals:{size:3,transition:!0,accessor:"getNormal",defaultValue:rR},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:eR}})}updateState(t){let{changeFlags:r,props:n}=t;super.updateState(t),r.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll()),r.dataChanged&&tK(n.data)}draw({uniforms:t}){let{pointSize:r,sizeUnits:n}=this.props,s=this.state.model,i={sizeUnits:Lt[n],radiusPixels:r};s.shaderInputs.setProps({pointCloud:i}),s.draw(this.context.renderPass)}_getModel(){let t=[];for(let r=0;r<3;r++){let n=r/3*Math.PI*2;t.push(Math.cos(n)*2,Math.sin(n)*2,0)}return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new ht({topology:"triangle-list",attributes:{positions:new Float32Array(t)}}),isInstanced:!0})}};Yh.layerName="PointCloudLayer";Yh.defaultProps=Q$;var Xg=Yh;var nR=`uniform scatterplotUniforms {
  float radiusScale;
  float radiusMinPixels;
  float radiusMaxPixels;
  float lineWidthScale;
  float lineWidthMinPixels;
  float lineWidthMaxPixels;
  float stroked;
  float filled;
  bool antialiasing;
  bool billboard;
  highp int radiusUnits;
  highp int lineWidthUnits;
} scatterplot;
`,sR={name:"scatterplot",vs:nR,fs:nR,source:"",uniformTypes:{radiusScale:"f32",radiusMinPixels:"f32",radiusMaxPixels:"f32",lineWidthScale:"f32",lineWidthMinPixels:"f32",lineWidthMaxPixels:"f32",stroked:"f32",filled:"f32",antialiasing:"f32",billboard:"f32",radiusUnits:"i32",lineWidthUnits:"i32"}};var iR=`#version 300 es
#define SHADER_NAME scatterplot-layer-vertex-shader
in vec3 positions;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in float instanceRadius;
in float instanceLineWidths;
in vec4 instanceFillColors;
in vec4 instanceLineColors;
in vec3 instancePickingColors;
out vec4 vFillColor;
out vec4 vLineColor;
out vec2 unitPosition;
out float innerUnitRadius;
out float outerRadiusPixels;
void main(void) {
geometry.worldPosition = instancePositions;
outerRadiusPixels = clamp(
project_size_to_pixel(scatterplot.radiusScale * instanceRadius, scatterplot.radiusUnits),
scatterplot.radiusMinPixels, scatterplot.radiusMaxPixels
);
float lineWidthPixels = clamp(
project_size_to_pixel(scatterplot.lineWidthScale * instanceLineWidths, scatterplot.lineWidthUnits),
scatterplot.lineWidthMinPixels, scatterplot.lineWidthMaxPixels
);
outerRadiusPixels += scatterplot.stroked * lineWidthPixels / 2.0;
float edgePadding = scatterplot.antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;
unitPosition = edgePadding * positions.xy;
geometry.uv = unitPosition;
geometry.pickingColor = instancePickingColors;
innerUnitRadius = 1.0 - scatterplot.stroked * lineWidthPixels / outerRadiusPixels;
if (scatterplot.billboard) {
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vec3 offset = edgePadding * positions * outerRadiusPixels;
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);
} else {
vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vFillColor, geometry);
vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vLineColor, geometry);
}
`;var oR=`#version 300 es
#define SHADER_NAME scatterplot-layer-fragment-shader
precision highp float;
in vec4 vFillColor;
in vec4 vLineColor;
in vec2 unitPosition;
in float innerUnitRadius;
in float outerRadiusPixels;
out vec4 fragColor;
void main(void) {
geometry.uv = unitPosition;
float distToCenter = length(unitPosition) * outerRadiusPixels;
float inCircle = scatterplot.antialiasing ?
smoothedge(distToCenter, outerRadiusPixels) :
step(distToCenter, outerRadiusPixels);
if (inCircle == 0.0) {
discard;
}
if (scatterplot.stroked > 0.5) {
float isLine = scatterplot.antialiasing ?
smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :
step(innerUnitRadius * outerRadiusPixels, distToCenter);
if (scatterplot.filled > 0.5) {
fragColor = mix(vFillColor, vLineColor, isLine);
} else {
if (isLine == 0.0) {
discard;
}
fragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);
}
} else if (scatterplot.filled < 0.5) {
discard;
} else {
fragColor = vFillColor;
}
fragColor.a *= inCircle;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var aR=`// TODO(ibgreen): Hack for Layer uniforms (move to new "color" module?)

struct LayerUniforms {
  opacity: f32,
};

var<private> layer: LayerUniforms = LayerUniforms(1.0);
// @group(0) @binding(1) var<uniform> layer: LayerUniforms;

// Main shaders

struct ScatterplotUniforms {
  radiusScale: f32,
  radiusMinPixels: f32,
  radiusMaxPixels: f32,
  lineWidthScale: f32,
  lineWidthMinPixels: f32,
  lineWidthMaxPixels: f32,
  stroked: f32,
  filled: i32,
  antialiasing: i32,
  billboard: i32,
  radiusUnits: i32,
  lineWidthUnits: i32,
};

struct ConstantAttributeUniforms {
 instancePositions: vec3<f32>,
 instancePositions64Low: vec3<f32>,
 instanceRadius: f32,
 instanceLineWidths: f32,
 instanceFillColors: vec4<f32>,
 instanceLineColors: vec4<f32>,
 instancePickingColors: vec3<f32>,

 instancePositionsConstant: i32,
 instancePositions64LowConstant: i32,
 instanceRadiusConstant: i32,
 instanceLineWidthsConstant: i32,
 instanceFillColorsConstant: i32,
 instanceLineColorsConstant: i32,
 instancePickingColorsConstant: i32
};

@group(0) @binding(2) var<uniform> scatterplot: ScatterplotUniforms;

struct ConstantAttributes {
  instancePositions: vec3<f32>,
  instancePositions64Low: vec3<f32>,
  instanceRadius: f32,
  instanceLineWidths: f32,
  instanceFillColors: vec4<f32>,
  instanceLineColors: vec4<f32>,
  instancePickingColors: vec3<f32>
};

const constants = ConstantAttributes(
  vec3<f32>(0.0),
  vec3<f32>(0.0),
  0.0,
  0.0,
  vec4<f32>(0.0, 0.0, 0.0, 1.0),
  vec4<f32>(0.0, 0.0, 0.0, 1.0),
  vec3<f32>(0.0)
);

struct Attributes {
  @builtin(instance_index) instanceIndex : u32,
  @builtin(vertex_index) vertexIndex : u32,
  @location(0) positions: vec3<f32>,
  @location(1) instancePositions: vec3<f32>,
  @location(2) instancePositions64Low: vec3<f32>,
  @location(3) instanceRadius: f32,
  @location(4) instanceLineWidths: f32,
  @location(5) instanceFillColors: vec4<f32>,
  @location(6) instanceLineColors: vec4<f32>,
  @location(7) instancePickingColors: vec3<f32>
};

struct Varyings {
  @builtin(position) position: vec4<f32>,
  @location(0) vFillColor: vec4<f32>,
  @location(1) vLineColor: vec4<f32>,
  @location(2) unitPosition: vec2<f32>,
  @location(3) innerUnitRadius: f32,
  @location(4) outerRadiusPixels: f32,
};

@vertex
fn vertexMain(attributes: Attributes) -> Varyings {
  var varyings: Varyings;

  // Draw an inline geometry constant array clip space triangle to verify that rendering works.
  // var positions = array<vec2<f32>, 3>(vec2(0.0, 0.5), vec2(-0.5, -0.5), vec2(0.5, -0.5));
  // if (attributes.instanceIndex == 0) {
  //   varyings.position = vec4<f32>(positions[attributes.vertexIndex], 0.0, 1.0);
  //   return varyings;
  // }

  // var geometry: Geometry;
  // geometry.worldPosition = instancePositions;

  // Multiply out radius and clamp to limits
  varyings.outerRadiusPixels = clamp(
    project_unit_size_to_pixel(scatterplot.radiusScale * attributes.instanceRadius, scatterplot.radiusUnits),
    scatterplot.radiusMinPixels, scatterplot.radiusMaxPixels
  );

  // Multiply out line width and clamp to limits
  let lineWidthPixels = clamp(
    project_unit_size_to_pixel(scatterplot.lineWidthScale * attributes.instanceLineWidths, scatterplot.lineWidthUnits),
    scatterplot.lineWidthMinPixels, scatterplot.lineWidthMaxPixels
  );

  // outer radius needs to offset by half stroke width
  varyings.outerRadiusPixels += scatterplot.stroked * lineWidthPixels / 2.0;
  // Expand geometry to accommodate edge smoothing
  let edgePadding = select(
    (varyings.outerRadiusPixels + SMOOTH_EDGE_RADIUS) / varyings.outerRadiusPixels,
    1.0,
    scatterplot.antialiasing != 0
  );

  // position on the containing square in [-1, 1] space
  varyings.unitPosition = edgePadding * attributes.positions.xy;
  geometry.uv = varyings.unitPosition;
  geometry.pickingColor = attributes.instancePickingColors;

  varyings.innerUnitRadius = 1.0 - scatterplot.stroked * lineWidthPixels / varyings.outerRadiusPixels;

  if (scatterplot.billboard != 0) {
    varyings.position = project_position_to_clipspace(attributes.instancePositions, attributes.instancePositions64Low, vec3<f32>(0.0)); // TODO , geometry.position);
    // DECKGL_FILTER_GL_POSITION(varyings.position, geometry);
    let offset = attributes.positions; // * edgePadding * varyings.outerRadiusPixels;
    // DECKGL_FILTER_SIZE(offset, geometry);
    let clipPixels = project_pixel_size_to_clipspace(offset.xy);
    varyings.position.x = clipPixels.x;
    varyings.position.y = clipPixels.y;
  } else {
    let offset = edgePadding * attributes.positions * project_pixel_size_float(varyings.outerRadiusPixels);
    // DECKGL_FILTER_SIZE(offset, geometry);
    varyings.position = project_position_to_clipspace(attributes.instancePositions, attributes.instancePositions64Low, offset); // TODO , geometry.position);
    // DECKGL_FILTER_GL_POSITION(varyings.position, geometry);
  }

  // Apply opacity to instance color, or return instance picking color
  varyings.vFillColor = vec4<f32>(attributes.instanceFillColors.rgb, attributes.instanceFillColors.a * layer.opacity);
  // DECKGL_FILTER_COLOR(varyings.vFillColor, geometry);
  varyings.vLineColor = vec4<f32>(attributes.instanceLineColors.rgb, attributes.instanceLineColors.a * layer.opacity);
  // DECKGL_FILTER_COLOR(varyings.vLineColor, geometry);

  return varyings;
}

@fragment
fn fragmentMain(varyings: Varyings) -> @location(0) vec4<f32> {
  // var geometry: Geometry;
  // geometry.uv = unitPosition;

  let distToCenter = length(varyings.unitPosition) * varyings.outerRadiusPixels;
  let inCircle = select(
    smoothedge(distToCenter, varyings.outerRadiusPixels),
    step(distToCenter, varyings.outerRadiusPixels),
    scatterplot.antialiasing != 0
  );

  if (inCircle == 0.0) {
    // discard;
  }

  var fragColor: vec4<f32>;

  if (scatterplot.stroked != 0) {
    let isLine = select(
      smoothedge(varyings.innerUnitRadius * varyings.outerRadiusPixels, distToCenter),
      step(varyings.innerUnitRadius * varyings.outerRadiusPixels, distToCenter),
      scatterplot.antialiasing != 0
    );

    if (scatterplot.filled != 0) {
      fragColor = mix(varyings.vFillColor, varyings.vLineColor, isLine);
    } else {
      if (isLine == 0.0) {
        // discard;
      }
      fragColor = vec4<f32>(varyings.vLineColor.rgb, varyings.vLineColor.a * isLine);
    }
  } else if (scatterplot.filled == 0) {
    // discard;
  } else {
    fragColor = varyings.vFillColor;
  }

  fragColor.a *= inCircle;
  // DECKGL_FILTER_COLOR(fragColor, geometry);

  return fragColor;
  // return vec4<f32>(0, 0, 1, 1);
}
`;var cR=[0,0,0,255],eK={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,antialiasing:!0,getPosition:{type:"accessor",value:e=>e.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:cR},getLineColor:{type:"accessor",value:cR},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}},$h=class extends _t{getShaders(){return super.getShaders({vs:iR,fs:oR,source:aR,modules:[ft,Pt,sR]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(t){super.updateState(t),t.changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:t}){let{radiusUnits:r,radiusScale:n,radiusMinPixels:s,radiusMaxPixels:i,stroked:o,filled:a,billboard:c,antialiasing:l,lineWidthUnits:f,lineWidthScale:h,lineWidthMinPixels:u,lineWidthMaxPixels:d}=this.props,p={stroked:o,filled:a,billboard:c,antialiasing:l,radiusUnits:Lt[r],radiusScale:n,radiusMinPixels:s,radiusMaxPixels:i,lineWidthUnits:Lt[f],lineWidthScale:h,lineWidthMinPixels:u,lineWidthMaxPixels:d},m=this.state.model;m.shaderInputs.setProps({scatterplot:p}),m.draw(this.context.renderPass)}_getModel(){let t=[-1,-1,0,1,-1,0,-1,1,0,1,1,0];return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new ht({topology:"triangle-strip",attributes:{positions:{size:3,value:new Float32Array(t)}}}),isInstanced:!0})}};$h.defaultProps=eK;$h.layerName="ScatterplotLayer";var Yg=$h;var Mc={CLOCKWISE:1,COUNTER_CLOCKWISE:-1};function Vo(e,t,r={}){return lR(e,r)!==t?(rK(e,r),!0):!1}function lR(e,t={}){return Math.sign($g(e,t))}var $A={x:0,y:1,z:2};function $g(e,t={}){let{start:r=0,end:n=e.length,plane:s="xy"}=t,i=t.size||2,o=0,a=$A[s[0]],c=$A[s[1]];for(let l=r,f=n-i;l<n;l+=i)o+=(e[l+a]-e[f+a])*(e[l+c]+e[f+c]),f=l;return o/2}function rK(e,t){let{start:r=0,end:n=e.length,size:s=2}=t,i=(n-r)/s,o=Math.floor(i/2);for(let a=0;a<o;++a){let c=r+a*s,l=r+(i-1-a)*s;for(let f=0;f<s;++f){let h=e[c+f];e[c+f]=e[l+f],e[l+f]=h}}}function _r(e,t){let r=t.length,n=e.length;if(n>0){let s=!0;for(let i=0;i<r;i++)if(e[n-r+i]!==t[i]){s=!1;break}if(s)return!1}for(let s=0;s<r;s++)e[n+s]=t[s];return!0}function Kh(e,t){let r=t.length;for(let n=0;n<r;n++)e[n]=t[n]}function Ti(e,t,r,n,s=[]){let i=n+t*r;for(let o=0;o<r;o++)s[o]=e[i+o];return s}function Kg(e,t,r,n,s=[]){let i,o;if(r&8)i=(n[3]-e[1])/(t[1]-e[1]),o=3;else if(r&4)i=(n[1]-e[1])/(t[1]-e[1]),o=1;else if(r&2)i=(n[2]-e[0])/(t[0]-e[0]),o=2;else if(r&1)i=(n[0]-e[0])/(t[0]-e[0]),o=0;else return null;for(let a=0;a<e.length;a++)s[a]=(o&1)===a?n[o]:i*(t[a]-e[a])+e[a];return s}function Zh(e,t){let r=0;return e[0]<t[0]?r|=1:e[0]>t[2]&&(r|=2),e[1]<t[1]?r|=4:e[1]>t[3]&&(r|=8),r}function Jh(e,t){let{size:r=2,broken:n=!1,gridResolution:s=10,gridOffset:i=[0,0],startIndex:o=0,endIndex:a=e.length}=t||{},c=(a-o)/r,l=[],f=[l],h=Ti(e,0,r,o),u,d,p=uR(h,s,i,[]),m=[];_r(l,h);for(let g=1;g<c;g++){for(u=Ti(e,g,r,o,u),d=Zh(u,p);d;){Kg(h,u,d,p,m);let x=Zh(m,p);x&&(Kg(h,m,x,p,m),d=x),_r(l,m),Kh(h,m),iK(p,s,d),n&&l.length>r&&(l=[],f.push(l),_r(l,h)),d=Zh(u,p)}_r(l,u),Kh(h,u)}return n?f:f[0]}var fR=0,sK=1;function Qh(e,t=null,r){if(!e.length)return[];let{size:n=2,gridResolution:s=10,gridOffset:i=[0,0],edgeTypes:o=!1}=r||{},a=[],c=[{pos:e,types:o?new Array(e.length/n).fill(sK):null,holes:t||[]}],l=[[],[]],f=[];for(;c.length;){let{pos:h,types:u,holes:d}=c.shift();oK(h,n,d[0]||h.length,l),f=uR(l[0],s,i,f);let p=Zh(l[1],f);if(p){let m=hR(h,u,n,0,d[0]||h.length,f,p),g={pos:m[0].pos,types:m[0].types,holes:[]},x={pos:m[1].pos,types:m[1].types,holes:[]};c.push(g,x);for(let A=0;A<d.length;A++)m=hR(h,u,n,d[A],d[A+1]||h.length,f,p),m[0]&&(g.holes.push(g.pos.length),g.pos=Zg(g.pos,m[0].pos),o&&(g.types=Zg(g.types,m[0].types))),m[1]&&(x.holes.push(x.pos.length),x.pos=Zg(x.pos,m[1].pos),o&&(x.types=Zg(x.types,m[1].types)))}else{let m={positions:h};o&&(m.edgeTypes=u),d.length&&(m.holeIndices=d),a.push(m)}}return a}function hR(e,t,r,n,s,i,o){let a=(s-n)/r,c=[],l=[],f=[],h=[],u=[],d,p,m,g=Ti(e,a-1,r,n),x=Math.sign(o&8?g[1]-i[3]:g[0]-i[2]),A=t&&t[a-1],_=0,y=0;for(let T=0;T<a;T++)d=Ti(e,T,r,n,d),p=Math.sign(o&8?d[1]-i[3]:d[0]-i[2]),m=t&&t[n/r+T],p&&x&&x!==p&&(Kg(g,d,o,i,u),_r(c,u)&&f.push(A),_r(l,u)&&h.push(A)),p<=0?(_r(c,d)&&f.push(m),_-=p):f.length&&(f[f.length-1]=fR),p>=0?(_r(l,d)&&h.push(m),y+=p):h.length&&(h[h.length-1]=fR),Kh(g,d),x=p,A=m;return[_?{pos:c,types:t&&f}:null,y?{pos:l,types:t&&h}:null]}function uR(e,t,r,n){let s=Math.floor((e[0]-r[0])/t)*t+r[0],i=Math.floor((e[1]-r[1])/t)*t+r[1];return n[0]=s,n[1]=i,n[2]=s+t,n[3]=i+t,n}function iK(e,t,r){r&8?(e[1]+=t,e[3]+=t):r&4?(e[1]-=t,e[3]-=t):r&2?(e[0]+=t,e[2]+=t):r&1&&(e[0]-=t,e[2]-=t)}function oK(e,t,r,n){let s=1/0,i=-1/0,o=1/0,a=-1/0;for(let c=0;c<r;c+=t){let l=e[c],f=e[c+1];s=l<s?l:s,i=l>i?l:i,o=f<o?f:o,a=f>a?f:a}return n[0][0]=s,n[0][1]=o,n[1][0]=i,n[1][1]=a,n}function Zg(e,t){for(let r=0;r<t.length;r++)e.push(t[r]);return e}var aK=85.051129;function KA(e,t){let{size:r=2,startIndex:n=0,endIndex:s=e.length,normalize:i=!0}=t||{},o=e.slice(n,s);dR(o,r,0,s-n);let a=Jh(o,{size:r,broken:!0,gridResolution:360,gridOffset:[-180,-180]});if(i)for(let c of a)pR(c,r);return a}function ZA(e,t=null,r){let{size:n=2,normalize:s=!0,edgeTypes:i=!1}=r||{};t=t||[];let o=[],a=[],c=0,l=0;for(let h=0;h<=t.length;h++){let u=t[h]||e.length,d=l,p=cK(e,n,c,u);for(let m=p;m<u;m++)o[l++]=e[m];for(let m=c;m<p;m++)o[l++]=e[m];dR(o,n,d,l),lK(o,n,d,l,r?.maxLatitude),c=u,a[h]=l}a.pop();let f=Qh(o,a,{size:n,gridResolution:360,gridOffset:[-180,-180],edgeTypes:i});if(s)for(let h of f)pR(h.positions,n);return f}function cK(e,t,r,n){let s=-1,i=-1;for(let o=r+1;o<n;o+=t){let a=Math.abs(e[o]);a>s&&(s=a,i=o-1)}return i}function lK(e,t,r,n,s=aK){let i=e[r],o=e[n-t];if(Math.abs(i-o)>180){let a=Ti(e,0,t,r);a[0]+=Math.round((o-i)/360)*360,_r(e,a),a[1]=Math.sign(a[1])*s,_r(e,a),a[0]=i,_r(e,a)}}function dR(e,t,r,n){let s=e[0],i;for(let o=r;o<n;o+=t){i=e[o];let a=i-s;(a>180||a<-180)&&(i-=Math.round(a/360)*360),e[o]=s=i}}function pR(e,t){let r,n=e.length/t;for(let i=0;i<n&&(r=e[i*t],(r+180)%360===0);i++);let s=-Math.round(r/360)*360;if(s!==0)for(let i=0;i<n;i++)e[i*t]+=s}var tu=class extends ht{constructor(t){let{indices:r,attributes:n}=hK(t);super({...t,indices:r,attributes:n})}};function hK(e){let{radius:t,height:r=1,nradial:n=10}=e,{vertices:s}=e;s&&(W.assert(s.length>=n),s=s.flatMap(d=>[d[0],d[1]]),Vo(s,Mc.COUNTER_CLOCKWISE));let i=r>0,o=n+1,a=i?o*3+1:n,c=Math.PI*2/n,l=new Uint16Array(i?n*3*2:0),f=new Float32Array(a*3),h=new Float32Array(a*3),u=0;if(i){for(let d=0;d<o;d++){let p=d*c,m=d%n,g=Math.sin(p),x=Math.cos(p);for(let A=0;A<2;A++)f[u+0]=s?s[m*2]:x*t,f[u+1]=s?s[m*2+1]:g*t,f[u+2]=(1/2-A)*r,h[u+0]=s?s[m*2]:x,h[u+1]=s?s[m*2+1]:g,u+=3}f[u+0]=f[u-3],f[u+1]=f[u-2],f[u+2]=f[u-1],u+=3}for(let d=i?0:1;d<o;d++){let p=Math.floor(d/2)*Math.sign(.5-d%2),m=p*c,g=(p+n)%n,x=Math.sin(m),A=Math.cos(m);f[u+0]=s?s[g*2]:A*t,f[u+1]=s?s[g*2+1]:x*t,f[u+2]=r/2,h[u+2]=1,u+=3}if(i){let d=0;for(let p=0;p<n;p++)l[d++]=p*2+0,l[d++]=p*2+2,l[d++]=p*2+0,l[d++]=p*2+1,l[d++]=p*2+1,l[d++]=p*2+3}return{indices:l,attributes:{POSITION:{size:3,value:f},NORMAL:{size:3,value:h}}}}var mR=`uniform columnUniforms {
  float radius;
  float angle;
  vec2 offset;
  bool extruded;
  bool stroked;
  bool isStroke;
  float coverage;
  float elevationScale;
  float edgeDistance;
  float widthScale;
  float widthMinPixels;
  float widthMaxPixels;
  highp int radiusUnits;
  highp int widthUnits;
} column;
`,gR={name:"column",vs:mR,fs:mR,uniformTypes:{radius:"f32",angle:"f32",offset:"vec2<f32>",extruded:"f32",stroked:"f32",isStroke:"f32",coverage:"f32",elevationScale:"f32",edgeDistance:"f32",widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",radiusUnits:"i32",widthUnits:"i32"}};var xR=`#version 300 es
#define SHADER_NAME column-layer-vertex-shader
in vec3 positions;
in vec3 normals;
in vec3 instancePositions;
in float instanceElevations;
in vec3 instancePositions64Low;
in vec4 instanceFillColors;
in vec4 instanceLineColors;
in float instanceStrokeWidths;
in vec3 instancePickingColors;
out vec4 vColor;
#ifdef FLAT_SHADING
out vec3 cameraPosition;
out vec4 position_commonspace;
#endif
void main(void) {
geometry.worldPosition = instancePositions;
vec4 color = column.isStroke ? instanceLineColors : instanceFillColors;
mat2 rotationMatrix = mat2(cos(column.angle), sin(column.angle), -sin(column.angle), cos(column.angle));
float elevation = 0.0;
float strokeOffsetRatio = 1.0;
if (column.extruded) {
elevation = instanceElevations * (positions.z + 1.0) / 2.0 * column.elevationScale;
} else if (column.stroked) {
float widthPixels = clamp(
project_size_to_pixel(instanceStrokeWidths * column.widthScale, column.widthUnits),
column.widthMinPixels, column.widthMaxPixels) / 2.0;
float halfOffset = project_pixel_size(widthPixels) / project_size(column.edgeDistance * column.coverage * column.radius);
if (column.isStroke) {
strokeOffsetRatio -= sign(positions.z) * halfOffset;
} else {
strokeOffsetRatio -= halfOffset;
}
}
float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);
float dotRadius = column.radius * column.coverage * shouldRender;
geometry.pickingColor = instancePickingColors;
vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);
vec3 centroidPosition64Low = instancePositions64Low;
vec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + column.offset) * dotRadius;
if (column.radiusUnits == UNIT_METERS) {
offset = project_size(offset);
}
vec3 pos = vec3(offset, 0.);
DECKGL_FILTER_SIZE(pos, geometry);
gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);
geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
if (column.extruded && !column.isStroke) {
#ifdef FLAT_SHADING
cameraPosition = project.cameraPosition;
position_commonspace = geometry.position;
vColor = vec4(color.rgb, color.a * layer.opacity);
#else
vec3 lightColor = lighting_getLightColor(color.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);
vColor = vec4(lightColor, color.a * layer.opacity);
#endif
} else {
vColor = vec4(color.rgb, color.a * layer.opacity);
}
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var _R=`#version 300 es
#define SHADER_NAME column-layer-fragment-shader
precision highp float;
out vec4 fragColor;
in vec4 vColor;
#ifdef FLAT_SHADING
in vec3 cameraPosition;
in vec4 position_commonspace;
#endif
void main(void) {
fragColor = vColor;
geometry.uv = vec2(0.);
#ifdef FLAT_SHADING
if (column.extruded && !column.isStroke && !bool(picking.isActive)) {
vec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));
fragColor.rgb = lighting_getLightColor(vColor.rgb, cameraPosition, position_commonspace.xyz, normal);
}
#endif
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var Jg=[0,0,0,255],uK={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,flatShading:!1,getPosition:{type:"accessor",value:e=>e.position},getFillColor:{type:"accessor",value:Jg},getLineColor:{type:"accessor",value:Jg},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}},eu=class extends _t{getShaders(){let t={},{flatShading:r}=this.props;return r&&(t.FLAT_SHADING=1),super.getShaders({vs:xR,fs:_R,defines:t,modules:[ft,r?tc:fi,Pt,gR]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getFillColor",defaultValue:Jg},instanceLineColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getLineColor",defaultValue:Jg},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(t){super.updateState(t);let{props:r,oldProps:n,changeFlags:s}=t,i=s.extensionsChanged||r.flatShading!==n.flatShading;i&&(this.state.models?.forEach(a=>a.destroy()),this.setState(this._getModels()),this.getAttributeManager().invalidateAll());let o=this.getNumInstances();this.state.fillModel.setInstanceCount(o),this.state.wireframeModel.setInstanceCount(o),(i||r.diskResolution!==n.diskResolution||r.vertices!==n.vertices||(r.extruded||r.stroked)!==(n.extruded||n.stroked))&&this._updateGeometry(r)}getGeometry(t,r,n){let s=new tu({radius:1,height:n?2:0,vertices:r,nradial:t}),i=0;if(r)for(let o=0;o<t;o++){let a=r[o],c=Math.sqrt(a[0]*a[0]+a[1]*a[1]);i+=c/t}else i=1;return this.setState({edgeDistance:Math.cos(Math.PI/t)*i}),s}_getModels(){let t=this.getShaders(),r=this.getAttributeManager().getBufferLayouts(),n=new tt(this.context.device,{...t,id:`${this.props.id}-fill`,bufferLayout:r,isInstanced:!0}),s=new tt(this.context.device,{...t,id:`${this.props.id}-wireframe`,bufferLayout:r,isInstanced:!0});return{fillModel:n,wireframeModel:s,models:[s,n]}}_updateGeometry({diskResolution:t,vertices:r,extruded:n,stroked:s}){let i=this.getGeometry(t,r,n||s);this.setState({fillVertexCount:i.attributes.POSITION.value.length/3});let o=this.state.fillModel,a=this.state.wireframeModel;o.setGeometry(i),o.setTopology("triangle-strip"),o.setIndexBuffer(null),a.setGeometry(i),a.setTopology("line-list")}draw({uniforms:t}){let{lineWidthUnits:r,lineWidthScale:n,lineWidthMinPixels:s,lineWidthMaxPixels:i,radiusUnits:o,elevationScale:a,extruded:c,filled:l,stroked:f,wireframe:h,offset:u,coverage:d,radius:p,angle:m}=this.props,g=this.state.fillModel,x=this.state.wireframeModel,{fillVertexCount:A,edgeDistance:_}=this.state,y={radius:p,angle:m/180*Math.PI,offset:u,extruded:c,stroked:f,coverage:d,elevationScale:a,edgeDistance:_,radiusUnits:Lt[o],widthUnits:Lt[r],widthScale:n,widthMinPixels:s,widthMaxPixels:i};c&&h&&(x.shaderInputs.setProps({column:{...y,isStroke:!0}}),x.draw(this.context.renderPass)),l&&(g.setVertexCount(A),g.shaderInputs.setProps({column:{...y,isStroke:!1}}),g.draw(this.context.renderPass)),!c&&f&&(g.setVertexCount(A*2/3),g.shaderInputs.setProps({column:{...y,isStroke:!0}}),g.draw(this.context.renderPass))}};eu.layerName="ColumnLayer";eu.defaultProps=uK;var qn=eu;var dK={cellSize:{type:"number",min:0,value:1e3},offset:{type:"array",value:[1,1]}},ru=class extends qn{_updateGeometry(){let t=new ys;this.state.fillModel.setGeometry(t)}draw({uniforms:t}){let{elevationScale:r,extruded:n,offset:s,coverage:i,cellSize:o,angle:a,radiusUnits:c}=this.props,l=this.state.fillModel,f={radius:o/2,radiusUnits:Lt[c],angle:a,offset:s,extruded:n,stroked:!1,coverage:i,elevationScale:r,edgeDistance:1,isStroke:!1,widthUnits:0,widthScale:0,widthMinPixels:0,widthMaxPixels:0};l.shaderInputs.setProps({column:f}),l.draw(this.context.renderPass)}};ru.layerName="GridCellLayer";ru.defaultProps=dK;var yR=ru;function AR(e,t,r,n){let s;if(Array.isArray(e[0])){let i=e.length*t;s=new Array(i);for(let o=0;o<e.length;o++)for(let a=0;a<t;a++)s[o*t+a]=e[o][a]||0}else s=e;return r?Jh(s,{size:t,gridResolution:r}):n?KA(s,{size:t}):s}var pK=1,mK=2,JA=4,nu=class extends Cs{constructor(t){super({...t,attributes:{positions:{size:3,padding:18,initialize:!0,type:t.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}})}get(t){return this.attributes[t]}getGeometryFromBuffer(t){return this.normalize?super.getGeometryFromBuffer(t):null}normalizeGeometry(t){return this.normalize?AR(t,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):t}getGeometrySize(t){if(bR(t)){let n=0;for(let s of t)n+=this.getGeometrySize(s);return n}let r=this.getPathLength(t);return r<2?0:this.isClosed(t)?r<3?0:r+2:r}updateGeometryAttributes(t,r){if(r.geometrySize!==0)if(t&&bR(t))for(let n of t){let s=this.getGeometrySize(n);r.geometrySize=s,this.updateGeometryAttributes(n,r),r.vertexStart+=s}else this._updateSegmentTypes(t,r),this._updatePositions(t,r)}_updateSegmentTypes(t,r){let n=this.attributes.segmentTypes,s=t?this.isClosed(t):!1,{vertexStart:i,geometrySize:o}=r;n.fill(0,i,i+o),s?(n[i]=JA,n[i+o-2]=JA):(n[i]+=pK,n[i+o-2]+=mK),n[i+o-1]=JA}_updatePositions(t,r){let{positions:n}=this.attributes;if(!n||!t)return;let{vertexStart:s,geometrySize:i}=r,o=new Array(3);for(let a=s,c=0;c<i;a++,c++)this.getPointOnPath(t,c,o),n[a*3]=o[0],n[a*3+1]=o[1],n[a*3+2]=o[2]}getPathLength(t){return t.length/this.positionSize}getPointOnPath(t,r,n=[]){let{positionSize:s}=this;r*s>=t.length&&(r+=1-t.length/s);let i=r*s;return n[0]=t[i],n[1]=t[i+1],n[2]=s===3&&t[i+2]||0,n}isClosed(t){if(!this.normalize)return Boolean(this.opts.loop);let{positionSize:r}=this,n=t.length-r;return t[0]===t[n]&&t[1]===t[n+1]&&(r===2||t[2]===t[n+2])}};function bR(e){return Array.isArray(e[0])}var TR=`uniform pathUniforms {
  float widthScale;
  float widthMinPixels;
  float widthMaxPixels;
  float jointType;
  float capType;
  float miterLimit;
  bool billboard;
  highp int widthUnits;
} path;
`,vR={name:"path",vs:TR,fs:TR,uniformTypes:{widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",jointType:"f32",capType:"f32",miterLimit:"f32",billboard:"f32",widthUnits:"i32"}};var ER=`#version 300 es
#define SHADER_NAME path-layer-vertex-shader
in vec2 positions;
in float instanceTypes;
in vec3 instanceStartPositions;
in vec3 instanceEndPositions;
in vec3 instanceLeftPositions;
in vec3 instanceRightPositions;
in vec3 instanceLeftPositions64Low;
in vec3 instanceStartPositions64Low;
in vec3 instanceEndPositions64Low;
in vec3 instanceRightPositions64Low;
in float instanceStrokeWidths;
in vec4 instanceColors;
in vec3 instancePickingColors;
uniform float opacity;
out vec4 vColor;
out vec2 vCornerOffset;
out float vMiterLength;
out vec2 vPathPosition;
out float vPathLength;
out float vJointType;
const float EPSILON = 0.001;
const vec3 ZERO_OFFSET = vec3(0.0);
float flipIfTrue(bool flag) {
return -(float(flag) * 2. - 1.);
}
vec3 getLineJoinOffset(
vec3 prevPoint, vec3 currPoint, vec3 nextPoint,
vec2 width
) {
bool isEnd = positions.x > 0.0;
float sideOfPath = positions.y;
float isJoint = float(sideOfPath == 0.0);
vec3 deltaA3 = (currPoint - prevPoint);
vec3 deltaB3 = (nextPoint - currPoint);
mat3 rotationMatrix;
bool needsRotation = !path.billboard && project_needs_rotation(currPoint, rotationMatrix);
if (needsRotation) {
deltaA3 = deltaA3 * rotationMatrix;
deltaB3 = deltaB3 * rotationMatrix;
}
vec2 deltaA = deltaA3.xy / width;
vec2 deltaB = deltaB3.xy / width;
float lenA = length(deltaA);
float lenB = length(deltaB);
vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);
vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);
vec2 perpA = vec2(-dirA.y, dirA.x);
vec2 perpB = vec2(-dirB.y, dirB.x);
vec2 tangent = dirA + dirB;
tangent = length(tangent) > 0. ? normalize(tangent) : perpA;
vec2 miterVec = vec2(-tangent.y, tangent.x);
vec2 dir = isEnd ? dirA : dirB;
vec2 perp = isEnd ? perpA : perpB;
float L = isEnd ? lenA : lenB;
float sinHalfA = abs(dot(miterVec, perp));
float cosHalfA = abs(dot(dirA, miterVec));
float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);
float cornerPosition = sideOfPath * turnDirection;
float miterSize = 1.0 / max(sinHalfA, EPSILON);
miterSize = mix(
min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),
miterSize,
step(0.0, cornerPosition)
);
vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))
* (sideOfPath + isJoint * turnDirection);
bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));
bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));
bool isCap = isStartCap || isEndCap;
if (isCap) {
offsetVec = mix(perp * sideOfPath, dir * path.capType * 4.0 * flipIfTrue(isStartCap), isJoint);
vJointType = path.capType;
} else {
vJointType = path.jointType;
}
vPathLength = L;
vCornerOffset = offsetVec;
vMiterLength = dot(vCornerOffset, miterVec * turnDirection);
vMiterLength = isCap ? isJoint : vMiterLength;
vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);
vPathPosition = vec2(
dot(offsetFromStartOfPath, perp),
dot(offsetFromStartOfPath, dir)
);
geometry.uv = vPathPosition;
float isValid = step(instanceTypes, 3.5);
vec3 offset = vec3(offsetVec * width * isValid, 0.0);
if (needsRotation) {
offset = rotationMatrix * offset;
}
return offset;
}
void clipLine(inout vec4 position, vec4 refPosition) {
if (position.w < EPSILON) {
float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);
position = refPosition + (position - refPosition) * r;
}
}
void main() {
geometry.pickingColor = instancePickingColors;
vColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);
float isEnd = positions.x;
vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);
vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);
vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);
vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);
vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);
vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);
geometry.worldPosition = currPosition;
vec2 widthPixels = vec2(clamp(
project_size_to_pixel(instanceStrokeWidths * path.widthScale, path.widthUnits),
path.widthMinPixels, path.widthMaxPixels) / 2.0);
vec3 width;
if (path.billboard) {
vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);
vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);
vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);
clipLine(prevPositionScreen, currPositionScreen);
clipLine(nextPositionScreen, currPositionScreen);
clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));
width = vec3(widthPixels, 0.0);
DECKGL_FILTER_SIZE(width, geometry);
vec3 offset = getLineJoinOffset(
prevPositionScreen.xyz / prevPositionScreen.w,
currPositionScreen.xyz / currPositionScreen.w,
nextPositionScreen.xyz / nextPositionScreen.w,
project_pixel_size_to_clipspace(width.xy)
);
DECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);
gl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);
} else {
prevPosition = project_position(prevPosition, prevPosition64Low);
currPosition = project_position(currPosition, currPosition64Low);
nextPosition = project_position(nextPosition, nextPosition64Low);
width = vec3(project_pixel_size(widthPixels), 0.0);
DECKGL_FILTER_SIZE(width, geometry);
vec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);
geometry.position = vec4(currPosition + offset, 1.0);
gl_Position = project_common_position_to_clipspace(geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var MR=`#version 300 es
#define SHADER_NAME path-layer-fragment-shader
precision highp float;
in vec4 vColor;
in vec2 vCornerOffset;
in float vMiterLength;
in vec2 vPathPosition;
in float vPathLength;
in float vJointType;
out vec4 fragColor;
void main(void) {
geometry.uv = vPathPosition;
if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {
if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {
discard;
}
if (vJointType < 0.5 && vMiterLength > path.miterLimit + 1.0) {
discard;
}
}
fragColor = vColor;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var SR=[0,0,0,255],gK={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:e=>e.path},getColor:{type:"accessor",value:SR},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},QA={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e},su=class extends _t{getShaders(){return super.getShaders({vs:ER,fs:MR,modules:[ft,Pt,vR]})}get wrapLongitude(){return!1}getBounds(){return this.getAttributeManager()?.getBounds(["vertexPositions"])}initializeState(){this.getAttributeManager().addInstanced({vertexPositions:{size:3,vertexOffset:1,type:"float64",fp64:this.use64bitPositions(),transition:QA,accessor:"getPath",update:this.calculatePositions,noAlloc:!0,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:"uint8",update:this.calculateSegmentTypes,noAlloc:!0},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:QA,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",accessor:"getColor",transition:QA,defaultValue:SR},instancePickingColors:{size:4,type:"uint8",accessor:(n,{index:s,target:i})=>this.encodePickingColor(n&&n.__source?n.__source.index:s,i)}}),this.setState({pathTesselator:new nu({fp64:this.use64bitPositions()})})}updateState(t){super.updateState(t);let{props:r,changeFlags:n}=t,s=this.getAttributeManager();if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPath)){let{pathTesselator:o}=this.state,a=r.data.attributes||{};o.updateGeometry({data:r.data,geometryBuffer:a.getPath,buffers:a,normalize:!r._pathType,loop:r._pathType==="loop",getGeometry:r.getPath,positionFormat:r.positionFormat,wrapLongitude:r.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:n.dataChanged}),this.setState({numInstances:o.instanceCount,startIndices:o.vertexStarts}),n.dataChanged||s.invalidateAll()}n.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),s.invalidateAll())}getPickingInfo(t){let r=super.getPickingInfo(t),{index:n}=r,s=this.props.data;return s[0]&&s[0].__source&&(r.object=s.find(i=>i.__source.index===n)),r}disablePickingIndex(t){let r=this.props.data;if(r[0]&&r[0].__source)for(let n=0;n<r.length;n++)r[n].__source.index===t&&this._disablePickingIndex(n);else super.disablePickingIndex(t)}draw({uniforms:t}){let{jointRounded:r,capRounded:n,billboard:s,miterLimit:i,widthUnits:o,widthScale:a,widthMinPixels:c,widthMaxPixels:l}=this.props,f=this.state.model,h={jointType:Number(r),capType:Number(n),billboard:s,widthUnits:Lt[o],widthScale:a,miterLimit:i,widthMinPixels:c,widthMaxPixels:l};f.shaderInputs.setProps({path:h}),f.draw(this.context.renderPass)}_getModel(){let t=[0,1,2,1,4,2,1,3,4,3,5,4],r=[0,0,0,-1,0,1,1,-1,1,1,1,0];return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new ht({topology:"triangle-list",attributes:{indices:new Uint16Array(t),positions:{value:new Float32Array(r),size:2}}}),isInstanced:!0})}calculatePositions(t){let{pathTesselator:r}=this.state;t.startIndices=r.vertexStarts,t.value=r.get("positions")}calculateSegmentTypes(t){let{pathTesselator:r}=this.state;t.startIndices=r.vertexStarts,t.value=r.get("segmentTypes")}};su.defaultProps=gK;su.layerName="PathLayer";var Xn=su;var FR=os(RR(),1);var n0=Mc.CLOCKWISE,OR=Mc.COUNTER_CLOCKWISE,vi={isClosed:!0};function OK(e){if(e=e&&e.positions||e,!Array.isArray(e)&&!ArrayBuffer.isView(e))throw new Error("invalid polygon")}function wc(e){return"positions"in e?e.positions:e}function cu(e){return"holeIndices"in e?e.holeIndices:null}function LK(e){return Array.isArray(e[0])}function BK(e){return e.length>=1&&e[0].length>=2&&Number.isFinite(e[0][0])}function NK(e){let t=e[0],r=e[e.length-1];return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]}function FK(e,t,r,n){for(let s=0;s<t;s++)if(e[r+s]!==e[n-t+s])return!1;return!0}function LR(e,t,r,n,s){let i=t,o=r.length;for(let a=0;a<o;a++)for(let c=0;c<n;c++)e[i++]=r[a][c]||0;if(!NK(r))for(let a=0;a<n;a++)e[i++]=r[0][a]||0;return vi.start=t,vi.end=i,vi.size=n,Vo(e,s,vi),i}function BR(e,t,r,n,s=0,i,o){i=i||r.length;let a=i-s;if(a<=0)return t;let c=t;for(let l=0;l<a;l++)e[c++]=r[s+l];if(!FK(r,n,s,i))for(let l=0;l<n;l++)e[c++]=r[s+l];return vi.start=t,vi.end=c,vi.size=n,Vo(e,o,vi),c}function s0(e,t){OK(e);let r=[],n=[];if("positions"in e){let{positions:s,holeIndices:i}=e;if(i){let o=0;for(let a=0;a<=i.length;a++)o=BR(r,o,s,t,i[a-1],i[a],a===0?n0:OR),n.push(o);return n.pop(),{positions:r,holeIndices:n}}e=s}if(!LK(e))return BR(r,0,e,t,0,r.length,n0),r;if(!BK(e)){let s=0;for(let[i,o]of e.entries())s=LR(r,s,o,t,i===0?n0:OR),n.push(s);return n.pop(),{positions:r,holeIndices:n}}return LR(r,0,e,t,n0),r}function sb(e,t,r){let n=e.length/3,s=0;for(let i=0;i<n;i++){let o=(i+1)%n;s+=e[i*3+t]*e[o*3+r],s-=e[o*3+t]*e[i*3+r]}return Math.abs(s/2)}function NR(e,t,r,n){let s=e.length/3;for(let i=0;i<s;i++){let o=i*3,a=e[o+0],c=e[o+1],l=e[o+2];e[o+t]=a,e[o+r]=c,e[o+n]=l}}function DR(e,t,r,n){let s=cu(e);s&&(s=s.map(a=>a/t));let i=wc(e),o=n&&t===3;if(r){let a=i.length;i=i.slice();let c=[];for(let l=0;l<a;l+=t){c[0]=i[l],c[1]=i[l+1],o&&(c[2]=i[l+2]);let f=r(c);i[l]=f[0],i[l+1]=f[1],o&&(i[l+2]=f[2])}}if(o){let a=sb(i,0,1),c=sb(i,0,2),l=sb(i,1,2);if(!a&&!c&&!l)return[];a>c&&a>l||(c>l?(r||(i=i.slice()),NR(i,0,2,1)):(r||(i=i.slice()),NR(i,2,0,1)))}return(0,FR.default)(i,s,t)}var lu=class extends Cs{constructor(t){let{fp64:r,IndexType:n=Uint32Array}=t;super({...t,attributes:{positions:{size:3,type:r?Float64Array:Float32Array},vertexValid:{type:Uint16Array,size:1},indices:{type:n,size:1}}})}get(t){let{attributes:r}=this;return t==="indices"?r.indices&&r.indices.subarray(0,this.vertexCount):r[t]}updateGeometry(t){super.updateGeometry(t);let r=this.buffers.indices;if(r)this.vertexCount=(r.value||r).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(t){if(this.normalize){let r=s0(t,this.positionSize);return this.opts.resolution?Qh(wc(r),cu(r),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?ZA(wc(r),cu(r),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):r}return t}getGeometrySize(t){if(UR(t)){let r=0;for(let n of t)r+=this.getGeometrySize(n);return r}return wc(t).length/this.positionSize}getGeometryFromBuffer(t){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(t):null}updateGeometryAttributes(t,r){if(t&&UR(t))for(let n of t){let s=this.getGeometrySize(n);r.geometrySize=s,this.updateGeometryAttributes(n,r),r.vertexStart+=s,r.indexStart=this.indexStarts[r.geometryIndex+1]}else{let n=t;this._updateIndices(n,r),this._updatePositions(n,r),this._updateVertexValid(n,r)}}_updateIndices(t,{geometryIndex:r,vertexStart:n,indexStart:s}){let{attributes:i,indexStarts:o,typedArrayManager:a}=this,c=i.indices;if(!c||!t)return;let l=s,f=DR(t,this.positionSize,this.opts.preproject,this.opts.full3d);c=a.allocate(c,s+f.length,{copy:!0});for(let h=0;h<f.length;h++)c[l++]=f[h]+n;o[r+1]=s+f.length,i.indices=c}_updatePositions(t,{vertexStart:r,geometrySize:n}){let{attributes:{positions:s},positionSize:i}=this;if(!s||!t)return;let o=wc(t);for(let a=r,c=0;c<n;a++,c++){let l=o[c*i],f=o[c*i+1],h=i>2?o[c*i+2]:0;s[a*3]=l,s[a*3+1]=f,s[a*3+2]=h}}_updateVertexValid(t,{vertexStart:r,geometrySize:n}){let{positionSize:s}=this,i=this.attributes.vertexValid,o=t&&cu(t);if(t&&t.edgeTypes?i.set(t.edgeTypes,r):i.fill(1,r,r+n),o)for(let a=0;a<o.length;a++)i[r+o[a]/s-1]=0;i[r+n-1]=0}};function UR(e){return Array.isArray(e)&&e.length>0&&!Number.isFinite(e[0])}var zR=`uniform solidPolygonUniforms {
  bool extruded;
  bool isWireframe;
  float elevationScale;
} solidPolygon;
`,VR={name:"solidPolygon",vs:zR,fs:zR,uniformTypes:{extruded:"f32",isWireframe:"f32",elevationScale:"f32"}};var i0=`in vec4 fillColors;
in vec4 lineColors;
in vec3 pickingColors;
out vec4 vColor;
struct PolygonProps {
vec3 positions;
vec3 positions64Low;
vec3 normal;
float elevations;
};
vec3 project_offset_normal(vec3 vector) {
if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||
project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {
return normalize(vector * project.commonUnitsPerWorldUnit);
}
return project_normal(vector);
}
void calculatePosition(PolygonProps props) {
vec3 pos = props.positions;
vec3 pos64Low = props.positions64Low;
vec3 normal = props.normal;
vec4 colors = solidPolygon.isWireframe ? lineColors : fillColors;
geometry.worldPosition = props.positions;
geometry.pickingColor = pickingColors;
if (solidPolygon.extruded) {
pos.z += props.elevations * solidPolygon.elevationScale;
}
gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
if (solidPolygon.extruded) {
#ifdef IS_SIDE_VERTEX
normal = project_offset_normal(normal);
#else
normal = project_normal(normal);
#endif
geometry.normal = normal;
vec3 lightColor = lighting_getLightColor(colors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);
vColor = vec4(lightColor, colors.a * layer.opacity);
} else {
vColor = vec4(colors.rgb, colors.a * layer.opacity);
}
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var WR=`#version 300 es
#define SHADER_NAME solid-polygon-layer-vertex-shader
in vec3 vertexPositions;
in vec3 vertexPositions64Low;
in float elevations;
${i0}
void main(void) {
PolygonProps props;
props.positions = vertexPositions;
props.positions64Low = vertexPositions64Low;
props.elevations = elevations;
props.normal = vec3(0.0, 0.0, 1.0);
calculatePosition(props);
}
`;var HR=`#version 300 es
#define SHADER_NAME solid-polygon-layer-vertex-shader-side
#define IS_SIDE_VERTEX
in vec2 positions;
in vec3 vertexPositions;
in vec3 nextVertexPositions;
in vec3 vertexPositions64Low;
in vec3 nextVertexPositions64Low;
in float elevations;
in float instanceVertexValid;
${i0}
void main(void) {
if(instanceVertexValid < 0.5){
gl_Position = vec4(0.);
return;
}
PolygonProps props;
vec3 pos;
vec3 pos64Low;
vec3 nextPos;
vec3 nextPos64Low;
#if RING_WINDING_ORDER_CW == 1
pos = vertexPositions;
pos64Low = vertexPositions64Low;
nextPos = nextVertexPositions;
nextPos64Low = nextVertexPositions64Low;
#else
pos = nextVertexPositions;
pos64Low = nextVertexPositions64Low;
nextPos = vertexPositions;
nextPos64Low = vertexPositions64Low;
#endif
props.positions = mix(pos, nextPos, positions.x);
props.positions64Low = mix(pos64Low, nextPos64Low, positions.x);
props.normal = vec3(
pos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),
nextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),
0.0);
props.elevations = elevations * positions.y;
calculatePosition(props);
}
`;var GR=`#version 300 es
#define SHADER_NAME solid-polygon-layer-fragment-shader
precision highp float;
in vec4 vColor;
out vec4 fragColor;
void main(void) {
fragColor = vColor;
geometry.uv = vec2(0.);
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var a0=[0,0,0,255],DK={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",_full3d:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:e=>e.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:a0},getLineColor:{type:"accessor",value:a0},material:!0},o0={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e},fu=class extends _t{getShaders(t){return super.getShaders({vs:t==="top"?WR:HR,fs:GR,defines:{RING_WINDING_ORDER_CW:!this.props._normalize&&this.props._windingOrder==="CCW"?0:1},modules:[ft,fi,Pt,VR]})}get wrapLongitude(){return!1}getBounds(){return this.getAttributeManager()?.getBounds(["vertexPositions"])}initializeState(){let{viewport:t}=this.context,{coordinateSystem:r}=this.props,{_full3d:n}=this.props;t.isGeospatial&&r===q.DEFAULT&&(r=q.LNGLAT);let s;r===q.LNGLAT&&(n?s=t.projectPosition.bind(t):s=t.projectFlat.bind(t)),this.setState({numInstances:0,polygonTesselator:new lu({preproject:s,fp64:this.use64bitPositions(),IndexType:Uint32Array})});let i=this.getAttributeManager(),o=!0;i.remove(["instancePickingColors"]),i.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:o},vertexPositions:{size:3,type:"float64",stepMode:"dynamic",fp64:this.use64bitPositions(),transition:o0,accessor:"getPolygon",update:this.calculatePositions,noAlloc:o,shaderAttributes:{nextVertexPositions:{vertexOffset:1}}},instanceVertexValid:{size:1,type:"uint16",stepMode:"instance",update:this.calculateVertexValid,noAlloc:o},elevations:{size:1,stepMode:"dynamic",transition:o0,accessor:"getElevation"},fillColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:o0,accessor:"getFillColor",defaultValue:a0},lineColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:o0,accessor:"getLineColor",defaultValue:a0},pickingColors:{size:4,type:"uint8",stepMode:"dynamic",accessor:(a,{index:c,target:l})=>this.encodePickingColor(a&&a.__source?a.__source.index:c,l)}})}getPickingInfo(t){let r=super.getPickingInfo(t),{index:n}=r,s=this.props.data;return s[0]&&s[0].__source&&(r.object=s.find(i=>i.__source.index===n)),r}disablePickingIndex(t){let r=this.props.data;if(r[0]&&r[0].__source)for(let n=0;n<r.length;n++)r[n].__source.index===t&&this._disablePickingIndex(n);else super.disablePickingIndex(t)}draw({uniforms:t}){let{extruded:r,filled:n,wireframe:s,elevationScale:i}=this.props,{topModel:o,sideModel:a,wireframeModel:c,polygonTesselator:l}=this.state,f={extruded:Boolean(r),elevationScale:i,isWireframe:!1};c&&s&&(c.setInstanceCount(l.instanceCount-1),c.shaderInputs.setProps({solidPolygon:{...f,isWireframe:!0}}),c.draw(this.context.renderPass)),a&&n&&(a.setInstanceCount(l.instanceCount-1),a.shaderInputs.setProps({solidPolygon:f}),a.draw(this.context.renderPass)),o&&n&&(o.setVertexCount(l.vertexCount),o.shaderInputs.setProps({solidPolygon:f}),o.draw(this.context.renderPass))}updateState(t){super.updateState(t),this.updateGeometry(t);let{props:r,oldProps:n,changeFlags:s}=t,i=this.getAttributeManager();(s.extensionsChanged||r.filled!==n.filled||r.extruded!==n.extruded)&&(this.state.models?.forEach(a=>a.destroy()),this.setState(this._getModels()),i.invalidateAll())}updateGeometry({props:t,oldProps:r,changeFlags:n}){if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPolygon)){let{polygonTesselator:i}=this.state,o=t.data.attributes||{};i.updateGeometry({data:t.data,normalize:t._normalize,geometryBuffer:o.getPolygon,buffers:o,getGeometry:t.getPolygon,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:n.dataChanged,full3d:t._full3d}),this.setState({numInstances:i.instanceCount,startIndices:i.vertexStarts}),n.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(){let{id:t,filled:r,extruded:n}=this.props,s,i,o;if(r){let a=this.getShaders("top");a.defines.NON_INSTANCED_MODEL=1;let c=this.getAttributeManager().getBufferLayouts({isInstanced:!1});s=new tt(this.context.device,{...a,id:`${t}-top`,topology:"triangle-list",bufferLayout:c,isIndexed:!0,userData:{excludeAttributes:{instanceVertexValid:!0}}})}if(n){let a=this.getAttributeManager().getBufferLayouts({isInstanced:!0});i=new tt(this.context.device,{...this.getShaders("side"),id:`${t}-side`,bufferLayout:a,geometry:new ht({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,1,1,0,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}}),o=new tt(this.context.device,{...this.getShaders("side"),id:`${t}-wireframe`,bufferLayout:a,geometry:new ht({topology:"line-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}})}return{models:[i,o,s].filter(Boolean),topModel:s,sideModel:i,wireframeModel:o}}calculateIndices(t){let{polygonTesselator:r}=this.state;t.startIndices=r.indexStarts,t.value=r.get("indices")}calculatePositions(t){let{polygonTesselator:r}=this.state;t.startIndices=r.vertexStarts,t.value=r.get("positions")}calculateVertexValid(t){t.value=this.state.polygonTesselator.get("vertexValid")}};fu.defaultProps=DK;fu.layerName="SolidPolygonLayer";var Ei=fu;function c0({data:e,getIndex:t,dataRange:r,replace:n}){let{startRow:s=0,endRow:i=1/0}=r,o=e.length,a=o,c=o;for(let u=0;u<o;u++){let d=t(e[u]);if(a>u&&d>=s&&(a=u),d>=i){c=u;break}}let l=a,h=c-a!==n.length?e.slice(c):void 0;for(let u=0;u<n.length;u++)e[l++]=n[u];if(h){for(let u=0;u<h.length;u++)e[l++]=h[u];e.length=l}return{startRow:a,endRow:a+n.length}}var jR=[0,0,0,255],kK=[0,0,0,255],UK={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,_normalize:!0,_windingOrder:"CW",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,getPolygon:{type:"accessor",value:e=>e.polygon},getFillColor:{type:"accessor",value:kK},getLineColor:{type:"accessor",value:jR},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0},hu=class extends qt{initializeState(){this.state={paths:[],pathsDiff:null},this.props.getLineDashArray&&W.removed("getLineDashArray","PathStyleExtension")()}updateState({changeFlags:t}){let r=t.dataChanged||t.updateTriggersChanged&&(t.updateTriggersChanged.all||t.updateTriggersChanged.getPolygon);if(r&&Array.isArray(t.dataChanged)){let n=this.state.paths.slice(),s=t.dataChanged.map(i=>c0({data:n,getIndex:o=>o.__source.index,dataRange:i,replace:this._getPaths(i)}));this.setState({paths:n,pathsDiff:s})}else r&&this.setState({paths:this._getPaths(),pathsDiff:null})}_getPaths(t={}){let{data:r,getPolygon:n,positionFormat:s,_normalize:i}=this.props,o=[],a=s==="XY"?2:3,{startRow:c,endRow:l}=t,{iterable:f,objectInfo:h}=ie(r,c,l);for(let u of f){h.index++;let d=n(u,h);i&&(d=s0(d,a));let{holeIndices:p}=d,m=d.positions||d;if(p)for(let g=0;g<=p.length;g++){let x=m.slice(p[g-1]||0,p[g]||m.length);o.push(this.getSubLayerRow({path:x},u,h.index))}else o.push(this.getSubLayerRow({path:m},u,h.index))}return o}renderLayers(){let{data:t,_dataDiff:r,stroked:n,filled:s,extruded:i,wireframe:o,_normalize:a,_windingOrder:c,elevationScale:l,transitions:f,positionFormat:h}=this.props,{lineWidthUnits:u,lineWidthScale:d,lineWidthMinPixels:p,lineWidthMaxPixels:m,lineJointRounded:g,lineMiterLimit:x,lineDashJustified:A}=this.props,{getFillColor:_,getLineColor:y,getLineWidth:T,getLineDashArray:v,getElevation:C,getPolygon:w,updateTriggers:E,material:b}=this.props,{paths:R,pathsDiff:k}=this.state,D=this.getSubLayerClass("fill",Ei),P=this.getSubLayerClass("stroke",Xn),j=this.shouldRenderSubLayer("fill",R)&&new D({_dataDiff:r,extruded:i,elevationScale:l,filled:s,wireframe:o,_normalize:a,_windingOrder:c,getElevation:C,getFillColor:_,getLineColor:i&&o?y:jR,material:b,transitions:f},this.getSubLayerProps({id:"fill",updateTriggers:E&&{getPolygon:E.getPolygon,getElevation:E.getElevation,getFillColor:E.getFillColor,lineColors:i&&o,getLineColor:E.getLineColor}}),{data:t,positionFormat:h,getPolygon:w}),ot=!i&&n&&this.shouldRenderSubLayer("stroke",R)&&new P({_dataDiff:k&&(()=>k),widthUnits:u,widthScale:d,widthMinPixels:p,widthMaxPixels:m,jointRounded:g,miterLimit:x,dashJustified:A,_pathType:"loop",transitions:f&&{getWidth:f.getLineWidth,getColor:f.getLineColor,getPath:f.getPolygon},getColor:this.getSubLayerAccessor(y),getWidth:this.getSubLayerAccessor(T),getDashArray:this.getSubLayerAccessor(v)},this.getSubLayerProps({id:"stroke",updateTriggers:E&&{getWidth:E.getLineWidth,getColor:E.getLineColor,getDashArray:E.getLineDashArray}}),{data:R,positionFormat:h,getPath:st=>st.path});return[!i&&j,ot,i&&j]}};hu.layerName="PolygonLayer";hu.defaultProps=UK;var Mi=hu;function qR(e,t){if(!e)return null;let r="startIndices"in e?e.startIndices[t]:t,n=e.featureIds.value[r];return r!==-1?zK(e,n,r):null}function zK(e,t,r){let n={properties:{...e.properties[t]}};for(let s in e.numericProps)n.properties[s]=e.numericProps[s].value[r];return n}function XR(e,t){let r={points:null,lines:null,polygons:null};for(let n in r){let s=e[n].globalFeatureIds.value;r[n]=new Uint8ClampedArray(s.length*4);let i=[];for(let o=0;o<s.length;o++)t(s[o],i),r[n][o*4+0]=i[0],r[n][o*4+1]=i[1],r[n][o*4+2]=i[2],r[n][o*4+3]=255}return r}var YR=`uniform sdfUniforms {
  float gamma;
  bool enabled;
  float buffer;
  float outlineBuffer;
  vec4 outlineColor;
} sdf;
`,$R={name:"sdf",vs:YR,fs:YR,uniformTypes:{gamma:"f32",enabled:"f32",buffer:"f32",outlineBuffer:"f32",outlineColor:"vec4<f32>"}};var KR=`#version 300 es
#define SHADER_NAME multi-icon-layer-fragment-shader
precision highp float;
uniform sampler2D iconsTexture;
in vec4 vColor;
in vec2 vTextureCoords;
in vec2 uv;
out vec4 fragColor;
void main(void) {
geometry.uv = uv;
if (!bool(picking.isActive)) {
float alpha = texture(iconsTexture, vTextureCoords).a;
vec4 color = vColor;
if (sdf.enabled) {
float distance = alpha;
alpha = smoothstep(sdf.buffer - sdf.gamma, sdf.buffer + sdf.gamma, distance);
if (sdf.outlineBuffer > 0.0) {
float inFill = alpha;
float inBorder = smoothstep(sdf.outlineBuffer - sdf.gamma, sdf.outlineBuffer + sdf.gamma, distance);
color = mix(sdf.outlineColor, vColor, inFill);
alpha = inBorder;
}
}
float a = alpha * color.a;
if (a < icon.alphaCutoff) {
discard;
}
fragColor = vec4(color.rgb, a * layer.opacity);
}
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var ib=192/256,ZR=[],VK={getIconOffsets:{type:"accessor",value:e=>e.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}},uu=class extends Ec{getShaders(){let t=super.getShaders();return{...t,modules:[...t.modules,$R],fs:KR}}initializeState(){super.initializeState(),this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:"uint8",size:3,accessor:(r,{index:n,target:s})=>this.encodePickingColor(n,s)}})}updateState(t){super.updateState(t);let{props:r,oldProps:n}=t,{outlineColor:s}=r;s!==n.outlineColor&&(s=s.map(i=>i/255),s[3]=Number.isFinite(s[3])?s[3]:1,this.setState({outlineColor:s})),!r.sdf&&r.outlineWidth&&W.warn(`${this.id}: fontSettings.sdf is required to render outline`)()}draw(t){let{sdf:r,smoothing:n,outlineWidth:s}=this.props,{outlineColor:i}=this.state,o=s?Math.max(n,ib*(1-s)):-1,a=this.state.model,c={buffer:ib,outlineBuffer:o,gamma:n,enabled:Boolean(r),outlineColor:i};if(a.shaderInputs.setProps({sdf:c}),super.draw(t),r&&s){let{iconManager:l}=this.state;l.getTexture()&&(a.shaderInputs.setProps({sdf:{...c,outlineBuffer:ib}}),a.draw(this.context.renderPass))}}getInstanceOffset(t){return t?Array.from(t).flatMap(r=>super.getInstanceOffset(r)):ZR}getInstanceColorMode(t){return 1}getInstanceIconFrame(t){return t?Array.from(t).flatMap(r=>super.getInstanceIconFrame(r)):ZR}};uu.defaultProps=VK;uu.layerName="MultiIconLayer";var l0=uu;var du=class{constructor({fontSize:t=24,buffer:r=3,radius:n=8,cutoff:s=.25,fontFamily:i="sans-serif",fontWeight:o="normal",fontStyle:a="normal"}={}){this.buffer=r,this.cutoff=s,this.radius=n;let c=this.size=t+r*4,l=this._createCanvas(c),f=this.ctx=l.getContext("2d",{willReadFrequently:!0});f.font=`${a} ${o} ${t}px ${i}`,f.textBaseline="alphabetic",f.textAlign="left",f.fillStyle="black",this.gridOuter=new Float64Array(c*c),this.gridInner=new Float64Array(c*c),this.f=new Float64Array(c),this.z=new Float64Array(c+1),this.v=new Uint16Array(c)}_createCanvas(t){let r=document.createElement("canvas");return r.width=r.height=t,r}draw(t){let{width:r,actualBoundingBoxAscent:n,actualBoundingBoxDescent:s,actualBoundingBoxLeft:i,actualBoundingBoxRight:o}=this.ctx.measureText(t),a=Math.ceil(n),c=0,l=Math.max(0,Math.min(this.size-this.buffer,Math.ceil(o-i))),f=Math.min(this.size-this.buffer,a+Math.ceil(s)),h=l+2*this.buffer,u=f+2*this.buffer,d=Math.max(h*u,0),p=new Uint8ClampedArray(d),m={data:p,width:h,height:u,glyphWidth:l,glyphHeight:f,glyphTop:a,glyphLeft:c,glyphAdvance:r};if(l===0||f===0)return m;let{ctx:g,buffer:x,gridInner:A,gridOuter:_}=this;g.clearRect(x,x,l,f),g.fillText(t,x,x+a);let y=g.getImageData(x,x,l,f);_.fill(1e20,0,d),A.fill(0,0,d);for(let T=0;T<f;T++)for(let v=0;v<l;v++){let C=y.data[4*(T*l+v)+3]/255;if(C===0)continue;let w=(T+x)*h+v+x;if(C===1)_[w]=0,A[w]=1e20;else{let E=.5-C;_[w]=E>0?E*E:0,A[w]=E<0?E*E:0}}JR(_,0,0,h,u,h,this.f,this.v,this.z),JR(A,x,x,l,f,h,this.f,this.v,this.z);for(let T=0;T<d;T++){let v=Math.sqrt(_[T])-Math.sqrt(A[T]);p[T]=Math.round(255-255*(v/this.radius+this.cutoff))}return m}};function JR(e,t,r,n,s,i,o,a,c){for(let l=t;l<t+n;l++)QR(e,r*i+l,i,s,o,a,c);for(let l=r;l<r+s;l++)QR(e,l*i+t,1,n,o,a,c)}function QR(e,t,r,n,s,i,o){i[0]=0,o[0]=-1e20,o[1]=1e20,s[0]=e[t];for(let a=1,c=0,l=0;a<n;a++){s[a]=e[t+a*r];let f=a*a;do{let h=i[c];l=(s[a]-s[h]+f-h*h)/(a-h)/2}while(l<=o[c]&&--c>-1);c++,i[c]=a,o[c]=l,o[c+1]=1e20}for(let a=0,c=0;a<n;a++){for(;o[c+1]<a;)c++;let l=i[c],f=a-l;e[t+a*r]=s[l]+f*f}}var WK=32,HK=[];function GK(e){return Math.pow(2,Math.ceil(Math.log2(e)))}function tO({characterSet:e,getFontWidth:t,fontHeight:r,buffer:n,maxCanvasWidth:s,mapping:i={},xOffset:o=0,yOffset:a=0}){let c=0,l=o,f=r+n*2;for(let h of e)if(!i[h]){let u=t(h);l+u+n*2>s&&(l=0,c++),i[h]={x:l+n,y:a+c*f+n,width:u,height:f,layoutWidth:u,layoutHeight:r},l+=u+n*2}return{mapping:i,xOffset:l,yOffset:a+c*f,canvasHeight:GK(a+(c+1)*f)}}function eO(e,t,r,n){let s=0;for(let i=t;i<r;i++){let o=e[i];s+=n[o]?.layoutWidth||0}return s}function rO(e,t,r,n,s,i){let o=t,a=0;for(let c=t;c<r;c++){let l=eO(e,c,c+1,s);a+l>n&&(o<c&&i.push(c),o=c,a=0),a+=l}return a}function jK(e,t,r,n,s,i){let o=t,a=t,c=t,l=0;for(let f=t;f<r;f++)if((e[f]===" "||e[f+1]===" "||f+1===r)&&(c=f+1),c>a){let h=eO(e,a,c,s);l+h>n&&(o<a&&(i.push(a),o=a,l=0),h>n&&(h=rO(e,a,c,n,s,i),o=i[i.length-1])),a=c,l+=h}return l}function qK(e,t,r,n,s=0,i){i===void 0&&(i=e.length);let o=[];return t==="break-all"?rO(e,s,i,r,n,o):jK(e,s,i,r,n,o),o}function XK(e,t,r,n,s,i){let o=0,a=0;for(let c=t;c<r;c++){let l=e[c],f=n[l];f?(a||(a=f.layoutHeight),s[c]=o+f.layoutWidth/2,o+=f.layoutWidth):(W.warn(`Missing character: ${l} (${l.codePointAt(0)})`)(),s[c]=o,o+=WK)}i[0]=o,i[1]=a}function nO(e,t,r,n,s){let i=Array.from(e),o=i.length,a=new Array(o),c=new Array(o),l=new Array(o),f=(r==="break-word"||r==="break-all")&&isFinite(n)&&n>0,h=[0,0],u=[0,0],d=0,p=0,m=0;for(let g=0;g<=o;g++){let x=i[g];if((x===`
`||g===o)&&(m=g),m>p){let A=f?qK(i,r,n,s,p,m):HK;for(let _=0;_<=A.length;_++){let y=_===0?p:A[_-1],T=_<A.length?A[_]:m;XK(i,y,T,s,a,u);for(let v=y;v<T;v++){let C=a[v]-u[0]/2,w=i[v],E=s[w]?.layoutOffsetY||0;c[v]=d+u[1]/2+E,l[v]=u[0]}d=d+u[1]*t,h[0]=Math.max(h[0],u[0])}p=m}x===`
`&&(a[p]=0,c[p]=0,l[p]=0,p++)}return h[1]=d,{x:a,y:c,rowWidth:l,size:h}}function sO({value:e,length:t,stride:r,offset:n,startIndices:s,characterSet:i}){let o=e.BYTES_PER_ELEMENT,a=r?r/o:1,c=n?n/o:0,l=s[t]||Math.ceil((e.length-c)/a),f=i&&new Set,h=new Array(t),u=e;if(a>1||c>0){let d=e.constructor;u=new d(l);for(let p=0;p<l;p++)u[p]=e[p*a+c]}for(let d=0;d<t;d++){let p=s[d],m=s[d+1]||l,g=u.subarray(p,m);h[d]=String.fromCodePoint.apply(null,g),f&&g.forEach(f.add,f)}if(f)for(let d of f)i.add(String.fromCodePoint(d));return{texts:h,characterCount:l}}var Cc=class{constructor(t=5){this._cache={},this._order=[],this.limit=t}get(t){let r=this._cache[t];return r&&(this._deleteOrder(t),this._appendOrder(t)),r}set(t,r){this._cache[t]?(this.delete(t),this._cache[t]=r,this._appendOrder(t)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[t]=r,this._appendOrder(t))}delete(t){this._cache[t]&&(delete this._cache[t],this._deleteOrder(t))}_deleteOrder(t){let r=this._order.indexOf(t);r>=0&&this._order.splice(r,1)}_appendOrder(t){this._order.push(t)}};function YK(){let e=[];for(let t=32;t<128;t++)e.push(String.fromCharCode(t));return e}var Ho={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:YK(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1},iO=1024,oO=.9,aO=1.2,lO=3,f0=new Cc(lO);function $K(e,t){let r;typeof t=="string"?r=new Set(Array.from(t)):r=new Set(t);let n=f0.get(e);if(!n)return r;for(let s in n.mapping)r.has(s)&&r.delete(s);return r}function KK(e,t){for(let r=0;r<e.length;r++)t.data[4*r+3]=e[r]}function cO(e,t,r,n){e.font=`${n} ${r}px ${t}`,e.fillStyle="#000",e.textBaseline="alphabetic",e.textAlign="left"}function fO(e){W.assert(Number.isFinite(e)&&e>=lO,"Invalid cache limit"),f0=new Cc(e)}var pu=class{constructor(){this.props={...Ho}}get atlas(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){let{fontSize:t,buffer:r}=this.props;return(t*aO+r*2)/t}setProps(t={}){Object.assign(this.props,t),this._key=this._getKey();let r=$K(this._key,this.props.characterSet),n=f0.get(this._key);if(n&&r.size===0){this._atlas!==n&&(this._atlas=n);return}let s=this._generateFontAtlas(r,n);this._atlas=s,f0.set(this._key,s)}_generateFontAtlas(t,r){let{fontFamily:n,fontWeight:s,fontSize:i,buffer:o,sdf:a,radius:c,cutoff:l}=this.props,f=r&&r.data;f||(f=document.createElement("canvas"),f.width=iO);let h=f.getContext("2d",{willReadFrequently:!0});cO(h,n,i,s);let{mapping:u,canvasHeight:d,xOffset:p,yOffset:m}=tO({getFontWidth:g=>h.measureText(g).width,fontHeight:i*aO,buffer:o,characterSet:t,maxCanvasWidth:iO,...r&&{mapping:r.mapping,xOffset:r.xOffset,yOffset:r.yOffset}});if(f.height!==d){let g=h.getImageData(0,0,f.width,f.height);f.height=d,h.putImageData(g,0,0)}if(cO(h,n,i,s),a){let g=new du({fontSize:i,buffer:o,radius:c,cutoff:l,fontFamily:n,fontWeight:`${s}`});for(let x of t){let{data:A,width:_,height:y,glyphTop:T}=g.draw(x);u[x].width=_,u[x].layoutOffsetY=i*oO-T;let v=h.createImageData(_,y);KK(A,v),h.putImageData(v,u[x].x,u[x].y)}}else for(let g of t)h.fillText(g,u[g].x,u[g].y+o+i*oO);return{xOffset:p,yOffset:m,mapping:u,data:f,width:f.width,height:f.height}}_getKey(){let{fontFamily:t,fontWeight:r,fontSize:n,buffer:s,sdf:i,radius:o,cutoff:a}=this.props;return i?`${t} ${r} ${n} ${s} ${o} ${a}`:`${t} ${r} ${n} ${s}`}};var hO=`uniform textBackgroundUniforms {
  bool billboard;
  float sizeScale;
  float sizeMinPixels;
  float sizeMaxPixels;
  vec4 borderRadius;
  vec4 padding;
  highp int sizeUnits;
  bool stroked;
} textBackground;
`,uO={name:"textBackground",vs:hO,fs:hO,uniformTypes:{billboard:"f32",sizeScale:"f32",sizeMinPixels:"f32",sizeMaxPixels:"f32",borderRadius:"vec4<f32>",padding:"vec4<f32>",sizeUnits:"i32",stroked:"f32"}};var dO=`#version 300 es
#define SHADER_NAME text-background-layer-vertex-shader
in vec2 positions;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in vec4 instanceRects;
in float instanceSizes;
in float instanceAngles;
in vec2 instancePixelOffsets;
in float instanceLineWidths;
in vec4 instanceFillColors;
in vec4 instanceLineColors;
in vec3 instancePickingColors;
out vec4 vFillColor;
out vec4 vLineColor;
out float vLineWidth;
out vec2 uv;
out vec2 dimensions;
vec2 rotate_by_angle(vec2 vertex, float angle) {
float angle_radian = radians(angle);
float cos_angle = cos(angle_radian);
float sin_angle = sin(angle_radian);
mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);
return rotationMatrix * vertex;
}
void main(void) {
geometry.worldPosition = instancePositions;
geometry.uv = positions;
geometry.pickingColor = instancePickingColors;
uv = positions;
vLineWidth = instanceLineWidths;
float sizePixels = clamp(
project_size_to_pixel(instanceSizes * textBackground.sizeScale, textBackground.sizeUnits),
textBackground.sizeMinPixels, textBackground.sizeMaxPixels
);
dimensions = instanceRects.zw * sizePixels + textBackground.padding.xy + textBackground.padding.zw;
vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-textBackground.padding.xy, textBackground.padding.zw, positions);
pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);
pixelOffset += instancePixelOffsets;
pixelOffset.y *= -1.0;
if (textBackground.billboard)  {
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vec3 offset = vec3(pixelOffset, 0.0);
DECKGL_FILTER_SIZE(offset, geometry);
gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);
} else {
vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);
DECKGL_FILTER_SIZE(offset_common, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
}
vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vFillColor, geometry);
vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);
DECKGL_FILTER_COLOR(vLineColor, geometry);
}
`;var pO=`#version 300 es
#define SHADER_NAME text-background-layer-fragment-shader
precision highp float;
in vec4 vFillColor;
in vec4 vLineColor;
in float vLineWidth;
in vec2 uv;
in vec2 dimensions;
out vec4 fragColor;
float round_rect(vec2 p, vec2 size, vec4 radii) {
vec2 pixelPositionCB = (p - 0.5) * size;
vec2 sizeCB = size * 0.5;
float maxBorderRadius = min(size.x, size.y) * 0.5;
vec4 borderRadius = vec4(min(radii, maxBorderRadius));
borderRadius.xy =
(pixelPositionCB.x > 0.0) ? borderRadius.xy : borderRadius.zw;
borderRadius.x = (pixelPositionCB.y > 0.0) ? borderRadius.x : borderRadius.y;
vec2 q = abs(pixelPositionCB) - sizeCB + borderRadius.x;
return -(min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - borderRadius.x);
}
float rect(vec2 p, vec2 size) {
vec2 pixelPosition = p * size;
return min(min(pixelPosition.x, size.x - pixelPosition.x),
min(pixelPosition.y, size.y - pixelPosition.y));
}
vec4 get_stroked_fragColor(float dist) {
float isBorder = smoothedge(dist, vLineWidth);
return mix(vFillColor, vLineColor, isBorder);
}
void main(void) {
geometry.uv = uv;
if (textBackground.borderRadius != vec4(0.0)) {
float distToEdge = round_rect(uv, dimensions, textBackground.borderRadius);
if (textBackground.stroked) {
fragColor = get_stroked_fragColor(distToEdge);
} else {
fragColor = vFillColor;
}
float shapeAlpha = smoothedge(-distToEdge, 0.0);
fragColor.a *= shapeAlpha;
} else {
if (textBackground.stroked) {
float distToEdge = rect(uv, dimensions);
fragColor = get_stroked_fragColor(distToEdge);
} else {
fragColor = vFillColor;
}
}
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var ZK={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,borderRadius:{type:"object",value:0},padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:e=>e.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}},mu=class extends _t{getShaders(){return super.getShaders({vs:dO,fs:pO,modules:[ft,Pt,uO]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(t){super.updateState(t);let{changeFlags:r}=t;r.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:t}){let{billboard:r,sizeScale:n,sizeUnits:s,sizeMinPixels:i,sizeMaxPixels:o,getLineWidth:a}=this.props,{padding:c,borderRadius:l}=this.props;c.length<4&&(c=[c[0],c[1],c[0],c[1]]),Array.isArray(l)||(l=[l,l,l,l]);let f=this.state.model,h={billboard:r,stroked:Boolean(a),borderRadius:l,padding:c,sizeUnits:Lt[s],sizeScale:n,sizeMinPixels:i,sizeMaxPixels:o};f.shaderInputs.setProps({textBackground:h}),f.draw(this.context.renderPass)}_getModel(){let t=[0,0,1,0,0,1,1,1];return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new ht({topology:"triangle-strip",vertexCount:4,attributes:{positions:{size:2,value:new Float32Array(t)}}}),isInstanced:!0})}};mu.defaultProps=ZK;mu.layerName="TextBackgroundLayer";var h0=mu;var mO={start:1,middle:0,end:-1},gO={top:1,center:0,bottom:-1},ob=[0,0,0,255],JK=1,QK={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:ob},getBorderWidth:{type:"accessor",value:0},backgroundBorderRadius:{type:"object",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:Ho.characterSet},fontFamily:Ho.fontFamily,fontWeight:Ho.fontWeight,lineHeight:JK,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:ob},fontSettings:{type:"object",value:{},compare:1},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:e=>e.text},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:ob},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}},gu=class extends qt{constructor(){super(...arguments),this.getBoundingRect=(t,r)=>{let{size:[n,s]}=this.transformParagraph(t,r),{fontSize:i}=this.state.fontAtlasManager.props;n/=i,s/=i;let{getTextAnchor:o,getAlignmentBaseline:a}=this.props,c=mO[typeof o=="function"?o(t,r):o],l=gO[typeof a=="function"?a(t,r):a];return[(c-1)*n/2,(l-1)*s/2,n,s]},this.getIconOffsets=(t,r)=>{let{getTextAnchor:n,getAlignmentBaseline:s}=this.props,{x:i,y:o,rowWidth:a,size:[c,l]}=this.transformParagraph(t,r),f=mO[typeof n=="function"?n(t,r):n],h=gO[typeof s=="function"?s(t,r):s],u=i.length,d=new Array(u*2),p=0;for(let m=0;m<u;m++){let g=(1-f)*(c-a[m])/2;d[p++]=(f-1)*c/2+g+i[m],d[p++]=(h-1)*l/2+o[m]}return d}}initializeState(){this.state={styleVersion:0,fontAtlasManager:new pu},this.props.maxWidth>0&&W.once(1,"v8.9 breaking change: TextLayer maxWidth is now relative to text size")()}updateState(t){let{props:r,oldProps:n,changeFlags:s}=t;(s.dataChanged||s.updateTriggersChanged&&(s.updateTriggersChanged.all||s.updateTriggersChanged.getText))&&this._updateText(),(this._updateFontAtlas()||r.lineHeight!==n.lineHeight||r.wordBreak!==n.wordBreak||r.maxWidth!==n.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo({info:t}){return t.object=t.index>=0?this.props.data[t.index]:null,t}_updateFontAtlas(){let{fontSettings:t,fontFamily:r,fontWeight:n}=this.props,{fontAtlasManager:s,characterSet:i}=this.state,o={...t,characterSet:i,fontFamily:r,fontWeight:n};if(!s.mapping)return s.setProps(o),!0;for(let a in o)if(o[a]!==s.props[a])return s.setProps(o),!0;return!1}_updateText(){let{data:t,characterSet:r}=this.props,n=t.attributes?.getText,{getText:s}=this.props,i=t.startIndices,o,a=r==="auto"&&new Set;if(n&&i){let{texts:c,characterCount:l}=sO({...ArrayBuffer.isView(n)?{value:n}:n,length:t.length,startIndices:i,characterSet:a});o=l,s=(f,{index:h})=>c[h]}else{let{iterable:c,objectInfo:l}=ie(t);i=[0],o=0;for(let f of c){l.index++;let h=Array.from(s(f,l)||"");a&&h.forEach(a.add,a),o+=h.length,i.push(o)}}this.setState({getText:s,startIndices:i,numInstances:o,characterSet:a||r})}transformParagraph(t,r){let{fontAtlasManager:n}=this.state,s=n.mapping,i=this.state.getText,{wordBreak:o,lineHeight:a,maxWidth:c}=this.props,l=i(t,r)||"";return nO(l,a,o,c*n.props.fontSize,s)}renderLayers(){let{startIndices:t,numInstances:r,getText:n,fontAtlasManager:{scale:s,atlas:i,mapping:o},styleVersion:a}=this.state,{data:c,_dataDiff:l,getPosition:f,getColor:h,getSize:u,getAngle:d,getPixelOffset:p,getBackgroundColor:m,getBorderColor:g,getBorderWidth:x,backgroundBorderRadius:A,backgroundPadding:_,background:y,billboard:T,fontSettings:v,outlineWidth:C,outlineColor:w,sizeScale:E,sizeUnits:b,sizeMinPixels:R,sizeMaxPixels:k,transitions:D,updateTriggers:P}=this.props,j=this.getSubLayerClass("characters",l0),ot=this.getSubLayerClass("background",h0);return[y&&new ot({getFillColor:m,getLineColor:g,getLineWidth:x,borderRadius:A,padding:_,getPosition:f,getSize:u,getAngle:d,getPixelOffset:p,billboard:T,sizeScale:E,sizeUnits:b,sizeMinPixels:R,sizeMaxPixels:k,transitions:D&&{getPosition:D.getPosition,getAngle:D.getAngle,getSize:D.getSize,getFillColor:D.getBackgroundColor,getLineColor:D.getBorderColor,getLineWidth:D.getBorderWidth,getPixelOffset:D.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:P.getPosition,getAngle:P.getAngle,getSize:P.getSize,getFillColor:P.getBackgroundColor,getLineColor:P.getBorderColor,getLineWidth:P.getBorderWidth,getPixelOffset:P.getPixelOffset,getBoundingRect:{getText:P.getText,getTextAnchor:P.getTextAnchor,getAlignmentBaseline:P.getAlignmentBaseline,styleVersion:a}}}),{data:c.attributes&&c.attributes.background?{length:c.length,attributes:c.attributes.background}:c,_dataDiff:l,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new j({sdf:v.sdf,smoothing:Number.isFinite(v.smoothing)?v.smoothing:Ho.smoothing,outlineWidth:C/(v.radius||Ho.radius),outlineColor:w,iconAtlas:i,iconMapping:o,getPosition:f,getColor:h,getSize:u,getAngle:d,getPixelOffset:p,billboard:T,sizeScale:E*s,sizeUnits:b,sizeMinPixels:R*s,sizeMaxPixels:k*s,transitions:D&&{getPosition:D.getPosition,getAngle:D.getAngle,getColor:D.getColor,getSize:D.getSize,getPixelOffset:D.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{all:P.getText,getPosition:P.getPosition,getAngle:P.getAngle,getColor:P.getColor,getSize:P.getSize,getPixelOffset:P.getPixelOffset,getIconOffsets:{getTextAnchor:P.getTextAnchor,getAlignmentBaseline:P.getAlignmentBaseline,styleVersion:a}}}),{data:c,_dataDiff:l,startIndices:t,numInstances:r,getIconOffsets:this.getIconOffsets,getIcon:n})]}static set fontAtlasCacheLimit(t){fO(t)}};gu.defaultProps=QK;gu.layerName="TextLayer";var u0=gu;var xu={circle:{type:Yg,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",pointAntialiasing:"antialiasing",pointBillboard:"billboard",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:Ec,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",iconAlphaCutoff:"alphaCutoff",iconBillboard:"billboard",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:u0,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",textBillboard:"billboard",textFontSettings:"fontSettings",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},_u={type:Xn,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}},d0={type:Ei,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",_full3d:"_full3d",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function Pc({type:e,props:t}){let r={};for(let n in t)r[n]=e.defaultProps[t[n]];return r}function p0(e,t){let{transitions:r,updateTriggers:n}=e.props,s={updateTriggers:{},transitions:r&&{getPosition:r.geometry}};for(let i in t){let o=t[i],a=e.props[i];i.startsWith("get")&&(a=e.getSubLayerAccessor(a),s.updateTriggers[o]=n[i],r&&(s.transitions[o]=r[i])),s[o]=a}return s}function _O(e){if(Array.isArray(e))return e;switch(W.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return W.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}function ab(e,t,r={}){let n={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:s=0,endRow:i=e.length}=r;for(let o=s;o<i;o++){let a=e[o],{geometry:c}=a;if(c)if(c.type==="GeometryCollection"){W.assert(Array.isArray(c.geometries),"GeoJSON does not have geometries array");let{geometries:l}=c;for(let f=0;f<l.length;f++){let h=l[f];xO(h,n,t,a,o)}}else xO(c,n,t,a,o)}return n}function xO(e,t,r,n,s){let{type:i,coordinates:o}=e,{pointFeatures:a,lineFeatures:c,polygonFeatures:l,polygonOutlineFeatures:f}=t;if(!eZ(i,o)){W.warn(`${i} coordinates are malformed`)();return}switch(i){case"Point":a.push(r({geometry:e},n,s));break;case"MultiPoint":o.forEach(h=>{a.push(r({geometry:{type:"Point",coordinates:h}},n,s))});break;case"LineString":c.push(r({geometry:e},n,s));break;case"MultiLineString":o.forEach(h=>{c.push(r({geometry:{type:"LineString",coordinates:h}},n,s))});break;case"Polygon":l.push(r({geometry:e},n,s)),o.forEach(h=>{f.push(r({geometry:{type:"LineString",coordinates:h}},n,s))});break;case"MultiPolygon":o.forEach(h=>{l.push(r({geometry:{type:"Polygon",coordinates:h}},n,s)),h.forEach(u=>{f.push(r({geometry:{type:"LineString",coordinates:u}},n,s))})});break;default:}}var tZ={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function eZ(e,t){let r=tZ[e];for(W.assert(r,`Unknown GeoJSON type ${e}`);t&&--r>0;)t=t[0];return t&&Number.isFinite(t[0])}function yO(){return{points:{},lines:{},polygons:{},polygonsOutline:{}}}function m0(e){return e.geometry.coordinates}function AO(e,t){let r=yO(),{pointFeatures:n,lineFeatures:s,polygonFeatures:i,polygonOutlineFeatures:o}=e;return r.points.data=n,r.points._dataDiff=t.pointFeatures&&(()=>t.pointFeatures),r.points.getPosition=m0,r.lines.data=s,r.lines._dataDiff=t.lineFeatures&&(()=>t.lineFeatures),r.lines.getPath=m0,r.polygons.data=i,r.polygons._dataDiff=t.polygonFeatures&&(()=>t.polygonFeatures),r.polygons.getPolygon=m0,r.polygonsOutline.data=o,r.polygonsOutline._dataDiff=t.polygonOutlineFeatures&&(()=>t.polygonOutlineFeatures),r.polygonsOutline.getPath=m0,r}function bO(e,t){let r=yO(),{points:n,lines:s,polygons:i}=e,o=XR(e,t);return r.points.data={length:n.positions.value.length/n.positions.size,attributes:{...n.attributes,getPosition:n.positions,instancePickingColors:{size:4,value:o.points}},properties:n.properties,numericProps:n.numericProps,featureIds:n.featureIds},r.lines.data={length:s.pathIndices.value.length-1,startIndices:s.pathIndices.value,attributes:{...s.attributes,getPath:s.positions,instancePickingColors:{size:4,value:o.lines}},properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},r.lines._pathType="open",r.polygons.data={length:i.polygonIndices.value.length-1,startIndices:i.polygonIndices.value,attributes:{...i.attributes,getPolygon:i.positions,pickingColors:{size:4,value:o.polygons}},properties:i.properties,numericProps:i.numericProps,featureIds:i.featureIds},r.polygons._normalize=!1,i.triangles&&(r.polygons.data.attributes.indices=i.triangles.value),r.polygonsOutline.data={length:i.primitivePolygonIndices.value.length-1,startIndices:i.primitivePolygonIndices.value,attributes:{...i.attributes,getPath:i.positions,instancePickingColors:{size:4,value:o.polygons}},properties:i.properties,numericProps:i.numericProps,featureIds:i.featureIds},r.polygonsOutline._pathType="open",r}var rZ=["points","linestrings","polygons"],nZ={...Pc(xu.circle),...Pc(xu.icon),...Pc(xu.text),...Pc(_u),...Pc(d0),stroked:!0,filled:!0,extruded:!1,wireframe:!1,_full3d:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:e=>e.properties.icon},getText:{type:"accessor",value:e=>e.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}},yu=class extends qt{initializeState(){this.state={layerProps:{},features:{},featuresDiff:{}}}updateState({props:t,changeFlags:r}){if(!r.dataChanged)return;let{data:n}=this.props,s=n&&"points"in n&&"polygons"in n&&"lines"in n;this.setState({binary:s}),s?this._updateStateBinary({props:t,changeFlags:r}):this._updateStateJSON({props:t,changeFlags:r})}_updateStateBinary({props:t,changeFlags:r}){let n=bO(t.data,this.encodePickingColor);this.setState({layerProps:n})}_updateStateJSON({props:t,changeFlags:r}){let n=_O(t.data),s=this.getSubLayerRow.bind(this),i={},o={};if(Array.isArray(r.dataChanged)){let c=this.state.features;for(let l in c)i[l]=c[l].slice(),o[l]=[];for(let l of r.dataChanged){let f=ab(n,s,l);for(let h in c)o[h].push(c0({data:i[h],getIndex:u=>u.__source.index,dataRange:l,replace:f[h]}))}}else i=ab(n,s);let a=AO(i,o);this.setState({features:i,featuresDiff:o,layerProps:a})}getPickingInfo(t){let r=super.getPickingInfo(t),{index:n,sourceLayer:s}=r;return r.featureType=rZ.find(i=>s.id.startsWith(`${this.id}-${i}-`)),n>=0&&s.id.startsWith(`${this.id}-points-text`)&&this.state.binary&&(r.index=this.props.data.points.globalFeatureIds.value[n]),r}_updateAutoHighlight(t){let r=`${this.id}-points-`,n=t.featureType==="points";for(let s of this.getSubLayers())s.id.startsWith(r)===n&&s.updateAutoHighlight(t)}_renderPolygonLayer(){let{extruded:t,wireframe:r}=this.props,{layerProps:n}=this.state,s="polygons-fill",i=this.shouldRenderSubLayer(s,n.polygons?.data)&&this.getSubLayerClass(s,d0.type);if(i){let o=p0(this,d0.props),a=t&&r;return a||delete o.getLineColor,o.updateTriggers.lineColors=a,new i(o,this.getSubLayerProps({id:s,updateTriggers:o.updateTriggers}),n.polygons)}return null}_renderLineLayers(){let{extruded:t,stroked:r}=this.props,{layerProps:n}=this.state,s="polygons-stroke",i="linestrings",o=!t&&r&&this.shouldRenderSubLayer(s,n.polygonsOutline?.data)&&this.getSubLayerClass(s,_u.type),a=this.shouldRenderSubLayer(i,n.lines?.data)&&this.getSubLayerClass(i,_u.type);if(o||a){let c=p0(this,_u.props);return[o&&new o(c,this.getSubLayerProps({id:s,updateTriggers:c.updateTriggers}),n.polygonsOutline),a&&new a(c,this.getSubLayerProps({id:i,updateTriggers:c.updateTriggers}),n.lines)]}return null}_renderPointLayers(){let{pointType:t}=this.props,{layerProps:r,binary:n}=this.state,{highlightedObjectIndex:s}=this.props;!n&&Number.isFinite(s)&&(s=r.points.data.findIndex(a=>a.__source.index===s));let i=new Set(t.split("+")),o=[];for(let a of i){let c=`points-${a}`,l=xu[a],f=l&&this.shouldRenderSubLayer(c,r.points?.data)&&this.getSubLayerClass(c,l.type);if(f){let h=p0(this,l.props),u=r.points;if(a==="text"&&n){let{instancePickingColors:d,...p}=u.data.attributes;u={...u,data:{...u.data,attributes:p}}}o.push(new f(h,this.getSubLayerProps({id:c,updateTriggers:h.updateTriggers,highlightedObjectIndex:s}),u))}}return o}renderLayers(){let{extruded:t}=this.props,r=this._renderPolygonLayer(),n=this._renderLineLayers(),s=this._renderPointLayers();return[!t&&r,n,s,t&&r]}getSubLayerAccessor(t){let{binary:r}=this.state;return!r||typeof t!="function"?super.getSubLayerAccessor(t):(n,s)=>{let{data:i,index:o}=s,a=qR(i,o);return t(a,s)}}};yu.layerName="GeoJsonLayer";yu.defaultProps=nZ;var Go=yu;function sZ(e){return typeof e=="string"?e.charAt(0).toLowerCase()+e.slice(1):e}function g0(e){if(Array.isArray(e))return e.map(t=>g0(t));if(e&&typeof e=="object"){let t={};for(let[r,n]of Object.entries(e))t[sZ(r)]=g0(n);return t}return e}var tL=os(QO(),1);function gb(e,t){if(t?._parser&&t._parser!=="fast-xml-parser")throw new Error(t?._parser);let r={allowBooleanAttributes:!0,ignoreDeclaration:!0,removeNSPrefix:t?.removeNSPrefix,textNodeName:t?.textNodeName,isArray:(s,i,o,a)=>Boolean(t?.arrayPaths?.some(l=>i===l)),...t?._fastXML},n=dJ(e,r);return t?.uncapitalizeKeys?g0(n):n}function dJ(e,t){return new tL.XMLParser({ignoreAttributes:!1,attributeNamePrefix:"",...t}).parse(e)}var pJ="4.2.1",xn={dataType:null,batchType:null,name:"XML",id:"xml",module:"xml",version:pJ,worker:!1,extensions:["xml"],mimeTypes:["application/xml","text/xml"],testText:mJ,options:{xml:{_parser:"fast-xml-parser",uncapitalizeKeys:!1,removeNSPrefix:!1,textNodeName:"value",arrayPaths:[]}},parse:async(e,t)=>gb(new TextDecoder().decode(e),{...xn.options.xml,...t?.xml}),parseTextSync:(e,t)=>gb(e,{...xn.options.xml,...t?.xml})};function mJ(e){return e.startsWith("<?xml")}function eL(e,t){let r=xn.parseTextSync?.(e,t),n=r?.ServiceExceptionReport?.ServiceException||r?.["ogc:ServiceExceptionReport"]?.["ogc:ServiceException"];return typeof n=="string"?n:n.value||n.code||"Unknown error"}var gJ="4.2.1",Tu={dataType:null,batchType:null,id:"wms-error",name:"WMS Error",module:"wms",version:gJ,worker:!1,extensions:["xml"],mimeTypes:["application/vnd.ogc.se_xml","application/xml","text/xml"],testText:xJ,options:{wms:{throwOnError:!1}},parse:async(e,t)=>xb(new TextDecoder().decode(e),t),parseSync:(e,t)=>xb(new TextDecoder().decode(e),t),parseTextSync:(e,t)=>xb(e,t)};function xJ(e){return e.startsWith("<?xml")}function xb(e,t){let r={...Tu.options.wms,...t?.wms},n=eL(e,r),s=r.minimalErrors?n:`WMS Service error: ${n}`;if(r.throwOnError)throw new Error(s);return s}function qo(e){return Array.isArray(e)?e:e?[e]:[]}function vu(e){let t=qo(e);return t.length>0&&t.every(r=>typeof r=="string")?t:[]}function Eu(e,t=void 0){switch(typeof e){case"number":return e;case"string":return parseFloat(e);default:return}}function _0(e,t=void 0){switch(typeof e){case"number":return e;case"string":return parseInt(e,10);default:return}}function Xo(e){switch(e){case"true":return!0;case"false":return!1;case"1":return!0;case"0":return!1;default:return!1}}function _b(e,t){let r=xn.parseTextSync?.(e,t),n=r.WMT_MS_Capabilities||r.WMS_Capabilities||r,s=_J(n);if(t?.inheritedLayerProps)for(let i of s.layers)nL(i,null);return t?.includeRawJSON&&(s.json=n),t?.includeXMLText&&(s.xml=e),s}function _J(e){let t={version:String(e.version||""),name:String(e.Service?.Name||"unnamed"),title:e.Service?.Title?String(e.Service?.Title):void 0,abstract:e.Service?.Abstract?String(e.Service?.Abstract):void 0,keywords:vu(e.Service?.KeywordList?.Keyword),fees:e.Service?.Fees?JSON.stringify(e.Service?.Fees):void 0,accessConstraints:e.Service?.AccessConstraints?JSON.stringify(e.Service?.AccessConstraints):void 0,layerLimit:_0(e.Service?.LayerLimit),maxWidth:_0(e.Service?.maxWidth),maxHeight:_0(e.Service?.maxHeight),layers:[],requests:yJ(e.Capability?.Request),exceptions:AJ(e.Exception)},r=qo(e.Capability?.Layer);for(let n of r)t.layers.push(rL(n));for(let[n,s]of Object.entries(t))s===void 0&&delete t[n];return t}function yJ(e){let t={};for(let[r,n]of Object.entries(e||{})){let s=vu(n?.Format);t[r]={mimeTypes:s}}return t}function AJ(e){if(qo(e?.Format).length>0)return{mimeTypes:vu(e)}}function rL(e){let t={title:String(e?.Title||""),name:e?.Name&&String(e?.Name),abstract:e?.Name&&String(e?.Abstract),keywords:vu(e.KeywordList?.Keyword)},r=e?.CRS||e?.SRS;r&&Array.isArray(r)&&r.every(l=>typeof l=="string")&&(t.crs=r);let n=e?.EX_GeographicBoundingBox&&bJ(e?.EX_GeographicBoundingBox);n&&(t.geographicBoundingBox=n),n=e?.LatLonBoundingBox&&TJ(e?.LatLonBoundingBox),n&&(t.geographicBoundingBox=n);let s=e?.BoundingBox&&vJ(e?.BoundingBox);s&&s.length>0&&(t.boundingBoxes=s);let o=qo(e?.Dimension).map(l=>MJ(l));o.length&&(t.dimensions=o),e?.opaque&&(t.opaque=Xo(e?.opaque)),e?.cascaded&&(t.cascaded=Xo(e?.cascaded)),e?.queryable&&(t.queryable=Xo(e?.queryable));let a=qo(e?.Layer),c=[];for(let l of a)c.push(rL(l));c.length>0&&(t.layers=c);for(let[l,f]of Object.entries(t))f===void 0&&delete t[l];return t}function bJ(e){let{westBoundLongitude:t,northBoundLatitude:r,eastBoundLongitude:n,southBoundLatitude:s}=e;return[[t,s],[n,r]]}function TJ(e){let{minx:t,miny:r,maxx:n,maxy:s}=e;return[[t,r],[n,s]]}function vJ(e){return qo(e).map(r=>EJ(r))}function EJ(e){let{CRS:t,SRS:r,minx:n,miny:s,maxx:i,maxy:o,resx:a,resy:c}=e,l={crs:t||r,boundingBox:[[Eu(n),Eu(s)],[Eu(i),Eu(o)]]};return a&&(l.xResolution=a),c&&(l.yResolution=c),l}function MJ(e){let{name:t,units:r,value:n}=e,s={name:t,units:r,extent:n};return e.unitSymbol&&(s.unitSymbol=e.unitSymbol),e.default&&(s.defaultValue=e.default),e.multipleValues&&(s.multipleValues=Xo(e.multipleValues)),e.nearestValue&&(s.nearestValue=Xo(e.nearestValue)),e.current&&(s.current=Xo(e.current)),s}function nL(e,t){t?.geographicBoundingBox&&!e.geographicBoundingBox&&(e.geographicBoundingBox=[...t.geographicBoundingBox]),t?.crs&&!e.crs&&(e.crs=[...t.crs]),t?.boundingBoxes&&!e.boundingBoxes&&(e.boundingBoxes=[...t.boundingBoxes]),t?.dimensions&&!e.dimensions&&(e.dimensions=[...t.dimensions]);for(let r of e.layers||[])nL(r,e)}var SJ="4.2.1",Ic={dataType:null,batchType:null,id:"wms-capabilities",name:"WMS Capabilities",module:"wms",version:SJ,worker:!1,extensions:["xml"],mimeTypes:["application/vnd.ogc.wms_xml","application/xml","text/xml"],testText:wJ,options:{wms:{}},parse:async(e,t)=>_b(new TextDecoder().decode(e),t?.wms),parseTextSync:(e,t)=>_b(e,t?.wms)};function wJ(e){return e.startsWith("<?xml")}function yb(e,t){let n=(xn.parseTextSync?.(e,t)).FeatureInfoResponse?.FIELDS||[];return{features:(Array.isArray(n)?n:[n]).map(i=>CJ(i))}}function CJ(e){return{attributes:e||{},type:"",bounds:{bottom:0,top:0,left:0,right:0}}}var sL={...Ic,dataType:null,id:"wms-feature-info",name:"WMS FeatureInfo",parse:async(e,t)=>yb(new TextDecoder().decode(e),t),parseTextSync:(e,t)=>yb(e,t)};function Ab(e,t){return xn.parseTextSync?.(e,t)}var iL={...Ic,dataType:null,id:"wms-layer-description",name:"WMS DescribeLayer",parse:async(e,t)=>Ab(new TextDecoder().decode(e),t),parseTextSync:(e,t)=>Ab(e,t)};function oL(e,t){let{type:r="auto"}=e,n=r==="auto"?IJ(e.url,t):PJ(r,t);if(!n)throw new Error("Not a valid image source type");return n.create(e)}function PJ(e,t){for(let r of t)if(r.type===e)return r;return null}function IJ(e,t){for(let r of t)if(r.testURL&&r.testURL(e))return r;return null}var aL={type:"wms",testURL:e=>e.toLowerCase().includes("wms"),create:e=>new bb(e)},bb=class extends Br{url;data;substituteCRS84;flipCRS;wmsParameters;vendorParameters;capabilities=null;constructor(t){super(t),this.url=t.url,this.data=t.url,this.substituteCRS84=t.substituteCRS84??!1,this.flipCRS=["EPSG:4326"],this.wmsParameters={layers:void 0,query_layers:void 0,styles:void 0,version:"1.3.0",crs:"EPSG:4326",format:"image/png",info_format:"text/plain",transparent:void 0,time:void 0,elevation:void 0,...t.wmsParameters},this.vendorParameters=t.vendorParameters||{}}async getMetadata(){let t=await this.getCapabilities();return this.normalizeMetadata(t)}async getImage(t){let{boundingBox:r,bbox:n,...s}=t,i={bbox:r?[...r[0],...r[1]]:n,...s};return await this.getMap(i)}normalizeMetadata(t){return t}async getCapabilities(t,r){let n=this.getCapabilitiesURL(t,r),s=await this.fetch(n),i=await s.arrayBuffer();this._checkResponse(s,i);let o=await Ic.parse(i,this.loadOptions);return this.capabilities=o,o}async getMap(t,r){let n=this.getMapURL(t,r),s=await this.fetch(n),i=await s.arrayBuffer();this._checkResponse(s,i);try{return await In.parse(i,this.loadOptions)}catch{throw this._parseError(i)}}async getFeatureInfo(t,r){let n=this.getFeatureInfoURL(t,r),s=await this.fetch(n),i=await s.arrayBuffer();return this._checkResponse(s,i),await sL.parse(i,this.loadOptions)}async getFeatureInfoText(t,r){let n=this.getFeatureInfoURL(t,r),s=await this.fetch(n),i=await s.arrayBuffer();return this._checkResponse(s,i),new TextDecoder().decode(i)}async describeLayer(t,r){let n=this.describeLayerURL(t,r),s=await this.fetch(n),i=await s.arrayBuffer();return this._checkResponse(s,i),await iL.parse(i,this.loadOptions)}async getLegendGraphic(t,r){let n=this.getLegendGraphicURL(t,r),s=await this.fetch(n),i=await s.arrayBuffer();this._checkResponse(s,i);try{return await In.parse(i,this.loadOptions)}catch{throw this._parseError(i)}}getCapabilitiesURL(t,r){let n={version:this.wmsParameters.version,...t};return this._getWMSUrl("GetCapabilities",n,r)}getMapURL(t,r){t=this._getWMS130Parameters(t);let n={version:this.wmsParameters.version,format:this.wmsParameters.format,transparent:this.wmsParameters.transparent,time:this.wmsParameters.time,elevation:this.wmsParameters.elevation,layers:this.wmsParameters.layers,styles:this.wmsParameters.styles,crs:this.wmsParameters.crs,...t};return this._getWMSUrl("GetMap",n,r)}getFeatureInfoURL(t,r){t=this._getWMS130Parameters(t);let{boundingBox:n,bbox:s}=t;t.bbox=n?[...n[0],...n[1]]:s;let i={version:this.wmsParameters.version,info_format:this.wmsParameters.info_format,layers:this.wmsParameters.layers,query_layers:this.wmsParameters.query_layers,styles:this.wmsParameters.styles,crs:this.wmsParameters.crs,...t};return this._getWMSUrl("GetFeatureInfo",i,r)}describeLayerURL(t,r){let n={version:this.wmsParameters.version,...t};return this._getWMSUrl("DescribeLayer",n,r)}getLegendGraphicURL(t,r){let n={version:this.wmsParameters.version,...t};return this._getWMSUrl("GetLegendGraphic",n,r)}_parseWMSUrl(t){let[r,n]=t.split("?"),s=n.split("&"),i={};for(let o of s){let[a,c]=o.split("=");i[a]=c}return{url:r,parameters:i}}_getWMSUrl(t,r,n){let s=this.url,i=!0,o={service:"WMS",version:r.version,request:t,...r,...this.vendorParameters,...n},a=["transparent","time","elevation"];for(let[c,l]of Object.entries(o))(!a.includes(c)||l)&&(s+=i?"?":"&",i=!1,s+=this._getURLParameter(c,l,r));return encodeURI(s)}_getWMS130Parameters(t){let r={...t};return r.srs&&(r.crs=r.crs||r.srs,delete r.srs),r}_getURLParameter(t,r,n){switch(t){case"crs":n.version!=="1.3.0"?t="srs":this.substituteCRS84&&r==="EPSG:4326"&&(r="CRS:84");break;case"srs":n.version==="1.3.0"&&(t="crs");break;case"bbox":let s=this._flipBoundingBox(r,n);s&&(r=s);break;case"x":n.version==="1.3.0"&&(t="i");break;case"y":n.version==="1.3.0"&&(t="j");break;default:}return t=t.toUpperCase(),Array.isArray(r)?`${t}=${r.join(",")}`:`${t}=${r?String(r):""}`}_flipBoundingBox(t,r){if(!Array.isArray(t)||t.length!==4)return null;let n=r.version==="1.3.0"&&this.flipCRS.includes(r.crs||"")&&!(this.substituteCRS84&&r.crs==="EPSG:4326"),s=t;return n?[s[1],s[0],s[3],s[2]]:s}async _fetchArrayBuffer(t){let r=await this.fetch(t),n=await r.arrayBuffer();return this._checkResponse(r,n),n}_checkResponse(t,r){let n=t.headers["content-type"];if(!t.ok||Tu.mimeTypes.includes(n)){let s=ql(this.loadOptions,{wms:{throwOnError:!0}}),i=Tu.parseSync?.(r,s);throw new Error(i)}}_parseError(t){let r=Tu.parseSync?.(t,this.loadOptions);return new Error(r)}};var Rc=class extends Br{constructor(t){super(t)}async getMetadata(){throw new Error("ImageSource.getMetadata not implemented")}async getImage(t){let r=this.getGranularParameters(t),n=this.getURLFromTemplate(r),i=await(await this.fetch(n)).arrayBuffer();return await In.parse(i)}getGranularParameters(t){let[[r,n],[s,i]]=t.boundingBox;return{...t,east:r,north:n,south:i,west:s}}getURLFromTemplate(t){let r=this.props.url;for(let[n,s]of Object.entries(t))r=r.replace(`\${${n}}`,String(s)),r=r.replace(`{${n}}`,String(s));return r}};Y(Rc,"type","template"),Y(Rc,"testURL",t=>t.toLowerCase().includes("{"));var Tb=class extends Rc{data;constructor(t){super(t),this.data=t.url}async getMetadata(){return await this.metadata()}async getImage(t){throw new Error("not implemented")}async metadata(){throw new Error("not implemented")}exportImage(t){throw new Error("not implemented")}metadataURL(t){return`${this.props.url}?f=pjson`}exportImageURL(t){let r=`bbox=${t.bbox[0]},${t.bbox[1]},${t.bbox[2]},${t.bbox[3]}`,n=`size=${t.width},${t.height}`,s={...t,bbox:r,size:n};return delete s.width,delete s.height,this.getUrl("exportImage",s)}getUrl(t,r,n){let s=`${this.props.url}/${t}`,i=!0;for(let[o,a]of Object.entries(r))s+=i?"?":"&",i=!1,Array.isArray(a)?s+=`${o.toUpperCase()}=${a.join(",")}`:s+=`${o.toUpperCase()}=${a?String(a):""}`;return s}async checkResponse(t){if(!t.ok)throw new Error("error")}},cL={type:"arcgis-image-server",testURL:e=>e.toLowerCase().includes("ImageServer"),create:e=>new Tb(e)};var RJ=[aL,cL];function vb(e){return oL(e,RJ)}var lL=6378137*Math.PI;function Eb(e){let t=ae(e);return t[0]=(t[0]/256-1)*lL,t[1]=(t[1]/256-1)*lL,t}var OJ={id:"imagery-layer",data:"",serviceType:"auto",srs:"auto",layers:{type:"array",compare:!0,value:[]},onMetadataLoad:{type:"function",value:()=>{}},onMetadataLoadError:{type:"function",value:console.error},onImageLoadStart:{type:"function",value:()=>{}},onImageLoad:{type:"function",value:()=>{}},onImageLoadError:{type:"function",compare:!1,value:(e,t)=>console.error(t,e)}},Oc=class extends qt{get isLoaded(){return this.state?.loadCounter===0&&super.isLoaded}shouldUpdateState(){return!0}initializeState(){this.state._nextRequestId=0,this.state.lastRequestId=-1,this.state.loadCounter=0}updateState({changeFlags:t,props:r,oldProps:n}){let{viewport:s}=this.context;t.dataChanged||r.serviceType!==n.serviceType?(this.state.imageSource=this._createImageSource(r),this._loadMetadata(),this.debounce(()=>this.loadImage(s,"image source changed"),0)):it(r.layers,n.layers,1)?t.viewportChanged&&this.debounce(()=>this.loadImage(s,"viewport changed")):this.debounce(()=>this.loadImage(s,"layers changed"),0)}finalizeState(){}renderLayers(){let{bounds:t,image:r,lastRequestParameters:n}=this.state;return r&&new qg({...this.getSubLayerProps({id:"bitmap"}),_imageCoordinateSystem:n.srs==="EPSG:4326"?q.LNGLAT:q.CARTESIAN,bounds:t,image:r})}async getFeatureInfoText(t,r){let{lastRequestParameters:n}=this.state;return n?await this.state.imageSource.getFeatureInfoText?.({...n,query_layers:n.layers,x:t,y:r,info_format:"application/vnd.ogc.gml"}):""}_createImageSource(t){if(t.data instanceof Br)return t.data;if(typeof t.data=="string")return vb({url:t.data,loadOptions:t.loadOptions,type:t.serviceType});throw new Error("invalid image source in props.data")}async _loadMetadata(){let{imageSource:t}=this.state;try{this.state.loadCounter++;let r=await t.getMetadata();this.state.imageSource===t&&this.getCurrentLayer()?.props.onMetadataLoad(r)}catch(r){this.getCurrentLayer()?.props.onMetadataLoadError(r)}finally{this.state.loadCounter--}}async loadImage(t,r){let{layers:n,serviceType:s}=this.props;if(s==="wms"&&n.length===0)return;let i=t.getBounds(),{width:o,height:a}=t,c=this.getRequestId(),{srs:l}=this.props;l==="auto"&&(l=t.resolution?"EPSG:4326":"EPSG:3857");let f={width:o,height:a,boundingBox:[[i[0],i[1]],[i[2],i[3]]],layers:n,crs:l};if(l==="EPSG:3857"){let h=Eb([i[0],i[1]]),u=Eb([i[2],i[3]]);f.boundingBox=[h,u]}try{this.state.loadCounter++,this.props.onImageLoadStart(c);let h=await this.state.imageSource.getImage(f);this.state.lastRequestId<c&&(this.getCurrentLayer()?.props.onImageLoad(c),this.setState({image:h,bounds:i,lastRequestParameters:f,lastRequestId:c}))}catch(h){this.raiseError(h,"Load image"),this.getCurrentLayer()?.props.onImageLoadError(c,h)}finally{this.state.loadCounter--}}getRequestId(){return this.state._nextRequestId++}debounce(t,r=500){clearTimeout(this.state._timeoutId),this.state._timeoutId=setTimeout(()=>t(),r)}};Oc.layerName="WMSLayer";Oc.defaultProps=OJ;var LJ={getHeight:{type:"accessor",value:0},greatCircle:!0},Mu=class extends jg{};Mu.layerName="GreatCircleLayer";Mu.defaultProps=LJ;var fL=Mu;var BJ={...Mi.defaultProps},Su=class extends qt{indexToBounds(){return null}renderLayers(){let{elevationScale:t,extruded:r,wireframe:n,filled:s,stroked:i,lineWidthUnits:o,lineWidthScale:a,lineWidthMinPixels:c,lineWidthMaxPixels:l,lineJointRounded:f,lineMiterLimit:h,lineDashJustified:u,getElevation:d,getFillColor:p,getLineColor:m,getLineWidth:g}=this.props,{updateTriggers:x,material:A,transitions:_}=this.props,y=this.getSubLayerClass("cell",Mi),{updateTriggers:T,...v}=this.indexToBounds()||{};return new y({filled:s,wireframe:n,extruded:r,elevationScale:t,stroked:i,lineWidthUnits:o,lineWidthScale:a,lineWidthMinPixels:c,lineWidthMaxPixels:l,lineJointRounded:f,lineMiterLimit:h,lineDashJustified:u,material:A,transitions:_,getElevation:d,getFillColor:p,getLineColor:m,getLineWidth:g},this.getSubLayerProps({id:"cell",updateTriggers:x&&{...T,getElevation:x.getElevation,getFillColor:x.getFillColor,getLineColor:x.getLineColor,getLineWidth:x.getLineWidth}}),v)}};Su.layerName="GeoCellLayer";Su.defaultProps=BJ;var Yn=Su;var y0=os(Mb(),1),NJ=3,FJ=30,DJ=2*FJ+1,uL=180/Math.PI;function pL(e,t,r){let n=1<<t;return[(e[0]+r[0])/n,(e[1]+r[1])/n]}function dL(e){return e>=.5?1/3*(4*e*e-1):1/3*(1-4*(1-e)*(1-e))}function mL(e){return[dL(e[0]),dL(e[1])]}function gL(e,[t,r]){switch(e){case 0:return[1,t,r];case 1:return[-t,1,r];case 2:return[-t,-r,1];case 3:return[-1,-r,-t];case 4:return[r,-1,-t];case 5:return[r,t,-1];default:throw new Error("Invalid face")}}function xL([e,t,r]){let n=Math.atan2(r,Math.sqrt(e*e+t*t));return[Math.atan2(t,e)*uL,n*uL]}function _L(e){let t=y0.default.fromString(e,!0,10).toString(2);for(;t.length<NJ+DJ;)t="0"+t;let r=t.lastIndexOf("1"),n=t.substring(0,3),s=t.substring(3,r),i=s.length/2,o=y0.default.fromString(n,!0,2).toString(10),a=y0.default.fromString(s,!0,2).toString(4);for(;a.length<i;)a="0"+a;return`${o}/${a}`}function kJ(e,t,r,n){if(n===0){r===1&&(t[0]=e-1-t[0],t[1]=e-1-t[1]);let s=t[0];t[0]=t[1],t[1]=s}}function yL(e){let t=e.split("/"),r=parseInt(t[0],10),n=t[1],s=n.length,i=[0,0],o;for(let a=s-1;a>=0;a--){o=s-a;let c=n[a],l=0,f=0;c==="1"?f=1:c==="2"?(l=1,f=1):c==="3"&&(l=1);let h=Math.pow(2,o-1);kJ(h,i,l,f),i[0]+=h*l,i[1]+=h*f}if(r%2===1){let a=i[0];i[0]=i[1],i[1]=a}return{face:r,ij:i,level:o}}var AL=os(Mb(),1);function UJ(e){let t=e.padEnd(16,"0");return AL.default.fromString(t,16)}var zJ=100;function VJ({face:e,ij:t,level:r}){let n=[[0,0],[0,1],[1,1],[1,0],[0,0]],s=Math.max(1,Math.ceil(zJ*Math.pow(2,-r))),i=new Float64Array(4*s*2+2),o=0,a=0;for(let c=0;c<4;c++){let l=n[c].slice(0),f=n[c+1],h=(f[0]-l[0])/s,u=(f[1]-l[1])/s;for(let d=0;d<s;d++){l[0]+=h,l[1]+=u;let p=pL(t,r,l),m=mL(p),g=gL(e,m),x=xL(g);Math.abs(x[1])>89.999&&(x[0]=a);let A=x[0]-a;x[0]+=A>180?-360:A<-180?360:0,i[o++]=x[0],i[o++]=x[1],a=x[0]}}return i[o++]=i[0],i[o++]=i[1],i}function WJ(e){if(typeof e=="string"){if(e.indexOf("/")>0)return e;e=UJ(e)}return _L(e.toString())}function bL(e){let t=WJ(e),r=yL(t);return VJ(r)}var HJ={getS2Token:{type:"accessor",value:e=>e.token}},Cu=class extends Yn{indexToBounds(){let{data:t,getS2Token:r}=this.props;return{data:t,_normalize:!1,positionFormat:"XY",getPolygon:(n,s)=>bL(r(n,s))}}};Cu.layerName="S2Layer";Cu.defaultProps=HJ;var TL=Cu;var Sb=512;function GJ(e,t){let r=0,n=0,s=1<<e.length,i=s/Sb;for(let o=0;o<e.length;o++){s>>=1;let a=parseInt(e[o]);a%2&&(r|=s),a>1&&(n|=s)}return[[r/i,Sb-n/i],[(r+t)/i,Sb-(n+t)/i]]}function vL(e,t=1){let[r,n]=GJ(e,t),[s,i]=Ne(r),[o,a]=Ne(n);return[o,i,o,a,s,a,s,i,o,i]}var jJ={getQuadkey:{type:"accessor",value:e=>e.quadkey}},Pu=class extends Yn{indexToBounds(){let{data:t,extruded:r,getQuadkey:n}=this.props,s=r?.99:1;return{data:t,_normalize:!1,positionFormat:"XY",getPolygon:(i,o)=>vL(n(i,o),s),updateTriggers:{getPolygon:s}}}};Pu.layerName="QuadkeyLayer";Pu.defaultProps=jJ;var EL=Pu;var Yo=class{constructor(t){this.index=t,this.isVisible=!1,this.isSelected=!1,this.parent=null,this.children=[],this.content=null,this._loader=void 0,this._abortController=null,this._loaderId=0,this._isLoaded=!1,this._isCancelled=!1,this._needsReload=!1}get bbox(){return this._bbox}set bbox(t){this._bbox||(this._bbox=t,"west"in t?this.boundingBox=[[t.west,t.south],[t.east,t.north]]:this.boundingBox=[[t.left,t.top],[t.right,t.bottom]])}get data(){return this.isLoading&&this._loader?this._loader.then(()=>this.data):this.content}get isLoaded(){return this._isLoaded&&!this._needsReload}get isLoading(){return Boolean(this._loader)&&!this._isCancelled}get needsReload(){return this._needsReload||this._isCancelled}get byteLength(){let t=this.content?this.content.byteLength:0;return Number.isFinite(t)||console.error("byteLength not defined in tile data"),t}async _loadData({getData:t,requestScheduler:r,onLoad:n,onError:s}){let{index:i,id:o,bbox:a,userData:c,zoom:l}=this,f=this._loaderId;this._abortController=new AbortController;let{signal:h}=this._abortController,u=await r.scheduleRequest(this,m=>m.isSelected?1:-1);if(!u){this._isCancelled=!0;return}if(this._isCancelled){u.done();return}let d=null,p;try{d=await t({index:i,id:o,bbox:a,userData:c,zoom:l,signal:h})}catch(m){p=m||!0}finally{u.done()}if(f===this._loaderId){if(this._loader=void 0,this.content=d,this._isCancelled&&!d){this._isLoaded=!1;return}this._isLoaded=!0,this._isCancelled=!1,p?s(p,this):n(this)}}loadData(t){return this._isLoaded=!1,this._isCancelled=!1,this._needsReload=!1,this._loaderId++,this._loader=this._loadData(t),this._loader}setNeedsReload(){this.isLoading&&(this.abort(),this._loader=void 0),this._needsReload=!0}abort(){this.isLoaded||(this._isCancelled=!0,this._abortController?.abort())}};var le={OUTSIDE:-1,INTERSECTING:0,INSIDE:1};var ML=new V,qJ=new V,wi=class{constructor(t=[0,0,0],r=[0,0,0],n){n=n||ML.copy(t).add(r).scale(.5),this.center=new V(n),this.halfDiagonal=new V(r).subtract(this.center),this.minimum=new V(t),this.maximum=new V(r)}clone(){return new wi(this.minimum,this.maximum,this.center)}equals(t){return this===t||Boolean(t)&&this.minimum.equals(t.minimum)&&this.maximum.equals(t.maximum)}transform(t){return this.center.transformAsPoint(t),this.halfDiagonal.transform(t),this.minimum.transform(t),this.maximum.transform(t),this}intersectPlane(t){let{halfDiagonal:r}=this,n=qJ.from(t.normal),s=r.x*Math.abs(n.x)+r.y*Math.abs(n.y)+r.z*Math.abs(n.z),i=this.center.dot(n)+t.distance;return i-s>0?le.INSIDE:i+s<0?le.OUTSIDE:le.INTERSECTING}distanceTo(t){return Math.sqrt(this.distanceSquaredTo(t))}distanceSquaredTo(t){let r=ML.from(t).subtract(this.center),{halfDiagonal:n}=this,s=0,i;return i=Math.abs(r.x)-n.x,i>0&&(s+=i*i),i=Math.abs(r.y)-n.y,i>0&&(s+=i*i),i=Math.abs(r.z)-n.z,i>0&&(s+=i*i),s}};var Iu=new V,SL=new V,Ci=class{constructor(t=[0,0,0],r=0){this.radius=-0,this.center=new V,this.fromCenterRadius(t,r)}fromCenterRadius(t,r){return this.center.from(t),this.radius=r,this}fromCornerPoints(t,r){return r=Iu.from(r),this.center=new V().from(t).add(r).scale(.5),this.radius=this.center.distance(r),this}equals(t){return this===t||Boolean(t)&&this.center.equals(t.center)&&this.radius===t.radius}clone(){return new Ci(this.center,this.radius)}union(t){let r=this.center,n=this.radius,s=t.center,i=t.radius,o=Iu.copy(s).subtract(r),a=o.magnitude();if(n>=a+i)return this.clone();if(i>=a+n)return t.clone();let c=(n+a+i)*.5;return SL.copy(o).scale((-n+c)/a).add(r),this.center.copy(SL),this.radius=c,this}expand(t){let n=Iu.from(t).subtract(this.center).magnitude();return n>this.radius&&(this.radius=n),this}transform(t){this.center.transform(t);let r=re.getScaling(Iu,t);return this.radius=Math.max(r[0],Math.max(r[1],r[2]))*this.radius,this}distanceSquaredTo(t){let r=this.distanceTo(t);return r*r}distanceTo(t){let n=Iu.from(t).subtract(this.center);return Math.max(0,n.len()-this.radius)}intersectPlane(t){let r=this.center,n=this.radius,i=t.normal.dot(r)+t.distance;return i<-n?le.OUTSIDE:i<n?le.INTERSECTING:le.INSIDE}};var XJ=new V,YJ=new V,A0=new V,b0=new V,T0=new V,$J=new V,KJ=new V,Is={COLUMN0ROW0:0,COLUMN0ROW1:1,COLUMN0ROW2:2,COLUMN1ROW0:3,COLUMN1ROW1:4,COLUMN1ROW2:5,COLUMN2ROW0:6,COLUMN2ROW1:7,COLUMN2ROW2:8},$o=class{constructor(t=[0,0,0],r=[0,0,0,0,0,0,0,0,0]){this.center=new V().from(t),this.halfAxes=new $t(r)}get halfSize(){let t=this.halfAxes.getColumn(0),r=this.halfAxes.getColumn(1),n=this.halfAxes.getColumn(2);return[new V(t).len(),new V(r).len(),new V(n).len()]}get quaternion(){let t=this.halfAxes.getColumn(0),r=this.halfAxes.getColumn(1),n=this.halfAxes.getColumn(2),s=new V(t).normalize(),i=new V(r).normalize(),o=new V(n).normalize();return new li().fromMatrix3(new $t([...s,...i,...o]))}fromCenterHalfSizeQuaternion(t,r,n){let s=new li(n),i=new $t().fromQuaternion(s);return i[0]=i[0]*r[0],i[1]=i[1]*r[0],i[2]=i[2]*r[0],i[3]=i[3]*r[1],i[4]=i[4]*r[1],i[5]=i[5]*r[1],i[6]=i[6]*r[2],i[7]=i[7]*r[2],i[8]=i[8]*r[2],this.center=new V().from(t),this.halfAxes=i,this}clone(){return new $o(this.center,this.halfAxes)}equals(t){return this===t||Boolean(t)&&this.center.equals(t.center)&&this.halfAxes.equals(t.halfAxes)}getBoundingSphere(t=new Ci){let r=this.halfAxes,n=r.getColumn(0,A0),s=r.getColumn(1,b0),i=r.getColumn(2,T0),o=XJ.copy(n).add(s).add(i);return t.center.copy(this.center),t.radius=o.magnitude(),t}intersectPlane(t){let r=this.center,n=t.normal,s=this.halfAxes,i=n.x,o=n.y,a=n.z,c=Math.abs(i*s[Is.COLUMN0ROW0]+o*s[Is.COLUMN0ROW1]+a*s[Is.COLUMN0ROW2])+Math.abs(i*s[Is.COLUMN1ROW0]+o*s[Is.COLUMN1ROW1]+a*s[Is.COLUMN1ROW2])+Math.abs(i*s[Is.COLUMN2ROW0]+o*s[Is.COLUMN2ROW1]+a*s[Is.COLUMN2ROW2]),l=n.dot(r)+t.distance;return l<=-c?le.OUTSIDE:l>=c?le.INSIDE:le.INTERSECTING}distanceTo(t){return Math.sqrt(this.distanceSquaredTo(t))}distanceSquaredTo(t){let r=YJ.from(t).subtract(this.center),n=this.halfAxes,s=n.getColumn(0,A0),i=n.getColumn(1,b0),o=n.getColumn(2,T0),a=s.magnitude(),c=i.magnitude(),l=o.magnitude();s.normalize(),i.normalize(),o.normalize();let f=0,h;return h=Math.abs(r.dot(s))-a,h>0&&(f+=h*h),h=Math.abs(r.dot(i))-c,h>0&&(f+=h*h),h=Math.abs(r.dot(o))-l,h>0&&(f+=h*h),f}computePlaneDistances(t,r,n=[-0,-0]){let s=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,o=this.center,a=this.halfAxes,c=a.getColumn(0,A0),l=a.getColumn(1,b0),f=a.getColumn(2,T0),h=$J.copy(c).add(l).add(f).add(o),u=KJ.copy(h).subtract(t),d=r.dot(u);return s=Math.min(d,s),i=Math.max(d,i),h.copy(o).add(c).add(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),h.copy(o).add(c).subtract(l).add(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),h.copy(o).add(c).subtract(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).add(l).add(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).add(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).subtract(l).add(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).subtract(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),n[0]=s,n[1]=i,n}transform(t){this.center.transformAsPoint(t);let r=this.halfAxes.getColumn(0,A0);r.transformAsPoint(t);let n=this.halfAxes.getColumn(1,b0);n.transformAsPoint(t);let s=this.halfAxes.getColumn(2,T0);return s.transformAsPoint(t),this.halfAxes=new $t([...r,...n,...s]),this}getTransform(){throw new Error("not implemented")}};var wL=new V,CL=new V,_n=class{constructor(t=[0,0,1],r=0){this.normal=new V,this.distance=-0,this.fromNormalDistance(t,r)}fromNormalDistance(t,r){return Nn(Number.isFinite(r)),this.normal.from(t).normalize(),this.distance=r,this}fromPointNormal(t,r){t=wL.from(t),this.normal.from(r).normalize();let n=-this.normal.dot(t);return this.distance=n,this}fromCoefficients(t,r,n,s){return this.normal.set(t,r,n),Nn(Yt(this.normal.len(),1)),this.distance=s,this}clone(){return new _n(this.normal,this.distance)}equals(t){return Yt(this.distance,t.distance)&&Yt(this.normal,t.normal)}getPointDistance(t){return this.normal.dot(t)+this.distance}transform(t){let r=CL.copy(this.normal).transformAsVector(t).normalize(),n=this.normal.scale(-this.distance).transform(t);return this.fromPointNormal(n,r)}projectPointOntoPlane(t,r=[0,0,0]){let n=wL.from(t),s=this.getPointDistance(n),i=CL.copy(this.normal).scale(s);return n.subtract(i).to(r)}};var PL=[new V([1,0,0]),new V([0,1,0]),new V([0,0,1])],IL=new V,ZJ=new V,yr=class{constructor(t=[]){this.planes=t}fromBoundingSphere(t){this.planes.length=2*PL.length;let r=t.center,n=t.radius,s=0;for(let i of PL){let o=this.planes[s],a=this.planes[s+1];o||(o=this.planes[s]=new _n),a||(a=this.planes[s+1]=new _n);let c=IL.copy(i).scale(-n).add(r);o.fromPointNormal(c,i);let l=IL.copy(i).scale(n).add(r),f=ZJ.copy(i).negate();a.fromPointNormal(l,f),s+=2}return this}computeVisibility(t){let r=le.INSIDE;for(let n of this.planes)switch(t.intersectPlane(n)){case le.OUTSIDE:return le.OUTSIDE;case le.INTERSECTING:r=le.INTERSECTING;break;default:}return r}computeVisibilityWithPlaneMask(t,r){if(Nn(Number.isFinite(r),"parentPlaneMask is required."),r===yr.MASK_OUTSIDE||r===yr.MASK_INSIDE)return r;let n=yr.MASK_INSIDE,s=this.planes;for(let i=0;i<this.planes.length;++i){let o=i<31?1<<i:0;if(i<31&&!(r&o))continue;let a=s[i],c=t.intersectPlane(a);if(c===le.OUTSIDE)return yr.MASK_OUTSIDE;c===le.INTERSECTING&&(n|=o)}return n}};yr.MASK_OUTSIDE=4294967295;yr.MASK_INSIDE=0;yr.MASK_INDETERMINATE=2147483647;var MUt=new V,SUt=new V,wUt=new V,CUt=new V,PUt=new V;var NUt=new V,FUt=new V,DUt=new V,kUt=new V,UUt=new V,zUt=new V,VUt=new V,WUt=new V,HUt=new V,GUt=new V,jUt=new V,qUt=new V;var $n=new $t,QJ=new $t,tQ=new $t,v0=new $t,RL=new $t;function Pb(e,t={}){let r=Qa.EPSILON20,n=10,s=0,i=0,o=QJ,a=tQ;o.identity(),a.copy(e);let c=r*eQ(a);for(;i<n&&rQ(a)>c;)nQ(a,v0),RL.copy(v0).transpose(),a.multiplyRight(v0),a.multiplyLeft(RL),o.multiplyRight(v0),++s>2&&(++i,s=0);return t.unitary=o.toTarget(t.unitary),t.diagonal=a.toTarget(t.diagonal),t}function eQ(e){let t=0;for(let r=0;r<9;++r){let n=e[r];t+=n*n}return Math.sqrt(t)}var wb=[1,0,0],Cb=[2,2,1];function rQ(e){let t=0;for(let r=0;r<3;++r){let n=e[$n.getElementIndex(Cb[r],wb[r])];t+=2*n*n}return Math.sqrt(t)}function nQ(e,t){let r=Qa.EPSILON15,n=0,s=1;for(let l=0;l<3;++l){let f=Math.abs(e[$n.getElementIndex(Cb[l],wb[l])]);f>n&&(s=l,n=f)}let i=wb[s],o=Cb[s],a=1,c=0;if(Math.abs(e[$n.getElementIndex(o,i)])>r){let l=e[$n.getElementIndex(o,o)],f=e[$n.getElementIndex(i,i)],h=e[$n.getElementIndex(o,i)],u=(l-f)/2/h,d;u<0?d=-1/(-u+Math.sqrt(1+u*u)):d=1/(u+Math.sqrt(1+u*u)),a=1/Math.sqrt(1+d*d),c=d*a}return $t.IDENTITY.to(t),t[$n.getElementIndex(i,i)]=t[$n.getElementIndex(o,o)]=a,t[$n.getElementIndex(o,i)]=c,t[$n.getElementIndex(i,o)]=-c,t}var Pi=new V,sQ=new V,iQ=new V,oQ=new V,aQ=new V,cQ=new $t,lQ={diagonal:new $t,unitary:new $t};function Ib(e,t=new $o){if(!e||e.length===0)return t.halfAxes=new $t([0,0,0,0,0,0,0,0,0]),t.center=new V,t;let r=e.length,n=new V(0,0,0);for(let E of e)n.add(E);let s=1/r;n.multiplyByScalar(s);let i=0,o=0,a=0,c=0,l=0,f=0;for(let E of e){let b=Pi.copy(E).subtract(n);i+=b.x*b.x,o+=b.x*b.y,a+=b.x*b.z,c+=b.y*b.y,l+=b.y*b.z,f+=b.z*b.z}i*=s,o*=s,a*=s,c*=s,l*=s,f*=s;let h=cQ;h[0]=i,h[1]=o,h[2]=a,h[3]=o,h[4]=c,h[5]=l,h[6]=a,h[7]=l,h[8]=f;let{unitary:u}=Pb(h,lQ),d=t.halfAxes.copy(u),p=d.getColumn(0,iQ),m=d.getColumn(1,oQ),g=d.getColumn(2,aQ),x=-Number.MAX_VALUE,A=-Number.MAX_VALUE,_=-Number.MAX_VALUE,y=Number.MAX_VALUE,T=Number.MAX_VALUE,v=Number.MAX_VALUE;for(let E of e)Pi.copy(E),x=Math.max(Pi.dot(p),x),A=Math.max(Pi.dot(m),A),_=Math.max(Pi.dot(g),_),y=Math.min(Pi.dot(p),y),T=Math.min(Pi.dot(m),T),v=Math.min(Pi.dot(g),v);p=p.multiplyByScalar(.5*(y+x)),m=m.multiplyByScalar(.5*(T+A)),g=g.multiplyByScalar(.5*(v+_)),t.center.copy(p).add(m).add(g);let C=sQ.set(x-y,A-T,_-v).multiplyByScalar(.5),w=new $t([C[0],0,0,0,C[1],0,0,0,C[2]]);return t.halfAxes.multiplyRight(w),t}var Lc=512,OL=3,LL=[[.5,.5],[0,0],[0,1],[1,0],[1,1]],BL=LL.concat([[0,.5],[.5,0],[1,.5],[.5,1]]),fQ=BL.concat([[.25,.5],[.75,.5]]),Ii=class{constructor(t,r,n){this.x=t,this.y=r,this.z=n}get children(){if(!this._children){let t=this.x*2,r=this.y*2,n=this.z+1;this._children=[new Ii(t,r,n),new Ii(t,r+1,n),new Ii(t+1,r,n),new Ii(t+1,r+1,n)]}return this._children}update(t){let{viewport:r,cullingVolume:n,elevationBounds:s,minZ:i,maxZ:o,bounds:a,offset:c,project:l}=t,f=this.getBoundingVolume(s,c,l);if(a&&!this.insideBounds(a)||n.computeVisibility(f)<0)return!1;if(!this.childVisible){let{z:u}=this;if(u<o&&u>=i){let d=f.distanceTo(r.cameraPosition)*r.scale/r.height;u+=Math.floor(Math.log2(d))}if(u>=o)return this.selected=!0,!0}this.selected=!1,this.childVisible=!0;for(let u of this.children)u.update(t);return!0}getSelected(t=[]){if(this.selected&&t.push(this),this._children)for(let r of this._children)r.getSelected(t);return t}insideBounds([t,r,n,s]){let i=Math.pow(2,this.z),o=Lc/i;return this.x*o<n&&this.y*o<s&&(this.x+1)*o>t&&(this.y+1)*o>r}getBoundingVolume(t,r,n){if(n){let c=this.z<1?fQ:this.z<2?BL:LL,l=[];for(let f of c){let h=E0(this.x+f[0],this.y+f[1],this.z);h[2]=t[0],l.push(n(h)),t[0]!==t[1]&&(h[2]=t[1],l.push(n(h)))}return Ib(l)}let s=Math.pow(2,this.z),i=Lc/s,o=this.x*i+r*Lc,a=Lc-(this.y+1)*i;return new wi([o,a,t[0]],[o+i,a+i,t[1]])}};function NL(e,t,r,n){let s=e instanceof gn&&e.resolution?e.projectPosition:null,i=Object.values(e.getFrustumPlanes()).map(({normal:d,distance:p})=>new _n(d.clone().negate(),p)),o=new yr(i),a=e.distanceScales.unitsPerMeter[2],c=r&&r[0]*a||0,l=r&&r[1]*a||0,f=e instanceof We&&e.pitch<=60?t:0;if(n){let[d,p,m,g]=n,x=ae([d,g]),A=ae([m,p]);n=[x[0],Lc-x[1],A[0],Lc-A[1]]}let h=new Ii(0,0,0),u={viewport:e,project:s,cullingVolume:o,elevationBounds:[c,l],minZ:f,maxZ:t,bounds:n,offset:0};if(h.update(u),e instanceof We&&e.subViewports&&e.subViewports.length>1){for(u.offset=-1;h.update(u)&&!(--u.offset<-OL););for(u.offset=1;h.update(u)&&!(++u.offset>OL););}return h.getSelected()}var Rs=512,hQ=[-1/0,-1/0,1/0,1/0],Ri={type:"object",value:null,validate:(e,t)=>t.optional&&e===null||typeof e=="string"||Array.isArray(e)&&e.every(r=>typeof r=="string"),equal:(e,t)=>{if(e===t)return!0;if(!Array.isArray(e)||!Array.isArray(t))return!1;let r=e.length;if(r!==t.length)return!1;for(let n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0}};function DL(e,t){let r=[t.transformAsPoint([e[0],e[1]]),t.transformAsPoint([e[2],e[1]]),t.transformAsPoint([e[0],e[3]]),t.transformAsPoint([e[2],e[3]])];return[Math.min(...r.map(s=>s[0])),Math.min(...r.map(s=>s[1])),Math.max(...r.map(s=>s[0])),Math.max(...r.map(s=>s[1]))]}function uQ(e){return Math.abs(e.split("").reduce((t,r)=>(t<<5)-t+r.charCodeAt(0)|0,0))}function Kn(e,t){if(!e||!e.length)return null;let{index:r,id:n}=t;if(Array.isArray(e)){let i=uQ(n)%e.length;e=e[i]}let s=e;for(let i of Object.keys(r)){let o=new RegExp(`{${i}}`,"g");s=s.replace(o,String(r[i]))}return Number.isInteger(r.y)&&Number.isInteger(r.z)&&(s=s.replace(/\{-y\}/g,String(Math.pow(2,r.z)-r.y-1))),s}function dQ(e,t,r){let n;if(t&&t.length===2){let[s,i]=t,o=e.getBounds({z:s}),a=e.getBounds({z:i});n=[Math.min(o[0],a[0]),Math.min(o[1],a[1]),Math.max(o[2],a[2]),Math.max(o[3],a[3])]}else n=e.getBounds();return e.isGeospatial?[Math.max(n[0],r[0]),Math.max(n[1],r[1]),Math.min(n[2],r[2]),Math.min(n[3],r[3])]:[Math.max(Math.min(n[0],r[2]),r[0]),Math.max(Math.min(n[1],r[3]),r[1]),Math.min(Math.max(n[2],r[0]),r[2]),Math.min(Math.max(n[3],r[1]),r[3])]}function kL({viewport:e,z:t,cullRect:r}){return(e.subViewports||[e]).map(s=>Rb(s,t||0,r))}function Rb(e,t,r){if(!Array.isArray(t)){let i=r.x-e.x,o=r.y-e.y,{width:a,height:c}=r,l={targetZ:t},f=e.unproject([i,o],l),h=e.unproject([i+a,o],l),u=e.unproject([i,o+c],l),d=e.unproject([i+a,o+c],l);return[Math.min(f[0],h[0],u[0],d[0]),Math.min(f[1],h[1],u[1],d[1]),Math.max(f[0],h[0],u[0],d[0]),Math.max(f[1],h[1],u[1],d[1])]}let n=Rb(e,t[0],r),s=Rb(e,t[1],r);return[Math.min(n[0],s[0]),Math.min(n[1],s[1]),Math.max(n[2],s[2]),Math.max(n[3],s[3])]}function pQ(e,t,r){return r?DL(e,r).map(s=>s*t/Rs):e.map(n=>n*t/Rs)}function Ob(e,t){return Math.pow(2,e)*Rs/t}function E0(e,t,r){let n=Ob(r,Rs),s=e/n*360-180,i=Math.PI-2*Math.PI*t/n,o=180/Math.PI*Math.atan(.5*(Math.exp(i)-Math.exp(-i)));return[s,o]}function FL(e,t,r,n){let s=Ob(r,n);return[e/s*Rs,t/s*Rs]}function Lb(e,t,r,n,s=Rs){if(e.isGeospatial){let[l,f]=E0(t,r,n),[h,u]=E0(t+1,r+1,n);return{west:l,north:f,east:h,south:u}}let[i,o]=FL(t,r,n,s),[a,c]=FL(t+1,r+1,n,s);return{left:i,top:o,right:a,bottom:c}}function mQ(e,t,r,n,s){let i=dQ(e,null,n),o=Ob(t,r),[a,c,l,f]=pQ(i,o,s),h=[];for(let u=Math.floor(a);u<l;u++)for(let d=Math.floor(c);d<f;d++)h.push({x:u,y:d,z:t});return h}function Bb({viewport:e,maxZoom:t,minZoom:r,zRange:n,extent:s,tileSize:i=Rs,modelMatrix:o,modelMatrixInverse:a,zoomOffset:c=0}){let l=e.isGeospatial?Math.round(e.zoom+Math.log2(Rs/i))+c:Math.ceil(e.zoom)+c;if(typeof r=="number"&&Number.isFinite(r)&&l<r){if(!s)return[];l=r}typeof t=="number"&&Number.isFinite(t)&&l>t&&(l=t);let f=s;return o&&a&&s&&!e.isGeospatial&&(f=DL(s,o)),e.isGeospatial?NL(e,l,n,s):mQ(e,l,i,f||hQ,a)}function Nb(e){return/(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(e)}function Fb(e){return Number.isFinite(e.west)&&Number.isFinite(e.north)&&Number.isFinite(e.east)&&Number.isFinite(e.south)}function UL(e){let t={},r;return n=>{for(let s in n)if(!gQ(n[s],t[s])){r=e(n),t=n;break}return r}}function gQ(e,t){if(e===t)return!0;if(Array.isArray(e)){let r=e.length;if(!t||t.length!==r)return!1;for(let n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0}return!1}var zL=1,M0=2,xQ="never",_Q="no-overlap",Ru="best-available",yQ=5,AQ={[Ru]:TQ,[_Q]:vQ,[xQ]:()=>{}},bQ={extent:null,tileSize:512,maxZoom:null,minZoom:null,maxCacheSize:null,maxCacheByteSize:null,refinementStrategy:"best-available",zRange:null,maxRequests:6,debounceTime:0,zoomOffset:0,onTileLoad:()=>{},onTileUnload:()=>{},onTileError:()=>{}},Ko=class{constructor(t){this._getCullBounds=UL(kL),this.opts={...bQ,...t},this.setOptions(this.opts),this.onTileLoad=r=>{this.opts.onTileLoad?.(r),this.opts.maxCacheByteSize!==null&&(this._cacheByteSize+=r.byteLength,this._resizeCache())},this._requestScheduler=new Ys({throttleRequests:this.opts.maxRequests>0||this.opts.debounceTime>0,maxRequests:this.opts.maxRequests,debounceTime:this.opts.debounceTime}),this._cache=new Map,this._tiles=[],this._dirty=!1,this._cacheByteSize=0,this._viewport=null,this._zRange=null,this._selectedTiles=null,this._frameNumber=0,this._modelMatrix=new rt,this._modelMatrixInverse=new rt}get tiles(){return this._tiles}get selectedTiles(){return this._selectedTiles}get isLoaded(){return this._selectedTiles!==null&&this._selectedTiles.every(t=>t.isLoaded)}get needsReload(){return this._selectedTiles!==null&&this._selectedTiles.some(t=>t.needsReload)}setOptions(t){Object.assign(this.opts,t),Number.isFinite(t.maxZoom)&&(this._maxZoom=Math.floor(t.maxZoom)),Number.isFinite(t.minZoom)&&(this._minZoom=Math.ceil(t.minZoom))}finalize(){for(let t of this._cache.values())t.isLoading&&t.abort();this._cache.clear(),this._tiles=[],this._selectedTiles=null}reloadAll(){for(let t of this._cache.keys()){let r=this._cache.get(t);!this._selectedTiles||!this._selectedTiles.includes(r)?this._cache.delete(t):r.setNeedsReload()}}update(t,{zRange:r,modelMatrix:n}={zRange:null,modelMatrix:null}){let s=n?new rt(n):new rt,i=!s.equals(this._modelMatrix);if(!this._viewport||!t.equals(this._viewport)||!Yt(this._zRange,r)||i){i&&(this._modelMatrixInverse=s.clone().invert(),this._modelMatrix=s),this._viewport=t,this._zRange=r;let a=this.getTileIndices({viewport:t,maxZoom:this._maxZoom,minZoom:this._minZoom,zRange:r,modelMatrix:this._modelMatrix,modelMatrixInverse:this._modelMatrixInverse});this._selectedTiles=a.map(c=>this._getTile(c,!0)),this._dirty&&this._rebuildTree()}else this.needsReload&&(this._selectedTiles=this._selectedTiles.map(a=>this._getTile(a.index,!0)));let o=this.updateTileStates();return this._pruneRequests(),this._dirty&&this._resizeCache(),o&&this._frameNumber++,this._frameNumber}isTileVisible(t,r){if(!t.isVisible)return!1;if(r&&this._viewport){let n=this._getCullBounds({viewport:this._viewport,z:this._zRange,cullRect:r}),{bbox:s}=t;for(let[i,o,a,c]of n){let l;if("west"in s)l=s.west<a&&s.east>i&&s.south<c&&s.north>o;else{let f=Math.min(s.top,s.bottom),h=Math.max(s.top,s.bottom);l=s.left<a&&s.right>i&&f<c&&h>o}if(l)return!0}return!1}return!0}getTileIndices({viewport:t,maxZoom:r,minZoom:n,zRange:s,modelMatrix:i,modelMatrixInverse:o}){let{tileSize:a,extent:c,zoomOffset:l}=this.opts;return Bb({viewport:t,maxZoom:r,minZoom:n,zRange:s,tileSize:a,extent:c,modelMatrix:i,modelMatrixInverse:o,zoomOffset:l})}getTileId(t){return`${t.x}-${t.y}-${t.z}`}getTileZoom(t){return t.z}getTileMetadata(t){let{tileSize:r}=this.opts;return{bbox:Lb(this._viewport,t.x,t.y,t.z,r)}}getParentIndex(t){let r=Math.floor(t.x/2),n=Math.floor(t.y/2),s=t.z-1;return{x:r,y:n,z:s}}updateTileStates(){let t=this.opts.refinementStrategy||Ru,r=new Array(this._cache.size),n=0;for(let s of this._cache.values())r[n++]=s.isVisible,s.isSelected=!1,s.isVisible=!1;for(let s of this._selectedTiles)s.isSelected=!0,s.isVisible=!0;(typeof t=="function"?t:AQ[t])(Array.from(this._cache.values())),n=0;for(let s of this._cache.values())if(r[n++]!==s.isVisible)return!0;return!1}_pruneRequests(){let{maxRequests:t=0}=this.opts,r=[],n=0;for(let s of this._cache.values())s.isLoading&&(n++,!s.isSelected&&!s.isVisible&&r.push(s));for(;t>0&&n>t&&r.length>0;)r.shift().abort(),n--}_rebuildTree(){let{_cache:t}=this;for(let r of t.values())r.parent=null,r.children&&(r.children.length=0);for(let r of t.values()){let n=this._getNearestAncestor(r);r.parent=n,n?.children&&n.children.push(r)}}_resizeCache(){let{_cache:t,opts:r}=this,n=r.maxCacheSize??(r.maxCacheByteSize!==null?1/0:yQ*this.selectedTiles.length),s=r.maxCacheByteSize??1/0;if(t.size>n||this._cacheByteSize>s){for(let[o,a]of t)if(!a.isVisible&&!a.isSelected&&(this._cacheByteSize-=r.maxCacheByteSize!==null?a.byteLength:0,t.delete(o),this.opts.onTileUnload?.(a)),t.size<=n&&this._cacheByteSize<=s)break;this._rebuildTree(),this._dirty=!0}this._dirty&&(this._tiles=Array.from(this._cache.values()).sort((o,a)=>o.zoom-a.zoom),this._dirty=!1)}_getTile(t,r){let n=this.getTileId(t),s=this._cache.get(n),i=!1;return!s&&r?(s=new Yo(t),Object.assign(s,this.getTileMetadata(s.index)),Object.assign(s,{id:n,zoom:this.getTileZoom(s.index)}),i=!0,this._cache.set(n,s),this._dirty=!0):s&&s.needsReload&&(i=!0),s&&i&&s.loadData({getData:this.opts.getTileData,requestScheduler:this._requestScheduler,onLoad:this.onTileLoad,onError:this.opts.onTileError}),s}_getNearestAncestor(t){let{_minZoom:r=0}=this,n=t.index;for(;this.getTileZoom(n)>r;){n=this.getParentIndex(n);let s=this._getTile(n);if(s)return s}return null}};function TQ(e){for(let t of e)t.state=0;for(let t of e)t.isSelected&&!VL(t)&&Db(t);for(let t of e)t.isVisible=Boolean(t.state&M0)}function vQ(e){for(let r of e)r.state=0;for(let r of e)r.isSelected&&VL(r);let t=Array.from(e).sort((r,n)=>r.zoom-n.zoom);for(let r of t)if(r.isVisible=Boolean(r.state&M0),r.children&&(r.isVisible||r.state&zL))for(let n of r.children)n.state=zL;else r.isSelected&&Db(r)}function VL(e){let t=e;for(;t;){if(t.isLoaded||t.content)return t.state|=M0,!0;t=t.parent}return!1}function Db(e){for(let t of e.children)t.isLoaded||t.content?t.state|=M0:Db(t)}var EQ={TilesetClass:Ko,data:{type:"data",value:[]},dataComparator:Ri.equal,renderSubLayers:{type:"function",value:e=>new Go(e)},getTileData:{type:"function",optional:!0,value:null},onViewportLoad:{type:"function",optional:!0,value:null},onTileLoad:{type:"function",value:e=>{}},onTileUnload:{type:"function",value:e=>{}},onTileError:{type:"function",value:e=>console.error(e)},extent:{type:"array",optional:!0,value:null,compare:!0},tileSize:512,maxZoom:null,minZoom:0,maxCacheSize:null,maxCacheByteSize:null,refinementStrategy:Ru,zRange:null,maxRequests:6,debounceTime:0,zoomOffset:0},Ou=class extends qt{initializeState(){this.state={tileset:null,isLoaded:!1}}finalizeState(){this.state?.tileset?.finalize()}get isLoaded(){return Boolean(this.state?.tileset?.selectedTiles?.every(t=>t.isLoaded&&t.layers&&t.layers.every(r=>r.isLoaded)))}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState({changeFlags:t}){let{tileset:r}=this.state,n=t.propsOrDataChanged||t.updateTriggersChanged,s=t.dataChanged||t.updateTriggersChanged&&(t.updateTriggersChanged.all||t.updateTriggersChanged.getTileData);r?n&&(r.setOptions(this._getTilesetOptions()),s?r.reloadAll():r.tiles.forEach(i=>{i.layers=null})):(r=new this.props.TilesetClass(this._getTilesetOptions()),this.setState({tileset:r})),this._updateTileset()}_getTilesetOptions(){let{tileSize:t,maxCacheSize:r,maxCacheByteSize:n,refinementStrategy:s,extent:i,maxZoom:o,minZoom:a,maxRequests:c,debounceTime:l,zoomOffset:f}=this.props;return{maxCacheSize:r,maxCacheByteSize:n,maxZoom:o,minZoom:a,tileSize:t,refinementStrategy:s,extent:i,maxRequests:c,debounceTime:l,zoomOffset:f,getTileData:this.getTileData.bind(this),onTileLoad:this._onTileLoad.bind(this),onTileError:this._onTileError.bind(this),onTileUnload:this._onTileUnload.bind(this)}}_updateTileset(){let t=this.state.tileset,{zRange:r,modelMatrix:n}=this.props,s=t.update(this.context.viewport,{zRange:r,modelMatrix:n}),{isLoaded:i}=t,o=this.state.isLoaded!==i,a=this.state.frameNumber!==s;i&&(o||a)&&this._onViewportLoad(),a&&this.setState({frameNumber:s}),this.state.isLoaded=i}_onViewportLoad(){let{tileset:t}=this.state,{onViewportLoad:r}=this.props;r&&r(t.selectedTiles)}_onTileLoad(t){this.props.onTileLoad(t),t.layers=null,this.setNeedsUpdate()}_onTileError(t,r){this.props.onTileError(t),r.layers=null,this.setNeedsUpdate()}_onTileUnload(t){this.props.onTileUnload(t)}getTileData(t){let{data:r,getTileData:n,fetch:s}=this.props,{signal:i}=t;return t.url=typeof r=="string"||Array.isArray(r)?Kn(r,t):null,n?n(t):s&&t.url?s(t.url,{propName:"data",layer:this,signal:i}):null}renderSubLayers(t){return this.props.renderSubLayers(t)}getSubLayerPropsByTile(t){return null}getPickingInfo(t){let r=t.sourceLayer,n=r.props.tile,s=t.info;return s.picked&&(s.tile=n),s.sourceTile=n,s.sourceTileSubLayer=r,s}_updateAutoHighlight(t){t.sourceTileSubLayer.updateAutoHighlight(t)}renderLayers(){return this.state.tileset.tiles.map(t=>{let r=this.getSubLayerPropsByTile(t);if(!(!t.isLoaded&&!t.content))if(t.layers)r&&t.layers[0]&&Object.keys(r).some(n=>t.layers[0].props[n]!==r[n])&&(t.layers=t.layers.map(n=>n.clone(r)));else{let n=this.renderSubLayers({...this.props,...this.getSubLayerProps({id:t.id,updateTriggers:this.props.updateTriggers}),data:t.content,_offset:0,tile:t});t.layers=sr(n,Boolean).map(s=>s.clone({tile:t,...r}))}return t.layers})}filterSubLayer({layer:t,cullRect:r}){let{tile:n}=t.props;return this.state.tileset.isTileVisible(n,r)}};Ou.defaultProps=EQ;Ou.layerName="TileLayer";var Zo=Ou;var WL=`uniform tripsUniforms {
  bool fadeTrail;
  float trailLength;
  float currentTime;
} trips;
`,HL={name:"trips",vs:WL,fs:WL,uniformTypes:{fadeTrail:"f32",trailLength:"f32",currentTime:"f32"}};var MQ={fadeTrail:!0,trailLength:{type:"number",value:120,min:0},currentTime:{type:"number",value:0,min:0},getTimestamps:{type:"accessor",value:e=>e.timestamps}},Lu=class extends Xn{getShaders(){let t=super.getShaders();return t.inject={"vs:#decl":`in float instanceTimestamps;
in float instanceNextTimestamps;
out float vTime;
`,"vs:#main-end":`vTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;
`,"fs:#decl":`in float vTime;
`,"fs:#main-start":`if(vTime > trips.currentTime || (trips.fadeTrail && (vTime < trips.currentTime - trips.trailLength))) {
  discard;
}
`,"fs:DECKGL_FILTER_COLOR":`if(trips.fadeTrail) {
  color.a *= 1.0 - (trips.currentTime - vTime) / trips.trailLength;
}
`},t.modules=[...t.modules,HL],t}initializeState(){super.initializeState(),this.getAttributeManager().addInstanced({timestamps:{size:1,accessor:"getTimestamps",shaderAttributes:{instanceTimestamps:{vertexOffset:0},instanceNextTimestamps:{vertexOffset:1}}}})}draw(t){let{fadeTrail:r,trailLength:n,currentTime:s}=this.props,i={fadeTrail:r,trailLength:n,currentTime:s};this.state.model.shaderInputs.setProps({trips:i}),super.draw(t)}};Lu.layerName="TripsLayer";Lu.defaultProps=MQ;var jL=Lu;var $L=os(Bu(),1);var jr=os(Bu(),1);var Nu=os(Bu(),1);function S0(e,t){t=t===void 0?e[0][0]:t;for(let r of e){let n=r[0]-t;n>180?r[0]-=360:n<-180&&(r[0]+=360)}}function SQ(e,t,r){let[n,s]=(0,Nu.cellToLatLng)(e),i=t.length;S0(t,s);let o=t[0]===t[i-1]?i-1:i;for(let a=0;a<o;a++)t[a][0]=be(s,t[a][0],r),t[a][1]=be(n,t[a][1],r)}function XL(e,t,r){let n=e(t,r),[s,i]=(0,Nu.cellToLatLng)(n);return[i,s]}function kb(e,t=1){let r=(0,Nu.cellToBoundary)(e,!0);return t!==1?SQ(e,r,t):S0(r),r}function YL(e){let t=new Float64Array(e.length*2),r=0;for(let n of e)t[r++]=n[0],t[r++]=n[1];return t}var wQ=10;function CQ(e,t){let r;return e==null?r=t:typeof e=="object"?r={...e,coverage:t}:r={getHexagon:e,coverage:t},r}var PQ={...Mi.defaultProps,highPrecision:"auto",coverage:{type:"number",min:0,max:1,value:1},centerHexagon:null,getHexagon:{type:"accessor",value:e=>e.hexagon},extruded:!0},Oi=class extends qt{initializeState(){Oi._checkH3Lib(),this.state={edgeLengthKM:0,resolution:-1}}shouldUpdateState({changeFlags:t}){return this._shouldUseHighPrecision()?t.propsOrDataChanged:t.somethingChanged}updateState({props:t,changeFlags:r}){if(t.highPrecision!==!0&&(r.dataChanged||r.updateTriggersChanged&&r.updateTriggersChanged.getHexagon)){let n=this._calculateH3DataProps();this.setState(n)}this._updateVertices(this.context.viewport)}_calculateH3DataProps(){let t=-1,r=!1,n=!1,{iterable:s,objectInfo:i}=ie(this.props.data);for(let o of s){i.index++;let a=this.props.getHexagon(o,i),c=(0,jr.getResolution)(a);if(t<0){if(t=c,!this.props.highPrecision)break}else if(t!==c){n=!0;break}if((0,jr.isPentagon)(a)){r=!0;break}}return{resolution:t,edgeLengthKM:t>=0?(0,jr.getHexagonEdgeLengthAvg)(t,"km"):0,hasMultipleRes:n,hasPentagon:r}}_shouldUseHighPrecision(){if(this.props.highPrecision==="auto"){let{resolution:t,hasPentagon:r,hasMultipleRes:n}=this.state,{viewport:s}=this.context;return Boolean(s?.resolution)||n||r||t>=0&&t<=5}return this.props.highPrecision}_updateVertices(t){if(this._shouldUseHighPrecision())return;let{resolution:r,edgeLengthKM:n,centerHex:s}=this.state;if(r<0)return;let i=this.props.centerHexagon||(0,jr.latLngToCell)(t.latitude,t.longitude,r);if(s===i)return;if(s)try{if((0,jr.gridDistance)(s,i)*n<wQ)return}catch{}let{unitsPerMeter:o}=t.distanceScales,a=kb(i),[c,l]=(0,jr.cellToLatLng)(i),[f,h]=t.projectFlat([l,c]);a=a.map(u=>{let d=t.projectFlat(u);return[(d[0]-f)/o[0],(d[1]-h)/o[1]]}),this.setState({centerHex:i,vertices:a})}renderLayers(){return this._shouldUseHighPrecision()?this._renderPolygonLayer():this._renderColumnLayer()}_getForwardProps(){let{elevationScale:t,material:r,coverage:n,extruded:s,wireframe:i,stroked:o,filled:a,lineWidthUnits:c,lineWidthScale:l,lineWidthMinPixels:f,lineWidthMaxPixels:h,getFillColor:u,getElevation:d,getLineColor:p,getLineWidth:m,transitions:g,updateTriggers:x}=this.props;return{elevationScale:t,extruded:s,coverage:n,wireframe:i,stroked:o,filled:a,lineWidthUnits:c,lineWidthScale:l,lineWidthMinPixels:f,lineWidthMaxPixels:h,material:r,getElevation:d,getFillColor:u,getLineColor:p,getLineWidth:m,transitions:g,updateTriggers:{getFillColor:x.getFillColor,getElevation:x.getElevation,getLineColor:x.getLineColor,getLineWidth:x.getLineWidth}}}_renderPolygonLayer(){let{data:t,getHexagon:r,updateTriggers:n,coverage:s}=this.props,i=this.getSubLayerClass("hexagon-cell-hifi",Mi),o=this._getForwardProps();return o.updateTriggers.getPolygon=CQ(n.getHexagon,s),new i(o,this.getSubLayerProps({id:"hexagon-cell-hifi",updateTriggers:o.updateTriggers}),{data:t,_normalize:!1,_windingOrder:"CCW",positionFormat:"XY",getPolygon:(a,c)=>{let l=r(a,c);return YL(kb(l,s))}})}_renderColumnLayer(){let{data:t,getHexagon:r,updateTriggers:n}=this.props,s=this.getSubLayerClass("hexagon-cell",qn),i=this._getForwardProps();return i.updateTriggers.getPosition=n.getHexagon,new s(i,this.getSubLayerProps({id:"hexagon-cell",flatShading:!0,updateTriggers:i.updateTriggers}),{data:t,diskResolution:6,radius:1,vertices:this.state.vertices,getPosition:XL.bind(null,r)})}};Oi.defaultProps=PQ;Oi.layerName="H3HexagonLayer";Oi._checkH3Lib=()=>{};var Bc=Oi;var IQ={getHexagons:{type:"accessor",value:e=>e.hexagons}},Fu=class extends Yn{initializeState(){Bc._checkH3Lib()}updateState({props:t,changeFlags:r}){if(r.dataChanged||r.updateTriggersChanged&&r.updateTriggersChanged.getHexagons){let{data:n,getHexagons:s}=t,i=[],{iterable:o,objectInfo:a}=ie(n);for(let c of o){a.index++;let l=s(c,a),f=(0,$L.cellsToMultiPolygon)(l,!0);for(let h of f){for(let u of h)S0(u);i.push(this.getSubLayerRow({polygon:h},c,a.index))}}this.setState({polygons:i})}}indexToBounds(){let{getElevation:t,getFillColor:r,getLineColor:n,getLineWidth:s}=this.props;return{data:this.state.polygons,getPolygon:i=>i.polygon,getElevation:this.getSubLayerAccessor(t),getFillColor:this.getSubLayerAccessor(r),getLineColor:this.getSubLayerAccessor(n),getLineWidth:this.getSubLayerAccessor(s)}}};Fu.layerName="H3ClusterLayer";Fu.defaultProps=IQ;var KL=Fu;var Ub=Math.PI/180,w0=new Float32Array(16),ZL=new Float32Array(12);function JL(e,t,r){let n=t[0]*Ub,s=t[1]*Ub,i=t[2]*Ub,o=Math.sin(i),a=Math.sin(n),c=Math.sin(s),l=Math.cos(i),f=Math.cos(n),h=Math.cos(s),u=r[0],d=r[1],p=r[2];e[0]=u*h*f,e[1]=u*c*f,e[2]=u*-a,e[3]=d*(-c*l+h*a*o),e[4]=d*(h*l+c*a*o),e[5]=d*f*o,e[6]=p*(c*o+h*a*l),e[7]=p*(-h*o+c*a*l),e[8]=p*f*l}function QL(e){return e[0]=e[0],e[1]=e[1],e[2]=e[2],e[3]=e[4],e[4]=e[5],e[5]=e[6],e[6]=e[8],e[7]=e[9],e[8]=e[10],e[9]=e[12],e[10]=e[13],e[11]=e[14],e.subarray(0,12)}var C0={size:12,accessor:["getOrientation","getScale","getTranslation","getTransformMatrix"],shaderAttributes:{instanceModelMatrixCol0:{size:3,elementOffset:0},instanceModelMatrixCol1:{size:3,elementOffset:3},instanceModelMatrixCol2:{size:3,elementOffset:6},instanceTranslation:{size:3,elementOffset:9}},update(e,{startRow:t,endRow:r}){let{data:n,getOrientation:s,getScale:i,getTranslation:o,getTransformMatrix:a}=this.props,c=Array.isArray(a),l=c&&a.length===16,f=Array.isArray(i),h=Array.isArray(s),u=Array.isArray(o),d=l||!c&&Boolean(a(n[0]));d?e.constant=l:e.constant=h&&f&&u;let p=e.value;if(e.constant){let m;d?(w0.set(a),m=QL(w0)):(m=ZL,JL(m,s,i),m.set(o,9)),e.value=new Float32Array(m)}else{let m=t*e.size,{iterable:g,objectInfo:x}=ie(n,t,r);for(let A of g){x.index++;let _;if(d)w0.set(l?a:a(A,x)),_=QL(w0);else{_=ZL;let y=h?s:s(A,x),T=f?i:i(A,x);JL(_,y,T),_.set(u?o:o(A,x),9)}p[m++]=_[0],p[m++]=_[1],p[m++]=_[2],p[m++]=_[3],p[m++]=_[4],p[m++]=_[5],p[m++]=_[6],p[m++]=_[7],p[m++]=_[8],p[m++]=_[9],p[m++]=_[10],p[m++]=_[11]}}}};function P0(e,t){return t===q.CARTESIAN||t===q.METER_OFFSETS||t===q.DEFAULT&&!e.isGeospatial}var t4=`uniform simpleMeshUniforms {
  float sizeScale;
  bool composeModelMatrix;
  bool hasTexture;
  bool flatShading;
} simpleMesh;
`,e4={name:"simpleMesh",vs:t4,fs:t4,uniformTypes:{sizeScale:"f32",composeModelMatrix:"f32",hasTexture:"f32",flatShading:"f32"}};var r4=`#version 300 es
#define SHADER_NAME simple-mesh-layer-vs
in vec3 positions;
in vec3 normals;
in vec3 colors;
in vec2 texCoords;
in vec3 instancePositions;
in vec3 instancePositions64Low;
in vec4 instanceColors;
in vec3 instancePickingColors;
in vec3 instanceModelMatrixCol0;
in vec3 instanceModelMatrixCol1;
in vec3 instanceModelMatrixCol2;
in vec3 instanceTranslation;
out vec2 vTexCoord;
out vec3 cameraPosition;
out vec3 normals_commonspace;
out vec4 position_commonspace;
out vec4 vColor;
void main(void) {
geometry.worldPosition = instancePositions;
geometry.uv = texCoords;
geometry.pickingColor = instancePickingColors;
vTexCoord = texCoords;
cameraPosition = project.cameraPosition;
vColor = vec4(colors * instanceColors.rgb, instanceColors.a);
mat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);
vec3 pos = (instanceModelMatrix * positions) * simpleMesh.sizeScale + instanceTranslation;
if (simpleMesh.composeModelMatrix) {
DECKGL_FILTER_SIZE(pos, geometry);
normals_commonspace = project_normal(instanceModelMatrix * normals);
geometry.worldPosition += pos;
gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);
geometry.position = position_commonspace;
}
else {
pos = project_size(pos);
DECKGL_FILTER_SIZE(pos, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);
geometry.position = position_commonspace;
normals_commonspace = project_normal(instanceModelMatrix * normals);
}
geometry.normal = normals_commonspace;
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var n4=`#version 300 es
#define SHADER_NAME simple-mesh-layer-fs
precision highp float;
uniform sampler2D sampler;
in vec2 vTexCoord;
in vec3 cameraPosition;
in vec3 normals_commonspace;
in vec4 position_commonspace;
in vec4 vColor;
out vec4 fragColor;
void main(void) {
geometry.uv = vTexCoord;
vec3 normal;
if (simpleMesh.flatShading) {
normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));
} else {
normal = normals_commonspace;
}
vec4 color = simpleMesh.hasTexture ? texture(sampler, vTexCoord) : vColor;
DECKGL_FILTER_COLOR(color, geometry);
vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);
fragColor = vec4(lightColor, color.a * layer.opacity);
}
`;function zb(e){let t=e.positions||e.POSITION;W.assert(t,'no "postions" or "POSITION" attribute in mesh');let r=t.value.length/t.size,n=e.COLOR_0||e.colors;n||(n={size:3,value:new Float32Array(r*3).fill(1)});let s=e.NORMAL||e.normals;s||(s={size:3,value:new Float32Array(r*3).fill(0)});let i=e.TEXCOORD_0||e.texCoords;return i||(i={size:2,value:new Float32Array(r*2).fill(0)}),{positions:t,colors:n,normals:s,texCoords:i}}function s4(e){return e instanceof ht?(e.attributes=zb(e.attributes),e):e.attributes?new ht({...e,topology:"triangle-list",attributes:zb(e.attributes)}):new ht({topology:"triangle-list",attributes:zb(e)})}var RQ=[0,0,0,255],OQ={mesh:{type:"object",value:null,async:!0},texture:{type:"image",value:null,async:!0},sizeScale:{type:"number",value:1,min:0},_instanced:!0,wireframe:!1,material:!0,getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:RQ},getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]},textureParameters:{type:"object",ignore:!0,value:null}},Du=class extends _t{getShaders(){return super.getShaders({vs:r4,fs:n4,modules:[ft,tc,Pt,e4]})}getBounds(){if(this.props._instanced)return super.getBounds();let t=this.state.positionBounds;if(t)return t;let{mesh:r}=this.props;if(!r)return null;if(t=r.header?.boundingBox,!t){let{attributes:n}=s4(r);n.POSITION=n.POSITION||n.positions,t=cs(n)}return this.state.positionBounds=t,t}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{transition:!0,type:"float64",fp64:this.use64bitPositions(),size:3,accessor:"getPosition"},instanceColors:{type:"unorm8",transition:!0,size:this.props.colorFormat.length,accessor:"getColor",defaultValue:[0,0,0,255]},instanceModelMatrix:C0}),this.setState({emptyTexture:this.context.device.createTexture({data:new Uint8Array(4),width:1,height:1})})}updateState(t){super.updateState(t);let{props:r,oldProps:n,changeFlags:s}=t;if(r.mesh!==n.mesh||s.extensionsChanged){if(this.state.positionBounds=null,this.state.model?.destroy(),r.mesh){this.state.model=this.getModel(r.mesh);let i=r.mesh.attributes||r.mesh;this.setState({hasNormals:Boolean(i.NORMAL||i.normals)})}this.getAttributeManager().invalidateAll()}r.texture!==n.texture&&r.texture instanceof at&&this.setTexture(r.texture),this.state.model&&this.state.model.setTopology(this.props.wireframe?"line-strip":"triangle-list")}finalizeState(t){super.finalizeState(t),this.state.emptyTexture.delete()}draw({uniforms:t}){let{model:r}=this.state;if(!r)return;let{viewport:n,renderPass:s}=this.context,{sizeScale:i,coordinateSystem:o,_instanced:a}=this.props,c={sizeScale:i,composeModelMatrix:!a||P0(n,o),flatShading:!this.state.hasNormals};r.shaderInputs.setProps({simpleMesh:c}),r.draw(s)}get isLoaded(){return Boolean(this.state?.model&&super.isLoaded)}getModel(t){let r=new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:s4(t),isInstanced:!0}),{texture:n}=this.props,{emptyTexture:s}=this.state,i={sampler:n||s,hasTexture:Boolean(n)};return r.shaderInputs.setProps({simpleMesh:i}),r}setTexture(t){let{emptyTexture:r,model:n}=this.state;if(n){let s={sampler:t||r,hasTexture:Boolean(t)};n.shaderInputs.setProps({simpleMesh:s})}}};Du.defaultProps=OQ;Du.layerName="SimpleMeshLayer";var Jo=Du;var yn;(function(e){e[e.FUNC_ADD=32774]="FUNC_ADD",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",e[e.LINEAR=9729]="LINEAR",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL"})(yn||(yn={}));function Uu(e,t,r,n){let s={defines:{MANUAL_SRGB:1,SRGB_FAST_APPROXIMATION:1},bindings:{},uniforms:{camera:[0,0,0],metallicRoughnessValues:[1,1]},parameters:{},glParameters:{},generatedTextures:[]};s.defines.USE_TEX_LOD=1;let{imageBasedLightingEnvironment:i}=n;return i&&(s.bindings.pbr_diffuseEnvSampler=i.diffuseEnvSampler.texture,s.bindings.pbr_specularEnvSampler=i.specularEnvSampler.texture,s.bindings.pbr_BrdfLUT=i.brdfLutTexture.texture,s.uniforms.scaleIBLAmbient=[1,1]),n?.pbrDebug&&(s.defines.PBR_DEBUG=1,s.uniforms.scaleDiffBaseMR=[0,0,0,0],s.uniforms.scaleFGDSpec=[0,0,0,0]),r.NORMAL&&(s.defines.HAS_NORMALS=1),r.TANGENT&&n?.useTangents&&(s.defines.HAS_TANGENTS=1),r.TEXCOORD_0&&(s.defines.HAS_UV=1),n?.imageBasedLightingEnvironment&&(s.defines.USE_IBL=1),n?.lights&&(s.defines.USE_LIGHTS=1),t&&LQ(e,t,s),s}function LQ(e,t,r){if(r.uniforms.unlit=Boolean(t.unlit),t.pbrMetallicRoughness&&BQ(e,t.pbrMetallicRoughness,r),t.normalTexture){ku(e,t.normalTexture,"pbr_normalSampler","HAS_NORMALMAP",r);let{scale:n=1}=t.normalTexture;r.uniforms.normalScale=n}if(t.occlusionTexture){ku(e,t.occlusionTexture,"pbr_occlusionSampler","HAS_OCCLUSIONMAP",r);let{strength:n=1}=t.occlusionTexture;r.uniforms.occlusionStrength=n}switch(t.emissiveTexture&&(ku(e,t.emissiveTexture,"pbr_emissiveSampler","HAS_EMISSIVEMAP",r),r.uniforms.emissiveFactor=t.emissiveFactor||[0,0,0]),t.alphaMode){case"MASK":let{alphaCutoff:n=.5}=t;r.defines.ALPHA_CUTOFF=1,r.uniforms.alphaCutoff=n;break;case"BLEND":U.warn("glTF BLEND alphaMode might not work well because it requires mesh sorting")(),r.parameters.blendColorOperation="add",r.parameters.blendColorSrcFactor="src-alpha",r.parameters.blendColorDstFactor="one-minus-src-alpha",r.parameters.blendAlphaOperation="add",r.parameters.blendAlphaSrcFactor="one",r.parameters.blendAlphaDstFactor="one-minus-src-alpha",r.glParameters.blend=!0,r.glParameters.blendEquation=yn.FUNC_ADD,r.glParameters.blendFunc=[yn.SRC_ALPHA,yn.ONE_MINUS_SRC_ALPHA,yn.ONE,yn.ONE_MINUS_SRC_ALPHA];break}}function BQ(e,t,r){t.baseColorTexture&&ku(e,t.baseColorTexture,"pbr_baseColorSampler","HAS_BASECOLORMAP",r),r.uniforms.baseColorFactor=t.baseColorFactor||[1,1,1,1],t.metallicRoughnessTexture&&ku(e,t.metallicRoughnessTexture,"pbr_metallicRoughnessSampler","HAS_METALROUGHNESSMAP",r);let{metallicFactor:n=1,roughnessFactor:s=1}=t;r.uniforms.metallicRoughnessValues=[n,s]}function ku(e,t,r,n=null,s){let i=t?.texture?.sampler?.parameters||{},o=t.texture.source.image,a,c={};o.compressed?(a=o,c={[yn.TEXTURE_MIN_FILTER]:o.data.length>1?yn.LINEAR_MIPMAP_NEAREST:yn.LINEAR}):a={data:o};let l=e.createTexture({id:t.uniformName||t.id,parameters:{...i,...c},pixelStore:{[yn.UNPACK_FLIP_Y_WEBGL]:!1},...a});s.bindings[r]=l,n&&(s.defines[n]=1),s.generatedTextures.push(l)}var i4="4.2.1";var I0={TRANSCODER:"basis_transcoder.js",TRANSCODER_WASM:"basis_transcoder.wasm",ENCODER:"basis_encoder.js",ENCODER_WASM:"basis_encoder.wasm"},o4;async function Wb(e){A_(e.modules);let t=b_("basis");return t||(o4||=NQ(e),await o4)}async function NQ(e){let t=null,r=null;return[t,r]=await Promise.all([await Cn(I0.TRANSCODER,"textures",e),await Cn(I0.TRANSCODER_WASM,"textures",e)]),t=t||globalThis.BASIS,await FQ(t,r)}function FQ(e,t){let r={};return t&&(r.wasmBinary=t),new Promise(n=>{e(r).then(s=>{let{BasisFile:i,initializeBasis:o}=s;o(),n({BasisFile:i})})})}var Vb;async function Hb(e){let t=e.modules||{};return t.basisEncoder?t.basisEncoder:(Vb=Vb||DQ(e),await Vb)}async function DQ(e){let t=null,r=null;return[t,r]=await Promise.all([await Cn(I0.ENCODER,"textures",e),await Cn(I0.ENCODER_WASM,"textures",e)]),t=t||globalThis.BASIS,await kQ(t,r)}function kQ(e,t){let r={};return t&&(r.wasmBinary=t),new Promise(n=>{e(r).then(s=>{let{BasisFile:i,KTX2File:o,initializeBasis:a,BasisEncoder:c}=s;a(),n({BasisFile:i,KTX2File:o,BasisEncoder:c})})})}var Qo={COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_RGBA8_ETC2_EAC:37493,COMPRESSED_SRGB8_ETC2:37494,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37495,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37496,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37497,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGB_ETC1_WEBGL:36196,COMPRESSED_RGB_ATC_WEBGL:35986,COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL:35987,COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL:34798,COMPRESSED_RGBA_ASTC_4X4_KHR:37808,COMPRESSED_RGBA_ASTC_5X4_KHR:37809,COMPRESSED_RGBA_ASTC_5X5_KHR:37810,COMPRESSED_RGBA_ASTC_6X5_KHR:37811,COMPRESSED_RGBA_ASTC_6X6_KHR:37812,COMPRESSED_RGBA_ASTC_8X5_KHR:37813,COMPRESSED_RGBA_ASTC_8X6_KHR:37814,COMPRESSED_RGBA_ASTC_8X8_KHR:37815,COMPRESSED_RGBA_ASTC_10X5_KHR:37816,COMPRESSED_RGBA_ASTC_10X6_KHR:37817,COMPRESSED_RGBA_ASTC_10X8_KHR:37818,COMPRESSED_RGBA_ASTC_10X10_KHR:37819,COMPRESSED_RGBA_ASTC_12X10_KHR:37820,COMPRESSED_RGBA_ASTC_12X12_KHR:37821,COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR:37840,COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR:37841,COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR:37842,COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR:37843,COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR:37844,COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR:37845,COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR:37846,COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR:37847,COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR:37848,COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR:37849,COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR:37850,COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR:37851,COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR:37852,COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR:37853,COMPRESSED_RED_RGTC1_EXT:36283,COMPRESSED_SIGNED_RED_RGTC1_EXT:36284,COMPRESSED_RED_GREEN_RGTC2_EXT:36285,COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT:36286,COMPRESSED_SRGB_S3TC_DXT1_EXT:35916,COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT:35917,COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT:35918,COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT:35919};var UQ=["","WEBKIT_","MOZ_"],a4={WEBGL_compressed_texture_s3tc:"dxt",WEBGL_compressed_texture_s3tc_srgb:"dxt-srgb",WEBGL_compressed_texture_etc1:"etc1",WEBGL_compressed_texture_etc:"etc2",WEBGL_compressed_texture_pvrtc:"pvrtc",WEBGL_compressed_texture_atc:"atc",WEBGL_compressed_texture_astc:"astc",EXT_texture_compression_rgtc:"rgtc"},R0=null;function c4(e){if(!R0){e=e||zQ()||void 0,R0=new Set;for(let t of UQ)for(let r in a4)if(e&&e.getExtension(`${t}${r}`)){let n=a4[r];R0.add(n)}}return R0}function zQ(){try{return document.createElement("canvas").getContext("webgl")}catch{return null}}var E5t=new Uint8Array([0]);var l4,f4,h4,u4,d4,p4,m4,g4;(function(e){e[e.NONE=0]="NONE",e[e.BASISLZ=1]="BASISLZ",e[e.ZSTD=2]="ZSTD",e[e.ZLIB=3]="ZLIB"})(l4||(l4={})),function(e){e[e.BASICFORMAT=0]="BASICFORMAT"}(f4||(f4={})),function(e){e[e.UNSPECIFIED=0]="UNSPECIFIED",e[e.ETC1S=163]="ETC1S",e[e.UASTC=166]="UASTC"}(h4||(h4={})),function(e){e[e.UNSPECIFIED=0]="UNSPECIFIED",e[e.SRGB=1]="SRGB"}(u4||(u4={})),function(e){e[e.UNSPECIFIED=0]="UNSPECIFIED",e[e.LINEAR=1]="LINEAR",e[e.SRGB=2]="SRGB",e[e.ITU=3]="ITU",e[e.NTSC=4]="NTSC",e[e.SLOG=5]="SLOG",e[e.SLOG2=6]="SLOG2"}(d4||(d4={})),function(e){e[e.ALPHA_STRAIGHT=0]="ALPHA_STRAIGHT",e[e.ALPHA_PREMULTIPLIED=1]="ALPHA_PREMULTIPLIED"}(p4||(p4={})),function(e){e[e.RGB=0]="RGB",e[e.RRR=3]="RRR",e[e.GGG=4]="GGG",e[e.AAA=15]="AAA"}(m4||(m4={})),function(e){e[e.RGB=0]="RGB",e[e.RGBA=3]="RGBA",e[e.RRR=4]="RRR",e[e.RRRG=5]="RRRG"}(g4||(g4={}));var Lr=[171,75,84,88,32,50,48,187,13,10,26,10];function x4(e){let t=new Uint8Array(e);return!(t.byteLength<Lr.length||t[0]!==Lr[0]||t[1]!==Lr[1]||t[2]!==Lr[2]||t[3]!==Lr[3]||t[4]!==Lr[4]||t[5]!==Lr[5]||t[6]!==Lr[6]||t[7]!==Lr[7]||t[8]!==Lr[8]||t[9]!==Lr[9]||t[10]!==Lr[10]||t[11]!==Lr[11])}var VQ={etc1:{basisFormat:0,compressed:!0,format:Qo.COMPRESSED_RGB_ETC1_WEBGL},etc2:{basisFormat:1,compressed:!0},bc1:{basisFormat:2,compressed:!0,format:Qo.COMPRESSED_RGB_S3TC_DXT1_EXT},bc3:{basisFormat:3,compressed:!0,format:Qo.COMPRESSED_RGBA_S3TC_DXT5_EXT},bc4:{basisFormat:4,compressed:!0},bc5:{basisFormat:5,compressed:!0},"bc7-m6-opaque-only":{basisFormat:6,compressed:!0},"bc7-m5":{basisFormat:7,compressed:!0},"pvrtc1-4-rgb":{basisFormat:8,compressed:!0,format:Qo.COMPRESSED_RGB_PVRTC_4BPPV1_IMG},"pvrtc1-4-rgba":{basisFormat:9,compressed:!0,format:Qo.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG},"astc-4x4":{basisFormat:10,compressed:!0,format:Qo.COMPRESSED_RGBA_ASTC_4X4_KHR},"atc-rgb":{basisFormat:11,compressed:!0},"atc-rgba-interpolated-alpha":{basisFormat:12,compressed:!0},rgba32:{basisFormat:13,compressed:!1},rgb565:{basisFormat:14,compressed:!1},bgr565:{basisFormat:15,compressed:!1},rgba4444:{basisFormat:16,compressed:!1}};async function jb(e,t){if(t.basis.containerFormat==="auto"){if(x4(e)){let n=await Hb(t);return _4(n.KTX2File,e,t)}let{BasisFile:r}=await Wb(t);return Gb(r,e,t)}switch(t.basis.module){case"encoder":let r=await Hb(t);switch(t.basis.containerFormat){case"ktx2":return _4(r.KTX2File,e,t);case"basis":default:return Gb(r.BasisFile,e,t)}case"transcoder":default:let{BasisFile:n}=await Wb(t);return Gb(n,e,t)}}function Gb(e,t,r){let n=new e(new Uint8Array(t));try{if(!n.startTranscoding())throw new Error("Failed to start basis transcoding");let s=n.getNumImages(),i=[];for(let o=0;o<s;o++){let a=n.getNumLevels(o),c=[];for(let l=0;l<a;l++)c.push(WQ(n,o,l,r));i.push(c)}return i}finally{n.close(),n.delete()}}function WQ(e,t,r,n){let s=e.getImageWidth(t,r),i=e.getImageHeight(t,r),o=e.getHasAlpha(),{compressed:a,format:c,basisFormat:l}=y4(n,o),f=e.getImageTranscodedSizeInBytes(t,r,l),h=new Uint8Array(f);if(!e.transcodeImage(h,t,r,l,0,0))throw new Error("failed to start Basis transcoding");return{width:s,height:i,data:h,compressed:a,format:c,hasAlpha:o}}function _4(e,t,r){let n=new e(new Uint8Array(t));try{if(!n.startTranscoding())throw new Error("failed to start KTX2 transcoding");let s=n.getLevels(),i=[];for(let o=0;o<s;o++){i.push(HQ(n,o,r));break}return[i]}finally{n.close(),n.delete()}}function HQ(e,t,r){let{alphaFlag:n,height:s,width:i}=e.getImageLevelInfo(t,0,0),{compressed:o,format:a,basisFormat:c}=y4(r,n),l=e.getImageTranscodedSizeInBytes(t,0,0,c),f=new Uint8Array(l);if(!e.transcodeImage(f,t,0,0,c,0,-1,-1))throw new Error("Failed to transcode KTX2 image");return{width:i,height:s,data:f,compressed:o,levelSize:l,hasAlpha:n,format:a}}function y4(e,t){let r=e&&e.basis&&e.basis.format;return r==="auto"&&(r=O0()),typeof r=="object"&&(r=t?r.alpha:r.noAlpha),r=r.toLowerCase(),VQ[r]}function O0(){let e=c4();return e.has("astc")?"astc-4x4":e.has("dxt")?{alpha:"bc3",noAlpha:"bc1"}:e.has("pvrtc")?{alpha:"pvrtc1-4-rgba",noAlpha:"pvrtc1-4-rgb"}:e.has("etc1")?"etc1":e.has("etc2")?"etc2":"rgb565"}var A4={dataType:null,batchType:null,name:"Basis",id:"basis",module:"textures",version:i4,worker:!0,extensions:["basis","ktx2"],mimeTypes:["application/octet-stream","image/ktx2"],tests:["sB"],binary:!0,options:{basis:{format:"auto",libraryPath:"libs/",containerFormat:"auto",module:"transcoder"}}},qb={...A4,parse:jb};var GQ={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},jQ={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},Yb=class{name;startTime=0;playing=!0;speed=1;channels=[];constructor(t){Object.assign(this,t)}animate(t){if(!this.playing)return;let n=(t/1e3-this.startTime)*this.speed;this.channels.forEach(({sampler:s,target:i,path:o})=>{ZQ(n,s,i,o),XQ(i,i._node)})}},L0=class{animations;constructor(t){this.animations=t.animations.map((r,n)=>{let s=r.name||`Animation-${n}`,i=r.samplers.map(({input:a,interpolation:c="LINEAR",output:l})=>({input:b4(t.accessors[a]),interpolation:c,output:b4(t.accessors[l])})),o=r.channels.map(({sampler:a,target:c})=>({sampler:i[a],target:t.nodes[c.node],path:c.path}));return new Yb({name:s,channels:o})})}animate(t){this.setTime(t)}setTime(t){this.animations.forEach(r=>r.animate(t))}getAnimations(){return this.animations}};function b4(e){if(!e._animation){let t=jQ[e.componentType],r=GQ[e.type],n=r*e.count,{buffer:s,byteOffset:i}=e.bufferView.data,o=new t(s,i+(e.byteOffset||0),n);if(r===1)e._animation=Array.from(o);else{let a=[];for(let c=0;c<o.length;c+=r)a.push(Array.from(o.slice(c,c+r)));e._animation=a}}return e._animation}var qQ=new rt;function XQ(e,t){if(t.matrix.identity(),e.translation&&t.matrix.translate(e.translation),e.rotation){let r=qQ.fromQuaternion(e.rotation);t.matrix.multiplyRight(r)}e.scale&&t.matrix.scale(e.scale)}var Xb=new li;function YQ(e,t,r,n,s){if(t==="rotation"){Xb.slerp({start:r,target:n,ratio:s});for(let i=0;i<Xb.length;i++)e[t][i]=Xb[i]}else for(let i=0;i<r.length;i++)e[t][i]=s*n[i]+(1-s)*r[i]}function $Q(e,t,{p0:r,outTangent0:n,inTangent1:s,p1:i,tDiff:o,ratio:a}){for(let c=0;c<e[t].length;c++){let l=n[c]*o,f=s[c]*o;e[t][c]=(2*Math.pow(a,3)-3*Math.pow(a,2)+1)*r[c]+(Math.pow(a,3)-2*Math.pow(a,2)+a)*l+(-2*Math.pow(a,3)+3*Math.pow(a,2))*i[c]+(Math.pow(a,3)-Math.pow(a,2))*f}}function KQ(e,t,r){for(let n=0;n<r.length;n++)e[t][n]=r[n]}function ZQ(e,{input:t,interpolation:r,output:n},s,i){let o=t[t.length-1],a=e%o,c=t.findIndex(u=>u>=a),l=Math.max(0,c-1);if(!Array.isArray(s[i]))switch(i){case"translation":s[i]=[0,0,0];break;case"rotation":s[i]=[0,0,0,1];break;case"scale":s[i]=[1,1,1];break;default:U.warn(`Bad animation path ${i}`)()}let f=t[l],h=t[c];switch(r){case"STEP":KQ(s,i,n[l]);break;case"LINEAR":if(h>f){let u=(a-f)/(h-f);YQ(s,i,n[l],n[c],u)}break;case"CUBICSPLINE":if(h>f){let u=(a-f)/(h-f),d=h-f,p=n[3*l+1],m=n[3*l+2],g=n[3*c+0],x=n[3*c+1];$Q(s,i,{p0:p,outTangent0:m,inTangent1:g,p1:x,tDiff:d,ratio:u})}break;default:U.warn(`Interpolation ${r} not supported`)();break}}var JQ=`
layout(0) positions: vec4; // in vec4 POSITION;

  #ifdef HAS_NORMALS
    in vec4 normals; // in vec4 NORMAL;
  #endif

  #ifdef HAS_TANGENTS
    in vec4 TANGENT;
  #endif

  #ifdef HAS_UV
    // in vec2 TEXCOORD_0;
    in vec2 texCoords;
  #endif

@vertex
  void main(void) {
    vec4 _NORMAL = vec4(0.);
    vec4 _TANGENT = vec4(0.);
    vec2 _TEXCOORD_0 = vec2(0.);

    #ifdef HAS_NORMALS
      _NORMAL = normals;
    #endif

    #ifdef HAS_TANGENTS
      _TANGENT = TANGENT;
    #endif

    #ifdef HAS_UV
      _TEXCOORD_0 = texCoords;
    #endif

    pbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);
    gl_Position = u_MVPMatrix * positions;
  }

@fragment
  out vec4 fragmentColor;

  void main(void) {
    vec3 pos = pbr_vPosition;
    fragmentColor = pbr_filterColor(vec4(1.0));
  }
`,QQ=`#version 300 es

  // in vec4 POSITION;
  in vec4 positions;

  #ifdef HAS_NORMALS
    // in vec4 NORMAL;
    in vec4 normals;
  #endif

  #ifdef HAS_TANGENTS
    in vec4 TANGENT;
  #endif

  #ifdef HAS_UV
    // in vec2 TEXCOORD_0;
    in vec2 texCoords;
  #endif

  void main(void) {
    vec4 _NORMAL = vec4(0.);
    vec4 _TANGENT = vec4(0.);
    vec2 _TEXCOORD_0 = vec2(0.);

    #ifdef HAS_NORMALS
      _NORMAL = normals;
    #endif

    #ifdef HAS_TANGENTS
      _TANGENT = TANGENT;
    #endif

    #ifdef HAS_UV
      _TEXCOORD_0 = texCoords;
    #endif

    pbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);
    gl_Position = pbrProjection.modelViewProjectionMatrix * positions;
  }
`,ttt=`#version 300 es
  out vec4 fragmentColor;

  void main(void) {
    vec3 pos = pbr_vPosition;
    fragmentColor = pbr_filterColor(vec4(1.0));
  }
`;function T4(e,t){let{id:r,geometry:n,material:s,vertexCount:i,materialOptions:o,modelOptions:a}=t,c=Uu(e,s,n.attributes,o);U.info(4,"createGLTFModel defines: ",c.defines)();let l=[],f={depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back"},h={id:r,source:JQ,vs:QQ,fs:ttt,geometry:n,topology:n.topology,vertexCount:i,modules:[go],...a,defines:{...c.defines,...a.defines},parameters:{...f,...c.parameters,...a.parameters}},u=new tt(e,h),{camera:d,...p}={...c.uniforms,...a.uniforms,...c.bindings,...a.bindings};return u.shaderInputs.setProps({pbrMaterial:p,pbrProjection:{camera:d}}),new kn({managedResources:l,model:u})}var ta;(function(e){e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN"})(ta||(ta={}));function v4(e){switch(e){case ta.POINTS:return"point-list";case ta.LINES:return"line-list";case ta.LINE_STRIP:return"line-strip";case ta.TRIANGLES:return"triangle-list";case ta.TRIANGLE_STRIP:return"triangle-strip";default:throw new Error(String(e))}}var ett={modelOptions:{},pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1},B0=class{device;options;gltf;constructor(t,r={}){this.device=t,this.options={...ett,...r}}instantiate(t){return this.gltf=$b(t),(this.gltf.scenes||[]).map(n=>this.createScene(n))}createAnimator(){return Array.isArray(this.gltf.animations)?new L0(this.gltf):null}createScene(t){let n=(t.nodes||[]).map(i=>this.createNode(i));return new Pr({id:t.name||t.id,children:n})}createNode(t){if(!t._node){let s=(t.children||[]).map(o=>this.createNode(o));t.mesh&&s.push(this.createMesh(t.mesh));let i=new Pr({id:t.name||t.id,children:s});if(t.matrix)i.setMatrix(t.matrix);else{if(i.matrix.identity(),t.translation&&i.matrix.translate(t.translation),t.rotation){let o=new rt().fromQuaternion(t.rotation);i.matrix.multiplyRight(o)}t.scale&&i.matrix.scale(t.scale)}t._node=i}let r=this.gltf.nodes.find(n=>n.id===t.id);return r._node=t._node,t._node}createMesh(t){if(!t._mesh){let n=(t.primitives||[]).map((i,o)=>this.createPrimitive(i,o,t)),s=new Pr({id:t.name||t.id,children:n});t._mesh=s}return t._mesh}createPrimitive(t,r,n){let s=t.name||`${n.name||n.id}-primitive-${r}`,i=v4(t.mode||4),o=t.indices?t.indices.count:this.getVertexCount(t.attributes),a=T4(this.device,{id:s,geometry:this.createGeometry(s,t,i),material:t.material,materialOptions:this.options,modelOptions:this.options.modelOptions,vertexCount:o});return a.bounds=[t.attributes.POSITION.min,t.attributes.POSITION.max],a}getVertexCount(t){throw new Error("getVertexCount not implemented")}createGeometry(t,r,n){let s={};for(let[i,o]of Object.entries(r.attributes)){let{components:a,size:c,value:l}=o;s[i]={size:c??a,value:l}}return new ht({id:t,topology:n,indices:r.indices.value,attributes:s})}createBuffer(t,r){t.bufferView||(t.bufferView={});let{bufferView:n}=t;return n.lumaBuffers||(n.lumaBuffers={}),n.lumaBuffers[r]||(n.lumaBuffers[r]=this.device.createBuffer({id:`from-${n.id}`,data:n.data||t.value})),n.lumaBuffers[r]}createSampler(t){return t}needsPOT(){return!1}};function $b(e){if(ArrayBuffer.isView(e)||e instanceof ArrayBuffer||e instanceof ImageBitmap)return e;if(Array.isArray(e))return e.map($b);if(e&&typeof e=="object"){let t={};for(let r in e)t[r]=$b(e[r]);return t}return e}function Kb(e,t,r){let n=new B0(e,r),s=n.instantiate(t),i=n.createAnimator();return{scenes:s,animator:i}}var Zb={};Wt(Zb,{decode:()=>dtt,name:()=>utt});function Ee(e,t){if(!e)throw new Error(t||"assert failed: gltf")}var N0={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},F0={5120:1,5121:1,5122:2,5123:2,5125:4,5126:4};var rtt=1.33,E4=["SCALAR","VEC2","VEC3","VEC4"],ntt=[[Int8Array,5120],[Uint8Array,5121],[Int16Array,5122],[Uint16Array,5123],[Uint32Array,5125],[Float32Array,5126],[Float64Array,5130]],stt=new Map(ntt),itt={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},ott={5120:1,5121:1,5122:2,5123:2,5125:4,5126:4},att={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array};function D0(e){return E4[e-1]||E4[0]}function Nc(e){let t=stt.get(e.constructor);if(!t)throw new Error("Illegal typed array");return t}function Fc(e,t){let r=att[e.componentType],n=itt[e.type],s=ott[e.componentType],i=e.count*n,o=e.count*n*s;Ee(o>=0&&o<=t.byteLength);let a=F0[e.componentType],c=N0[e.type];return{ArrayType:r,length:i,byteLength:o,componentByteSize:a,numberOfComponentsInElement:c}}function zu(e){let{images:t,bufferViews:r}=e;t=t||[],r=r||[];let n=t.map(o=>o.bufferView);r=r.filter(o=>!n.includes(o));let s=r.reduce((o,a)=>o+a.byteLength,0),i=t.reduce((o,a)=>{let{width:c,height:l}=a.image;return o+c*l},0);return s+Math.ceil(4*i*rtt)}function M4(e,t,r){let n=e.bufferViews[r];Ee(n);let s=n.buffer,i=t[s];Ee(i);let o=(n.byteOffset||0)+i.byteOffset;return new Uint8Array(i.arrayBuffer,o,n.byteLength)}function S4(e,t,r){let n=typeof r=="number"?e.accessors?.[r]:r;if(!n)throw new Error(`No gltf accessor ${JSON.stringify(r)}`);let s=e.bufferViews?.[n.bufferView||0];if(!s)throw new Error(`No gltf buffer view for accessor ${s}`);let{arrayBuffer:i,byteOffset:o}=t[s.buffer],a=(o||0)+(n.byteOffset||0)+(s.byteOffset||0),{ArrayType:c,length:l,componentByteSize:f,numberOfComponentsInElement:h}=Fc(n,s),u=f*h,d=s.byteStride||u;if(typeof s.byteStride>"u"||s.byteStride===u)return new c(i,a,l);let p=new c(l);for(let m=0;m<n.count;m++){let g=new c(i,a+m*d,h);p.set(g,m*h)}return p}function ctt(){return{asset:{version:"2.0",generator:"loaders.gl"},buffers:[],extensions:{},extensionsRequired:[],extensionsUsed:[]}}var Ct=class{gltf;sourceBuffers;byteLength;constructor(t){this.gltf={json:t?.json||ctt(),buffers:t?.buffers||[],images:t?.images||[]},this.sourceBuffers=[],this.byteLength=0,this.gltf.buffers&&this.gltf.buffers[0]&&(this.byteLength=this.gltf.buffers[0].byteLength,this.sourceBuffers=[this.gltf.buffers[0]])}get json(){return this.gltf.json}getApplicationData(t){return this.json[t]}getExtraData(t){return(this.json.extras||{})[t]}hasExtension(t){let r=this.getUsedExtensions().find(s=>s===t),n=this.getRequiredExtensions().find(s=>s===t);return typeof r=="string"||typeof n=="string"}getExtension(t){let r=this.getUsedExtensions().find(s=>s===t),n=this.json.extensions||{};return r?n[t]:null}getRequiredExtension(t){return this.getRequiredExtensions().find(n=>n===t)?this.getExtension(t):null}getRequiredExtensions(){return this.json.extensionsRequired||[]}getUsedExtensions(){return this.json.extensionsUsed||[]}getRemovedExtensions(){return this.json.extensionsRemoved||[]}getObjectExtension(t,r){return(t.extensions||{})[r]}getScene(t){return this.getObject("scenes",t)}getNode(t){return this.getObject("nodes",t)}getSkin(t){return this.getObject("skins",t)}getMesh(t){return this.getObject("meshes",t)}getMaterial(t){return this.getObject("materials",t)}getAccessor(t){return this.getObject("accessors",t)}getTexture(t){return this.getObject("textures",t)}getSampler(t){return this.getObject("samplers",t)}getImage(t){return this.getObject("images",t)}getBufferView(t){return this.getObject("bufferViews",t)}getBuffer(t){return this.getObject("buffers",t)}getObject(t,r){if(typeof r=="object")return r;let n=this.json[t]&&this.json[t][r];if(!n)throw new Error(`glTF file error: Could not find ${t}[${r}]`);return n}getTypedArrayForBufferView(t){t=this.getBufferView(t);let r=t.buffer,n=this.gltf.buffers[r];Ee(n);let s=(t.byteOffset||0)+n.byteOffset;return new Uint8Array(n.arrayBuffer,s,t.byteLength)}getTypedArrayForAccessor(t){let r=this.getAccessor(t);return S4(this.gltf.json,this.gltf.buffers,r)}getTypedArrayForImageData(t){t=this.getAccessor(t);let r=this.getBufferView(t.bufferView),s=this.getBuffer(r.buffer).data,i=r.byteOffset||0;return new Uint8Array(s,i,r.byteLength)}addApplicationData(t,r){return this.json[t]=r,this}addExtraData(t,r){return this.json.extras=this.json.extras||{},this.json.extras[t]=r,this}addObjectExtension(t,r,n){return t.extensions=t.extensions||{},t.extensions[r]=n,this.registerUsedExtension(r),this}setObjectExtension(t,r,n){let s=t.extensions||{};s[r]=n}removeObjectExtension(t,r){let n=t?.extensions||{};if(n[r]){this.json.extensionsRemoved=this.json.extensionsRemoved||[];let s=this.json.extensionsRemoved;s.includes(r)||s.push(r)}delete n[r]}addExtension(t,r={}){return Ee(r),this.json.extensions=this.json.extensions||{},this.json.extensions[t]=r,this.registerUsedExtension(t),r}addRequiredExtension(t,r={}){return Ee(r),this.addExtension(t,r),this.registerRequiredExtension(t),r}registerUsedExtension(t){this.json.extensionsUsed=this.json.extensionsUsed||[],this.json.extensionsUsed.find(r=>r===t)||this.json.extensionsUsed.push(t)}registerRequiredExtension(t){this.registerUsedExtension(t),this.json.extensionsRequired=this.json.extensionsRequired||[],this.json.extensionsRequired.find(r=>r===t)||this.json.extensionsRequired.push(t)}removeExtension(t){if(this.json.extensions?.[t]){this.json.extensionsRemoved=this.json.extensionsRemoved||[];let r=this.json.extensionsRemoved;r.includes(t)||r.push(t)}this.json.extensions&&delete this.json.extensions[t],this.json.extensionsRequired&&this._removeStringFromArray(this.json.extensionsRequired,t),this.json.extensionsUsed&&this._removeStringFromArray(this.json.extensionsUsed,t)}setDefaultScene(t){this.json.scene=t}addScene(t){let{nodeIndices:r}=t;return this.json.scenes=this.json.scenes||[],this.json.scenes.push({nodes:r}),this.json.scenes.length-1}addNode(t){let{meshIndex:r,matrix:n}=t;this.json.nodes=this.json.nodes||[];let s={mesh:r};return n&&(s.matrix=n),this.json.nodes.push(s),this.json.nodes.length-1}addMesh(t){let{attributes:r,indices:n,material:s,mode:i=4}=t,a={primitives:[{attributes:this._addAttributes(r),mode:i}]};if(n){let c=this._addIndices(n);a.primitives[0].indices=c}return Number.isFinite(s)&&(a.primitives[0].material=s),this.json.meshes=this.json.meshes||[],this.json.meshes.push(a),this.json.meshes.length-1}addPointCloud(t){let n={primitives:[{attributes:this._addAttributes(t),mode:0}]};return this.json.meshes=this.json.meshes||[],this.json.meshes.push(n),this.json.meshes.length-1}addImage(t,r){let n=no(t),s=r||n?.mimeType,o={bufferView:this.addBufferView(t),mimeType:s};return this.json.images=this.json.images||[],this.json.images.push(o),this.json.images.length-1}addBufferView(t,r=0,n=this.byteLength){let s=t.byteLength;Ee(Number.isFinite(s)),this.sourceBuffers=this.sourceBuffers||[],this.sourceBuffers.push(t);let i={buffer:r,byteOffset:n,byteLength:s};return this.byteLength+=Xs(s,4),this.json.bufferViews=this.json.bufferViews||[],this.json.bufferViews.push(i),this.json.bufferViews.length-1}addAccessor(t,r){let n={bufferView:t,type:D0(r.size),componentType:r.componentType,count:r.count,max:r.max,min:r.min};return this.json.accessors=this.json.accessors||[],this.json.accessors.push(n),this.json.accessors.length-1}addBinaryBuffer(t,r={size:3}){let n=this.addBufferView(t),s={min:r.min,max:r.max};(!s.min||!s.max)&&(s=this._getAccessorMinMax(t,r.size));let i={size:r.size,componentType:Nc(t),count:Math.round(t.length/r.size),min:s.min,max:s.max};return this.addAccessor(n,Object.assign(i,r))}addTexture(t){let{imageIndex:r}=t,n={source:r};return this.json.textures=this.json.textures||[],this.json.textures.push(n),this.json.textures.length-1}addMaterial(t){return this.json.materials=this.json.materials||[],this.json.materials.push(t),this.json.materials.length-1}createBinaryChunk(){this.gltf.buffers=[];let t=this.byteLength,r=new ArrayBuffer(t),n=new Uint8Array(r),s=0;for(let i of this.sourceBuffers||[])s=L_(i,n,s);this.json?.buffers?.[0]?this.json.buffers[0].byteLength=t:this.json.buffers=[{byteLength:t}],this.gltf.binary=r,this.sourceBuffers=[r]}_removeStringFromArray(t,r){let n=!0;for(;n;){let s=t.indexOf(r);s>-1?t.splice(s,1):n=!1}}_addAttributes(t={}){let r={};for(let n in t){let s=t[n],i=this._getGltfAttributeName(n),o=this.addBinaryBuffer(s.value,s);r[i]=o}return r}_addIndices(t){return this.addBinaryBuffer(t,{size:1})}_getGltfAttributeName(t){switch(t.toLowerCase()){case"position":case"positions":case"vertices":return"POSITION";case"normal":case"normals":return"NORMAL";case"color":case"colors":return"COLOR_0";case"texcoord":case"texcoords":return"TEXCOORD_0";default:return t}}_getAccessorMinMax(t,r){let n={min:null,max:null};if(t.length<r)return n;n.min=[],n.max=[];let s=t.subarray(0,r);for(let i of s)n.min.push(i),n.max.push(i);for(let i=r;i<t.length;i+=r)for(let o=0;o<r;o++)n.min[0+o]=Math.min(n.min[0+o],t[i+o]),n.max[0+o]=Math.max(n.max[0+o],t[i+o]);return n}};function w4(e){return(e%1+1)%1}var C4={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16,BOOLEAN:1,STRING:1,ENUM:1},ltt={INT8:Int8Array,UINT8:Uint8Array,INT16:Int16Array,UINT16:Uint16Array,INT32:Int32Array,UINT32:Uint32Array,INT64:BigInt64Array,UINT64:BigUint64Array,FLOAT32:Float32Array,FLOAT64:Float64Array},P4={INT8:1,UINT8:1,INT16:2,UINT16:2,INT32:4,UINT32:4,INT64:8,UINT64:8,FLOAT32:4,FLOAT64:8};function Vu(e,t){return P4[t]*C4[e]}function Dc(e,t,r,n){if(r!=="UINT8"&&r!=="UINT16"&&r!=="UINT32"&&r!=="UINT64")return null;let s=e.getTypedArrayForBufferView(t),i=kc(s,"SCALAR",r,n+1);return i instanceof BigInt64Array||i instanceof BigUint64Array?null:i}function kc(e,t,r,n=1){let s=C4[t],i=ltt[r],o=P4[r],a=n*s,c=a*o,l=e.buffer,f=e.byteOffset;return f%o!==0&&(l=new Uint8Array(l).slice(f,f+c).buffer,f=0),new i(l,f,a)}function Uc(e,t,r){let n=`TEXCOORD_${t.texCoord||0}`,s=r.attributes[n],i=e.getTypedArrayForAccessor(s),o=e.gltf.json,a=t.index,c=o.textures?.[a]?.source;if(typeof c<"u"){let l=o.images?.[c]?.mimeType,f=e.gltf.images?.[c];if(f&&typeof f.width<"u"){let h=[];for(let u=0;u<i.length;u+=2){let d=ftt(f,l,i,u,t.channels);h.push(d)}return h}}return[]}function k0(e,t,r,n,s){if(!r?.length)return;let i=[];for(let f of r){let h=n.findIndex(u=>u===f);h===-1&&(h=n.push(f)-1),i.push(h)}let o=new Uint32Array(i),a=e.gltf.buffers.push({arrayBuffer:o.buffer,byteOffset:o.byteOffset,byteLength:o.byteLength})-1,c=e.addBufferView(o,a,0),l=e.addAccessor(c,{size:1,componentType:Nc(o),count:o.length});s.attributes[t]=l}function ftt(e,t,r,n,s=[0]){let i={r:{offset:0,shift:0},g:{offset:1,shift:8},b:{offset:2,shift:16},a:{offset:3,shift:24}},o=r[n],a=r[n+1],c=1;t&&(t.indexOf("image/jpeg")!==-1||t.indexOf("image/png")!==-1)&&(c=4);let l=htt(o,a,e,c),f=0;for(let h of s){let u=typeof h=="number"?Object.values(i)[h]:i[h],d=l+u.offset,p=of(e);if(p.data.length<=d)throw new Error(`${p.data.length} <= ${d}`);let m=p.data[d];f|=m<<u.shift}return f}function htt(e,t,r,n=1){let s=r.width,i=w4(e)*(s-1),o=Math.round(i),a=r.height,c=w4(t)*(a-1),l=Math.round(c),f=r.components?r.components:n;return(l*s+o)*f}function U0(e,t,r,n,s){let i=[];for(let o=0;o<t;o++){let a=r[o],c=r[o+1]-r[o];if(c+a>n)break;let l=a/s,f=c/s;i.push(e.slice(l,l+f))}return i}function z0(e,t,r){let n=[];for(let s=0;s<t;s++){let i=s*r;n.push(e.slice(i,i+r))}return n}function V0(e,t,r,n){if(r)throw new Error("Not implemented - arrayOffsets for strings is specified");if(n){let s=[],i=new TextDecoder("utf8"),o=0;for(let a=0;a<e;a++){let c=n[a+1]-n[a];if(c+o<=t.length){let l=t.subarray(o,c+o),f=i.decode(l);s.push(f),o+=c}}return s}return[]}var I4="EXT_mesh_features",utt=I4;async function dtt(e,t){let r=new Ct(e);ptt(r,t)}function ptt(e,t){let r=e.gltf.json;if(r.meshes)for(let n of r.meshes)for(let s of n.primitives)mtt(e,s,t)}function mtt(e,t,r){if(!r?.gltf?.loadBuffers)return;let s=t.extensions?.[I4]?.featureIds;if(s)for(let i of s){let o;if(typeof i.attribute<"u"){let a=`_FEATURE_ID_${i.attribute}`,c=t.attributes[a];o=e.getTypedArrayForAccessor(c)}else typeof i.texture<"u"&&r?.gltf?.loadImages?o=Uc(e,i.texture,t):o=[];i.data=o}}var tT={};Wt(tT,{decode:()=>xtt,name:()=>gtt});var Jb="EXT_structural_metadata",gtt=Jb;async function xtt(e,t){let r=new Ct(e);_tt(r,t)}function _tt(e,t){if(!t.gltf?.loadBuffers)return;let r=e.getExtension(Jb);r&&(t.gltf?.loadImages&&ytt(e,r),Att(e,r))}function ytt(e,t){let r=t.propertyTextures,n=e.gltf.json;if(r&&n.meshes)for(let s of n.meshes)for(let i of s.primitives)Ttt(e,r,i,t)}function Att(e,t){let r=t.schema;if(!r)return;let n=r.classes,s=t.propertyTables;if(n&&s)for(let i in n){let o=btt(s,i);o&&Ett(e,r,o)}}function btt(e,t){for(let r of e)if(r.class===t)return r;return null}function Ttt(e,t,r,n){if(!t)return;let i=r.extensions?.[Jb]?.propertyTextures;if(i)for(let o of i){let a=t[o];vtt(e,a,r,n)}}function vtt(e,t,r,n){if(!t.properties)return;n.dataAttributeNames||(n.dataAttributeNames=[]);let s=t.class;for(let i in t.properties){let o=`${s}_${i}`,a=t.properties?.[i];if(!a)continue;a.data||(a.data=[]);let c=a.data,l=Uc(e,a,r);l!==null&&(k0(e,o,l,c,r),a.data=c,n.dataAttributeNames.push(o))}}function Ett(e,t,r){let n=t.classes?.[r.class];if(!n)throw new Error(`Incorrect data in the EXT_structural_metadata extension: no schema class with name ${r.class}`);let s=r.count;for(let i in n.properties){let o=n.properties[i],a=r.properties?.[i];if(a){let c=Mtt(e,t,o,s,a);a.data=c}}}function Mtt(e,t,r,n,s){let i=[],o=s.values,a=e.getTypedArrayForBufferView(o),c=Stt(e,r,s,n),l=wtt(e,s,n);switch(r.type){case"SCALAR":case"VEC2":case"VEC3":case"VEC4":case"MAT2":case"MAT3":case"MAT4":{i=Ctt(r,n,a,c);break}case"BOOLEAN":throw new Error(`Not implemented - classProperty.type=${r.type}`);case"STRING":{i=V0(n,a,c,l);break}case"ENUM":{i=Ptt(t,r,n,a,c);break}default:throw new Error(`Unknown classProperty type ${r.type}`)}return i}function Stt(e,t,r,n){return t.array&&typeof t.count>"u"&&typeof r.arrayOffsets<"u"?Dc(e,r.arrayOffsets,r.arrayOffsetType||"UINT32",n):null}function wtt(e,t,r){return typeof t.stringOffsets<"u"?Dc(e,t.stringOffsets,t.stringOffsetType||"UINT32",r):null}function Ctt(e,t,r,n){let s=e.array,i=e.count,o=Vu(e.type,e.componentType),a=r.byteLength/o,c;return e.componentType?c=kc(r,e.type,e.componentType,a):c=r,s?n?U0(c,t,n,r.length,o):i?z0(c,t,i):[]:c}function Ptt(e,t,r,n,s){let i=t.enumType;if(!i)throw new Error("Incorrect data in the EXT_structural_metadata extension: classProperty.enumType is not set for type ENUM");let o=e.enums?.[i];if(!o)throw new Error(`Incorrect data in the EXT_structural_metadata extension: schema.enums does't contain ${i}`);let a=o.valueType||"UINT16",c=Vu(t.type,a),l=n.byteLength/c,f=kc(n,t.type,a,l);if(f||(f=n),t.array){if(s)return Itt({valuesData:f,numberOfElements:r,arrayOffsets:s,valuesDataBytesLength:n.length,elementSize:c,enumEntry:o});let h=t.count;return h?Rtt(f,r,h,o):[]}return Qb(f,0,r,o)}function Itt(e){let{valuesData:t,numberOfElements:r,arrayOffsets:n,valuesDataBytesLength:s,elementSize:i,enumEntry:o}=e,a=[];for(let c=0;c<r;c++){let l=n[c],f=n[c+1]-n[c];if(f+l>s)break;let h=l/i,u=f/i,d=Qb(t,h,u,o);a.push(d)}return a}function Rtt(e,t,r,n){let s=[];for(let i=0;i<t;i++){let o=r*i,a=Qb(e,o,r,n);s.push(a)}return s}function Qb(e,t,r,n){let s=[];for(let i=0;i<r;i++)if(e instanceof BigInt64Array||e instanceof BigUint64Array)s.push("");else{let o=e[t+i],a=Ott(n,o);a?s.push(a.name):s.push("")}return s}function Ott(e,t){for(let r of e.values)if(r.value===t)return r;return null}var eT={};Wt(eT,{decode:()=>Btt,name:()=>Ltt});var R4="EXT_feature_metadata",Ltt=R4;async function Btt(e,t){let r=new Ct(e);Ntt(r,t)}function Ntt(e,t){if(!t.gltf?.loadBuffers)return;let r=e.getExtension(R4);r&&(t.gltf?.loadImages&&Ftt(e,r),Dtt(e,r))}function Ftt(e,t){let r=t.schema;if(!r)return;let n=r.classes,{featureTextures:s}=t;if(n&&s)for(let i in n){let o=n[i],a=Utt(s,i);a&&Vtt(e,a,o)}}function Dtt(e,t){let r=t.schema;if(!r)return;let n=r.classes,s=t.featureTables;if(n&&s)for(let i in n){let o=ktt(s,i);o&&ztt(e,r,o)}}function ktt(e,t){for(let r in e){let n=e[r];if(n.class===t)return n}return null}function Utt(e,t){for(let r in e){let n=e[r];if(n.class===t)return n}return null}function ztt(e,t,r){if(!r.class)return;let n=t.classes?.[r.class];if(!n)throw new Error(`Incorrect data in the EXT_structural_metadata extension: no schema class with name ${r.class}`);let s=r.count;for(let i in n.properties){let o=n.properties[i],a=r.properties?.[i];if(a){let c=Wtt(e,t,o,s,a);a.data=c}}}function Vtt(e,t,r){let n=t.class;for(let s in r.properties){let i=t?.properties?.[s];if(i){let o=Xtt(e,i,n);i.data=o}}}function Wtt(e,t,r,n,s){let i=[],o=s.bufferView,a=e.getTypedArrayForBufferView(o),c=Htt(e,r,s,n),l=Gtt(e,r,s,n);return r.type==="STRING"||r.componentType==="STRING"?i=V0(n,a,c,l):jtt(r)&&(i=qtt(r,n,a,c)),i}function Htt(e,t,r,n){return t.type==="ARRAY"&&typeof t.componentCount>"u"&&typeof r.arrayOffsetBufferView<"u"?Dc(e,r.arrayOffsetBufferView,r.offsetType||"UINT32",n):null}function Gtt(e,t,r,n){return typeof r.stringOffsetBufferView<"u"?Dc(e,r.stringOffsetBufferView,r.offsetType||"UINT32",n):null}function jtt(e){let t=["UINT8","INT16","UINT16","INT32","UINT32","INT64","UINT64","FLOAT32","FLOAT64"];return t.includes(e.type)||typeof e.componentType<"u"&&t.includes(e.componentType)}function qtt(e,t,r,n){let s=e.type==="ARRAY",i=e.componentCount,o="SCALAR",a=e.componentType||e.type,c=Vu(o,a),l=r.byteLength/c,f=kc(r,o,a,l);return s?n?U0(f,t,n,r.length,c):i?z0(f,t,i):[]:f}function Xtt(e,t,r){let n=e.gltf.json;if(!n.meshes)return[];let s=[];for(let i of n.meshes)for(let o of i.primitives)Ytt(e,r,t,s,o);return s}function Ytt(e,t,r,n,s){let i={channels:r.channels,...r.texture},o=Uc(e,i,s);o&&k0(e,t,o,n,s)}var O4="4.2.1";var zc=!0,L4=1735152710,sT=12,W0=8,$tt=1313821514,Ktt=5130562,Ztt=0,Jtt=0,Qtt=1;function tet(e,t=0){return`${String.fromCharCode(e.getUint8(t+0))}${String.fromCharCode(e.getUint8(t+1))}${String.fromCharCode(e.getUint8(t+2))}${String.fromCharCode(e.getUint8(t+3))}`}function B4(e,t=0,r={}){let n=new DataView(e),{magic:s=L4}=r,i=n.getUint32(t,!1);return i===s||i===L4}function N4(e,t,r=0,n={}){let s=new DataView(t),i=tet(s,r+0),o=s.getUint32(r+4,zc),a=s.getUint32(r+8,zc);switch(Object.assign(e,{header:{byteOffset:r,byteLength:a,hasBinChunk:!1},type:i,version:o,json:{},binChunks:[]}),r+=sT,e.version){case 1:return eet(e,s,r);case 2:return ret(e,s,r,n={});default:throw new Error(`Invalid GLB version ${e.version}. Only supports version 1 and 2.`)}}function eet(e,t,r){lt(e.header.byteLength>sT+W0);let n=t.getUint32(r+0,zc),s=t.getUint32(r+4,zc);return r+=W0,lt(s===Ztt),rT(e,t,r,n),r+=n,r+=nT(e,t,r,e.header.byteLength),r}function ret(e,t,r,n){return lt(e.header.byteLength>sT+W0),net(e,t,r,n),r+e.header.byteLength}function net(e,t,r,n){for(;r+8<=e.header.byteLength;){let s=t.getUint32(r+0,zc),i=t.getUint32(r+4,zc);switch(r+=W0,i){case $tt:rT(e,t,r,s);break;case Ktt:nT(e,t,r,s);break;case Jtt:n.strict||rT(e,t,r,s);break;case Qtt:n.strict||nT(e,t,r,s);break;default:break}r+=Xs(s,4)}return r}function rT(e,t,r,n){let s=new Uint8Array(t.buffer,r,n),o=new TextDecoder("utf8").decode(s);return e.json=JSON.parse(o),Xs(n,4)}function nT(e,t,r,n){return e.header.hasBinChunk=!0,e.binChunks.push({byteOffset:r,byteLength:n,arrayBuffer:t.buffer}),Xs(n,4)}function iT(e,t){if(e.startsWith("data:")||e.startsWith("http:")||e.startsWith("https:"))return e;let n=t.baseUri||t.uri;if(!n)throw new Error(`'baseUri' must be provided to resolve relative url ${e}`);return n.substr(0,n.lastIndexOf("/")+1)+e}var aT={};Wt(aT,{decode:()=>get,name:()=>met});var set="B9h9z9tFBBBF8fL9gBB9gLaaaaaFa9gEaaaB9gFaFa9gEaaaFaEMcBFFFGGGEIIILF9wFFFLEFBFKNFaFCx/IFMO/LFVK9tv9t9vq95GBt9f9f939h9z9t9f9j9h9s9s9f9jW9vq9zBBp9tv9z9o9v9wW9f9kv9j9v9kv9WvqWv94h919m9mvqBF8Z9tv9z9o9v9wW9f9kv9j9v9kv9J9u9kv94h919m9mvqBGy9tv9z9o9v9wW9f9kv9j9v9kv9J9u9kv949TvZ91v9u9jvBEn9tv9z9o9v9wW9f9kv9j9v9kv69p9sWvq9P9jWBIi9tv9z9o9v9wW9f9kv9j9v9kv69p9sWvq9R919hWBLn9tv9z9o9v9wW9f9kv9j9v9kv69p9sWvq9F949wBKI9z9iqlBOc+x8ycGBM/qQFTa8jUUUUBCU/EBlHL8kUUUUBC9+RKGXAGCFJAI9LQBCaRKAE2BBC+gF9HQBALAEAIJHOAGlAGTkUUUBRNCUoBAG9uC/wgBZHKCUGAKCUG9JyRVAECFJRICBRcGXEXAcAF9PQFAVAFAclAcAVJAF9JyRMGXGXAG9FQBAMCbJHKC9wZRSAKCIrCEJCGrRQANCUGJRfCBRbAIRTEXGXAOATlAQ9PQBCBRISEMATAQJRIGXAS9FQBCBRtCBREEXGXAOAIlCi9PQBCBRISLMANCU/CBJAEJRKGXGXGXGXGXATAECKrJ2BBAtCKZrCEZfIBFGEBMAKhB83EBAKCNJhB83EBSEMAKAI2BIAI2BBHmCKrHYAYCE6HYy86BBAKCFJAICIJAYJHY2BBAmCIrCEZHPAPCE6HPy86BBAKCGJAYAPJHY2BBAmCGrCEZHPAPCE6HPy86BBAKCEJAYAPJHY2BBAmCEZHmAmCE6Hmy86BBAKCIJAYAmJHY2BBAI2BFHmCKrHPAPCE6HPy86BBAKCLJAYAPJHY2BBAmCIrCEZHPAPCE6HPy86BBAKCKJAYAPJHY2BBAmCGrCEZHPAPCE6HPy86BBAKCOJAYAPJHY2BBAmCEZHmAmCE6Hmy86BBAKCNJAYAmJHY2BBAI2BGHmCKrHPAPCE6HPy86BBAKCVJAYAPJHY2BBAmCIrCEZHPAPCE6HPy86BBAKCcJAYAPJHY2BBAmCGrCEZHPAPCE6HPy86BBAKCMJAYAPJHY2BBAmCEZHmAmCE6Hmy86BBAKCSJAYAmJHm2BBAI2BEHICKrHYAYCE6HYy86BBAKCQJAmAYJHm2BBAICIrCEZHYAYCE6HYy86BBAKCfJAmAYJHm2BBAICGrCEZHYAYCE6HYy86BBAKCbJAmAYJHK2BBAICEZHIAICE6HIy86BBAKAIJRISGMAKAI2BNAI2BBHmCIrHYAYCb6HYy86BBAKCFJAICNJAYJHY2BBAmCbZHmAmCb6Hmy86BBAKCGJAYAmJHm2BBAI2BFHYCIrHPAPCb6HPy86BBAKCEJAmAPJHm2BBAYCbZHYAYCb6HYy86BBAKCIJAmAYJHm2BBAI2BGHYCIrHPAPCb6HPy86BBAKCLJAmAPJHm2BBAYCbZHYAYCb6HYy86BBAKCKJAmAYJHm2BBAI2BEHYCIrHPAPCb6HPy86BBAKCOJAmAPJHm2BBAYCbZHYAYCb6HYy86BBAKCNJAmAYJHm2BBAI2BIHYCIrHPAPCb6HPy86BBAKCVJAmAPJHm2BBAYCbZHYAYCb6HYy86BBAKCcJAmAYJHm2BBAI2BLHYCIrHPAPCb6HPy86BBAKCMJAmAPJHm2BBAYCbZHYAYCb6HYy86BBAKCSJAmAYJHm2BBAI2BKHYCIrHPAPCb6HPy86BBAKCQJAmAPJHm2BBAYCbZHYAYCb6HYy86BBAKCfJAmAYJHm2BBAI2BOHICIrHYAYCb6HYy86BBAKCbJAmAYJHK2BBAICbZHIAICb6HIy86BBAKAIJRISFMAKAI8pBB83BBAKCNJAICNJ8pBB83BBAICTJRIMAtCGJRtAECTJHEAS9JQBMMGXAIQBCBRISEMGXAM9FQBANAbJ2BBRtCBRKAfREEXAEANCU/CBJAKJ2BBHTCFrCBATCFZl9zAtJHt86BBAEAGJREAKCFJHKAM9HQBMMAfCFJRfAIRTAbCFJHbAG9HQBMMABAcAG9sJANCUGJAMAG9sTkUUUBpANANCUGJAMCaJAG9sJAGTkUUUBpMAMCBAIyAcJRcAIQBMC9+RKSFMCBC99AOAIlAGCAAGCA9Ly6yRKMALCU/EBJ8kUUUUBAKM+OmFTa8jUUUUBCoFlHL8kUUUUBC9+RKGXAFCE9uHOCtJAI9LQBCaRKAE2BBHNC/wFZC/gF9HQBANCbZHVCF9LQBALCoBJCgFCUFT+JUUUBpALC84Jha83EBALC8wJha83EBALC8oJha83EBALCAJha83EBALCiJha83EBALCTJha83EBALha83ENALha83EBAEAIJC9wJRcAECFJHNAOJRMGXAF9FQBCQCbAVCF6yRSABRECBRVCBRQCBRfCBRICBRKEXGXAMAcuQBC9+RKSEMGXGXAN2BBHOC/vF9LQBALCoBJAOCIrCa9zAKJCbZCEWJHb8oGIRTAb8oGBRtGXAOCbZHbAS9PQBALAOCa9zAIJCbZCGWJ8oGBAVAbyROAb9FRbGXGXAGCG9HQBABAt87FBABCIJAO87FBABCGJAT87FBSFMAEAtjGBAECNJAOjGBAECIJATjGBMAVAbJRVALCoBJAKCEWJHmAOjGBAmATjGIALAICGWJAOjGBALCoBJAKCFJCbZHKCEWJHTAtjGBATAOjGIAIAbJRIAKCFJRKSGMGXGXAbCb6QBAQAbJAbC989zJCFJRQSFMAM1BBHbCgFZROGXGXAbCa9MQBAMCFJRMSFMAM1BFHbCgBZCOWAOCgBZqROGXAbCa9MQBAMCGJRMSFMAM1BGHbCgBZCfWAOqROGXAbCa9MQBAMCEJRMSFMAM1BEHbCgBZCdWAOqROGXAbCa9MQBAMCIJRMSFMAM2BIC8cWAOqROAMCLJRMMAOCFrCBAOCFZl9zAQJRQMGXGXAGCG9HQBABAt87FBABCIJAQ87FBABCGJAT87FBSFMAEAtjGBAECNJAQjGBAECIJATjGBMALCoBJAKCEWJHOAQjGBAOATjGIALAICGWJAQjGBALCoBJAKCFJCbZHKCEWJHOAtjGBAOAQjGIAICFJRIAKCFJRKSFMGXAOCDF9LQBALAIAcAOCbZJ2BBHbCIrHTlCbZCGWJ8oGBAVCFJHtATyROALAIAblCbZCGWJ8oGBAtAT9FHmJHtAbCbZHTyRbAT9FRTGXGXAGCG9HQBABAV87FBABCIJAb87FBABCGJAO87FBSFMAEAVjGBAECNJAbjGBAECIJAOjGBMALAICGWJAVjGBALCoBJAKCEWJHYAOjGBAYAVjGIALAICFJHICbZCGWJAOjGBALCoBJAKCFJCbZCEWJHYAbjGBAYAOjGIALAIAmJCbZHICGWJAbjGBALCoBJAKCGJCbZHKCEWJHOAVjGBAOAbjGIAKCFJRKAIATJRIAtATJRVSFMAVCBAM2BBHYyHTAOC/+F6HPJROAYCbZRtGXGXAYCIrHmQBAOCFJRbSFMAORbALAIAmlCbZCGWJ8oGBROMGXGXAtQBAbCFJRVSFMAbRVALAIAYlCbZCGWJ8oGBRbMGXGXAP9FQBAMCFJRYSFMAM1BFHYCgFZRTGXGXAYCa9MQBAMCGJRYSFMAM1BGHYCgBZCOWATCgBZqRTGXAYCa9MQBAMCEJRYSFMAM1BEHYCgBZCfWATqRTGXAYCa9MQBAMCIJRYSFMAM1BIHYCgBZCdWATqRTGXAYCa9MQBAMCLJRYSFMAMCKJRYAM2BLC8cWATqRTMATCFrCBATCFZl9zAQJHQRTMGXGXAmCb6QBAYRPSFMAY1BBHMCgFZROGXGXAMCa9MQBAYCFJRPSFMAY1BFHMCgBZCOWAOCgBZqROGXAMCa9MQBAYCGJRPSFMAY1BGHMCgBZCfWAOqROGXAMCa9MQBAYCEJRPSFMAY1BEHMCgBZCdWAOqROGXAMCa9MQBAYCIJRPSFMAYCLJRPAY2BIC8cWAOqROMAOCFrCBAOCFZl9zAQJHQROMGXGXAtCb6QBAPRMSFMAP1BBHMCgFZRbGXGXAMCa9MQBAPCFJRMSFMAP1BFHMCgBZCOWAbCgBZqRbGXAMCa9MQBAPCGJRMSFMAP1BGHMCgBZCfWAbqRbGXAMCa9MQBAPCEJRMSFMAP1BEHMCgBZCdWAbqRbGXAMCa9MQBAPCIJRMSFMAPCLJRMAP2BIC8cWAbqRbMAbCFrCBAbCFZl9zAQJHQRbMGXGXAGCG9HQBABAT87FBABCIJAb87FBABCGJAO87FBSFMAEATjGBAECNJAbjGBAECIJAOjGBMALCoBJAKCEWJHYAOjGBAYATjGIALAICGWJATjGBALCoBJAKCFJCbZCEWJHYAbjGBAYAOjGIALAICFJHICbZCGWJAOjGBALCoBJAKCGJCbZCEWJHOATjGBAOAbjGIALAIAm9FAmCb6qJHICbZCGWJAbjGBAIAt9FAtCb6qJRIAKCEJRKMANCFJRNABCKJRBAECSJREAKCbZRKAICbZRIAfCEJHfAF9JQBMMCBC99AMAc6yRKMALCoFJ8kUUUUBAKM/tIFGa8jUUUUBCTlRLC9+RKGXAFCLJAI9LQBCaRKAE2BBC/+FZC/QF9HQBALhB83ENAECFJRKAEAIJC98JREGXAF9FQBGXAGCG6QBEXGXAKAE9JQBC9+bMAK1BBHGCgFZRIGXGXAGCa9MQBAKCFJRKSFMAK1BFHGCgBZCOWAICgBZqRIGXAGCa9MQBAKCGJRKSFMAK1BGHGCgBZCfWAIqRIGXAGCa9MQBAKCEJRKSFMAK1BEHGCgBZCdWAIqRIGXAGCa9MQBAKCIJRKSFMAK2BIC8cWAIqRIAKCLJRKMALCNJAICFZCGWqHGAICGrCBAICFrCFZl9zAG8oGBJHIjGBABAIjGBABCIJRBAFCaJHFQBSGMMEXGXAKAE9JQBC9+bMAK1BBHGCgFZRIGXGXAGCa9MQBAKCFJRKSFMAK1BFHGCgBZCOWAICgBZqRIGXAGCa9MQBAKCGJRKSFMAK1BGHGCgBZCfWAIqRIGXAGCa9MQBAKCEJRKSFMAK1BEHGCgBZCdWAIqRIGXAGCa9MQBAKCIJRKSFMAK2BIC8cWAIqRIAKCLJRKMABAICGrCBAICFrCFZl9zALCNJAICFZCGWqHI8oGBJHG87FBAIAGjGBABCGJRBAFCaJHFQBMMCBC99AKAE6yRKMAKM+lLKFaF99GaG99FaG99GXGXAGCI9HQBAF9FQFEXGXGX9DBBB8/9DBBB+/ABCGJHG1BB+yAB1BBHE+yHI+L+TABCFJHL1BBHK+yHO+L+THN9DBBBB9gHVyAN9DBB/+hANAN+U9DBBBBANAVyHcAc+MHMAECa3yAI+SHIAI+UAcAMAKCa3yAO+SHcAc+U+S+S+R+VHO+U+SHN+L9DBBB9P9d9FQBAN+oRESFMCUUUU94REMAGAE86BBGXGX9DBBB8/9DBBB+/Ac9DBBBB9gyAcAO+U+SHN+L9DBBB9P9d9FQBAN+oRGSFMCUUUU94RGMALAG86BBGXGX9DBBB8/9DBBB+/AI9DBBBB9gyAIAO+U+SHN+L9DBBB9P9d9FQBAN+oRGSFMCUUUU94RGMABAG86BBABCIJRBAFCaJHFQBSGMMAF9FQBEXGXGX9DBBB8/9DBBB+/ABCIJHG8uFB+yAB8uFBHE+yHI+L+TABCGJHL8uFBHK+yHO+L+THN9DBBBB9gHVyAN9DB/+g6ANAN+U9DBBBBANAVyHcAc+MHMAECa3yAI+SHIAI+UAcAMAKCa3yAO+SHcAc+U+S+S+R+VHO+U+SHN+L9DBBB9P9d9FQBAN+oRESFMCUUUU94REMAGAE87FBGXGX9DBBB8/9DBBB+/Ac9DBBBB9gyAcAO+U+SHN+L9DBBB9P9d9FQBAN+oRGSFMCUUUU94RGMALAG87FBGXGX9DBBB8/9DBBB+/AI9DBBBB9gyAIAO+U+SHN+L9DBBB9P9d9FQBAN+oRGSFMCUUUU94RGMABAG87FBABCNJRBAFCaJHFQBMMM/SEIEaE99EaF99GXAF9FQBCBREABRIEXGXGX9D/zI818/AICKJ8uFBHLCEq+y+VHKAI8uFB+y+UHO9DB/+g6+U9DBBB8/9DBBB+/AO9DBBBB9gy+SHN+L9DBBB9P9d9FQBAN+oRVSFMCUUUU94RVMAICIJ8uFBRcAICGJ8uFBRMABALCFJCEZAEqCFWJAV87FBGXGXAKAM+y+UHN9DB/+g6+U9DBBB8/9DBBB+/AN9DBBBB9gy+SHS+L9DBBB9P9d9FQBAS+oRMSFMCUUUU94RMMABALCGJCEZAEqCFWJAM87FBGXGXAKAc+y+UHK9DB/+g6+U9DBBB8/9DBBB+/AK9DBBBB9gy+SHS+L9DBBB9P9d9FQBAS+oRcSFMCUUUU94RcMABALCaJCEZAEqCFWJAc87FBGXGX9DBBU8/AOAO+U+TANAN+U+TAKAK+U+THO9DBBBBAO9DBBBB9gy+R9DB/+g6+U9DBBB8/+SHO+L9DBBB9P9d9FQBAO+oRcSFMCUUUU94RcMABALCEZAEqCFWJAc87FBAICNJRIAECIJREAFCaJHFQBMMM9JBGXAGCGrAF9sHF9FQBEXABAB8oGBHGCNWCN91+yAGCi91CnWCUUU/8EJ+++U84GBABCIJRBAFCaJHFQBMMM9TFEaCBCB8oGUkUUBHFABCEJC98ZJHBjGUkUUBGXGXAB8/BCTWHGuQBCaREABAGlCggEJCTrXBCa6QFMAFREMAEM/lFFFaGXGXAFABqCEZ9FQBABRESFMGXGXAGCT9PQBABRESFMABREEXAEAF8oGBjGBAECIJAFCIJ8oGBjGBAECNJAFCNJ8oGBjGBAECSJAFCSJ8oGBjGBAECTJREAFCTJRFAGC9wJHGCb9LQBMMAGCI9JQBEXAEAF8oGBjGBAFCIJRFAECIJREAGC98JHGCE9LQBMMGXAG9FQBEXAEAF2BB86BBAECFJREAFCFJRFAGCaJHGQBMMABMoFFGaGXGXABCEZ9FQBABRESFMAFCgFZC+BwsN9sRIGXGXAGCT9PQBABRESFMABREEXAEAIjGBAECSJAIjGBAECNJAIjGBAECIJAIjGBAECTJREAGC9wJHGCb9LQBMMAGCI9JQBEXAEAIjGBAECIJREAGC98JHGCE9LQBMMGXAG9FQBEXAEAF86BBAECFJREAGCaJHGQBMMABMMMFBCUNMIT9kBB",iet="B9h9z9tFBBBF8dL9gBB9gLaaaaaFa9gEaaaB9gGaaB9gFaFaEQSBBFBFFGEGEGIILF9wFFFLEFBFKNFaFCx/aFMO/LFVK9tv9t9vq95GBt9f9f939h9z9t9f9j9h9s9s9f9jW9vq9zBBp9tv9z9o9v9wW9f9kv9j9v9kv9WvqWv94h919m9mvqBG8Z9tv9z9o9v9wW9f9kv9j9v9kv9J9u9kv94h919m9mvqBIy9tv9z9o9v9wW9f9kv9j9v9kv9J9u9kv949TvZ91v9u9jvBLn9tv9z9o9v9wW9f9kv9j9v9kv69p9sWvq9P9jWBKi9tv9z9o9v9wW9f9kv9j9v9kv69p9sWvq9R919hWBNn9tv9z9o9v9wW9f9kv9j9v9kv69p9sWvq9F949wBcI9z9iqlBMc/j9JSIBTEM9+FLa8jUUUUBCTlRBCBRFEXCBRGCBREEXABCNJAGJAECUaAFAGrCFZHIy86BBAEAIJREAGCFJHGCN9HQBMAFCx+YUUBJAE86BBAFCEWCxkUUBJAB8pEN83EBAFCFJHFCUG9HQBMMkRIbaG97FaK978jUUUUBCU/KBlHL8kUUUUBC9+RKGXAGCFJAI9LQBCaRKAE2BBC+gF9HQBALAEAIJHOAGlAG/8cBBCUoBAG9uC/wgBZHKCUGAKCUG9JyRNAECFJRKCBRVGXEXAVAF9PQFANAFAVlAVANJAF9JyRcGXGXAG9FQBAcCbJHIC9wZHMCE9sRSAMCFWRQAICIrCEJCGrRfCBRbEXAKRTCBRtGXEXGXAOATlAf9PQBCBRKSLMALCU/CBJAtAM9sJRmATAfJRKCBREGXAMCoB9JQBAOAKlC/gB9JQBCBRIEXAmAIJREGXGXGXGXGXATAICKrJ2BBHYCEZfIBFGEBMAECBDtDMIBSEMAEAKDBBIAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnHPCGD+MFAPDQBTFtGmEYIPLdKeOnC0+G+MiDtD9OHdCEDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMIBAKCIJAnDeBJAeCx+YUUBJ2BBJRKSGMAEAKDBBNAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnC+P+e+8/4BDtD9OHdCbDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMIBAKCNJAnDeBJAeCx+YUUBJ2BBJRKSFMAEAKDBBBDMIBAKCTJRKMGXGXGXGXGXAYCGrCEZfIBFGEBMAECBDtDMITSEMAEAKDBBIAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnHPCGD+MFAPDQBTFtGmEYIPLdKeOnC0+G+MiDtD9OHdCEDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMITAKCIJAnDeBJAeCx+YUUBJ2BBJRKSGMAEAKDBBNAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnC+P+e+8/4BDtD9OHdCbDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMITAKCNJAnDeBJAeCx+YUUBJ2BBJRKSFMAEAKDBBBDMITAKCTJRKMGXGXGXGXGXAYCIrCEZfIBFGEBMAECBDtDMIASEMAEAKDBBIAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnHPCGD+MFAPDQBTFtGmEYIPLdKeOnC0+G+MiDtD9OHdCEDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMIAAKCIJAnDeBJAeCx+YUUBJ2BBJRKSGMAEAKDBBNAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnC+P+e+8/4BDtD9OHdCbDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMIAAKCNJAnDeBJAeCx+YUUBJ2BBJRKSFMAEAKDBBBDMIAAKCTJRKMGXGXGXGXGXAYCKrfIBFGEBMAECBDtDMI8wSEMAEAKDBBIAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnHPCGD+MFAPDQBTFtGmEYIPLdKeOnC0+G+MiDtD9OHdCEDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HYCEWCxkUUBJDBEBAYCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HYCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMI8wAKCIJAnDeBJAYCx+YUUBJ2BBJRKSGMAEAKDBBNAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnC+P+e+8/4BDtD9OHdCbDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HYCEWCxkUUBJDBEBAYCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HYCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMI8wAKCNJAnDeBJAYCx+YUUBJ2BBJRKSFMAEAKDBBBDMI8wAKCTJRKMAICoBJREAICUFJAM9LQFAERIAOAKlC/fB9LQBMMGXAEAM9PQBAECErRIEXGXAOAKlCi9PQBCBRKSOMAmAEJRYGXGXGXGXGXATAECKrJ2BBAICKZrCEZfIBFGEBMAYCBDtDMIBSEMAYAKDBBIAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnHPCGD+MFAPDQBTFtGmEYIPLdKeOnC0+G+MiDtD9OHdCEDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMIBAKCIJAnDeBJAeCx+YUUBJ2BBJRKSGMAYAKDBBNAKDBBBHPCID+MFAPDQBTFtGmEYIPLdKeOnC+P+e+8/4BDtD9OHdCbDbD8jHPD8dBhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBAeCx+YUUBJDBBBHnAnDQBBBBBBBBBBBBBBBBAPD8dFhUg/8/4/w/goB9+h84k7HeCEWCxkUUBJDBEBD9uDQBFGEILKOTtmYPdenDfAdAPD9SDMIBAKCNJAnDeBJAeCx+YUUBJ2BBJRKSFMAYAKDBBBDMIBAKCTJRKMAICGJRIAECTJHEAM9JQBMMGXAK9FQBAKRTAtCFJHtCI6QGSFMMCBRKSEMGXAM9FQBALCUGJAbJREALAbJDBGBRnCBRYEXAEALCU/CBJAYJHIDBIBHdCFD9tAdCFDbHPD9OD9hD9RHdAIAMJDBIBHiCFD9tAiAPD9OD9hD9RHiDQBTFtGmEYIPLdKeOnH8ZAIAQJDBIBHpCFD9tApAPD9OD9hD9RHpAIASJDBIBHyCFD9tAyAPD9OD9hD9RHyDQBTFtGmEYIPLdKeOnH8cDQBFTtGEmYILPdKOenHPAPDQBFGEBFGEBFGEBFGEAnD9uHnDyBjGBAEAGJHIAnAPAPDQILKOILKOILKOILKOD9uHnDyBjGBAIAGJHIAnAPAPDQNVcMNVcMNVcMNVcMD9uHnDyBjGBAIAGJHIAnAPAPDQSQfbSQfbSQfbSQfbD9uHnDyBjGBAIAGJHIAnA8ZA8cDQNVi8ZcMpySQ8c8dfb8e8fHPAPDQBFGEBFGEBFGEBFGED9uHnDyBjGBAIAGJHIAnAPAPDQILKOILKOILKOILKOD9uHnDyBjGBAIAGJHIAnAPAPDQNVcMNVcMNVcMNVcMD9uHnDyBjGBAIAGJHIAnAPAPDQSQfbSQfbSQfbSQfbD9uHnDyBjGBAIAGJHIAnAdAiDQNiV8ZcpMyS8cQ8df8eb8fHdApAyDQNiV8ZcpMyS8cQ8df8eb8fHiDQBFTtGEmYILPdKOenHPAPDQBFGEBFGEBFGEBFGED9uHnDyBjGBAIAGJHIAnAPAPDQILKOILKOILKOILKOD9uHnDyBjGBAIAGJHIAnAPAPDQNVcMNVcMNVcMNVcMD9uHnDyBjGBAIAGJHIAnAPAPDQSQfbSQfbSQfbSQfbD9uHnDyBjGBAIAGJHIAnAdAiDQNVi8ZcMpySQ8c8dfb8e8fHPAPDQBFGEBFGEBFGEBFGED9uHnDyBjGBAIAGJHIAnAPAPDQILKOILKOILKOILKOD9uHnDyBjGBAIAGJHIAnAPAPDQNVcMNVcMNVcMNVcMD9uHnDyBjGBAIAGJHIAnAPAPDQSQfbSQfbSQfbSQfbD9uHnDyBjGBAIAGJREAYCTJHYAM9JQBMMAbCIJHbAG9JQBMMABAVAG9sJALCUGJAcAG9s/8cBBALALCUGJAcCaJAG9sJAG/8cBBMAcCBAKyAVJRVAKQBMC9+RKSFMCBC99AOAKlAGCAAGCA9Ly6yRKMALCU/KBJ8kUUUUBAKMNBT+BUUUBM+KmFTa8jUUUUBCoFlHL8kUUUUBC9+RKGXAFCE9uHOCtJAI9LQBCaRKAE2BBHNC/wFZC/gF9HQBANCbZHVCF9LQBALCoBJCgFCUF/8MBALC84Jha83EBALC8wJha83EBALC8oJha83EBALCAJha83EBALCiJha83EBALCTJha83EBALha83ENALha83EBAEAIJC9wJRcAECFJHNAOJRMGXAF9FQBCQCbAVCF6yRSABRECBRVCBRQCBRfCBRICBRKEXGXAMAcuQBC9+RKSEMGXGXAN2BBHOC/vF9LQBALCoBJAOCIrCa9zAKJCbZCEWJHb8oGIRTAb8oGBRtGXAOCbZHbAS9PQBALAOCa9zAIJCbZCGWJ8oGBAVAbyROAb9FRbGXGXAGCG9HQBABAt87FBABCIJAO87FBABCGJAT87FBSFMAEAtjGBAECNJAOjGBAECIJATjGBMAVAbJRVALCoBJAKCEWJHmAOjGBAmATjGIALAICGWJAOjGBALCoBJAKCFJCbZHKCEWJHTAtjGBATAOjGIAIAbJRIAKCFJRKSGMGXGXAbCb6QBAQAbJAbC989zJCFJRQSFMAM1BBHbCgFZROGXGXAbCa9MQBAMCFJRMSFMAM1BFHbCgBZCOWAOCgBZqROGXAbCa9MQBAMCGJRMSFMAM1BGHbCgBZCfWAOqROGXAbCa9MQBAMCEJRMSFMAM1BEHbCgBZCdWAOqROGXAbCa9MQBAMCIJRMSFMAM2BIC8cWAOqROAMCLJRMMAOCFrCBAOCFZl9zAQJRQMGXGXAGCG9HQBABAt87FBABCIJAQ87FBABCGJAT87FBSFMAEAtjGBAECNJAQjGBAECIJATjGBMALCoBJAKCEWJHOAQjGBAOATjGIALAICGWJAQjGBALCoBJAKCFJCbZHKCEWJHOAtjGBAOAQjGIAICFJRIAKCFJRKSFMGXAOCDF9LQBALAIAcAOCbZJ2BBHbCIrHTlCbZCGWJ8oGBAVCFJHtATyROALAIAblCbZCGWJ8oGBAtAT9FHmJHtAbCbZHTyRbAT9FRTGXGXAGCG9HQBABAV87FBABCIJAb87FBABCGJAO87FBSFMAEAVjGBAECNJAbjGBAECIJAOjGBMALAICGWJAVjGBALCoBJAKCEWJHYAOjGBAYAVjGIALAICFJHICbZCGWJAOjGBALCoBJAKCFJCbZCEWJHYAbjGBAYAOjGIALAIAmJCbZHICGWJAbjGBALCoBJAKCGJCbZHKCEWJHOAVjGBAOAbjGIAKCFJRKAIATJRIAtATJRVSFMAVCBAM2BBHYyHTAOC/+F6HPJROAYCbZRtGXGXAYCIrHmQBAOCFJRbSFMAORbALAIAmlCbZCGWJ8oGBROMGXGXAtQBAbCFJRVSFMAbRVALAIAYlCbZCGWJ8oGBRbMGXGXAP9FQBAMCFJRYSFMAM1BFHYCgFZRTGXGXAYCa9MQBAMCGJRYSFMAM1BGHYCgBZCOWATCgBZqRTGXAYCa9MQBAMCEJRYSFMAM1BEHYCgBZCfWATqRTGXAYCa9MQBAMCIJRYSFMAM1BIHYCgBZCdWATqRTGXAYCa9MQBAMCLJRYSFMAMCKJRYAM2BLC8cWATqRTMATCFrCBATCFZl9zAQJHQRTMGXGXAmCb6QBAYRPSFMAY1BBHMCgFZROGXGXAMCa9MQBAYCFJRPSFMAY1BFHMCgBZCOWAOCgBZqROGXAMCa9MQBAYCGJRPSFMAY1BGHMCgBZCfWAOqROGXAMCa9MQBAYCEJRPSFMAY1BEHMCgBZCdWAOqROGXAMCa9MQBAYCIJRPSFMAYCLJRPAY2BIC8cWAOqROMAOCFrCBAOCFZl9zAQJHQROMGXGXAtCb6QBAPRMSFMAP1BBHMCgFZRbGXGXAMCa9MQBAPCFJRMSFMAP1BFHMCgBZCOWAbCgBZqRbGXAMCa9MQBAPCGJRMSFMAP1BGHMCgBZCfWAbqRbGXAMCa9MQBAPCEJRMSFMAP1BEHMCgBZCdWAbqRbGXAMCa9MQBAPCIJRMSFMAPCLJRMAP2BIC8cWAbqRbMAbCFrCBAbCFZl9zAQJHQRbMGXGXAGCG9HQBABAT87FBABCIJAb87FBABCGJAO87FBSFMAEATjGBAECNJAbjGBAECIJAOjGBMALCoBJAKCEWJHYAOjGBAYATjGIALAICGWJATjGBALCoBJAKCFJCbZCEWJHYAbjGBAYAOjGIALAICFJHICbZCGWJAOjGBALCoBJAKCGJCbZCEWJHOATjGBAOAbjGIALAIAm9FAmCb6qJHICbZCGWJAbjGBAIAt9FAtCb6qJRIAKCEJRKMANCFJRNABCKJRBAECSJREAKCbZRKAICbZRIAfCEJHfAF9JQBMMCBC99AMAc6yRKMALCoFJ8kUUUUBAKM/tIFGa8jUUUUBCTlRLC9+RKGXAFCLJAI9LQBCaRKAE2BBC/+FZC/QF9HQBALhB83ENAECFJRKAEAIJC98JREGXAF9FQBGXAGCG6QBEXGXAKAE9JQBC9+bMAK1BBHGCgFZRIGXGXAGCa9MQBAKCFJRKSFMAK1BFHGCgBZCOWAICgBZqRIGXAGCa9MQBAKCGJRKSFMAK1BGHGCgBZCfWAIqRIGXAGCa9MQBAKCEJRKSFMAK1BEHGCgBZCdWAIqRIGXAGCa9MQBAKCIJRKSFMAK2BIC8cWAIqRIAKCLJRKMALCNJAICFZCGWqHGAICGrCBAICFrCFZl9zAG8oGBJHIjGBABAIjGBABCIJRBAFCaJHFQBSGMMEXGXAKAE9JQBC9+bMAK1BBHGCgFZRIGXGXAGCa9MQBAKCFJRKSFMAK1BFHGCgBZCOWAICgBZqRIGXAGCa9MQBAKCGJRKSFMAK1BGHGCgBZCfWAIqRIGXAGCa9MQBAKCEJRKSFMAK1BEHGCgBZCdWAIqRIGXAGCa9MQBAKCIJRKSFMAK2BIC8cWAIqRIAKCLJRKMABAICGrCBAICFrCFZl9zALCNJAICFZCGWqHI8oGBJHG87FBAIAGjGBABCGJRBAFCaJHFQBMMCBC99AKAE6yRKMAKM/xLGEaK978jUUUUBCAlHE8kUUUUBGXGXAGCI9HQBGXAFC98ZHI9FQBABRGCBRLEXAGAGDBBBHKCiD+rFCiD+sFD/6FHOAKCND+rFCiD+sFD/6FAOD/gFAKCTD+rFCiD+sFD/6FHND/gFD/kFD/lFHVCBDtD+2FHcAOCUUUU94DtHMD9OD9RD/kFHO9DBB/+hDYAOAOD/mFAVAVD/mFANAcANAMD9OD9RD/kFHOAOD/mFD/kFD/kFD/jFD/nFHND/mF9DBBX9LDYHcD/kFCgFDtD9OAKCUUU94DtD9OD9QAOAND/mFAcD/kFCND+rFCU/+EDtD9OD9QAVAND/mFAcD/kFCTD+rFCUU/8ODtD9OD9QDMBBAGCTJRGALCIJHLAI9JQBMMAIAF9PQFAEAFCEZHLCGWHGqCBCTAGl/8MBAEABAICGWJHIAG/8cBBGXAL9FQBAEAEDBIBHKCiD+rFCiD+sFD/6FHOAKCND+rFCiD+sFD/6FAOD/gFAKCTD+rFCiD+sFD/6FHND/gFD/kFD/lFHVCBDtD+2FHcAOCUUUU94DtHMD9OD9RD/kFHO9DBB/+hDYAOAOD/mFAVAVD/mFANAcANAMD9OD9RD/kFHOAOD/mFD/kFD/kFD/jFD/nFHND/mF9DBBX9LDYHcD/kFCgFDtD9OAKCUUU94DtD9OD9QAOAND/mFAcD/kFCND+rFCU/+EDtD9OD9QAVAND/mFAcD/kFCTD+rFCUU/8ODtD9OD9QDMIBMAIAEAG/8cBBSFMABAFC98ZHGT+HUUUBAGAF9PQBAEAFCEZHICEWHLJCBCAALl/8MBAEABAGCEWJHGAL/8cBBAEAIT+HUUUBAGAEAL/8cBBMAECAJ8kUUUUBM+yEGGaO97GXAF9FQBCBRGEXABCTJHEAEDBBBHICBDtHLCUU98D8cFCUU98D8cEHKD9OABDBBBHOAIDQILKOSQfbPden8c8d8e8fCggFDtD9OD/6FAOAIDQBFGENVcMTtmYi8ZpyHICTD+sFD/6FHND/gFAICTD+rFCTD+sFD/6FHVD/gFD/kFD/lFHI9DB/+g6DYAVAIALD+2FHLAVCUUUU94DtHcD9OD9RD/kFHVAVD/mFAIAID/mFANALANAcD9OD9RD/kFHIAID/mFD/kFD/kFD/jFD/nFHND/mF9DBBX9LDYHLD/kFCTD+rFAVAND/mFALD/kFCggEDtD9OD9QHVAIAND/mFALD/kFCaDbCBDnGCBDnECBDnKCBDnOCBDncCBDnMCBDnfCBDnbD9OHIDQNVi8ZcMpySQ8c8dfb8e8fD9QDMBBABAOAKD9OAVAIDQBFTtGEmYILPdKOenD9QDMBBABCAJRBAGCIJHGAF9JQBMMM94FEa8jUUUUBCAlHE8kUUUUBABAFC98ZHIT+JUUUBGXAIAF9PQBAEAFCEZHLCEWHFJCBCAAFl/8MBAEABAICEWJHBAF/8cBBAEALT+JUUUBABAEAF/8cBBMAECAJ8kUUUUBM/hEIGaF97FaL978jUUUUBCTlRGGXAF9FQBCBREEXAGABDBBBHIABCTJHLDBBBHKDQILKOSQfbPden8c8d8e8fHOCTD+sFHNCID+rFDMIBAB9DBBU8/DY9D/zI818/DYANCEDtD9QD/6FD/nFHNAIAKDQBFGENVcMTtmYi8ZpyHICTD+rFCTD+sFD/6FD/mFHKAKD/mFANAICTD+sFD/6FD/mFHVAVD/mFANAOCTD+rFCTD+sFD/6FD/mFHOAOD/mFD/kFD/kFD/lFCBDtD+4FD/jF9DB/+g6DYHND/mF9DBBX9LDYHID/kFCggEDtHcD9OAVAND/mFAID/kFCTD+rFD9QHVAOAND/mFAID/kFCTD+rFAKAND/mFAID/kFAcD9OD9QHNDQBFTtGEmYILPdKOenHID8dBAGDBIBDyB+t+J83EBABCNJAID8dFAGDBIBDyF+t+J83EBALAVANDQNVi8ZcMpySQ8c8dfb8e8fHND8dBAGDBIBDyG+t+J83EBABCiJAND8dFAGDBIBDyE+t+J83EBABCAJRBAECIJHEAF9JQBMMM/3FGEaF978jUUUUBCoBlREGXAGCGrAF9sHIC98ZHL9FQBCBRGABRFEXAFAFDBBBHKCND+rFCND+sFD/6FAKCiD+sFCnD+rFCUUU/8EDtD+uFD/mFDMBBAFCTJRFAGCIJHGAL9JQBMMGXALAI9PQBAEAICEZHGCGWHFqCBCoBAFl/8MBAEABALCGWJHLAF/8cBBGXAG9FQBAEAEDBIBHKCND+rFCND+sFD/6FAKCiD+sFCnD+rFCUUU/8EDtD+uFD/mFDMIBMALAEAF/8cBBMM9TFEaCBCB8oGUkUUBHFABCEJC98ZJHBjGUkUUBGXGXAB8/BCTWHGuQBCaREABAGlCggEJCTrXBCa6QFMAFREMAEMMMFBCUNMIT9tBB",oet=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,3,2,0,0,5,3,1,0,1,12,1,0,10,22,2,12,0,65,0,65,0,65,0,252,10,0,0,11,7,0,65,0,253,15,26,11]),aet=new Uint8Array([32,0,65,253,3,1,2,34,4,106,6,5,11,8,7,20,13,33,12,16,128,9,116,64,19,113,127,15,10,21,22,14,255,66,24,54,136,107,18,23,192,26,114,118,132,17,77,101,130,144,27,87,131,44,45,74,156,154,70,167]),cet={0:"",1:"meshopt_decodeFilterOct",2:"meshopt_decodeFilterQuat",3:"meshopt_decodeFilterExp",NONE:"",OCTAHEDRAL:"meshopt_decodeFilterOct",QUATERNION:"meshopt_decodeFilterQuat",EXPONENTIAL:"meshopt_decodeFilterExp"},fet={0:"meshopt_decodeVertexBuffer",1:"meshopt_decodeIndexBuffer",2:"meshopt_decodeIndexSequence",ATTRIBUTES:"meshopt_decodeVertexBuffer",TRIANGLES:"meshopt_decodeIndexBuffer",INDICES:"meshopt_decodeIndexSequence"};async function F4(e,t,r,n,s,i="NONE"){let o=await het();pet(o,o.exports[fet[s]],e,t,r,n,o.exports[cet[i||"NONE"]])}var oT;async function het(){return oT||(oT=uet()),oT}async function uet(){let e=set;WebAssembly.validate(oet)&&(e=iet,console.log("Warning: meshopt_decoder is using experimental SIMD support"));let t=await WebAssembly.instantiate(det(e),{});return await t.instance.exports.__wasm_call_ctors(),t.instance}function det(e){let t=new Uint8Array(e.length);for(let n=0;n<e.length;++n){let s=e.charCodeAt(n);t[n]=s>96?s-71:s>64?s-65:s>47?s+4:s>46?63:62}let r=0;for(let n=0;n<e.length;++n)t[r++]=t[n]<60?aet[t[n]]:(t[n]-60)*64+t[++n];return t.buffer.slice(0,r)}function pet(e,t,r,n,s,i,o){let a=e.exports.sbrk,c=n+3&-4,l=a(c*s),f=a(i.length),h=new Uint8Array(e.exports.memory.buffer);h.set(i,f);let u=t(l,n,s,f,i.length);if(u===0&&o&&o(l,c,s),r.set(h.subarray(l,l+n*s)),a(l-a(0)),u!==0)throw new Error(`Malformed buffer data: ${u}`)}var H0="EXT_meshopt_compression",met=H0;async function get(e,t){let r=new Ct(e);if(!t?.gltf?.decompressMeshes||!t.gltf?.loadBuffers)return;let n=[];for(let s of e.json.bufferViews||[])n.push(xet(r,s));await Promise.all(n),r.removeExtension(H0)}async function xet(e,t){let r=e.getObjectExtension(t,H0);if(r){let{byteOffset:n=0,byteLength:s=0,byteStride:i,count:o,mode:a,filter:c="NONE",buffer:l}=r,f=e.gltf.buffers[l],h=new Uint8Array(f.arrayBuffer,f.byteOffset+n,s),u=new Uint8Array(e.gltf.buffers[t.buffer].arrayBuffer,t.byteOffset,t.byteLength);await F4(u,o,i,h,a,c),e.removeObjectExtension(t,H0)}}var cT={};Wt(cT,{name:()=>_et,preprocess:()=>yet});var Vc="EXT_texture_webp",_et=Vc;function yet(e,t){let r=new Ct(e);if(!Q_("image/webp")){if(r.getRequiredExtensions().includes(Vc))throw new Error(`gltf: Required extension ${Vc} not supported by browser`);return}let{json:n}=r;for(let s of n.textures||[]){let i=r.getObjectExtension(s,Vc);i&&(s.source=i.source),r.removeObjectExtension(s,Vc)}r.removeExtension(Vc)}var lT={};Wt(lT,{name:()=>Aet,preprocess:()=>bet});var G0="KHR_texture_basisu",Aet=G0;function bet(e,t){let r=new Ct(e),{json:n}=r;for(let s of n.textures||[]){let i=r.getObjectExtension(s,G0);i&&(s.source=i.source,r.removeObjectExtension(s,G0))}r.removeExtension(G0)}var pT={};Wt(pT,{decode:()=>ket,encode:()=>Uet,name:()=>Fet,preprocess:()=>Det});var D4="4.2.1";var k4={dataType:null,batchType:null,name:"Draco",id:"draco",module:"draco",version:D4,worker:!0,extensions:["drc"],mimeTypes:["application/octet-stream"],binary:!0,tests:["DRACO"],options:{draco:{decoderType:typeof WebAssembly=="object"?"wasm":"js",libraryPath:"libs/",extraAttributes:{},attributeNameEntry:void 0}}};function z4(e,t,r){let n=V4(t.metadata),s=[],i=Tet(t.attributes);for(let o in e){let a=e[o],c=U4(o,a,i[o]);s.push(c)}if(r){let o=U4("indices",r);s.push(o)}return{fields:s,metadata:n}}function Tet(e){let t={};for(let r in e){let n=e[r];t[n.name||"undefined"]=n}return t}function U4(e,t,r){let n=r?V4(r.metadata):void 0;return X_(e,t,n)}function V4(e){Object.entries(e);let t={};for(let r in e)t[`${r}.string`]=JSON.stringify(e[r]);return t}var W4={POSITION:"POSITION",NORMAL:"NORMAL",COLOR:"COLOR_0",TEX_COORD:"TEXCOORD_0"},vet={1:Int8Array,2:Uint8Array,3:Int16Array,4:Uint16Array,5:Int32Array,6:Uint32Array,9:Float32Array},Eet=4,Wu=class{draco;decoder;metadataQuerier;constructor(t){this.draco=t,this.decoder=new this.draco.Decoder,this.metadataQuerier=new this.draco.MetadataQuerier}destroy(){this.draco.destroy(this.decoder),this.draco.destroy(this.metadataQuerier)}parseSync(t,r={}){let n=new this.draco.DecoderBuffer;n.Init(new Int8Array(t),t.byteLength),this._disableAttributeTransforms(r);let s=this.decoder.GetEncodedGeometryType(n),i=s===this.draco.TRIANGULAR_MESH?new this.draco.Mesh:new this.draco.PointCloud;try{let o;switch(s){case this.draco.TRIANGULAR_MESH:o=this.decoder.DecodeBufferToMesh(n,i);break;case this.draco.POINT_CLOUD:o=this.decoder.DecodeBufferToPointCloud(n,i);break;default:throw new Error("DRACO: Unknown geometry type.")}if(!o.ok()||!i.ptr){let u=`DRACO decompression failed: ${o.error_msg()}`;throw new Error(u)}let a=this._getDracoLoaderData(i,s,r),c=this._getMeshData(i,a,r),l=cs(c.attributes),f=z4(c.attributes,a,c.indices);return{loader:"draco",loaderData:a,header:{vertexCount:i.num_points(),boundingBox:l},...c,schema:f}}finally{this.draco.destroy(n),i&&this.draco.destroy(i)}}_getDracoLoaderData(t,r,n){let s=this._getTopLevelMetadata(t),i=this._getDracoAttributes(t,n);return{geometry_type:r,num_attributes:t.num_attributes(),num_points:t.num_points(),num_faces:t instanceof this.draco.Mesh?t.num_faces():0,metadata:s,attributes:i}}_getDracoAttributes(t,r){let n={};for(let s=0;s<t.num_attributes();s++){let i=this.decoder.GetAttribute(t,s),o=this._getAttributeMetadata(t,s);n[i.unique_id()]={unique_id:i.unique_id(),attribute_type:i.attribute_type(),data_type:i.data_type(),num_components:i.num_components(),byte_offset:i.byte_offset(),byte_stride:i.byte_stride(),normalized:i.normalized(),attribute_index:s,metadata:o};let a=this._getQuantizationTransform(i,r);a&&(n[i.unique_id()].quantization_transform=a);let c=this._getOctahedronTransform(i,r);c&&(n[i.unique_id()].octahedron_transform=c)}return n}_getMeshData(t,r,n){let s=this._getMeshAttributes(r,t,n);if(!s.POSITION)throw new Error("DRACO: No position attribute found.");if(t instanceof this.draco.Mesh)switch(n.topology){case"triangle-strip":return{topology:"triangle-strip",mode:4,attributes:s,indices:{value:this._getTriangleStripIndices(t),size:1}};case"triangle-list":default:return{topology:"triangle-list",mode:5,attributes:s,indices:{value:this._getTriangleListIndices(t),size:1}}}return{topology:"point-list",mode:0,attributes:s}}_getMeshAttributes(t,r,n){let s={};for(let i of Object.values(t.attributes)){let o=this._deduceAttributeName(i,n);i.name=o;let a=this._getAttributeValues(r,i);if(a){let{value:c,size:l}=a;s[o]={value:c,size:l,byteOffset:i.byte_offset,byteStride:i.byte_stride,normalized:i.normalized}}}return s}_getTriangleListIndices(t){let n=t.num_faces()*3,s=n*Eet,i=this.draco._malloc(s);try{return this.decoder.GetTrianglesUInt32Array(t,s,i),new Uint32Array(this.draco.HEAPF32.buffer,i,n).slice()}finally{this.draco._free(i)}}_getTriangleStripIndices(t){let r=new this.draco.DracoInt32Array;try{return this.decoder.GetTriangleStripsFromMesh(t,r),Cet(r)}finally{this.draco.destroy(r)}}_getAttributeValues(t,r){let n=vet[r.data_type];if(!n)return console.warn(`DRACO: Unsupported attribute type ${r.data_type}`),null;let s=r.num_components,o=t.num_points()*s,a=o*n.BYTES_PER_ELEMENT,c=Met(this.draco,n),l,f=this.draco._malloc(a);try{let h=this.decoder.GetAttribute(t,r.attribute_index);this.decoder.GetAttributeDataArrayForAllPoints(t,h,c,a,f),l=new n(this.draco.HEAPF32.buffer,f,o).slice()}finally{this.draco._free(f)}return{value:l,size:s}}_deduceAttributeName(t,r){let n=t.unique_id;for(let[o,a]of Object.entries(r.extraAttributes||{}))if(a===n)return o;let s=t.attribute_type;for(let o in W4)if(this.draco[o]===s)return W4[o];let i=r.attributeNameEntry||"name";return t.metadata[i]?t.metadata[i].string:`CUSTOM_ATTRIBUTE_${n}`}_getTopLevelMetadata(t){let r=this.decoder.GetMetadata(t);return this._getDracoMetadata(r)}_getAttributeMetadata(t,r){let n=this.decoder.GetAttributeMetadata(t,r);return this._getDracoMetadata(n)}_getDracoMetadata(t){if(!t||!t.ptr)return{};let r={},n=this.metadataQuerier.NumEntries(t);for(let s=0;s<n;s++){let i=this.metadataQuerier.GetEntryName(t,s);r[i]=this._getDracoMetadataField(t,i)}return r}_getDracoMetadataField(t,r){let n=new this.draco.DracoInt32Array;try{this.metadataQuerier.GetIntEntryArray(t,r,n);let s=wet(n);return{int:this.metadataQuerier.GetIntEntry(t,r),string:this.metadataQuerier.GetStringEntry(t,r),double:this.metadataQuerier.GetDoubleEntry(t,r),intArray:s}}finally{this.draco.destroy(n)}}_disableAttributeTransforms(t){let{quantizedAttributes:r=[],octahedronAttributes:n=[]}=t,s=[...r,...n];for(let i of s)this.decoder.SkipAttributeTransform(this.draco[i])}_getQuantizationTransform(t,r){let{quantizedAttributes:n=[]}=r,s=t.attribute_type();if(n.map(o=>this.decoder[o]).includes(s)){let o=new this.draco.AttributeQuantizationTransform;try{if(o.InitFromAttribute(t))return{quantization_bits:o.quantization_bits(),range:o.range(),min_values:new Float32Array([1,2,3]).map(a=>o.min_value(a))}}finally{this.draco.destroy(o)}}return null}_getOctahedronTransform(t,r){let{octahedronAttributes:n=[]}=r,s=t.attribute_type();if(n.map(o=>this.decoder[o]).includes(s)){let o=new this.draco.AttributeQuantizationTransform;try{if(o.InitFromAttribute(t))return{quantization_bits:o.quantization_bits()}}finally{this.draco.destroy(o)}}return null}};function Met(e,t){switch(t){case Float32Array:return e.DT_FLOAT32;case Int8Array:return e.DT_INT8;case Int16Array:return e.DT_INT16;case Int32Array:return e.DT_INT32;case Uint8Array:return e.DT_UINT8;case Uint16Array:return e.DT_UINT16;case Uint32Array:return e.DT_UINT32;default:return e.DT_INVALID}}function wet(e){let t=e.size(),r=new Int32Array(t);for(let n=0;n<t;n++)r[n]=e.GetValue(n);return r}function Cet(e){let t=e.size(),r=new Int32Array(t);for(let n=0;n<t;n++)r[n]=e.GetValue(n);return r}var Pet="1.5.6",Iet="1.4.1",fT=`https://www.gstatic.com/draco/versioned/decoders/${Pet}`,Ar={DECODER:"draco_wasm_wrapper.js",DECODER_WASM:"draco_decoder.wasm",FALLBACK_DECODER:"draco_decoder.js",ENCODER:"draco_encoder.js"},hT={[Ar.DECODER]:`${fT}/${Ar.DECODER}`,[Ar.DECODER_WASM]:`${fT}/${Ar.DECODER_WASM}`,[Ar.FALLBACK_DECODER]:`${fT}/${Ar.FALLBACK_DECODER}`,[Ar.ENCODER]:`https://raw.githubusercontent.com/google/draco/${Iet}/javascript/${Ar.ENCODER}`},uT;async function H4(e){let t=e.modules||{};return t.draco3d?uT||=t.draco3d.createDecoderModule({}).then(r=>({draco:r})):uT||=Ret(e),await uT}async function Ret(e){let t,r;switch(e.draco&&e.draco.decoderType){case"js":t=await Cn(hT[Ar.FALLBACK_DECODER],"draco",e,Ar.FALLBACK_DECODER);break;case"wasm":default:[t,r]=await Promise.all([await Cn(hT[Ar.DECODER],"draco",e,Ar.DECODER),await Cn(hT[Ar.DECODER_WASM],"draco",e,Ar.DECODER_WASM)])}return t=t||globalThis.DracoDecoderModule,await Oet(t,r)}function Oet(e,t){let r={};return t&&(r.wasmBinary=t),new Promise(n=>{e({...r,onModuleLoaded:s=>n({draco:s})})})}var j0={...k4,parse:Let};async function Let(e,t){let{draco:r}=await H4(t),n=new Wu(r);try{return n.parseSync(e,t?.draco)}finally{n.destroy()}}function G4(e){let t={};for(let r in e){let n=e[r];if(r!=="indices"){let s=dT(n);t[r]=s}}return t}function dT(e){let{buffer:t,size:r,count:n}=Bet(e);return{value:t,size:r,byteOffset:0,count:n,type:D0(r),componentType:Nc(t)}}function Bet(e){let t=e,r=1,n=0;return e&&e.value&&(t=e.value,r=e.size||1),t&&(ArrayBuffer.isView(t)||(t=Net(t,Float32Array)),n=t.length/r),{buffer:t,size:r,count:n}}function Net(e,t,r=!1){return e?Array.isArray(e)?new t(e):r&&!(e instanceof t)?new t(e):e:null}var Li="KHR_draco_mesh_compression",Fet=Li;function Det(e,t,r){let n=new Ct(e);for(let s of j4(n))n.getObjectExtension(s,Li)}async function ket(e,t,r){if(!t?.gltf?.decompressMeshes)return;let n=new Ct(e),s=[];for(let i of j4(n))n.getObjectExtension(i,Li)&&s.push(zet(n,i,t,r));await Promise.all(s),n.removeExtension(Li)}function Uet(e,t={}){let r=new Ct(e);for(let n of r.json.meshes||[])Vet(n,t),r.addRequiredExtension(Li)}async function zet(e,t,r,n){let s=e.getObjectExtension(t,Li);if(!s)return;let i=e.getTypedArrayForBufferView(s.bufferView),o=Qi(i.buffer,i.byteOffset),a={...r};delete a["3d-tiles"];let c=await vr(o,j0,a,n),l=G4(c.attributes);for(let[f,h]of Object.entries(l))if(f in t.attributes){let u=t.attributes[f],d=e.getAccessor(u);d?.min&&d?.max&&(h.min=d.min,h.max=d.max)}t.attributes=l,c.indices&&(t.indices=dT(c.indices)),e.removeObjectExtension(t,Li),Wet(t)}function Vet(e,t,r=4,n,s){if(!n.DracoWriter)throw new Error("options.gltf.DracoWriter not provided");let i=n.DracoWriter.encodeSync({attributes:e}),o=s?.parseSync?.({attributes:e}),a=n._addFauxAttributes(o.attributes),c=n.addBufferView(i);return{primitives:[{attributes:a,mode:r,extensions:{[Li]:{bufferView:c,attributes:a}}}]}}function Wet(e){if(!e.attributes&&Object.keys(e.attributes).length>0)throw new Error("glTF: Empty primitive detected: Draco decompression failure?")}function*j4(e){for(let t of e.json.meshes||[])for(let r of t.primitives)yield r}var bT={};Wt(bT,{decode:()=>srt,name:()=>ert});var iVt=1/Math.PI*180,oVt=1/180*Math.PI,Het={EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1};globalThis.mathgl=globalThis.mathgl||{config:{...Het}};var De=globalThis.mathgl.config;function q4(e,{precision:t=De.precision}={}){return e=Get(e),`${parseFloat(e.toPrecision(t))}`}function Wc(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}function mT(e,t,r){let n=De.EPSILON;r&&(De.EPSILON=r);try{if(e===t)return!0;if(Wc(e)&&Wc(t)){if(e.length!==t.length)return!1;for(let s=0;s<e.length;++s)if(!mT(e[s],t[s]))return!1;return!0}return e&&e.equals?e.equals(t):t&&t.equals?t.equals(e):typeof e=="number"&&typeof t=="number"?Math.abs(e-t)<=De.EPSILON*Math.max(1,Math.abs(e),Math.abs(t)):!1}finally{De.EPSILON=n}}function Get(e){return Math.round(e/De.EPSILON)*De.EPSILON}var Hc=class extends Array{clone(){return new this.constructor().copy(this)}fromArray(t,r=0){for(let n=0;n<this.ELEMENTS;++n)this[n]=t[n+r];return this.check()}toArray(t=[],r=0){for(let n=0;n<this.ELEMENTS;++n)t[r+n]=this[n];return t}toObject(t){return t}from(t){return Array.isArray(t)?this.copy(t):this.fromObject(t)}to(t){return t===this?this:Wc(t)?this.toArray(t):this.toObject(t)}toTarget(t){return t?this.to(t):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(De)}formatString(t){let r="";for(let n=0;n<this.ELEMENTS;++n)r+=(n>0?", ":"")+q4(this[n],t);return`${t.printTypes?this.constructor.name:""}[${r}]`}equals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(!mT(this[r],t[r]))return!1;return!0}exactEquals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(this[r]!==t[r])return!1;return!0}negate(){for(let t=0;t<this.ELEMENTS;++t)this[t]=-this[t];return this.check()}lerp(t,r,n){if(n===void 0)return this.lerp(this,t,r);for(let s=0;s<this.ELEMENTS;++s){let i=t[s],o=typeof r=="number"?r:r[s];this[s]=i+n*(o-i)}return this.check()}min(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.min(t[r],this[r]);return this.check()}max(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.max(t[r],this[r]);return this.check()}clamp(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t[n]),r[n]);return this.check()}add(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]+=r[n];return this.check()}subtract(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]-=r[n];return this.check()}scale(t){if(typeof t=="number")for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;else for(let r=0;r<this.ELEMENTS&&r<t.length;++r)this[r]*=t[r];return this.check()}multiplyByScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}check(){if(De.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let t=this.length===this.ELEMENTS;for(let r=0;r<this.ELEMENTS;++r)t=t&&Number.isFinite(this[r]);return t}sub(t){return this.subtract(t)}setScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=t;return this.check()}addScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]+=t;return this.check()}subScalar(t){return this.addScalar(-t)}multiplyScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}divideScalar(t){return this.multiplyByScalar(1/t)}clampScalar(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t),r);return this.check()}get elements(){return this}};function jet(e,t){if(e.length!==t)return!1;for(let r=0;r<e.length;++r)if(!Number.isFinite(e[r]))return!1;return!0}function Ge(e){if(!Number.isFinite(e))throw new Error(`Invalid number ${JSON.stringify(e)}`);return e}function X4(e,t,r=""){if(De.debug&&!jet(e,t))throw new Error(`math.gl: ${r} some fields set to invalid numbers'`);return e}function gT(e,t){if(!e)throw new Error(`math.gl assertion ${t}`)}var q0=class extends Hc{get x(){return this[0]}set x(t){this[0]=Ge(t)}get y(){return this[1]}set y(t){this[1]=Ge(t)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let t=0;for(let r=0;r<this.ELEMENTS;++r)t+=this[r]*this[r];return t}magnitudeSquared(){return this.lengthSquared()}distance(t){return Math.sqrt(this.distanceSquared(t))}distanceSquared(t){let r=0;for(let n=0;n<this.ELEMENTS;++n){let s=this[n]-t[n];r+=s*s}return Ge(r)}dot(t){let r=0;for(let n=0;n<this.ELEMENTS;++n)r+=this[n]*t[n];return Ge(r)}normalize(){let t=this.magnitude();if(t!==0)for(let r=0;r<this.ELEMENTS;++r)this[r]/=t;return this.check()}multiply(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]*=r[n];return this.check()}divide(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]/=r[n];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(t){return this.distance(t)}distanceToSquared(t){return this.distanceSquared(t)}getComponent(t){return gT(t>=0&&t<this.ELEMENTS,"index is out of range"),Ge(this[t])}setComponent(t,r){return gT(t>=0&&t<this.ELEMENTS,"index is out of range"),this[t]=r,this.check()}addVectors(t,r){return this.copy(t).add(r)}subVectors(t,r){return this.copy(t).subtract(r)}multiplyVectors(t,r){return this.copy(t).multiply(r)}addScaledVector(t,r){return this.add(new this.constructor(t).multiplyScalar(r))}};var Gc=typeof Float32Array<"u"?Float32Array:Array;var xVt=Math.PI/180;function $et(){let e=new Gc(2);return Gc!=Float32Array&&(e[0]=0,e[1]=0),e}function $4(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[3]*s+r[6],e[1]=r[1]*n+r[4]*s+r[7],e}var _Vt=function(){let e=$et();return function(t,r,n,s,i,o){let a,c;for(r||(r=2),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],i(e,e,o),t[a]=e[0],t[a+1]=e[1];return t}}();function K4(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i||1;return e[0]=(r[0]*n+r[4]*s+r[8]*i)/o,e[1]=(r[1]*n+r[5]*s+r[9]*i)/o,e[2]=(r[2]*n+r[6]*s+r[10]*i)/o,e}function Z4(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e}function J4(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=r[0]*n+r[3]*s+r[6]*i,e[1]=r[1]*n+r[4]*s+r[7]*i,e[2]=r[2]*n+r[5]*s+r[8]*i,e[3]=t[3],e}function Ket(){let e=new Gc(3);return Gc!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function Zet(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Q4(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2];return e[0]=s*c-i*a,e[1]=i*o-n*c,e[2]=n*a-s*o,e}function tB(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*s+r[8]*i+r[12])/o,e[1]=(r[1]*n+r[5]*s+r[9]*i+r[13])/o,e[2]=(r[2]*n+r[6]*s+r[10]*i+r[14])/o,e}function X0(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=n*r[0]+s*r[3]+i*r[6],e[1]=n*r[1]+s*r[4]+i*r[7],e[2]=n*r[2]+s*r[5]+i*r[8],e}function eB(e,t,r){let n=r[0],s=r[1],i=r[2],o=r[3],a=t[0],c=t[1],l=t[2],f=s*l-i*c,h=i*a-n*l,u=n*c-s*a,d=s*u-i*h,p=i*f-n*u,m=n*h-s*f,g=o*2;return f*=g,h*=g,u*=g,d*=2,p*=2,m*=2,e[0]=a+f+d,e[1]=c+h+p,e[2]=l+u+m,e}function rB(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0],i[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),i[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function nB(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),i[1]=s[1],i[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function sB(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),i[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),i[2]=s[2],e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function iB(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2],c=Math.sqrt((r*r+n*n+s*s)*(i*i+o*o+a*a)),l=c&&Zet(e,t)/c;return Math.acos(Math.min(Math.max(l,-1),1))}var bVt=function(){let e=Ket();return function(t,r,n,s,i,o){let a,c;for(r||(r=3),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}}();var xT=[0,0,0],Y0,ea=class extends q0{static get ZERO(){return Y0||(Y0=new ea(0,0,0),Object.freeze(Y0)),Y0}constructor(t=0,r=0,n=0){super(-0,-0,-0),arguments.length===1&&Wc(t)?this.copy(t):(De.debug&&(Ge(t),Ge(r),Ge(n)),this[0]=t,this[1]=r,this[2]=n)}set(t,r,n){return this[0]=t,this[1]=r,this[2]=n,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.check()}fromObject(t){return De.debug&&(Ge(t.x),Ge(t.y),Ge(t.z)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t}get ELEMENTS(){return 3}get z(){return this[2]}set z(t){this[2]=Ge(t)}angle(t){return iB(this,t)}cross(t){return Q4(this,this,t),this.check()}rotateX({radians:t,origin:r=xT}){return rB(this,this,r,t),this.check()}rotateY({radians:t,origin:r=xT}){return nB(this,this,r,t),this.check()}rotateZ({radians:t,origin:r=xT}){return sB(this,this,r,t),this.check()}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return tB(this,this,t),this.check()}transformAsVector(t){return K4(this,this,t),this.check()}transformByMatrix3(t){return X0(this,this,t),this.check()}transformByMatrix2(t){return Z4(this,this,t),this.check()}transformByQuaternion(t){return eB(this,this,t),this.check()}};var $0=class extends Hc{toString(){let t="[";if(De.printRowMajor){t+="row-major:";for(let r=0;r<this.RANK;++r)for(let n=0;n<this.RANK;++n)t+=` ${this[n*this.RANK+r]}`}else{t+="column-major:";for(let r=0;r<this.ELEMENTS;++r)t+=` ${this[r]}`}return t+="]",t}getElementIndex(t,r){return r*this.RANK+t}getElement(t,r){return this[r*this.RANK+t]}setElement(t,r,n){return this[r*this.RANK+t]=Ge(n),this}getColumn(t,r=new Array(this.RANK).fill(-0)){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)r[s]=this[n+s];return r}setColumn(t,r){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)this[n+s]=r[s];return this}};function oB(e,t){if(e===t){let r=t[1],n=t[2],s=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=s}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function aB(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=f*o-a*l,u=-f*i+a*c,d=l*i-o*c,p=r*h+n*u+s*d;return p?(p=1/p,e[0]=h*p,e[1]=(-f*n+s*l)*p,e[2]=(a*n-s*o)*p,e[3]=u*p,e[4]=(f*r-s*c)*p,e[5]=(-a*r+s*i)*p,e[6]=d*p,e[7]=(-l*r+n*c)*p,e[8]=(o*r-n*i)*p,e):null}function cB(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*(l*i-o*c)+r*(-l*s+o*a)+n*(c*s-i*a)}function _T(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1],p=r[2],m=r[3],g=r[4],x=r[5],A=r[6],_=r[7],y=r[8];return e[0]=u*n+d*o+p*l,e[1]=u*s+d*a+p*f,e[2]=u*i+d*c+p*h,e[3]=m*n+g*o+x*l,e[4]=m*s+g*a+x*f,e[5]=m*i+g*c+x*h,e[6]=A*n+_*o+y*l,e[7]=A*s+_*a+y*f,e[8]=A*i+_*c+y*h,e}function lB(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1];return e[0]=n,e[1]=s,e[2]=i,e[3]=o,e[4]=a,e[5]=c,e[6]=u*n+d*o+l,e[7]=u*s+d*a+f,e[8]=u*i+d*c+h,e}function fB(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=Math.sin(r),d=Math.cos(r);return e[0]=d*n+u*o,e[1]=d*s+u*a,e[2]=d*i+u*c,e[3]=d*o-u*n,e[4]=d*a-u*s,e[5]=d*c-u*i,e[6]=l,e[7]=f,e[8]=h,e}function yT(e,t,r){let n=r[0],s=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=s*t[3],e[4]=s*t[4],e[5]=s*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function hB(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[3]=f-x,e[6]=u+g,e[1]=f+x,e[4]=1-l-p,e[7]=d-m,e[2]=u-g,e[5]=d+m,e[8]=1-l-h,e}var AT;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL1ROW0=3]="COL1ROW0",e[e.COL1ROW1=4]="COL1ROW1",e[e.COL1ROW2=5]="COL1ROW2",e[e.COL2ROW0=6]="COL2ROW0",e[e.COL2ROW1=7]="COL2ROW1",e[e.COL2ROW2=8]="COL2ROW2"})(AT||(AT={}));var Jet=Object.freeze([1,0,0,0,1,0,0,0,1]),Os=class extends $0{static get IDENTITY(){return trt()}static get ZERO(){return Qet()}get ELEMENTS(){return 9}get RANK(){return 3}get INDICES(){return AT}constructor(t,...r){super(-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):r.length>0?this.copy([t,...r]):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this.check()}identity(){return this.copy(Jet)}fromObject(t){return this.check()}fromQuaternion(t){return hB(this,t),this.check()}set(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=s,this[2]=a,this[3]=r,this[4]=i,this[5]=c,this[6]=n,this[7]=o,this[8]=l,this.check()}determinant(){return cB(this)}transpose(){return oB(this,this),this.check()}invert(){return aB(this,this),this.check()}multiplyLeft(t){return _T(this,t,this),this.check()}multiplyRight(t){return _T(this,this,t),this.check()}rotate(t){return fB(this,this,t),this.check()}scale(t){return Array.isArray(t)?yT(this,this,t):yT(this,this,[t,t]),this.check()}translate(t){return lB(this,this,t),this.check()}transform(t,r){let n;switch(t.length){case 2:n=$4(r||[-0,-0],t,this);break;case 3:n=X0(r||[-0,-0,-0],t,this);break;case 4:n=J4(r||[-0,-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return X4(n,t.length),n}transformVector(t,r){return this.transform(t,r)}transformVector2(t,r){return this.transform(t,r)}transformVector3(t,r){return this.transform(t,r)}},K0,Z0=null;function Qet(){return K0||(K0=new Os([0,0,0,0,0,0,0,0,0]),Object.freeze(K0)),K0}function trt(){return Z0||(Z0=new Os,Object.freeze(Z0)),Z0}var Q0="KHR_texture_transform",ert=Q0,J0=new ea,rrt=new Os,nrt=new Os;async function srt(e,t){if(!new Ct(e).hasExtension(Q0)||!t.gltf?.loadBuffers)return;let s=e.json.materials||[];for(let i=0;i<s.length;i++)irt(i,e)}function irt(e,t){let r=t.json.materials?.[e],n=[r?.pbrMetallicRoughness?.baseColorTexture,r?.emissiveTexture,r?.normalTexture,r?.occlusionTexture,r?.pbrMetallicRoughness?.metallicRoughnessTexture],s=[];for(let i of n)i&&i?.extensions?.[Q0]&&ort(t,e,i,s)}function ort(e,t,r,n){let s=art(r,n);if(!s)return;let i=e.json.meshes||[];for(let o of i)for(let a of o.primitives){let c=a.material;Number.isFinite(c)&&t===c&&crt(e,a,s)}}function art(e,t){let r=e.extensions?.[Q0],{texCoord:n=0}=e,{texCoord:s=n}=r;if(!(t.findIndex(([o,a])=>o===n&&a===s)!==-1)){let o=hrt(r);return n!==s&&(e.texCoord=s),t.push([n,s]),{originalTexCoord:n,texCoord:s,matrix:o}}return null}function crt(e,t,r){let{originalTexCoord:n,texCoord:s,matrix:i}=r,o=t.attributes[`TEXCOORD_${n}`];if(Number.isFinite(o)){let a=e.json.accessors?.[o];if(a&&a.bufferView){let c=e.json.bufferViews?.[a.bufferView];if(c){let{arrayBuffer:l,byteOffset:f}=e.buffers[c.buffer],h=(f||0)+(a.byteOffset||0)+(c.byteOffset||0),{ArrayType:u,length:d}=Fc(a,c),p=F0[a.componentType],m=N0[a.type],g=c.byteStride||p*m,x=new Float32Array(d);for(let A=0;A<a.count;A++){let _=new u(l,h+A*g,2);J0.set(_[0],_[1],1),J0.transformByMatrix3(i),x.set([J0[0],J0[1]],A*m)}n===s?lrt(a,c,e.buffers,x):frt(s,a,t,e,x)}}}}function lrt(e,t,r,n){e.componentType=5126,r.push({arrayBuffer:n.buffer,byteOffset:0,byteLength:n.buffer.byteLength}),t.buffer=r.length-1,t.byteLength=n.buffer.byteLength,t.byteOffset=0,delete t.byteStride}function frt(e,t,r,n,s){n.buffers.push({arrayBuffer:s.buffer,byteOffset:0,byteLength:s.buffer.byteLength});let i=n.json.bufferViews;if(!i)return;i.push({buffer:n.buffers.length-1,byteLength:s.buffer.byteLength,byteOffset:0});let o=n.json.accessors;o&&(o.push({bufferView:i?.length-1,byteOffset:0,componentType:5126,count:t.count,type:"VEC2"}),r.attributes[`TEXCOORD_${e}`]=o.length-1)}function hrt(e){let{offset:t=[0,0],rotation:r=0,scale:n=[1,1]}=e,s=new Os().set(1,0,0,0,1,0,t[0],t[1],1),i=rrt.set(Math.cos(r),Math.sin(r),0,-Math.sin(r),Math.cos(r),0,0,0,1),o=nrt.set(n[0],0,0,0,n[1],0,0,0,1);return s.multiplyRight(i).multiplyRight(o)}var TT={};Wt(TT,{decode:()=>drt,encode:()=>prt,name:()=>urt});var ra="KHR_lights_punctual",urt=ra;async function drt(e){let t=new Ct(e),{json:r}=t,n=t.getExtension(ra);n&&(t.json.lights=n.lights,t.removeExtension(ra));for(let s of r.nodes||[]){let i=t.getObjectExtension(s,ra);i&&(s.light=i.light),t.removeObjectExtension(s,ra)}}async function prt(e){let t=new Ct(e),{json:r}=t;if(r.lights){let n=t.addExtension(ra);Ee(!n.lights),n.lights=r.lights,delete r.lights}if(t.json.lights){for(let n of t.json.lights){let s=n.node;t.addObjectExtension(s,ra,n)}delete t.json.lights}}var vT={};Wt(vT,{decode:()=>grt,encode:()=>xrt,name:()=>mrt});var Hu="KHR_materials_unlit",mrt=Hu;async function grt(e){let t=new Ct(e),{json:r}=t;for(let n of r.materials||[])n.extensions&&n.extensions.KHR_materials_unlit&&(n.unlit=!0),t.removeObjectExtension(n,Hu);t.removeExtension(Hu)}function xrt(e){let t=new Ct(e),{json:r}=t;if(t.materials)for(let n of r.materials||[])n.unlit&&(delete n.unlit,t.addObjectExtension(n,Hu,{}),t.addExtension(Hu))}var ET={};Wt(ET,{decode:()=>yrt,encode:()=>Art,name:()=>_rt});var Gu="KHR_techniques_webgl",_rt=Gu;async function yrt(e){let t=new Ct(e),{json:r}=t,n=t.getExtension(Gu);if(n){let s=brt(n,t);for(let i of r.materials||[]){let o=t.getObjectExtension(i,Gu);o&&(i.technique=Object.assign({},o,s[o.technique]),i.technique.values=Trt(i.technique,t)),t.removeObjectExtension(i,Gu)}t.removeExtension(Gu)}}async function Art(e,t){}function brt(e,t){let{programs:r=[],shaders:n=[],techniques:s=[]}=e,i=new TextDecoder;return n.forEach(o=>{if(Number.isFinite(o.bufferView))o.code=i.decode(t.getTypedArrayForBufferView(o.bufferView));else throw new Error("KHR_techniques_webgl: no shader code")}),r.forEach(o=>{o.fragmentShader=n[o.fragmentShader],o.vertexShader=n[o.vertexShader]}),s.forEach(o=>{o.program=r[o.program]}),s}function Trt(e,t){let r=Object.assign({},e.values);return Object.keys(e.uniforms||{}).forEach(n=>{e.uniforms[n].value&&!(n in r)&&(r[n]=e.uniforms[n].value)}),Object.keys(r).forEach(n=>{typeof r[n]=="object"&&r[n].index!==void 0&&(r[n].texture=t.getTexture(r[n].index))}),r}var uB=[tT,Zb,aT,cT,lT,pT,TT,vT,ET,bT,eT];function dB(e,t={},r){let n=uB.filter(s=>mB(s.name,t));for(let s of n)s.preprocess?.(e,t,r)}async function pB(e,t={},r){let n=uB.filter(s=>mB(s.name,t));for(let s of n)await s.decode?.(e,t,r)}function mB(e,t){let r=t?.gltf?.excludeExtensions||{};return!(e in r&&!r[e])}var MT="KHR_binary_glTF";function gB(e){let t=new Ct(e),{json:r}=t;for(let n of r.images||[]){let s=t.getObjectExtension(n,MT);s&&Object.assign(n,s),t.removeObjectExtension(n,MT)}r.buffers&&r.buffers[0]&&delete r.buffers[0].uri,t.removeExtension(MT)}var xB={accessors:"accessor",animations:"animation",buffers:"buffer",bufferViews:"bufferView",images:"image",materials:"material",meshes:"mesh",nodes:"node",samplers:"sampler",scenes:"scene",skins:"skin",textures:"texture"},Ert={accessor:"accessors",animations:"animation",buffer:"buffers",bufferView:"bufferViews",image:"images",material:"materials",mesh:"meshes",node:"nodes",sampler:"samplers",scene:"scenes",skin:"skins",texture:"textures"},ST=class{idToIndexMap={animations:{},accessors:{},buffers:{},bufferViews:{},images:{},materials:{},meshes:{},nodes:{},samplers:{},scenes:{},skins:{},textures:{}};json;normalize(t,r){this.json=t.json;let n=t.json;switch(n.asset&&n.asset.version){case"2.0":return;case void 0:case"1.0":break;default:console.warn(`glTF: Unknown version ${n.asset.version}`);return}if(!r.normalize)throw new Error("glTF v1 is not supported.");console.warn("Converting glTF v1 to glTF v2 format. This is experimental and may fail."),this._addAsset(n),this._convertTopLevelObjectsToArrays(n),gB(t),this._convertObjectIdsToArrayIndices(n),this._updateObjects(n),this._updateMaterial(n)}_addAsset(t){t.asset=t.asset||{},t.asset.version="2.0",t.asset.generator=t.asset.generator||"Normalized to glTF 2.0 by loaders.gl"}_convertTopLevelObjectsToArrays(t){for(let r in xB)this._convertTopLevelObjectToArray(t,r)}_convertTopLevelObjectToArray(t,r){let n=t[r];if(!(!n||Array.isArray(n))){t[r]=[];for(let s in n){let i=n[s];i.id=i.id||s;let o=t[r].length;t[r].push(i),this.idToIndexMap[r][s]=o}}}_convertObjectIdsToArrayIndices(t){for(let r in xB)this._convertIdsToIndices(t,r);"scene"in t&&(t.scene=this._convertIdToIndex(t.scene,"scene"));for(let r of t.textures)this._convertTextureIds(r);for(let r of t.meshes)this._convertMeshIds(r);for(let r of t.nodes)this._convertNodeIds(r);for(let r of t.scenes)this._convertSceneIds(r)}_convertTextureIds(t){t.source&&(t.source=this._convertIdToIndex(t.source,"image"))}_convertMeshIds(t){for(let r of t.primitives){let{attributes:n,indices:s,material:i}=r;for(let o in n)n[o]=this._convertIdToIndex(n[o],"accessor");s&&(r.indices=this._convertIdToIndex(s,"accessor")),i&&(r.material=this._convertIdToIndex(i,"material"))}}_convertNodeIds(t){t.children&&(t.children=t.children.map(r=>this._convertIdToIndex(r,"node"))),t.meshes&&(t.meshes=t.meshes.map(r=>this._convertIdToIndex(r,"mesh")))}_convertSceneIds(t){t.nodes&&(t.nodes=t.nodes.map(r=>this._convertIdToIndex(r,"node")))}_convertIdsToIndices(t,r){t[r]||(console.warn(`gltf v1: json doesn't contain attribute ${r}`),t[r]=[]);for(let n of t[r])for(let s in n){let i=n[s],o=this._convertIdToIndex(i,s);n[s]=o}}_convertIdToIndex(t,r){let n=Ert[r];if(n in this.idToIndexMap){let s=this.idToIndexMap[n][t];if(!Number.isFinite(s))throw new Error(`gltf v1: failed to resolve ${r} with id ${t}`);return s}return t}_updateObjects(t){for(let r of this.json.buffers)delete r.type}_updateMaterial(t){for(let r of t.materials){r.pbrMetallicRoughness={baseColorFactor:[1,1,1,1],metallicFactor:1,roughnessFactor:1};let n=r.values?.tex||r.values?.texture2d_0||r.values?.diffuseTex,s=t.textures.findIndex(i=>i.id===n);s!==-1&&(r.pbrMetallicRoughness.baseColorTexture={index:s})}}};function _B(e,t={}){return new ST().normalize(e,t)}async function yB(e,t,r=0,n,s){return Mrt(e,t,r,n),_B(e,{normalize:n?.gltf?.normalize}),dB(e,n,s),n?.gltf?.loadBuffers&&e.json.buffers&&await Srt(e,n,s),n?.gltf?.loadImages&&await wrt(e,n,s),await pB(e,n,s),e}function Mrt(e,t,r,n){if(n.uri&&(e.baseUri=n.uri),t instanceof ArrayBuffer&&!B4(t,r,n)&&(t=new TextDecoder().decode(t)),typeof t=="string")e.json=I_(t);else if(t instanceof ArrayBuffer){let o={};r=N4(o,t,r,n.glb),Ee(o.type==="glTF",`Invalid GLB magic string ${o.type}`),e._glb=o,e.json=o.json}else Ee(!1,"GLTF: must be ArrayBuffer or string");let s=e.json.buffers||[];if(e.buffers=new Array(s.length).fill(null),e._glb&&e._glb.header.hasBinChunk){let{binChunks:o}=e._glb;e.buffers[0]={arrayBuffer:o[0].arrayBuffer,byteOffset:o[0].byteOffset,byteLength:o[0].byteLength}}let i=e.json.images||[];e.images=new Array(i.length).fill({})}async function Srt(e,t,r){let n=e.json.buffers||[];for(let s=0;s<n.length;++s){let i=n[s];if(i.uri){let{fetch:o}=r;Ee(o);let a=iT(i.uri,t),l=await(await r?.fetch?.(a))?.arrayBuffer?.();e.buffers[s]={arrayBuffer:l,byteOffset:0,byteLength:l.byteLength},delete i.uri}else e.buffers[s]===null&&(e.buffers[s]={arrayBuffer:new ArrayBuffer(i.byteLength),byteOffset:0,byteLength:i.byteLength})}}async function wrt(e,t,r){let n=Crt(e),s=e.json.images||[],i=[];for(let o of n)i.push(Prt(e,s[o],o,t,r));return await Promise.all(i)}function Crt(e){let t=new Set,r=e.json.textures||[];for(let n of r)n.source!==void 0&&t.add(n.source);return Array.from(t).sort()}async function Prt(e,t,r,n,s){let i;if(t.uri&&!t.hasOwnProperty("bufferView")){let a=iT(t.uri,n),{fetch:c}=s;i=await(await c(a)).arrayBuffer(),t.bufferView={data:i}}if(Number.isFinite(t.bufferView)){let a=M4(e.json,e.buffers,t.bufferView);i=Qi(a.buffer,a.byteOffset,a.byteLength)}Ee(i,"glTF image has no data");let o=await vr(i,[In,qb],{...n,mimeType:t.mimeType,basis:n.basis||{format:O0()}},s);o&&o[0]&&(o={compressed:!0,mipmaps:!1,width:o[0].width,height:o[0].height,data:o[0]}),e.images=e.images||[],e.images[r]=o}var Ls={dataType:null,batchType:null,name:"glTF",id:"gltf",module:"gltf",version:O4,extensions:["gltf","glb"],mimeTypes:["model/gltf+json","model/gltf-binary"],text:!0,binary:!0,tests:["glTF"],parse:Irt,options:{gltf:{normalize:!0,loadBuffers:!0,loadImages:!0,decompressMeshes:!0},log:console}};async function Irt(e,t={},r){t={...Ls.options,...t},t.gltf={...Ls.options.gltf,...t.gltf};let{byteOffset:n=0}=t;return await yB({},e,n,t,r)}var Rrt={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Ort={5120:1,5121:1,5122:2,5123:2,5125:4,5126:4},qr={TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,REPEAT:10497,LINEAR:9729,NEAREST_MIPMAP_LINEAR:9986},Lrt={magFilter:qr.TEXTURE_MAG_FILTER,minFilter:qr.TEXTURE_MIN_FILTER,wrapS:qr.TEXTURE_WRAP_S,wrapT:qr.TEXTURE_WRAP_T},Brt={[qr.TEXTURE_MAG_FILTER]:qr.LINEAR,[qr.TEXTURE_MIN_FILTER]:qr.NEAREST_MIPMAP_LINEAR,[qr.TEXTURE_WRAP_S]:qr.REPEAT,[qr.TEXTURE_WRAP_T]:qr.REPEAT};function Nrt(){return{id:"default-sampler",parameters:Brt}}function Frt(e){return Ort[e]}function Drt(e){return Rrt[e]}var wT=class{baseUri="";jsonUnprocessed;json;buffers=[];images=[];postProcess(t,r={}){let{json:n,buffers:s=[],images:i=[]}=t,{baseUri:o=""}=t;return Ee(n),this.baseUri=o,this.buffers=s,this.images=i,this.jsonUnprocessed=n,this.json=this._resolveTree(t.json,r),this.json}_resolveTree(t,r={}){let n={...t};return this.json=n,t.bufferViews&&(n.bufferViews=t.bufferViews.map((s,i)=>this._resolveBufferView(s,i))),t.images&&(n.images=t.images.map((s,i)=>this._resolveImage(s,i))),t.samplers&&(n.samplers=t.samplers.map((s,i)=>this._resolveSampler(s,i))),t.textures&&(n.textures=t.textures.map((s,i)=>this._resolveTexture(s,i))),t.accessors&&(n.accessors=t.accessors.map((s,i)=>this._resolveAccessor(s,i))),t.materials&&(n.materials=t.materials.map((s,i)=>this._resolveMaterial(s,i))),t.meshes&&(n.meshes=t.meshes.map((s,i)=>this._resolveMesh(s,i))),t.nodes&&(n.nodes=t.nodes.map((s,i)=>this._resolveNode(s,i)),n.nodes=n.nodes.map((s,i)=>this._resolveNodeChildren(s))),t.skins&&(n.skins=t.skins.map((s,i)=>this._resolveSkin(s,i))),t.scenes&&(n.scenes=t.scenes.map((s,i)=>this._resolveScene(s,i))),typeof this.json.scene=="number"&&n.scenes&&(n.scene=n.scenes[this.json.scene]),n}getScene(t){return this._get(this.json.scenes,t)}getNode(t){return this._get(this.json.nodes,t)}getSkin(t){return this._get(this.json.skins,t)}getMesh(t){return this._get(this.json.meshes,t)}getMaterial(t){return this._get(this.json.materials,t)}getAccessor(t){return this._get(this.json.accessors,t)}getCamera(t){return this._get(this.json.cameras,t)}getTexture(t){return this._get(this.json.textures,t)}getSampler(t){return this._get(this.json.samplers,t)}getImage(t){return this._get(this.json.images,t)}getBufferView(t){return this._get(this.json.bufferViews,t)}getBuffer(t){return this._get(this.json.buffers,t)}_get(t,r){if(typeof r=="object")return r;let n=t&&t[r];return n||console.warn(`glTF file error: Could not find ${t}[${r}]`),n}_resolveScene(t,r){return{...t,id:t.id||`scene-${r}`,nodes:(t.nodes||[]).map(n=>this.getNode(n))}}_resolveNode(t,r){let n={...t,id:t?.id||`node-${r}`};return t.mesh!==void 0&&(n.mesh=this.getMesh(t.mesh)),t.camera!==void 0&&(n.camera=this.getCamera(t.camera)),t.skin!==void 0&&(n.skin=this.getSkin(t.skin)),t.meshes!==void 0&&t.meshes.length&&(n.mesh=t.meshes.reduce((s,i)=>{let o=this.getMesh(i);return s.id=o.id,s.primitives=s.primitives.concat(o.primitives),s},{primitives:[]})),n}_resolveNodeChildren(t){return t.children&&(t.children=t.children.map(r=>this.getNode(r))),t}_resolveSkin(t,r){let n=typeof t.inverseBindMatrices=="number"?this.getAccessor(t.inverseBindMatrices):void 0;return{...t,id:t.id||`skin-${r}`,inverseBindMatrices:n}}_resolveMesh(t,r){let n={...t,id:t.id||`mesh-${r}`,primitives:[]};return t.primitives&&(n.primitives=t.primitives.map(s=>{let i={...s,attributes:{},indices:void 0,material:void 0},o=s.attributes;for(let a in o)i.attributes[a]=this.getAccessor(o[a]);return s.indices!==void 0&&(i.indices=this.getAccessor(s.indices)),s.material!==void 0&&(i.material=this.getMaterial(s.material)),i})),n}_resolveMaterial(t,r){let n={...t,id:t.id||`material-${r}`};if(n.normalTexture&&(n.normalTexture={...n.normalTexture},n.normalTexture.texture=this.getTexture(n.normalTexture.index)),n.occlusionTexture&&(n.occlusionTexture={...n.occlusionTexture},n.occlusionTexture.texture=this.getTexture(n.occlusionTexture.index)),n.emissiveTexture&&(n.emissiveTexture={...n.emissiveTexture},n.emissiveTexture.texture=this.getTexture(n.emissiveTexture.index)),n.emissiveFactor||(n.emissiveFactor=n.emissiveTexture?[1,1,1]:[0,0,0]),n.pbrMetallicRoughness){n.pbrMetallicRoughness={...n.pbrMetallicRoughness};let s=n.pbrMetallicRoughness;s.baseColorTexture&&(s.baseColorTexture={...s.baseColorTexture},s.baseColorTexture.texture=this.getTexture(s.baseColorTexture.index)),s.metallicRoughnessTexture&&(s.metallicRoughnessTexture={...s.metallicRoughnessTexture},s.metallicRoughnessTexture.texture=this.getTexture(s.metallicRoughnessTexture.index))}return n}_resolveAccessor(t,r){let n=Frt(t.componentType),s=Drt(t.type),i=n*s,o={...t,id:t.id||`accessor-${r}`,bytesPerComponent:n,components:s,bytesPerElement:i,value:void 0,bufferView:void 0,sparse:void 0};if(t.bufferView!==void 0&&(o.bufferView=this.getBufferView(t.bufferView)),o.bufferView){let a=o.bufferView.buffer,{ArrayType:c,byteLength:l}=Fc(o,o.bufferView),f=(o.bufferView.byteOffset||0)+(o.byteOffset||0)+a.byteOffset,h=a.arrayBuffer.slice(f,f+l);o.bufferView.byteStride&&(h=this._getValueFromInterleavedBuffer(a,f,o.bufferView.byteStride,o.bytesPerElement,o.count)),o.value=new c(h)}return o}_getValueFromInterleavedBuffer(t,r,n,s,i){let o=new Uint8Array(i*s);for(let a=0;a<i;a++){let c=r+a*n;o.set(new Uint8Array(t.arrayBuffer.slice(c,c+s)),a*s)}return o.buffer}_resolveTexture(t,r){return{...t,id:t.id||`texture-${r}`,sampler:typeof t.sampler=="number"?this.getSampler(t.sampler):Nrt(),source:typeof t.source=="number"?this.getImage(t.source):void 0}}_resolveSampler(t,r){let n={id:t.id||`sampler-${r}`,...t,parameters:{}};for(let s in n){let i=this._enumSamplerParameter(s);i!==void 0&&(n.parameters[i]=n[s])}return n}_enumSamplerParameter(t){return Lrt[t]}_resolveImage(t,r){let n={...t,id:t.id||`image-${r}`,image:null,bufferView:t.bufferView!==void 0?this.getBufferView(t.bufferView):void 0},s=this.images[r];return s&&(n.image=s),n}_resolveBufferView(t,r){let n=t.buffer,s=this.buffers[n].arrayBuffer,i=this.buffers[n].byteOffset||0;return t.byteOffset&&(i+=t.byteOffset),{id:`bufferView-${r}`,...t,buffer:this.buffers[n],data:new Uint8Array(s,i,t.byteLength)}}_resolveCamera(t,r){let n={...t,id:t.id||`camera-${r}`};return n.perspective,n.orthographic,n}};function na(e,t){return new wT().postProcess(e,t)}async function AB(e){let t=[];return e.scenes.forEach(r=>{r.traverse(n=>{Object.values(n.model.uniforms).forEach(s=>{s.loaded===!1&&t.push(s)})})}),await krt(()=>t.some(r=>!r.loaded))}async function krt(e){for(;e();)await new Promise(t=>requestAnimationFrame(t))}var bB=`uniform scenegraphUniforms {
  float sizeScale;
  float sizeMinPixels;
  float sizeMaxPixels;
  mat4 sceneModelMatrix;
  bool composeModelMatrix;
} scenegraph;
`,TB={name:"scenegraph",vs:bB,fs:bB,uniformTypes:{sizeScale:"f32",sizeMinPixels:"f32",sizeMaxPixels:"f32",sceneModelMatrix:"mat4x4<f32>",composeModelMatrix:"f32"}};var vB=`#version 300 es
#define SHADER_NAME scenegraph-layer-vertex-shader
in vec3 instancePositions;
in vec3 instancePositions64Low;
in vec4 instanceColors;
in vec3 instancePickingColors;
in vec3 instanceModelMatrixCol0;
in vec3 instanceModelMatrixCol1;
in vec3 instanceModelMatrixCol2;
in vec3 instanceTranslation;
in vec3 positions;
#ifdef HAS_UV
in vec2 texCoords;
#endif
#ifdef LIGHTING_PBR
#ifdef HAS_NORMALS
in vec3 normals;
#endif
#endif
out vec4 vColor;
#ifndef LIGHTING_PBR
#ifdef HAS_UV
out vec2 vTEXCOORD_0;
#endif
#endif
void main(void) {
#if defined(HAS_UV) && !defined(LIGHTING_PBR)
vTEXCOORD_0 = texCoords;
geometry.uv = texCoords;
#endif
geometry.worldPosition = instancePositions;
geometry.pickingColor = instancePickingColors;
mat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);
vec3 normal = vec3(0.0, 0.0, 1.0);
#ifdef LIGHTING_PBR
#ifdef HAS_NORMALS
normal = instanceModelMatrix * (scenegraph.sceneModelMatrix * vec4(normals, 0.0)).xyz;
#endif
#endif
float originalSize = project_size_to_pixel(scenegraph.sizeScale);
float clampedSize = clamp(originalSize, scenegraph.sizeMinPixels, scenegraph.sizeMaxPixels);
vec3 pos = (instanceModelMatrix * (scenegraph.sceneModelMatrix * vec4(positions, 1.0)).xyz) * scenegraph.sizeScale * (clampedSize / originalSize) + instanceTranslation;
if(scenegraph.composeModelMatrix) {
DECKGL_FILTER_SIZE(pos, geometry);
geometry.normal = project_normal(normal);
geometry.worldPosition += pos;
gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), geometry.position);
}
else {
pos = project_size(pos);
DECKGL_FILTER_SIZE(pos, geometry);
gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, geometry.position);
geometry.normal = project_normal(normal);
}
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
#ifdef LIGHTING_PBR
pbr_vPosition = geometry.position.xyz;
#ifdef HAS_NORMALS
pbr_vNormal = geometry.normal;
#endif
#ifdef HAS_UV
pbr_vUV = texCoords;
#else
pbr_vUV = vec2(0., 0.);
#endif
geometry.uv = pbr_vUV;
#endif
vColor = instanceColors;
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var EB=`#version 300 es
#define SHADER_NAME scenegraph-layer-fragment-shader
in vec4 vColor;
out vec4 fragColor;
#ifndef LIGHTING_PBR
#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)
in vec2 vTEXCOORD_0;
uniform sampler2D pbr_baseColorSampler;
#endif
#endif
void main(void) {
#ifdef LIGHTING_PBR
fragColor = vColor * pbr_filterColor(vec4(0));
geometry.uv = pbr_vUV;
#else
#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)
fragColor = vColor * texture(pbr_baseColorSampler, vTEXCOORD_0);
geometry.uv = vTEXCOORD_0;
#else
fragColor = vColor;
#endif
#endif
fragColor.a *= layer.opacity;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var MB=[255,255,255,255],Urt={scenegraph:{type:"object",value:null,async:!0},getScene:e=>e&&e.scenes?typeof e.scene=="object"?e.scene:e.scenes[e.scene||0]:e,getAnimator:e=>e&&e.animator,_animations:null,sizeScale:{type:"number",value:1,min:0},sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:MB},_lighting:"flat",_imageBasedLightingEnvironment:void 0,getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]},loaders:[Ls]},ju=class extends _t{getShaders(){let t={},r;this.props._lighting==="pbr"?(r=go,t.LIGHTING_PBR=1):r={name:"pbrMaterial"};let n=[ft,Pt,TB,r];return super.getShaders({defines:t,vs:vB,fs:EB,modules:n})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),accessor:"getPosition",transition:!0},instanceColors:{type:"unorm8",size:this.props.colorFormat.length,accessor:"getColor",defaultValue:MB,transition:!0},instanceModelMatrix:C0})}updateState(t){super.updateState(t);let{props:r,oldProps:n}=t;r.scenegraph!==n.scenegraph?this._updateScenegraph():r._animations!==n._animations&&this._applyAnimationsProp(this.state.animator,r._animations)}finalizeState(t){super.finalizeState(t),this.state.scenegraph?.destroy()}get isLoaded(){return Boolean(this.state?.scenegraph&&super.isLoaded)}_updateScenegraph(){let t=this.props,{device:r}=this.context,n=null;if(t.scenegraph instanceof Hr)n={scenes:[t.scenegraph]};else if(t.scenegraph&&typeof t.scenegraph=="object"){let a=t.scenegraph,c=a.json?na(a):a,l=Kb(r,c,this._getModelOptions());n={gltf:c,...l},AB(l).then(()=>{this.setNeedsRedraw()}).catch(f=>{this.raiseError(f,"loading glTF")})}let s={layer:this,device:this.context.device},i=t.getScene(n,s),o=t.getAnimator(n,s);if(i instanceof Pr){this.state.scenegraph?.destroy(),this._applyAnimationsProp(o,t._animations);let a=[];i.traverse(c=>{c instanceof kn&&a.push(c.model)}),this.setState({scenegraph:i,animator:o,models:a}),this.getAttributeManager().invalidateAll()}else i!==null&&W.warn("invalid scenegraph:",i)()}_applyAnimationsProp(t,r){if(!t||!r)return;let n=t.getAnimations();Object.keys(r).sort().forEach(s=>{let i=r[s];if(s==="*")n.forEach(o=>{Object.assign(o,i)});else if(Number.isFinite(Number(s))){let o=Number(s);o>=0&&o<n.length?Object.assign(n[o],i):W.warn(`animation ${s} not found`)()}else{let o=n.find(({name:a})=>a===s);o?Object.assign(o,i):W.warn(`animation ${s} not found`)()}})}_getModelOptions(){let{_imageBasedLightingEnvironment:t}=this.props,r;return t&&(typeof t=="function"?r=t({gl:this.context.gl,layer:this}):r=t),{imageBasedLightingEnvironment:r,modelOptions:{id:this.props.id,isInstanced:!0,bufferLayout:this.getAttributeManager().getBufferLayouts(),...this.getShaders()},useTangents:!1}}draw({context:t}){if(!this.state.scenegraph)return;this.props._animations&&this.state.animator&&(this.state.animator.animate(t.timeline.getTime()),this.setNeedsRedraw());let{viewport:r,renderPass:n}=this.context,{sizeScale:s,sizeMinPixels:i,sizeMaxPixels:o,coordinateSystem:a}=this.props,c=this.getNumInstances();this.state.scenegraph.traverse((l,{worldMatrix:f})=>{if(l instanceof kn){let{model:h}=l;h.setInstanceCount(c);let u={camera:h.uniforms.cameraPosition},d={sizeScale:s,sizeMinPixels:i,sizeMaxPixels:o,composeModelMatrix:P0(r,a),sceneModelMatrix:f};h.shaderInputs.setProps({pbrProjection:u,scenegraph:d}),h.draw(n)}})}};ju.defaultProps=Urt;ju.layerName="ScenegraphLayer";var t1=ju;var SB=`uniform meshUniforms {
  bool pickFeatureIds;
} mesh;
`,wB={name:"mesh",vs:SB,fs:SB,uniformTypes:{pickFeatureIds:"f32"}};var CB=`#version 300 es
#define SHADER_NAME simple-mesh-layer-vs
in vec3 positions;
in vec3 normals;
in vec3 colors;
in vec2 texCoords;
in vec4 uvRegions;
in vec3 featureIdsPickingColors;
in vec4 instanceColors;
in vec3 instancePickingColors;
in vec3 instanceModelMatrixCol0;
in vec3 instanceModelMatrixCol1;
in vec3 instanceModelMatrixCol2;
out vec2 vTexCoord;
out vec3 cameraPosition;
out vec3 normals_commonspace;
out vec4 position_commonspace;
out vec4 vColor;
vec2 applyUVRegion(vec2 uv) {
#ifdef HAS_UV_REGIONS
return fract(uv) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;
#else
return uv;
#endif
}
void main(void) {
vec2 uv = applyUVRegion(texCoords);
geometry.uv = uv;
if (mesh.pickFeatureIds) {
geometry.pickingColor = featureIdsPickingColors;
} else {
geometry.pickingColor = instancePickingColors;
}
mat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);
vTexCoord = uv;
cameraPosition = project.cameraPosition;
vColor = vec4(colors * instanceColors.rgb, instanceColors.a);
vec3 pos = (instanceModelMatrix * positions) * simpleMesh.sizeScale;
vec3 projectedPosition = project_position(positions);
position_commonspace = vec4(projectedPosition, 1.0);
gl_Position = project_common_position_to_clipspace(position_commonspace);
geometry.position = position_commonspace;
normals_commonspace = project_normal(instanceModelMatrix * normals);
geometry.normal = normals_commonspace;
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
#ifdef MODULE_PBRMATERIAL
pbr_vPosition = geometry.position.xyz;
#ifdef HAS_NORMALS
pbr_vNormal = geometry.normal;
#endif
#ifdef HAS_UV
pbr_vUV = uv;
#else
pbr_vUV = vec2(0., 0.);
#endif
geometry.uv = pbr_vUV;
#endif
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var PB=`#version 300 es
#define SHADER_NAME simple-mesh-layer-fs
precision highp float;
uniform sampler2D sampler;
in vec2 vTexCoord;
in vec3 cameraPosition;
in vec3 normals_commonspace;
in vec4 position_commonspace;
in vec4 vColor;
out vec4 fragColor;
void main(void) {
#ifdef MODULE_PBRMATERIAL
fragColor = vColor * pbr_filterColor(vec4(0));
geometry.uv = pbr_vUV;
fragColor.a *= layer.opacity;
#else
geometry.uv = vTexCoord;
vec3 normal;
if (simpleMesh.flatShading) {
normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));
} else {
normal = normals_commonspace;
}
vec4 color = simpleMesh.hasTexture ? texture(sampler, vTexCoord) : vColor;
vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);
fragColor = vec4(lightColor, color.a * layer.opacity);
#endif
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;function zrt(e){let t=e.positions||e.POSITION,r=t.value.length/t.size;e.COLOR_0||e.colors||(e.colors={size:4,value:new Uint8Array(r*4).fill(255),normalized:!0})}var Vrt={pbrMaterial:{type:"object",value:null},featureIds:{type:"array",value:null,optional:!0}},qu=class extends Jo{getShaders(){let t=super.getShaders();return t.modules.push(go,wB),{...t,vs:CB,fs:PB}}initializeState(){let{featureIds:t}=this.props;super.initializeState();let r=this.getAttributeManager();t&&r.add({featureIdsPickingColors:{type:"uint8",size:3,noAlloc:!0,update:this.calculateFeatureIdsPickingColors}})}updateState(t){super.updateState(t);let{props:r,oldProps:n}=t;r.pbrMaterial!==n.pbrMaterial&&this.updatePbrMaterialUniforms(r.pbrMaterial)}draw(t){let{featureIds:r}=this.props,{model:n}=this.state;if(!n)return;let s={pickFeatureIds:Boolean(r)},i={camera:n.uniforms.cameraPosition};n.shaderInputs.setProps({pbrProjection:i,mesh:s}),super.draw(t)}getModel(t){let{id:r}=this.props,n=this.parseMaterial(this.props.pbrMaterial,t);this.setState({parsedPBRMaterial:n});let s=this.getShaders();return zrt(t.attributes),new tt(this.context.device,{...this.getShaders(),id:r,geometry:t,bufferLayout:this.getAttributeManager().getBufferLayouts(),defines:{...s.defines,...n?.defines,HAS_UV_REGIONS:t.attributes.uvRegions?1:0},parameters:n?.parameters,isInstanced:!0})}updatePbrMaterialUniforms(t){let{model:r}=this.state;if(r){let{mesh:n}=this.props,s=this.parseMaterial(t,n);this.setState({parsedPBRMaterial:s});let{pbr_baseColorSampler:i}=s.bindings,{emptyTexture:o}=this.state,a={sampler:i||o,hasTexture:Boolean(i)},{camera:c,...l}={...s.bindings,...s.uniforms};r.shaderInputs.setProps({simpleMesh:a,pbrMaterial:l})}}parseMaterial(t,r){let n=Boolean(t.pbrMetallicRoughness&&t.pbrMetallicRoughness.baseColorTexture);return Uu(this.context.device,{unlit:n,...t},{NORMAL:r.attributes.normals,TEXCOORD_0:r.attributes.texCoords},{pbrDebug:!1,lights:!0,useTangents:!1})}calculateFeatureIdsPickingColors(t){let r=this.props.featureIds,n=new Uint8ClampedArray(r.length*t.size),s=[];for(let i=0;i<r.length;i++)this.encodePickingColor(r[i],s),n[i*3]=s[0],n[i*3+1]=s[1],n[i*3+2]=s[2];t.value=n}finalizeState(t){super.finalizeState(t),this.state.parsedPBRMaterial?.generatedTextures.forEach(r=>r.destroy()),this.setState({parsedPBRMaterial:null})}};qu.layerName="MeshLayer";qu.defaultProps=Vrt;var IB=qu;var Wrt=1/Math.PI*180,K9t=1/180*Math.PI,Hrt={EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1};globalThis.mathgl=globalThis.mathgl||{config:{...Hrt}};var fe=globalThis.mathgl.config;function CT(e,{precision:t=fe.precision}={}){return e=Grt(e),`${parseFloat(e.toPrecision(t))}`}function Zn(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}function Xr(e,t){return qrt(e,r=>r*Wrt,t)}function e1(e,t,r){let n=fe.EPSILON;r&&(fe.EPSILON=r);try{if(e===t)return!0;if(Zn(e)&&Zn(t)){if(e.length!==t.length)return!1;for(let s=0;s<e.length;++s)if(!e1(e[s],t[s]))return!1;return!0}return e&&e.equals?e.equals(t):t&&t.equals?t.equals(e):typeof e=="number"&&typeof t=="number"?Math.abs(e-t)<=fe.EPSILON*Math.max(1,Math.abs(e),Math.abs(t)):!1}finally{fe.EPSILON=n}}function Grt(e){return Math.round(e/fe.EPSILON)*fe.EPSILON}function jrt(e){return e.clone?e.clone():new Array(e.length)}function qrt(e,t,r){if(Zn(e)){let n=e;r=r||jrt(n);for(let s=0;s<r.length&&s<n.length;++s){let i=typeof e=="number"?e:e[s];r[s]=t(i,s,r)}return r}return t(e)}var Bi=class extends Array{clone(){return new this.constructor().copy(this)}fromArray(t,r=0){for(let n=0;n<this.ELEMENTS;++n)this[n]=t[n+r];return this.check()}toArray(t=[],r=0){for(let n=0;n<this.ELEMENTS;++n)t[r+n]=this[n];return t}toObject(t){return t}from(t){return Array.isArray(t)?this.copy(t):this.fromObject(t)}to(t){return t===this?this:Zn(t)?this.toArray(t):this.toObject(t)}toTarget(t){return t?this.to(t):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(fe)}formatString(t){let r="";for(let n=0;n<this.ELEMENTS;++n)r+=(n>0?", ":"")+CT(this[n],t);return`${t.printTypes?this.constructor.name:""}[${r}]`}equals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(!e1(this[r],t[r]))return!1;return!0}exactEquals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(this[r]!==t[r])return!1;return!0}negate(){for(let t=0;t<this.ELEMENTS;++t)this[t]=-this[t];return this.check()}lerp(t,r,n){if(n===void 0)return this.lerp(this,t,r);for(let s=0;s<this.ELEMENTS;++s){let i=t[s],o=typeof r=="number"?r:r[s];this[s]=i+n*(o-i)}return this.check()}min(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.min(t[r],this[r]);return this.check()}max(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.max(t[r],this[r]);return this.check()}clamp(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t[n]),r[n]);return this.check()}add(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]+=r[n];return this.check()}subtract(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]-=r[n];return this.check()}scale(t){if(typeof t=="number")for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;else for(let r=0;r<this.ELEMENTS&&r<t.length;++r)this[r]*=t[r];return this.check()}multiplyByScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}check(){if(fe.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let t=this.length===this.ELEMENTS;for(let r=0;r<this.ELEMENTS;++r)t=t&&Number.isFinite(this[r]);return t}sub(t){return this.subtract(t)}setScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=t;return this.check()}addScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]+=t;return this.check()}subScalar(t){return this.addScalar(-t)}multiplyScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}divideScalar(t){return this.multiplyByScalar(1/t)}clampScalar(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t),r);return this.check()}get elements(){return this}};function Xrt(e,t){if(e.length!==t)return!1;for(let r=0;r<e.length;++r)if(!Number.isFinite(e[r]))return!1;return!0}function yt(e){if(!Number.isFinite(e))throw new Error(`Invalid number ${JSON.stringify(e)}`);return e}function Ni(e,t,r=""){if(fe.debug&&!Xrt(e,t))throw new Error(`math.gl: ${r} some fields set to invalid numbers'`);return e}function PT(e,t){if(!e)throw new Error(`math.gl assertion ${t}`)}var jc=class extends Bi{get x(){return this[0]}set x(t){this[0]=yt(t)}get y(){return this[1]}set y(t){this[1]=yt(t)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let t=0;for(let r=0;r<this.ELEMENTS;++r)t+=this[r]*this[r];return t}magnitudeSquared(){return this.lengthSquared()}distance(t){return Math.sqrt(this.distanceSquared(t))}distanceSquared(t){let r=0;for(let n=0;n<this.ELEMENTS;++n){let s=this[n]-t[n];r+=s*s}return yt(r)}dot(t){let r=0;for(let n=0;n<this.ELEMENTS;++n)r+=this[n]*t[n];return yt(r)}normalize(){let t=this.magnitude();if(t!==0)for(let r=0;r<this.ELEMENTS;++r)this[r]/=t;return this.check()}multiply(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]*=r[n];return this.check()}divide(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]/=r[n];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(t){return this.distance(t)}distanceToSquared(t){return this.distanceSquared(t)}getComponent(t){return PT(t>=0&&t<this.ELEMENTS,"index is out of range"),yt(this[t])}setComponent(t,r){return PT(t>=0&&t<this.ELEMENTS,"index is out of range"),this[t]=r,this.check()}addVectors(t,r){return this.copy(t).add(r)}subVectors(t,r){return this.copy(t).subtract(r)}multiplyVectors(t,r){return this.copy(t).multiply(r)}addScaledVector(t,r){return this.add(new this.constructor(t).multiplyScalar(r))}};var je=typeof Float32Array<"u"?Float32Array:Array;var aWt=Math.PI/180;function Yrt(){let e=new je(2);return je!=Float32Array&&(e[0]=0,e[1]=0),e}function LB(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[3]*s+r[6],e[1]=r[1]*n+r[4]*s+r[7],e}function BB(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[4]*s+r[12],e[1]=r[1]*n+r[5]*s+r[13],e}var cWt=function(){let e=Yrt();return function(t,r,n,s,i,o){let a,c;for(r||(r=2),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],i(e,e,o),t[a]=e[0],t[a+1]=e[1];return t}}();function NB(e,t,r){let n=t[0],s=t[1],i=r[3]*n+r[7]*s||1;return e[0]=(r[0]*n+r[4]*s)/i,e[1]=(r[1]*n+r[5]*s)/i,e}function r1(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i||1;return e[0]=(r[0]*n+r[4]*s+r[8]*i)/o,e[1]=(r[1]*n+r[5]*s+r[9]*i)/o,e[2]=(r[2]*n+r[6]*s+r[10]*i)/o,e}function FB(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e}function DB(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e[3]=t[3],e}function n1(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=r[0]*n+r[3]*s+r[6]*i,e[1]=r[1]*n+r[4]*s+r[7]*i,e[2]=r[2]*n+r[5]*s+r[8]*i,e[3]=t[3],e}function IT(){let e=new je(3);return je!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function $rt(e){let t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)}function RT(e,t,r){let n=new je(3);return n[0]=e,n[1]=t,n[2]=r,n}function kB(e,t){let r=t[0],n=t[1],s=t[2],i=r*r+n*n+s*s;return i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function OT(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function qc(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2];return e[0]=s*c-i*a,e[1]=i*o-n*c,e[2]=n*a-s*o,e}function Xc(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*s+r[8]*i+r[12])/o,e[1]=(r[1]*n+r[5]*s+r[9]*i+r[13])/o,e[2]=(r[2]*n+r[6]*s+r[10]*i+r[14])/o,e}function s1(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=n*r[0]+s*r[3]+i*r[6],e[1]=n*r[1]+s*r[4]+i*r[7],e[2]=n*r[2]+s*r[5]+i*r[8],e}function i1(e,t,r){let n=r[0],s=r[1],i=r[2],o=r[3],a=t[0],c=t[1],l=t[2],f=s*l-i*c,h=i*a-n*l,u=n*c-s*a,d=s*u-i*h,p=i*f-n*u,m=n*h-s*f,g=o*2;return f*=g,h*=g,u*=g,d*=2,p*=2,m*=2,e[0]=a+f+d,e[1]=c+h+p,e[2]=l+u+m,e}function UB(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0],i[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),i[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function zB(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),i[1]=s[1],i[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function VB(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),i[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),i[2]=s[2],e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function WB(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2],c=Math.sqrt((r*r+n*n+s*s)*(i*i+o*o+a*a)),l=c&&OT(e,t)/c;return Math.acos(Math.min(Math.max(l,-1),1))}var HB=$rt;var hWt=function(){let e=IT();return function(t,r,n,s,i,o){let a,c;for(r||(r=3),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}}();var LT=[0,0,0],o1,Z=class extends jc{static get ZERO(){return o1||(o1=new Z(0,0,0),Object.freeze(o1)),o1}constructor(t=0,r=0,n=0){super(-0,-0,-0),arguments.length===1&&Zn(t)?this.copy(t):(fe.debug&&(yt(t),yt(r),yt(n)),this[0]=t,this[1]=r,this[2]=n)}set(t,r,n){return this[0]=t,this[1]=r,this[2]=n,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.check()}fromObject(t){return fe.debug&&(yt(t.x),yt(t.y),yt(t.z)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t}get ELEMENTS(){return 3}get z(){return this[2]}set z(t){this[2]=yt(t)}angle(t){return WB(this,t)}cross(t){return qc(this,this,t),this.check()}rotateX({radians:t,origin:r=LT}){return UB(this,this,r,t),this.check()}rotateY({radians:t,origin:r=LT}){return zB(this,this,r,t),this.check()}rotateZ({radians:t,origin:r=LT}){return VB(this,this,r,t),this.check()}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return Xc(this,this,t),this.check()}transformAsVector(t){return r1(this,this,t),this.check()}transformByMatrix3(t){return s1(this,this,t),this.check()}transformByMatrix2(t){return FB(this,this,t),this.check()}transformByQuaternion(t){return i1(this,this,t),this.check()}};var a1,Yc=class extends jc{static get ZERO(){return a1||(a1=new Yc(0,0,0,0),Object.freeze(a1)),a1}constructor(t=0,r=0,n=0,s=0){super(-0,-0,-0,-0),Zn(t)&&arguments.length===1?this.copy(t):(fe.debug&&(yt(t),yt(r),yt(n),yt(s)),this[0]=t,this[1]=r,this[2]=n,this[3]=s)}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}fromObject(t){return fe.debug&&(yt(t.x),yt(t.y),yt(t.z),yt(t.w)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t.w=this[3],t}get ELEMENTS(){return 4}get z(){return this[2]}set z(t){this[2]=yt(t)}get w(){return this[3]}set w(t){this[3]=yt(t)}transform(t){return Xc(this,this,t),this.check()}transformByMatrix3(t){return n1(this,this,t),this.check()}transformByMatrix2(t){return DB(this,this,t),this.check()}transformByQuaternion(t){return i1(this,this,t),this.check()}applyMatrix4(t){return t.transform(this,this),this}};var $c=class extends Bi{toString(){let t="[";if(fe.printRowMajor){t+="row-major:";for(let r=0;r<this.RANK;++r)for(let n=0;n<this.RANK;++n)t+=` ${this[n*this.RANK+r]}`}else{t+="column-major:";for(let r=0;r<this.ELEMENTS;++r)t+=` ${this[r]}`}return t+="]",t}getElementIndex(t,r){return r*this.RANK+t}getElement(t,r){return this[r*this.RANK+t]}setElement(t,r,n){return this[r*this.RANK+t]=yt(n),this}getColumn(t,r=new Array(this.RANK).fill(-0)){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)r[s]=this[n+s];return r}setColumn(t,r){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)this[n+s]=r[s];return this}};function GB(){let e=new je(9);return je!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function jB(e,t){if(e===t){let r=t[1],n=t[2],s=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=s}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function qB(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=f*o-a*l,u=-f*i+a*c,d=l*i-o*c,p=r*h+n*u+s*d;return p?(p=1/p,e[0]=h*p,e[1]=(-f*n+s*l)*p,e[2]=(a*n-s*o)*p,e[3]=u*p,e[4]=(f*r-s*c)*p,e[5]=(-a*r+s*i)*p,e[6]=d*p,e[7]=(-l*r+n*c)*p,e[8]=(o*r-n*i)*p,e):null}function XB(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*(l*i-o*c)+r*(-l*s+o*a)+n*(c*s-i*a)}function BT(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1],p=r[2],m=r[3],g=r[4],x=r[5],A=r[6],_=r[7],y=r[8];return e[0]=u*n+d*o+p*l,e[1]=u*s+d*a+p*f,e[2]=u*i+d*c+p*h,e[3]=m*n+g*o+x*l,e[4]=m*s+g*a+x*f,e[5]=m*i+g*c+x*h,e[6]=A*n+_*o+y*l,e[7]=A*s+_*a+y*f,e[8]=A*i+_*c+y*h,e}function YB(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1];return e[0]=n,e[1]=s,e[2]=i,e[3]=o,e[4]=a,e[5]=c,e[6]=u*n+d*o+l,e[7]=u*s+d*a+f,e[8]=u*i+d*c+h,e}function $B(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=Math.sin(r),d=Math.cos(r);return e[0]=d*n+u*o,e[1]=d*s+u*a,e[2]=d*i+u*c,e[3]=d*o-u*n,e[4]=d*a-u*s,e[5]=d*c-u*i,e[6]=l,e[7]=f,e[8]=h,e}function NT(e,t,r){let n=r[0],s=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=s*t[3],e[4]=s*t[4],e[5]=s*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function KB(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[3]=f-x,e[6]=u+g,e[1]=f+x,e[4]=1-l-p,e[7]=d-m,e[2]=u-g,e[5]=d+m,e[8]=1-l-h,e}var FT;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL1ROW0=3]="COL1ROW0",e[e.COL1ROW1=4]="COL1ROW1",e[e.COL1ROW2=5]="COL1ROW2",e[e.COL2ROW0=6]="COL2ROW0",e[e.COL2ROW1=7]="COL2ROW1",e[e.COL2ROW2=8]="COL2ROW2"})(FT||(FT={}));var Jrt=Object.freeze([1,0,0,0,1,0,0,0,1]),sa=class extends $c{static get IDENTITY(){return tnt()}static get ZERO(){return Qrt()}get ELEMENTS(){return 9}get RANK(){return 3}get INDICES(){return FT}constructor(t,...r){super(-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):r.length>0?this.copy([t,...r]):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this.check()}identity(){return this.copy(Jrt)}fromObject(t){return this.check()}fromQuaternion(t){return KB(this,t),this.check()}set(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=s,this[2]=a,this[3]=r,this[4]=i,this[5]=c,this[6]=n,this[7]=o,this[8]=l,this.check()}determinant(){return XB(this)}transpose(){return jB(this,this),this.check()}invert(){return qB(this,this),this.check()}multiplyLeft(t){return BT(this,t,this),this.check()}multiplyRight(t){return BT(this,this,t),this.check()}rotate(t){return $B(this,this,t),this.check()}scale(t){return Array.isArray(t)?NT(this,this,t):NT(this,this,[t,t]),this.check()}translate(t){return YB(this,this,t),this.check()}transform(t,r){let n;switch(t.length){case 2:n=LB(r||[-0,-0],t,this);break;case 3:n=s1(r||[-0,-0,-0],t,this);break;case 4:n=n1(r||[-0,-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return Ni(n,t.length),n}transformVector(t,r){return this.transform(t,r)}transformVector2(t,r){return this.transform(t,r)}transformVector3(t,r){return this.transform(t,r)}},c1,l1=null;function Qrt(){return c1||(c1=new sa([0,0,0,0,0,0,0,0,0]),Object.freeze(c1)),c1}function tnt(){return l1||(l1=new sa,Object.freeze(l1)),l1}function ent(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ZB(e,t){if(e===t){let r=t[1],n=t[2],s=t[3],i=t[6],o=t[7],a=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=i,e[11]=t[14],e[12]=s,e[13]=o,e[14]=a}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function JB(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],g=t[14],x=t[15],A=r*a-n*o,_=r*c-s*o,y=r*l-i*o,T=n*c-s*a,v=n*l-i*a,C=s*l-i*c,w=f*m-h*p,E=f*g-u*p,b=f*x-d*p,R=h*g-u*m,k=h*x-d*m,D=u*x-d*g,P=A*D-_*k+y*R+T*b-v*E+C*w;return P?(P=1/P,e[0]=(a*D-c*k+l*R)*P,e[1]=(s*k-n*D-i*R)*P,e[2]=(m*C-g*v+x*T)*P,e[3]=(u*v-h*C-d*T)*P,e[4]=(c*b-o*D-l*E)*P,e[5]=(r*D-s*b+i*E)*P,e[6]=(g*y-p*C-x*_)*P,e[7]=(f*C-u*y+d*_)*P,e[8]=(o*k-a*b+l*w)*P,e[9]=(n*b-r*k-i*w)*P,e[10]=(p*v-m*y+x*A)*P,e[11]=(h*y-f*v-d*A)*P,e[12]=(a*E-o*R-c*w)*P,e[13]=(r*R-n*E+s*w)*P,e[14]=(m*_-p*T-g*A)*P,e[15]=(f*T-h*_+u*A)*P,e):null}function QB(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8],f=e[9],h=e[10],u=e[11],d=e[12],p=e[13],m=e[14],g=e[15],x=t*o-r*i,A=t*a-n*i,_=r*a-n*o,y=l*p-f*d,T=l*m-h*d,v=f*m-h*p,C=t*v-r*T+n*y,w=i*v-o*T+a*y,E=l*_-f*A+h*x,b=d*_-p*A+m*x;return c*C-s*w+g*E-u*b}function DT(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=t[9],d=t[10],p=t[11],m=t[12],g=t[13],x=t[14],A=t[15],_=r[0],y=r[1],T=r[2],v=r[3];return e[0]=_*n+y*a+T*h+v*m,e[1]=_*s+y*c+T*u+v*g,e[2]=_*i+y*l+T*d+v*x,e[3]=_*o+y*f+T*p+v*A,_=r[4],y=r[5],T=r[6],v=r[7],e[4]=_*n+y*a+T*h+v*m,e[5]=_*s+y*c+T*u+v*g,e[6]=_*i+y*l+T*d+v*x,e[7]=_*o+y*f+T*p+v*A,_=r[8],y=r[9],T=r[10],v=r[11],e[8]=_*n+y*a+T*h+v*m,e[9]=_*s+y*c+T*u+v*g,e[10]=_*i+y*l+T*d+v*x,e[11]=_*o+y*f+T*p+v*A,_=r[12],y=r[13],T=r[14],v=r[15],e[12]=_*n+y*a+T*h+v*m,e[13]=_*s+y*c+T*u+v*g,e[14]=_*i+y*l+T*d+v*x,e[15]=_*o+y*f+T*p+v*A,e}function tN(e,t,r){let n=r[0],s=r[1],i=r[2],o,a,c,l,f,h,u,d,p,m,g,x;return t===e?(e[12]=t[0]*n+t[4]*s+t[8]*i+t[12],e[13]=t[1]*n+t[5]*s+t[9]*i+t[13],e[14]=t[2]*n+t[6]*s+t[10]*i+t[14],e[15]=t[3]*n+t[7]*s+t[11]*i+t[15]):(o=t[0],a=t[1],c=t[2],l=t[3],f=t[4],h=t[5],u=t[6],d=t[7],p=t[8],m=t[9],g=t[10],x=t[11],e[0]=o,e[1]=a,e[2]=c,e[3]=l,e[4]=f,e[5]=h,e[6]=u,e[7]=d,e[8]=p,e[9]=m,e[10]=g,e[11]=x,e[12]=o*n+f*s+p*i+t[12],e[13]=a*n+h*s+m*i+t[13],e[14]=c*n+u*s+g*i+t[14],e[15]=l*n+d*s+x*i+t[15]),e}function eN(e,t,r){let n=r[0],s=r[1],i=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*s,e[5]=t[5]*s,e[6]=t[6]*s,e[7]=t[7]*s,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function rN(e,t,r,n){let s=n[0],i=n[1],o=n[2],a=Math.sqrt(s*s+i*i+o*o),c,l,f,h,u,d,p,m,g,x,A,_,y,T,v,C,w,E,b,R,k,D,P,j;return a<1e-6?null:(a=1/a,s*=a,i*=a,o*=a,l=Math.sin(r),c=Math.cos(r),f=1-c,h=t[0],u=t[1],d=t[2],p=t[3],m=t[4],g=t[5],x=t[6],A=t[7],_=t[8],y=t[9],T=t[10],v=t[11],C=s*s*f+c,w=i*s*f+o*l,E=o*s*f-i*l,b=s*i*f-o*l,R=i*i*f+c,k=o*i*f+s*l,D=s*o*f+i*l,P=i*o*f-s*l,j=o*o*f+c,e[0]=h*C+m*w+_*E,e[1]=u*C+g*w+y*E,e[2]=d*C+x*w+T*E,e[3]=p*C+A*w+v*E,e[4]=h*b+m*R+_*k,e[5]=u*b+g*R+y*k,e[6]=d*b+x*R+T*k,e[7]=p*b+A*R+v*k,e[8]=h*D+m*P+_*j,e[9]=u*D+g*P+y*j,e[10]=d*D+x*P+T*j,e[11]=p*D+A*P+v*j,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function nN(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[4],o=t[5],a=t[6],c=t[7],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=i*s+l*n,e[5]=o*s+f*n,e[6]=a*s+h*n,e[7]=c*s+u*n,e[8]=l*s-i*n,e[9]=f*s-o*n,e[10]=h*s-a*n,e[11]=u*s-c*n,e}function sN(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s-l*n,e[1]=o*s-f*n,e[2]=a*s-h*n,e[3]=c*s-u*n,e[8]=i*n+l*s,e[9]=o*n+f*s,e[10]=a*n+h*s,e[11]=c*n+u*s,e}function iN(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[4],f=t[5],h=t[6],u=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s+l*n,e[1]=o*s+f*n,e[2]=a*s+h*n,e[3]=c*s+u*n,e[4]=l*s-i*n,e[5]=f*s-o*n,e[6]=h*s-a*n,e[7]=u*s-c*n,e}function oN(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[1]=f+x,e[2]=u-g,e[3]=0,e[4]=f-x,e[5]=1-l-p,e[6]=d+m,e[7]=0,e[8]=u+g,e[9]=d-m,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function aN(e,t,r,n,s,i,o){let a=1/(r-t),c=1/(s-n),l=1/(i-o);return e[0]=i*2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i*2*c,e[6]=0,e[7]=0,e[8]=(r+t)*a,e[9]=(s+n)*c,e[10]=(o+i)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*i*2*l,e[15]=0,e}function rnt(e,t,r,n,s){let i=1/Math.tan(t/2);if(e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,s!=null&&s!==1/0){let o=1/(n-s);e[10]=(s+n)*o,e[14]=2*s*n*o}else e[10]=-1,e[14]=-2*n;return e}var cN=rnt;function nnt(e,t,r,n,s,i,o){let a=1/(t-r),c=1/(n-s),l=1/(i-o);return e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+r)*a,e[13]=(s+n)*c,e[14]=(o+i)*l,e[15]=1,e}var lN=nnt;function fN(e,t,r,n){let s,i,o,a,c,l,f,h,u,d,p=t[0],m=t[1],g=t[2],x=n[0],A=n[1],_=n[2],y=r[0],T=r[1],v=r[2];return Math.abs(p-y)<1e-6&&Math.abs(m-T)<1e-6&&Math.abs(g-v)<1e-6?ent(e):(h=p-y,u=m-T,d=g-v,s=1/Math.sqrt(h*h+u*u+d*d),h*=s,u*=s,d*=s,i=A*d-_*u,o=_*h-x*d,a=x*u-A*h,s=Math.sqrt(i*i+o*o+a*a),s?(s=1/s,i*=s,o*=s,a*=s):(i=0,o=0,a=0),c=u*a-d*o,l=d*i-h*a,f=h*o-u*i,s=Math.sqrt(c*c+l*l+f*f),s?(s=1/s,c*=s,l*=s,f*=s):(c=0,l=0,f=0),e[0]=i,e[1]=c,e[2]=h,e[3]=0,e[4]=o,e[5]=l,e[6]=u,e[7]=0,e[8]=a,e[9]=f,e[10]=d,e[11]=0,e[12]=-(i*p+o*m+a*g),e[13]=-(c*p+l*m+f*g),e[14]=-(h*p+u*m+d*g),e[15]=1,e)}function snt(){let e=new je(4);return je!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function hN(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e}function uN(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e}function dN(e){let t=e[0],r=e[1],n=e[2],s=e[3];return Math.sqrt(t*t+r*r+n*n+s*s)}function pN(e){let t=e[0],r=e[1],n=e[2],s=e[3];return t*t+r*r+n*n+s*s}function mN(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i;return o>0&&(o=1/Math.sqrt(o)),e[0]=r*o,e[1]=n*o,e[2]=s*o,e[3]=i*o,e}function gN(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function xN(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3];return e[0]=s+n*(r[0]-s),e[1]=i+n*(r[1]-i),e[2]=o+n*(r[2]-o),e[3]=a+n*(r[3]-a),e}function _N(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3];return e[0]=r[0]*n+r[4]*s+r[8]*i+r[12]*o,e[1]=r[1]*n+r[5]*s+r[9]*i+r[13]*o,e[2]=r[2]*n+r[6]*s+r[10]*i+r[14]*o,e[3]=r[3]*n+r[7]*s+r[11]*i+r[15]*o,e}function yN(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2],l=r[3],f=l*n+a*i-c*s,h=l*s+c*n-o*i,u=l*i+o*s-a*n,d=-o*n-a*s-c*i;return e[0]=f*l+d*-o+h*-c-u*-a,e[1]=h*l+d*-a+u*-o-f*-c,e[2]=u*l+d*-c+f*-a-h*-o,e[3]=t[3],e}var FWt=function(){let e=snt();return function(t,r,n,s,i,o){let a,c;for(r||(r=4),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],e[3]=t[a+3],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2],t[a+3]=e[3];return t}}();var zT;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL0ROW3=3]="COL0ROW3",e[e.COL1ROW0=4]="COL1ROW0",e[e.COL1ROW1=5]="COL1ROW1",e[e.COL1ROW2=6]="COL1ROW2",e[e.COL1ROW3=7]="COL1ROW3",e[e.COL2ROW0=8]="COL2ROW0",e[e.COL2ROW1=9]="COL2ROW1",e[e.COL2ROW2=10]="COL2ROW2",e[e.COL2ROW3=11]="COL2ROW3",e[e.COL3ROW0=12]="COL3ROW0",e[e.COL3ROW1=13]="COL3ROW1",e[e.COL3ROW2=14]="COL3ROW2",e[e.COL3ROW3=15]="COL3ROW3"})(zT||(zT={}));var ont=45*Math.PI/180,ant=1,kT=.1,UT=500,cnt=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),Ft=class extends $c{static get IDENTITY(){return fnt()}static get ZERO(){return lnt()}get ELEMENTS(){return 16}get RANK(){return 4}get INDICES(){return zT}constructor(t){super(-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this[9]=t[9],this[10]=t[10],this[11]=t[11],this[12]=t[12],this[13]=t[13],this[14]=t[14],this[15]=t[15],this.check()}set(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this[9]=f,this[10]=h,this[11]=u,this[12]=d,this[13]=p,this[14]=m,this[15]=g,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=i,this[2]=l,this[3]=d,this[4]=r,this[5]=o,this[6]=f,this[7]=p,this[8]=n,this[9]=a,this[10]=h,this[11]=m,this[12]=s,this[13]=c,this[14]=u,this[15]=g,this.check()}toRowMajor(t){return t[0]=this[0],t[1]=this[4],t[2]=this[8],t[3]=this[12],t[4]=this[1],t[5]=this[5],t[6]=this[9],t[7]=this[13],t[8]=this[2],t[9]=this[6],t[10]=this[10],t[11]=this[14],t[12]=this[3],t[13]=this[7],t[14]=this[11],t[15]=this[15],t}identity(){return this.copy(cnt)}fromObject(t){return this.check()}fromQuaternion(t){return oN(this,t),this.check()}frustum(t){let{left:r,right:n,bottom:s,top:i,near:o=kT,far:a=UT}=t;return a===1/0?hnt(this,r,n,s,i,o):aN(this,r,n,s,i,o,a),this.check()}lookAt(t){let{eye:r,center:n=[0,0,0],up:s=[0,1,0]}=t;return fN(this,r,n,s),this.check()}ortho(t){let{left:r,right:n,bottom:s,top:i,near:o=kT,far:a=UT}=t;return lN(this,r,n,s,i,o,a),this.check()}orthographic(t){let{fovy:r=ont,aspect:n=ant,focalDistance:s=1,near:i=kT,far:o=UT}=t;AN(r);let a=r/2,c=s*Math.tan(a),l=c*n;return this.ortho({left:-l,right:l,bottom:-c,top:c,near:i,far:o})}perspective(t){let{fovy:r=45*Math.PI/180,aspect:n=1,near:s=.1,far:i=500}=t;return AN(r),cN(this,r,n,s,i),this.check()}determinant(){return QB(this)}getScale(t=[-0,-0,-0]){return t[0]=Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2]),t[1]=Math.sqrt(this[4]*this[4]+this[5]*this[5]+this[6]*this[6]),t[2]=Math.sqrt(this[8]*this[8]+this[9]*this[9]+this[10]*this[10]),t}getTranslation(t=[-0,-0,-0]){return t[0]=this[12],t[1]=this[13],t[2]=this[14],t}getRotation(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=0,t[4]=this[4]*s,t[5]=this[5]*i,t[6]=this[6]*o,t[7]=0,t[8]=this[8]*s,t[9]=this[9]*i,t[10]=this[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}getRotationMatrix3(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=this[4]*s,t[4]=this[5]*i,t[5]=this[6]*o,t[6]=this[8]*s,t[7]=this[9]*i,t[8]=this[10]*o,t}transpose(){return ZB(this,this),this.check()}invert(){return JB(this,this),this.check()}multiplyLeft(t){return DT(this,t,this),this.check()}multiplyRight(t){return DT(this,this,t),this.check()}rotateX(t){return nN(this,this,t),this.check()}rotateY(t){return sN(this,this,t),this.check()}rotateZ(t){return iN(this,this,t),this.check()}rotateXYZ(t){return this.rotateX(t[0]).rotateY(t[1]).rotateZ(t[2])}rotateAxis(t,r){return rN(this,this,t,r),this.check()}scale(t){return eN(this,this,Array.isArray(t)?t:[t,t,t]),this.check()}translate(t){return tN(this,this,t),this.check()}transform(t,r){return t.length===4?(r=_N(r||[-0,-0,-0,-0],t,this),Ni(r,4),r):this.transformAsPoint(t,r)}transformAsPoint(t,r){let{length:n}=t,s;switch(n){case 2:s=BB(r||[-0,-0],t,this);break;case 3:s=Xc(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return Ni(s,t.length),s}transformAsVector(t,r){let n;switch(t.length){case 2:n=NB(r||[-0,-0],t,this);break;case 3:n=r1(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return Ni(n,t.length),n}transformPoint(t,r){return this.transformAsPoint(t,r)}transformVector(t,r){return this.transformAsPoint(t,r)}transformDirection(t,r){return this.transformAsVector(t,r)}makeRotationX(t){return this.identity().rotateX(t)}makeTranslation(t,r,n){return this.identity().translate([t,r,n])}},f1,h1;function lnt(){return f1||(f1=new Ft([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Object.freeze(f1)),f1}function fnt(){return h1||(h1=new Ft,Object.freeze(h1)),h1}function AN(e){if(e>Math.PI*2)throw Error("expected radians")}function hnt(e,t,r,n,s,i){let o=2*i/(r-t),a=2*i/(s-n),c=(r+t)/(r-t),l=(s+n)/(s-n),f=-1,h=-1,u=-2*i;return e[0]=o,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=c,e[9]=l,e[10]=f,e[11]=h,e[12]=0,e[13]=0,e[14]=u,e[15]=0,e}function bN(){let e=new je(4);return je!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function TN(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function VT(e,t,r){r=r*.5;let n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e}function WT(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=r[0],c=r[1],l=r[2],f=r[3];return e[0]=n*f+o*a+s*l-i*c,e[1]=s*f+o*c+i*a-n*l,e[2]=i*f+o*l+n*c-s*a,e[3]=o*f-n*a-s*c-i*l,e}function vN(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+o*a,e[1]=s*c+i*a,e[2]=i*c-s*a,e[3]=o*c-n*a,e}function EN(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c-i*a,e[1]=s*c+o*a,e[2]=i*c+n*a,e[3]=o*c-s*a,e}function MN(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+s*a,e[1]=s*c-n*a,e[2]=i*c+o*a,e[3]=o*c-i*a,e}function SN(e,t){let r=t[0],n=t[1],s=t[2];return e[0]=r,e[1]=n,e[2]=s,e[3]=Math.sqrt(Math.abs(1-r*r-n*n-s*s)),e}function Yu(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3],c=r[0],l=r[1],f=r[2],h=r[3],u,d,p,m,g;return u=s*c+i*l+o*f+a*h,u<0&&(u=-u,c=-c,l=-l,f=-f,h=-h),1-u>1e-6?(d=Math.acos(u),g=Math.sin(d),p=Math.sin((1-n)*d)/g,m=Math.sin(n*d)/g):(p=1-n,m=n),e[0]=p*s+m*c,e[1]=p*i+m*l,e[2]=p*o+m*f,e[3]=p*a+m*h,e}function wN(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i,a=o?1/o:0;return e[0]=-r*a,e[1]=-n*a,e[2]=-s*a,e[3]=i*a,e}function CN(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}function HT(e,t){let r=t[0]+t[4]+t[8],n;if(r>0)n=Math.sqrt(r+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{let s=0;t[4]>t[0]&&(s=1),t[8]>t[s*3+s]&&(s=2);let i=(s+1)%3,o=(s+2)%3;n=Math.sqrt(t[s*3+s]-t[i*3+i]-t[o*3+o]+1),e[s]=.5*n,n=.5/n,e[3]=(t[i*3+o]-t[o*3+i])*n,e[i]=(t[i*3+s]+t[s*3+i])*n,e[o]=(t[o*3+s]+t[s*3+o])*n}return e}var PN=hN;var IN=uN,RN=gN,ON=xN,LN=dN;var BN=pN;var NN=mN;var FN=function(){let e=IT(),t=RT(1,0,0),r=RT(0,1,0);return function(n,s,i){let o=OT(s,i);return o<-.999999?(qc(e,t,s),HB(e)<1e-6&&qc(e,r,s),kB(e,e),VT(n,e,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(qc(e,s,i),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+o,NN(n,n))}}(),KWt=function(){let e=bN(),t=bN();return function(r,n,s,i,o,a){return Yu(e,n,o,a),Yu(t,s,i,a),Yu(r,e,t,2*a*(1-a)),r}}(),ZWt=function(){let e=GB();return function(t,r,n,s){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=s[0],e[4]=s[1],e[7]=s[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],NN(t,HT(t,e))}}();var unt=[0,0,0,1],$u=class extends Bi{constructor(t=0,r=0,n=0,s=1){super(-0,-0,-0,-0),Array.isArray(t)&&arguments.length===1?this.copy(t):this.set(t,r,n,s)}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}fromObject(t){return this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this.check()}fromMatrix3(t){return HT(this,t),this.check()}fromAxisRotation(t,r){return VT(this,t,r),this.check()}identity(){return TN(this),this.check()}setAxisAngle(t,r){return this.fromAxisRotation(t,r)}get ELEMENTS(){return 4}get x(){return this[0]}set x(t){this[0]=yt(t)}get y(){return this[1]}set y(t){this[1]=yt(t)}get z(){return this[2]}set z(t){this[2]=yt(t)}get w(){return this[3]}set w(t){this[3]=yt(t)}len(){return LN(this)}lengthSquared(){return BN(this)}dot(t){return RN(this,t)}rotationTo(t,r){return FN(this,t,r),this.check()}add(t){return PN(this,this,t),this.check()}calculateW(){return SN(this,this),this.check()}conjugate(){return CN(this,this),this.check()}invert(){return wN(this,this),this.check()}lerp(t,r,n){return n===void 0?this.lerp(this,t,r):(ON(this,t,r,n),this.check())}multiplyRight(t){return WT(this,this,t),this.check()}multiplyLeft(t){return WT(this,t,this),this.check()}normalize(){let t=this.len(),r=t>0?1/t:0;return this[0]=this[0]*r,this[1]=this[1]*r,this[2]=this[2]*r,this[3]=this[3]*r,t===0&&(this[3]=1),this.check()}rotateX(t){return vN(this,this,t),this.check()}rotateY(t){return EN(this,this,t),this.check()}rotateZ(t){return MN(this,this,t),this.check()}scale(t){return IN(this,this,t),this.check()}slerp(t,r,n){let s,i,o;switch(arguments.length){case 1:({start:s=unt,target:i,ratio:o}=t);break;case 2:s=this,i=t,o=r;break;default:s=t,i=r,o=n}return Yu(this,s,i,o),this.check()}transformVector4(t,r=new Yc){return yN(r,t,this),Ni(r,4)}lengthSq(){return this.lengthSquared()}setFromAxisAngle(t,r){return this.setAxisAngle(t,r)}premultiply(t){return this.multiplyLeft(t)}multiply(t){return this.multiplyRight(t)}};var pnt=1/Math.PI*180,mnt=1/180*Math.PI,gnt={EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1};globalThis.mathgl=globalThis.mathgl||{config:{...gnt}};var he=globalThis.mathgl.config;function GT(e,{precision:t=he.precision}={}){return e=xnt(e),`${parseFloat(e.toPrecision(t))}`}function Fi(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}function jT(e){return DN(e)}function qT(e){return kN(e)}function DN(e,t){return UN(e,r=>r*mnt,t)}function kN(e,t){return UN(e,r=>r*pnt,t)}function Ns(e,t,r){let n=he.EPSILON;r&&(he.EPSILON=r);try{if(e===t)return!0;if(Fi(e)&&Fi(t)){if(e.length!==t.length)return!1;for(let s=0;s<e.length;++s)if(!Ns(e[s],t[s]))return!1;return!0}return e&&e.equals?e.equals(t):t&&t.equals?t.equals(e):typeof e=="number"&&typeof t=="number"?Math.abs(e-t)<=he.EPSILON*Math.max(1,Math.abs(e),Math.abs(t)):!1}finally{he.EPSILON=n}}function xnt(e){return Math.round(e/he.EPSILON)*he.EPSILON}function _nt(e){return e.clone?e.clone():new Array(e.length)}function UN(e,t,r){if(Fi(e)){let n=e;r=r||_nt(n);for(let s=0;s<r.length&&s<n.length;++s){let i=typeof e=="number"?e:e[s];r[s]=t(i,s,r)}return r}return t(e)}var Kc=class extends Array{clone(){return new this.constructor().copy(this)}fromArray(t,r=0){for(let n=0;n<this.ELEMENTS;++n)this[n]=t[n+r];return this.check()}toArray(t=[],r=0){for(let n=0;n<this.ELEMENTS;++n)t[r+n]=this[n];return t}toObject(t){return t}from(t){return Array.isArray(t)?this.copy(t):this.fromObject(t)}to(t){return t===this?this:Fi(t)?this.toArray(t):this.toObject(t)}toTarget(t){return t?this.to(t):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(he)}formatString(t){let r="";for(let n=0;n<this.ELEMENTS;++n)r+=(n>0?", ":"")+GT(this[n],t);return`${t.printTypes?this.constructor.name:""}[${r}]`}equals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(!Ns(this[r],t[r]))return!1;return!0}exactEquals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(this[r]!==t[r])return!1;return!0}negate(){for(let t=0;t<this.ELEMENTS;++t)this[t]=-this[t];return this.check()}lerp(t,r,n){if(n===void 0)return this.lerp(this,t,r);for(let s=0;s<this.ELEMENTS;++s){let i=t[s],o=typeof r=="number"?r:r[s];this[s]=i+n*(o-i)}return this.check()}min(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.min(t[r],this[r]);return this.check()}max(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.max(t[r],this[r]);return this.check()}clamp(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t[n]),r[n]);return this.check()}add(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]+=r[n];return this.check()}subtract(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]-=r[n];return this.check()}scale(t){if(typeof t=="number")for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;else for(let r=0;r<this.ELEMENTS&&r<t.length;++r)this[r]*=t[r];return this.check()}multiplyByScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}check(){if(he.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let t=this.length===this.ELEMENTS;for(let r=0;r<this.ELEMENTS;++r)t=t&&Number.isFinite(this[r]);return t}sub(t){return this.subtract(t)}setScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=t;return this.check()}addScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]+=t;return this.check()}subScalar(t){return this.addScalar(-t)}multiplyScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}divideScalar(t){return this.multiplyByScalar(1/t)}clampScalar(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t),r);return this.check()}get elements(){return this}};function ynt(e,t){if(e.length!==t)return!1;for(let r=0;r<e.length;++r)if(!Number.isFinite(e[r]))return!1;return!0}function qe(e){if(!Number.isFinite(e))throw new Error(`Invalid number ${JSON.stringify(e)}`);return e}function u1(e,t,r=""){if(he.debug&&!ynt(e,t))throw new Error(`math.gl: ${r} some fields set to invalid numbers'`);return e}function Yr(e,t){if(!e)throw new Error(`math.gl assertion ${t}`)}var d1=class extends Kc{get x(){return this[0]}set x(t){this[0]=qe(t)}get y(){return this[1]}set y(t){this[1]=qe(t)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let t=0;for(let r=0;r<this.ELEMENTS;++r)t+=this[r]*this[r];return t}magnitudeSquared(){return this.lengthSquared()}distance(t){return Math.sqrt(this.distanceSquared(t))}distanceSquared(t){let r=0;for(let n=0;n<this.ELEMENTS;++n){let s=this[n]-t[n];r+=s*s}return qe(r)}dot(t){let r=0;for(let n=0;n<this.ELEMENTS;++n)r+=this[n]*t[n];return qe(r)}normalize(){let t=this.magnitude();if(t!==0)for(let r=0;r<this.ELEMENTS;++r)this[r]/=t;return this.check()}multiply(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]*=r[n];return this.check()}divide(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]/=r[n];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(t){return this.distance(t)}distanceToSquared(t){return this.distanceSquared(t)}getComponent(t){return Yr(t>=0&&t<this.ELEMENTS,"index is out of range"),qe(this[t])}setComponent(t,r){return Yr(t>=0&&t<this.ELEMENTS,"index is out of range"),this[t]=r,this.check()}addVectors(t,r){return this.copy(t).add(r)}subVectors(t,r){return this.copy(t).subtract(r)}multiplyVectors(t,r){return this.copy(t).multiply(r)}addScaledVector(t,r){return this.add(new this.constructor(t).multiplyScalar(r))}};var An=typeof Float32Array<"u"?Float32Array:Array,Ku=Math.random;function Zc(e){return e>=0?Math.round(e):e%.5===0?Math.floor(e):Math.round(e)}var NHt=Math.PI/180;function Ant(){let e=new An(2);return An!=Float32Array&&(e[0]=0,e[1]=0),e}function zN(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[4]*s+r[12],e[1]=r[1]*n+r[5]*s+r[13],e}var FHt=function(){let e=Ant();return function(t,r,n,s,i,o){let a,c;for(r||(r=2),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],i(e,e,o),t[a]=e[0],t[a+1]=e[1];return t}}();function VN(e,t,r){let n=t[0],s=t[1],i=r[3]*n+r[7]*s||1;return e[0]=(r[0]*n+r[4]*s)/i,e[1]=(r[1]*n+r[5]*s)/i,e}function p1(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i||1;return e[0]=(r[0]*n+r[4]*s+r[8]*i)/o,e[1]=(r[1]*n+r[5]*s+r[9]*i)/o,e[2]=(r[2]*n+r[6]*s+r[10]*i)/o,e}function WN(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e}var Jc={};Wt(Jc,{add:()=>Mnt,angle:()=>e3,bezier:()=>Unt,ceil:()=>Snt,clone:()=>bnt,copy:()=>vnt,create:()=>HN,cross:()=>$T,dist:()=>Ynt,distance:()=>YN,div:()=>Xnt,divide:()=>XN,dot:()=>YT,equals:()=>Gnt,exactEquals:()=>Hnt,floor:()=>wnt,forEach:()=>Jnt,fromValues:()=>Tnt,hermite:()=>knt,inverse:()=>Bnt,len:()=>Knt,length:()=>GN,lerp:()=>Fnt,max:()=>Pnt,min:()=>Cnt,mul:()=>qnt,multiply:()=>qN,negate:()=>Lnt,normalize:()=>Nnt,random:()=>znt,rotateX:()=>JT,rotateY:()=>QT,rotateZ:()=>t3,round:()=>Int,scale:()=>Rnt,scaleAndAdd:()=>Ont,set:()=>Ent,slerp:()=>Dnt,sqrDist:()=>$nt,sqrLen:()=>Znt,squaredDistance:()=>$N,squaredLength:()=>KN,str:()=>Wnt,sub:()=>jnt,subtract:()=>jN,transformMat3:()=>KT,transformMat4:()=>Zu,transformQuat:()=>ZT,zero:()=>Vnt});function HN(){let e=new An(3);return An!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function bnt(e){let t=new An(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function GN(e){let t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)}function Tnt(e,t,r){let n=new An(3);return n[0]=e,n[1]=t,n[2]=r,n}function vnt(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function Ent(e,t,r,n){return e[0]=t,e[1]=r,e[2]=n,e}function Mnt(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e}function jN(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e}function qN(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e}function XN(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e}function Snt(e,t){return e[0]=Math.ceil(t[0]),e[1]=Math.ceil(t[1]),e[2]=Math.ceil(t[2]),e}function wnt(e,t){return e[0]=Math.floor(t[0]),e[1]=Math.floor(t[1]),e[2]=Math.floor(t[2]),e}function Cnt(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e}function Pnt(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e}function Int(e,t){return e[0]=Zc(t[0]),e[1]=Zc(t[1]),e[2]=Zc(t[2]),e}function Rnt(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e}function Ont(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e}function YN(e,t){let r=t[0]-e[0],n=t[1]-e[1],s=t[2]-e[2];return Math.sqrt(r*r+n*n+s*s)}function $N(e,t){let r=t[0]-e[0],n=t[1]-e[1],s=t[2]-e[2];return r*r+n*n+s*s}function KN(e){let t=e[0],r=e[1],n=e[2];return t*t+r*r+n*n}function Lnt(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e}function Bnt(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e}function Nnt(e,t){let r=t[0],n=t[1],s=t[2],i=r*r+n*n+s*s;return i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function YT(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function $T(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2];return e[0]=s*c-i*a,e[1]=i*o-n*c,e[2]=n*a-s*o,e}function Fnt(e,t,r,n){let s=t[0],i=t[1],o=t[2];return e[0]=s+n*(r[0]-s),e[1]=i+n*(r[1]-i),e[2]=o+n*(r[2]-o),e}function Dnt(e,t,r,n){let s=Math.acos(Math.min(Math.max(YT(t,r),-1),1)),i=Math.sin(s),o=Math.sin((1-n)*s)/i,a=Math.sin(n*s)/i;return e[0]=o*t[0]+a*r[0],e[1]=o*t[1]+a*r[1],e[2]=o*t[2]+a*r[2],e}function knt(e,t,r,n,s,i){let o=i*i,a=o*(2*i-3)+1,c=o*(i-2)+i,l=o*(i-1),f=o*(3-2*i);return e[0]=t[0]*a+r[0]*c+n[0]*l+s[0]*f,e[1]=t[1]*a+r[1]*c+n[1]*l+s[1]*f,e[2]=t[2]*a+r[2]*c+n[2]*l+s[2]*f,e}function Unt(e,t,r,n,s,i){let o=1-i,a=o*o,c=i*i,l=a*o,f=3*i*a,h=3*c*o,u=c*i;return e[0]=t[0]*l+r[0]*f+n[0]*h+s[0]*u,e[1]=t[1]*l+r[1]*f+n[1]*h+s[1]*u,e[2]=t[2]*l+r[2]*f+n[2]*h+s[2]*u,e}function znt(e,t){t=t===void 0?1:t;let r=Ku()*2*Math.PI,n=Ku()*2-1,s=Math.sqrt(1-n*n)*t;return e[0]=Math.cos(r)*s,e[1]=Math.sin(r)*s,e[2]=n*t,e}function Zu(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*s+r[8]*i+r[12])/o,e[1]=(r[1]*n+r[5]*s+r[9]*i+r[13])/o,e[2]=(r[2]*n+r[6]*s+r[10]*i+r[14])/o,e}function KT(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=n*r[0]+s*r[3]+i*r[6],e[1]=n*r[1]+s*r[4]+i*r[7],e[2]=n*r[2]+s*r[5]+i*r[8],e}function ZT(e,t,r){let n=r[0],s=r[1],i=r[2],o=r[3],a=t[0],c=t[1],l=t[2],f=s*l-i*c,h=i*a-n*l,u=n*c-s*a,d=s*u-i*h,p=i*f-n*u,m=n*h-s*f,g=o*2;return f*=g,h*=g,u*=g,d*=2,p*=2,m*=2,e[0]=a+f+d,e[1]=c+h+p,e[2]=l+u+m,e}function JT(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0],i[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),i[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function QT(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),i[1]=s[1],i[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function t3(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),i[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),i[2]=s[2],e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function e3(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2],c=Math.sqrt((r*r+n*n+s*s)*(i*i+o*o+a*a)),l=c&&YT(e,t)/c;return Math.acos(Math.min(Math.max(l,-1),1))}function Vnt(e){return e[0]=0,e[1]=0,e[2]=0,e}function Wnt(e){return`vec3(${e[0]}, ${e[1]}, ${e[2]})`}function Hnt(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]}function Gnt(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2];return Math.abs(r-i)<=1e-6*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(n-o)<=1e-6*Math.max(1,Math.abs(n),Math.abs(o))&&Math.abs(s-a)<=1e-6*Math.max(1,Math.abs(s),Math.abs(a))}var jnt=jN,qnt=qN,Xnt=XN,Ynt=YN,$nt=$N,Knt=GN,Znt=KN,Jnt=function(){let e=HN();return function(t,r,n,s,i,o){let a,c;for(r||(r=3),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}}();var r3=[0,0,0],m1,mt=class extends d1{static get ZERO(){return m1||(m1=new mt(0,0,0),Object.freeze(m1)),m1}constructor(t=0,r=0,n=0){super(-0,-0,-0),arguments.length===1&&Fi(t)?this.copy(t):(he.debug&&(qe(t),qe(r),qe(n)),this[0]=t,this[1]=r,this[2]=n)}set(t,r,n){return this[0]=t,this[1]=r,this[2]=n,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.check()}fromObject(t){return he.debug&&(qe(t.x),qe(t.y),qe(t.z)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t}get ELEMENTS(){return 3}get z(){return this[2]}set z(t){this[2]=qe(t)}angle(t){return e3(this,t)}cross(t){return $T(this,this,t),this.check()}rotateX({radians:t,origin:r=r3}){return JT(this,this,r,t),this.check()}rotateY({radians:t,origin:r=r3}){return QT(this,this,r,t),this.check()}rotateZ({radians:t,origin:r=r3}){return t3(this,this,r,t),this.check()}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return Zu(this,this,t),this.check()}transformAsVector(t){return p1(this,this,t),this.check()}transformByMatrix3(t){return KT(this,this,t),this.check()}transformByMatrix2(t){return WN(this,this,t),this.check()}transformByQuaternion(t){return ZT(this,this,t),this.check()}};var g1=class extends Kc{toString(){let t="[";if(he.printRowMajor){t+="row-major:";for(let r=0;r<this.RANK;++r)for(let n=0;n<this.RANK;++n)t+=` ${this[n*this.RANK+r]}`}else{t+="column-major:";for(let r=0;r<this.ELEMENTS;++r)t+=` ${this[r]}`}return t+="]",t}getElementIndex(t,r){return r*this.RANK+t}getElement(t,r){return this[r*this.RANK+t]}setElement(t,r,n){return this[r*this.RANK+t]=qe(n),this}getColumn(t,r=new Array(this.RANK).fill(-0)){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)r[s]=this[n+s];return r}setColumn(t,r){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)this[n+s]=r[s];return this}};function Qnt(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ZN(e,t){if(e===t){let r=t[1],n=t[2],s=t[3],i=t[6],o=t[7],a=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=i,e[11]=t[14],e[12]=s,e[13]=o,e[14]=a}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function JN(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],g=t[14],x=t[15],A=r*a-n*o,_=r*c-s*o,y=r*l-i*o,T=n*c-s*a,v=n*l-i*a,C=s*l-i*c,w=f*m-h*p,E=f*g-u*p,b=f*x-d*p,R=h*g-u*m,k=h*x-d*m,D=u*x-d*g,P=A*D-_*k+y*R+T*b-v*E+C*w;return P?(P=1/P,e[0]=(a*D-c*k+l*R)*P,e[1]=(s*k-n*D-i*R)*P,e[2]=(m*C-g*v+x*T)*P,e[3]=(u*v-h*C-d*T)*P,e[4]=(c*b-o*D-l*E)*P,e[5]=(r*D-s*b+i*E)*P,e[6]=(g*y-p*C-x*_)*P,e[7]=(f*C-u*y+d*_)*P,e[8]=(o*k-a*b+l*w)*P,e[9]=(n*b-r*k-i*w)*P,e[10]=(p*v-m*y+x*A)*P,e[11]=(h*y-f*v-d*A)*P,e[12]=(a*E-o*R-c*w)*P,e[13]=(r*R-n*E+s*w)*P,e[14]=(m*_-p*T-g*A)*P,e[15]=(f*T-h*_+u*A)*P,e):null}function QN(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8],f=e[9],h=e[10],u=e[11],d=e[12],p=e[13],m=e[14],g=e[15],x=t*o-r*i,A=t*a-n*i,_=r*a-n*o,y=l*p-f*d,T=l*m-h*d,v=f*m-h*p,C=t*v-r*T+n*y,w=i*v-o*T+a*y,E=l*_-f*A+h*x,b=d*_-p*A+m*x;return c*C-s*w+g*E-u*b}function n3(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=t[9],d=t[10],p=t[11],m=t[12],g=t[13],x=t[14],A=t[15],_=r[0],y=r[1],T=r[2],v=r[3];return e[0]=_*n+y*a+T*h+v*m,e[1]=_*s+y*c+T*u+v*g,e[2]=_*i+y*l+T*d+v*x,e[3]=_*o+y*f+T*p+v*A,_=r[4],y=r[5],T=r[6],v=r[7],e[4]=_*n+y*a+T*h+v*m,e[5]=_*s+y*c+T*u+v*g,e[6]=_*i+y*l+T*d+v*x,e[7]=_*o+y*f+T*p+v*A,_=r[8],y=r[9],T=r[10],v=r[11],e[8]=_*n+y*a+T*h+v*m,e[9]=_*s+y*c+T*u+v*g,e[10]=_*i+y*l+T*d+v*x,e[11]=_*o+y*f+T*p+v*A,_=r[12],y=r[13],T=r[14],v=r[15],e[12]=_*n+y*a+T*h+v*m,e[13]=_*s+y*c+T*u+v*g,e[14]=_*i+y*l+T*d+v*x,e[15]=_*o+y*f+T*p+v*A,e}function tF(e,t,r){let n=r[0],s=r[1],i=r[2],o,a,c,l,f,h,u,d,p,m,g,x;return t===e?(e[12]=t[0]*n+t[4]*s+t[8]*i+t[12],e[13]=t[1]*n+t[5]*s+t[9]*i+t[13],e[14]=t[2]*n+t[6]*s+t[10]*i+t[14],e[15]=t[3]*n+t[7]*s+t[11]*i+t[15]):(o=t[0],a=t[1],c=t[2],l=t[3],f=t[4],h=t[5],u=t[6],d=t[7],p=t[8],m=t[9],g=t[10],x=t[11],e[0]=o,e[1]=a,e[2]=c,e[3]=l,e[4]=f,e[5]=h,e[6]=u,e[7]=d,e[8]=p,e[9]=m,e[10]=g,e[11]=x,e[12]=o*n+f*s+p*i+t[12],e[13]=a*n+h*s+m*i+t[13],e[14]=c*n+u*s+g*i+t[14],e[15]=l*n+d*s+x*i+t[15]),e}function eF(e,t,r){let n=r[0],s=r[1],i=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*s,e[5]=t[5]*s,e[6]=t[6]*s,e[7]=t[7]*s,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function rF(e,t,r,n){let s=n[0],i=n[1],o=n[2],a=Math.sqrt(s*s+i*i+o*o),c,l,f,h,u,d,p,m,g,x,A,_,y,T,v,C,w,E,b,R,k,D,P,j;return a<1e-6?null:(a=1/a,s*=a,i*=a,o*=a,l=Math.sin(r),c=Math.cos(r),f=1-c,h=t[0],u=t[1],d=t[2],p=t[3],m=t[4],g=t[5],x=t[6],A=t[7],_=t[8],y=t[9],T=t[10],v=t[11],C=s*s*f+c,w=i*s*f+o*l,E=o*s*f-i*l,b=s*i*f-o*l,R=i*i*f+c,k=o*i*f+s*l,D=s*o*f+i*l,P=i*o*f-s*l,j=o*o*f+c,e[0]=h*C+m*w+_*E,e[1]=u*C+g*w+y*E,e[2]=d*C+x*w+T*E,e[3]=p*C+A*w+v*E,e[4]=h*b+m*R+_*k,e[5]=u*b+g*R+y*k,e[6]=d*b+x*R+T*k,e[7]=p*b+A*R+v*k,e[8]=h*D+m*P+_*j,e[9]=u*D+g*P+y*j,e[10]=d*D+x*P+T*j,e[11]=p*D+A*P+v*j,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function nF(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[4],o=t[5],a=t[6],c=t[7],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=i*s+l*n,e[5]=o*s+f*n,e[6]=a*s+h*n,e[7]=c*s+u*n,e[8]=l*s-i*n,e[9]=f*s-o*n,e[10]=h*s-a*n,e[11]=u*s-c*n,e}function sF(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s-l*n,e[1]=o*s-f*n,e[2]=a*s-h*n,e[3]=c*s-u*n,e[8]=i*n+l*s,e[9]=o*n+f*s,e[10]=a*n+h*s,e[11]=c*n+u*s,e}function iF(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[4],f=t[5],h=t[6],u=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s+l*n,e[1]=o*s+f*n,e[2]=a*s+h*n,e[3]=c*s+u*n,e[4]=l*s-i*n,e[5]=f*s-o*n,e[6]=h*s-a*n,e[7]=u*s-c*n,e}function oF(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[1]=f+x,e[2]=u-g,e[3]=0,e[4]=f-x,e[5]=1-l-p,e[6]=d+m,e[7]=0,e[8]=u+g,e[9]=d-m,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function aF(e,t,r,n,s,i,o){let a=1/(r-t),c=1/(s-n),l=1/(i-o);return e[0]=i*2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i*2*c,e[6]=0,e[7]=0,e[8]=(r+t)*a,e[9]=(s+n)*c,e[10]=(o+i)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*i*2*l,e[15]=0,e}function tst(e,t,r,n,s){let i=1/Math.tan(t/2);if(e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,s!=null&&s!==1/0){let o=1/(n-s);e[10]=(s+n)*o,e[14]=2*s*n*o}else e[10]=-1,e[14]=-2*n;return e}var cF=tst;function est(e,t,r,n,s,i,o){let a=1/(t-r),c=1/(n-s),l=1/(i-o);return e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+r)*a,e[13]=(s+n)*c,e[14]=(o+i)*l,e[15]=1,e}var lF=est;function fF(e,t,r,n){let s,i,o,a,c,l,f,h,u,d,p=t[0],m=t[1],g=t[2],x=n[0],A=n[1],_=n[2],y=r[0],T=r[1],v=r[2];return Math.abs(p-y)<1e-6&&Math.abs(m-T)<1e-6&&Math.abs(g-v)<1e-6?Qnt(e):(h=p-y,u=m-T,d=g-v,s=1/Math.sqrt(h*h+u*u+d*d),h*=s,u*=s,d*=s,i=A*d-_*u,o=_*h-x*d,a=x*u-A*h,s=Math.sqrt(i*i+o*o+a*a),s?(s=1/s,i*=s,o*=s,a*=s):(i=0,o=0,a=0),c=u*a-d*o,l=d*i-h*a,f=h*o-u*i,s=Math.sqrt(c*c+l*l+f*f),s?(s=1/s,c*=s,l*=s,f*=s):(c=0,l=0,f=0),e[0]=i,e[1]=c,e[2]=h,e[3]=0,e[4]=o,e[5]=l,e[6]=u,e[7]=0,e[8]=a,e[9]=f,e[10]=d,e[11]=0,e[12]=-(i*p+o*m+a*g),e[13]=-(c*p+l*m+f*g),e[14]=-(h*p+u*m+d*g),e[15]=1,e)}function rst(){let e=new An(4);return An!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function hF(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3];return e[0]=r[0]*n+r[4]*s+r[8]*i+r[12]*o,e[1]=r[1]*n+r[5]*s+r[9]*i+r[13]*o,e[2]=r[2]*n+r[6]*s+r[10]*i+r[14]*o,e[3]=r[3]*n+r[7]*s+r[11]*i+r[15]*o,e}var KHt=function(){let e=rst();return function(t,r,n,s,i,o){let a,c;for(r||(r=4),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],e[3]=t[a+3],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2],t[a+3]=e[3];return t}}();var o3;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL0ROW3=3]="COL0ROW3",e[e.COL1ROW0=4]="COL1ROW0",e[e.COL1ROW1=5]="COL1ROW1",e[e.COL1ROW2=6]="COL1ROW2",e[e.COL1ROW3=7]="COL1ROW3",e[e.COL2ROW0=8]="COL2ROW0",e[e.COL2ROW1=9]="COL2ROW1",e[e.COL2ROW2=10]="COL2ROW2",e[e.COL2ROW3=11]="COL2ROW3",e[e.COL3ROW0=12]="COL3ROW0",e[e.COL3ROW1=13]="COL3ROW1",e[e.COL3ROW2=14]="COL3ROW2",e[e.COL3ROW3=15]="COL3ROW3"})(o3||(o3={}));var nst=45*Math.PI/180,sst=1,s3=.1,i3=500,ist=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),Di=class extends g1{static get IDENTITY(){return ast()}static get ZERO(){return ost()}get ELEMENTS(){return 16}get RANK(){return 4}get INDICES(){return o3}constructor(t){super(-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this[9]=t[9],this[10]=t[10],this[11]=t[11],this[12]=t[12],this[13]=t[13],this[14]=t[14],this[15]=t[15],this.check()}set(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this[9]=f,this[10]=h,this[11]=u,this[12]=d,this[13]=p,this[14]=m,this[15]=g,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=i,this[2]=l,this[3]=d,this[4]=r,this[5]=o,this[6]=f,this[7]=p,this[8]=n,this[9]=a,this[10]=h,this[11]=m,this[12]=s,this[13]=c,this[14]=u,this[15]=g,this.check()}toRowMajor(t){return t[0]=this[0],t[1]=this[4],t[2]=this[8],t[3]=this[12],t[4]=this[1],t[5]=this[5],t[6]=this[9],t[7]=this[13],t[8]=this[2],t[9]=this[6],t[10]=this[10],t[11]=this[14],t[12]=this[3],t[13]=this[7],t[14]=this[11],t[15]=this[15],t}identity(){return this.copy(ist)}fromObject(t){return this.check()}fromQuaternion(t){return oF(this,t),this.check()}frustum(t){let{left:r,right:n,bottom:s,top:i,near:o=s3,far:a=i3}=t;return a===1/0?cst(this,r,n,s,i,o):aF(this,r,n,s,i,o,a),this.check()}lookAt(t){let{eye:r,center:n=[0,0,0],up:s=[0,1,0]}=t;return fF(this,r,n,s),this.check()}ortho(t){let{left:r,right:n,bottom:s,top:i,near:o=s3,far:a=i3}=t;return lF(this,r,n,s,i,o,a),this.check()}orthographic(t){let{fovy:r=nst,aspect:n=sst,focalDistance:s=1,near:i=s3,far:o=i3}=t;uF(r);let a=r/2,c=s*Math.tan(a),l=c*n;return this.ortho({left:-l,right:l,bottom:-c,top:c,near:i,far:o})}perspective(t){let{fovy:r=45*Math.PI/180,aspect:n=1,near:s=.1,far:i=500}=t;return uF(r),cF(this,r,n,s,i),this.check()}determinant(){return QN(this)}getScale(t=[-0,-0,-0]){return t[0]=Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2]),t[1]=Math.sqrt(this[4]*this[4]+this[5]*this[5]+this[6]*this[6]),t[2]=Math.sqrt(this[8]*this[8]+this[9]*this[9]+this[10]*this[10]),t}getTranslation(t=[-0,-0,-0]){return t[0]=this[12],t[1]=this[13],t[2]=this[14],t}getRotation(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=0,t[4]=this[4]*s,t[5]=this[5]*i,t[6]=this[6]*o,t[7]=0,t[8]=this[8]*s,t[9]=this[9]*i,t[10]=this[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}getRotationMatrix3(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=this[4]*s,t[4]=this[5]*i,t[5]=this[6]*o,t[6]=this[8]*s,t[7]=this[9]*i,t[8]=this[10]*o,t}transpose(){return ZN(this,this),this.check()}invert(){return JN(this,this),this.check()}multiplyLeft(t){return n3(this,t,this),this.check()}multiplyRight(t){return n3(this,this,t),this.check()}rotateX(t){return nF(this,this,t),this.check()}rotateY(t){return sF(this,this,t),this.check()}rotateZ(t){return iF(this,this,t),this.check()}rotateXYZ(t){return this.rotateX(t[0]).rotateY(t[1]).rotateZ(t[2])}rotateAxis(t,r){return rF(this,this,t,r),this.check()}scale(t){return eF(this,this,Array.isArray(t)?t:[t,t,t]),this.check()}translate(t){return tF(this,this,t),this.check()}transform(t,r){return t.length===4?(r=hF(r||[-0,-0,-0,-0],t,this),u1(r,4),r):this.transformAsPoint(t,r)}transformAsPoint(t,r){let{length:n}=t,s;switch(n){case 2:s=zN(r||[-0,-0],t,this);break;case 3:s=Zu(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return u1(s,t.length),s}transformAsVector(t,r){let n;switch(t.length){case 2:n=VN(r||[-0,-0],t,this);break;case 3:n=p1(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return u1(n,t.length),n}transformPoint(t,r){return this.transformAsPoint(t,r)}transformVector(t,r){return this.transformAsPoint(t,r)}transformDirection(t,r){return this.transformAsVector(t,r)}makeRotationX(t){return this.identity().rotateX(t)}makeTranslation(t,r,n){return this.identity().translate([t,r,n])}},x1,_1;function ost(){return x1||(x1=new Di([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Object.freeze(x1)),x1}function ast(){return _1||(_1=new Di,Object.freeze(_1)),_1}function uF(e){if(e>Math.PI*2)throw Error("expected radians")}function cst(e,t,r,n,s,i){let o=2*i/(r-t),a=2*i/(s-n),c=(r+t)/(r-t),l=(s+n)/(s-n),f=-1,h=-1,u=-2*i;return e[0]=o,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=c,e[9]=l,e[10]=f,e[11]=h,e[12]=0,e[13]=0,e[14]=u,e[15]=0,e}var ki={};Wt(ki,{EPSILON1:()=>lst,EPSILON10:()=>_st,EPSILON11:()=>yst,EPSILON12:()=>Ast,EPSILON13:()=>bst,EPSILON14:()=>Tst,EPSILON15:()=>vst,EPSILON16:()=>Est,EPSILON17:()=>Mst,EPSILON18:()=>Sst,EPSILON19:()=>wst,EPSILON2:()=>fst,EPSILON20:()=>Cst,EPSILON3:()=>hst,EPSILON4:()=>ust,EPSILON5:()=>dst,EPSILON6:()=>pst,EPSILON7:()=>mst,EPSILON8:()=>gst,EPSILON9:()=>xst,PI_OVER_FOUR:()=>Ist,PI_OVER_SIX:()=>Rst,PI_OVER_TWO:()=>Pst,TWO_PI:()=>Ost});var lst=.1,fst=.01,hst=.001,ust=1e-4,dst=1e-5,pst=1e-6,mst=1e-7,gst=1e-8,xst=1e-9,_st=1e-10,yst=1e-11,Ast=1e-12,bst=1e-13,Tst=1e-14,vst=1e-15,Est=1e-16,Mst=1e-17,Sst=1e-18,wst=1e-19,Cst=1e-20,Pst=Math.PI/2,Ist=Math.PI/4,Rst=Math.PI/6,Ost=Math.PI*2;var Ds=6356752314245179e-9,Lst={radii:[6378137,6378137,Ds],radiiSquared:[6378137*6378137,6378137*6378137,Ds*Ds],oneOverRadii:[1/6378137,1/6378137,1/Ds],oneOverRadiiSquared:[1/(6378137*6378137),1/(6378137*6378137),1/(Ds*Ds)],maximumRadius:Math.max(6378137,6378137,Ds),centerToleranceSquared:.1};function y1(e){return e}var SGt=new mt;function Bst(e,t=[],r=y1){return"longitude"in e?(t[0]=r(e.longitude),t[1]=r(e.latitude),t[2]=e.height):"x"in e?(t[0]=r(e.x),t[1]=r(e.y),t[2]=e.z):(t[0]=r(e[0]),t[1]=r(e[1]),t[2]=e[2]),t}function dF(e,t=[]){return Bst(e,t,he._cartographicRadians?y1:jT)}function Nst(e,t,r=y1){return"longitude"in t?(t.longitude=r(e[0]),t.latitude=r(e[1]),t.height=e[2]):"x"in t?(t.x=r(e[0]),t.y=r(e[1]),t.z=e[2]):(t[0]=r(e[0]),t[1]=r(e[1]),t[2]=e[2]),t}function pF(e,t){return Nst(e,t,he._cartographicRadians?y1:qT)}var mF=1e-14,Fst=new mt,gF={up:{south:"east",north:"west",west:"south",east:"north"},down:{south:"west",north:"east",west:"north",east:"south"},south:{up:"west",down:"east",west:"down",east:"up"},north:{up:"east",down:"west",west:"up",east:"down"},west:{up:"north",down:"south",north:"down",south:"up"},east:{up:"south",down:"north",north:"up",south:"down"}},a3={north:[-1,0,0],east:[0,1,0],up:[0,0,1],south:[1,0,0],west:[0,-1,0],down:[0,0,-1]},Ju={east:new mt,north:new mt,up:new mt,west:new mt,south:new mt,down:new mt},Dst=new mt,kst=new mt,Ust=new mt;function c3(e,t,r,n,s,i){let o=gF[t]&&gF[t][r];Yr(o&&(!n||n===o));let a,c,l,f=Fst.copy(s);if(Ns(f.x,0,mF)&&Ns(f.y,0,mF)){let u=Math.sign(f.z);a=Dst.fromArray(a3[t]),t!=="east"&&t!=="west"&&a.scale(u),c=kst.fromArray(a3[r]),r!=="east"&&r!=="west"&&c.scale(u),l=Ust.fromArray(a3[n]),n!=="east"&&n!=="west"&&l.scale(u)}else{let{up:u,east:d,north:p}=Ju;d.set(-f.y,f.x,0).normalize(),e.geodeticSurfaceNormal(f,u),p.copy(u).cross(d);let{down:m,west:g,south:x}=Ju;m.copy(u).scale(-1),g.copy(d).scale(-1),x.copy(p).scale(-1),a=Ju[t],c=Ju[r],l=Ju[n]}return i[0]=a.x,i[1]=a.y,i[2]=a.z,i[3]=0,i[4]=c.x,i[5]=c.y,i[6]=c.z,i[7]=0,i[8]=l.x,i[9]=l.y,i[10]=l.z,i[11]=0,i[12]=f.x,i[13]=f.y,i[14]=f.z,i[15]=1,i}var Qc=new mt,zst=new mt,Vst=new mt;function xF(e,t,r=[]){let{oneOverRadii:n,oneOverRadiiSquared:s,centerToleranceSquared:i}=t;Qc.from(e);let o=Qc.x,a=Qc.y,c=Qc.z,l=n.x,f=n.y,h=n.z,u=o*o*l*l,d=a*a*f*f,p=c*c*h*h,m=u+d+p,g=Math.sqrt(1/m);if(!Number.isFinite(g))return;let x=zst;if(x.copy(e).scale(g),m<i)return x.to(r);let A=s.x,_=s.y,y=s.z,T=Vst;T.set(x.x*A*2,x.y*_*2,x.z*y*2);let v=(1-g)*Qc.len()/(.5*T.len()),C=0,w,E,b,R;do{v-=C,w=1/(1+v*A),E=1/(1+v*_),b=1/(1+v*y);let k=w*w,D=E*E,P=b*b,j=k*w,ot=D*E,st=P*b;R=u*k+d*D+p*P-1;let gt=-2*(u*j*A+d*ot*_+p*st*y);C=R/gt}while(Math.abs(R)>ki.EPSILON12);return Qc.scale([w,E,b]).to(r)}var A1=new mt,_F=new mt,Gst=new mt,bn=new mt,jst=new mt,b1=new mt,ut=class{constructor(t=0,r=0,n=0){this.centerToleranceSquared=ki.EPSILON1,Yr(t>=0),Yr(r>=0),Yr(n>=0),this.radii=new mt(t,r,n),this.radiiSquared=new mt(t*t,r*r,n*n),this.radiiToTheFourth=new mt(t*t*t*t,r*r*r*r,n*n*n*n),this.oneOverRadii=new mt(t===0?0:1/t,r===0?0:1/r,n===0?0:1/n),this.oneOverRadiiSquared=new mt(t===0?0:1/(t*t),r===0?0:1/(r*r),n===0?0:1/(n*n)),this.minimumRadius=Math.min(t,r,n),this.maximumRadius=Math.max(t,r,n),this.radiiSquared.z!==0&&(this.squaredXOverSquaredZ=this.radiiSquared.x/this.radiiSquared.z),Object.freeze(this)}equals(t){return this===t||Boolean(t&&this.radii.equals(t.radii))}toString(){return this.radii.toString()}cartographicToCartesian(t,r=[0,0,0]){let n=_F,s=Gst,[,,i]=t;this.geodeticSurfaceNormalCartographic(t,n),s.copy(this.radiiSquared).scale(n);let o=Math.sqrt(n.dot(s));return s.scale(1/o),n.scale(i),s.add(n),s.to(r)}cartesianToCartographic(t,r=[0,0,0]){b1.from(t);let n=this.scaleToGeodeticSurface(b1,bn);if(!n)return;let s=this.geodeticSurfaceNormal(n,_F),i=jst;i.copy(b1).subtract(n);let o=Math.atan2(s.y,s.x),a=Math.asin(s.z),c=Math.sign(Jc.dot(i,b1))*Jc.length(i);return pF([o,a,c],r)}eastNorthUpToFixedFrame(t,r=new Di){return c3(this,"east","north","up",t,r)}localFrameToFixedFrame(t,r,n,s,i=new Di){return c3(this,t,r,n,s,i)}geocentricSurfaceNormal(t,r=[0,0,0]){return A1.from(t).normalize().to(r)}geodeticSurfaceNormalCartographic(t,r=[0,0,0]){let n=dF(t),s=n[0],i=n[1],o=Math.cos(i);return A1.set(o*Math.cos(s),o*Math.sin(s),Math.sin(i)).normalize(),A1.to(r)}geodeticSurfaceNormal(t,r=[0,0,0]){return A1.from(t).scale(this.oneOverRadiiSquared).normalize().to(r)}scaleToGeodeticSurface(t,r){return xF(t,this,r)}scaleToGeocentricSurface(t,r=[0,0,0]){bn.from(t);let n=bn.x,s=bn.y,i=bn.z,o=this.oneOverRadiiSquared,a=1/Math.sqrt(n*n*o.x+s*s*o.y+i*i*o.z);return bn.multiplyScalar(a).to(r)}transformPositionToScaledSpace(t,r=[0,0,0]){return bn.from(t).scale(this.oneOverRadii).to(r)}transformPositionFromScaledSpace(t,r=[0,0,0]){return bn.from(t).scale(this.radii).to(r)}getSurfaceNormalIntersectionWithZAxis(t,r=0,n=[0,0,0]){Yr(Ns(this.radii.x,this.radii.y,ki.EPSILON15)),Yr(this.radii.z>0),bn.from(t);let s=bn.z*(1-this.squaredXOverSquaredZ);if(!(Math.abs(s)>=this.radii.z-r))return bn.set(0,0,s).to(n)}};ut.WGS84=new ut(6378137,6378137,Ds);var T1=class{item;previous;next;constructor(t,r,n){this.item=t,this.previous=r,this.next=n}};var v1=class{head=null;tail=null;_length=0;get length(){return this._length}add(t){let r=new T1(t,this.tail,null);return this.tail?(this.tail.next=r,this.tail=r):(this.head=r,this.tail=r),++this._length,r}remove(t){t&&(t.previous&&t.next?(t.previous.next=t.next,t.next.previous=t.previous):t.previous?(t.previous.next=null,this.tail=t.previous):t.next?(t.next.previous=null,this.head=t.next):(this.head=null,this.tail=null),t.next=null,t.previous=null,--this._length)}splice(t,r){t!==r&&(this.remove(r),this._insert(t,r))}_insert(t,r){let n=t.next;t.next=r,this.tail===t?this.tail=r:n.previous=r,r.next=n,r.previous=t,++this._length}};var E1=class{_list;_sentinel;_trimTiles;constructor(){this._list=new v1,this._sentinel=this._list.add("sentinel"),this._trimTiles=!1}reset(){this._list.splice(this._list.tail,this._sentinel)}touch(t){let r=t._cacheNode;r&&this._list.splice(this._sentinel,r)}add(t,r,n){r._cacheNode||(r._cacheNode=this._list.add(r),n&&n(t,r))}unloadTile(t,r,n){let s=r._cacheNode;s&&(this._list.remove(s),r._cacheNode=null,n&&n(t,r))}unloadTiles(t,r){let n=this._trimTiles;this._trimTiles=!1;let s=this._list,i=t.maximumMemoryUsage*1024*1024,o=this._sentinel,a=s.head;for(;a!==o&&(t.gpuMemoryUsageInBytes>i||n);){let c=a.item;a=a.next,this.unloadTile(t,c,r)}}trim(){this._trimTiles=!0}};function yF(e,t){lt(e),lt(t);let{rtcCenter:r,gltfUpAxis:n}=t,{computedTransform:s,boundingVolume:{center:i}}=e,o=new Ft(s);switch(r&&o.translate(r),n){case"Z":break;case"Y":let h=new Ft().rotateX(Math.PI/2);o=o.multiplyRight(h);break;case"X":let u=new Ft().rotateY(-Math.PI/2);o=o.multiplyRight(u);break;default:break}t.isQuantized&&o.translate(t.quantizedVolumeOffset).scale(t.quantizedVolumeScale);let a=new Z(i);t.cartesianModelMatrix=o,t.cartesianOrigin=a;let c=ut.WGS84.cartesianToCartographic(a,new Z),f=ut.WGS84.eastNorthUpToFixedFrame(a).invert();t.cartographicModelMatrix=f.multiplyRight(o),t.cartographicOrigin=c,t.coordinateSystem||(t.modelMatrix=t.cartographicModelMatrix)}var Ie={OUTSIDE:-1,INTERSECTING:0,INSIDE:1};var JGt=1/Math.PI*180,QGt=1/180*Math.PI,qst={EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1};globalThis.mathgl=globalThis.mathgl||{config:{...qst}};var ue=globalThis.mathgl.config;function l3(e,{precision:t=ue.precision}={}){return e=Xst(e),`${parseFloat(e.toPrecision(t))}`}function ks(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}function Ui(e,t,r){let n=ue.EPSILON;r&&(ue.EPSILON=r);try{if(e===t)return!0;if(ks(e)&&ks(t)){if(e.length!==t.length)return!1;for(let s=0;s<e.length;++s)if(!Ui(e[s],t[s]))return!1;return!0}return e&&e.equals?e.equals(t):t&&t.equals?t.equals(e):typeof e=="number"&&typeof t=="number"?Math.abs(e-t)<=ue.EPSILON*Math.max(1,Math.abs(e),Math.abs(t)):!1}finally{ue.EPSILON=n}}function Xst(e){return Math.round(e/ue.EPSILON)*ue.EPSILON}var zi=class extends Array{clone(){return new this.constructor().copy(this)}fromArray(t,r=0){for(let n=0;n<this.ELEMENTS;++n)this[n]=t[n+r];return this.check()}toArray(t=[],r=0){for(let n=0;n<this.ELEMENTS;++n)t[r+n]=this[n];return t}toObject(t){return t}from(t){return Array.isArray(t)?this.copy(t):this.fromObject(t)}to(t){return t===this?this:ks(t)?this.toArray(t):this.toObject(t)}toTarget(t){return t?this.to(t):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(ue)}formatString(t){let r="";for(let n=0;n<this.ELEMENTS;++n)r+=(n>0?", ":"")+l3(this[n],t);return`${t.printTypes?this.constructor.name:""}[${r}]`}equals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(!Ui(this[r],t[r]))return!1;return!0}exactEquals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(this[r]!==t[r])return!1;return!0}negate(){for(let t=0;t<this.ELEMENTS;++t)this[t]=-this[t];return this.check()}lerp(t,r,n){if(n===void 0)return this.lerp(this,t,r);for(let s=0;s<this.ELEMENTS;++s){let i=t[s],o=typeof r=="number"?r:r[s];this[s]=i+n*(o-i)}return this.check()}min(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.min(t[r],this[r]);return this.check()}max(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.max(t[r],this[r]);return this.check()}clamp(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t[n]),r[n]);return this.check()}add(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]+=r[n];return this.check()}subtract(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]-=r[n];return this.check()}scale(t){if(typeof t=="number")for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;else for(let r=0;r<this.ELEMENTS&&r<t.length;++r)this[r]*=t[r];return this.check()}multiplyByScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}check(){if(ue.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let t=this.length===this.ELEMENTS;for(let r=0;r<this.ELEMENTS;++r)t=t&&Number.isFinite(this[r]);return t}sub(t){return this.subtract(t)}setScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=t;return this.check()}addScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]+=t;return this.check()}subScalar(t){return this.addScalar(-t)}multiplyScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}divideScalar(t){return this.multiplyByScalar(1/t)}clampScalar(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t),r);return this.check()}get elements(){return this}};function Yst(e,t){if(e.length!==t)return!1;for(let r=0;r<e.length;++r)if(!Number.isFinite(e[r]))return!1;return!0}function At(e){if(!Number.isFinite(e))throw new Error(`Invalid number ${JSON.stringify(e)}`);return e}function M1(e,t,r=""){if(ue.debug&&!Yst(e,t))throw new Error(`math.gl: ${r} some fields set to invalid numbers'`);return e}function Jn(e,t){if(!e)throw new Error(`math.gl assertion ${t}`)}var tl=class extends zi{get x(){return this[0]}set x(t){this[0]=At(t)}get y(){return this[1]}set y(t){this[1]=At(t)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let t=0;for(let r=0;r<this.ELEMENTS;++r)t+=this[r]*this[r];return t}magnitudeSquared(){return this.lengthSquared()}distance(t){return Math.sqrt(this.distanceSquared(t))}distanceSquared(t){let r=0;for(let n=0;n<this.ELEMENTS;++n){let s=this[n]-t[n];r+=s*s}return At(r)}dot(t){let r=0;for(let n=0;n<this.ELEMENTS;++n)r+=this[n]*t[n];return At(r)}normalize(){let t=this.magnitude();if(t!==0)for(let r=0;r<this.ELEMENTS;++r)this[r]/=t;return this.check()}multiply(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]*=r[n];return this.check()}divide(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]/=r[n];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(t){return this.distance(t)}distanceToSquared(t){return this.distanceSquared(t)}getComponent(t){return Jn(t>=0&&t<this.ELEMENTS,"index is out of range"),At(this[t])}setComponent(t,r){return Jn(t>=0&&t<this.ELEMENTS,"index is out of range"),this[t]=r,this.check()}addVectors(t,r){return this.copy(t).add(r)}subVectors(t,r){return this.copy(t).subtract(r)}multiplyVectors(t,r){return this.copy(t).multiply(r)}addScaledVector(t,r){return this.add(new this.constructor(t).multiplyScalar(r))}};var Zt=typeof Float32Array<"u"?Float32Array:Array;var fjt=Math.PI/180;function $st(){let e=new Zt(2);return Zt!=Float32Array&&(e[0]=0,e[1]=0),e}function TF(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[3]*s+r[6],e[1]=r[1]*n+r[4]*s+r[7],e}var hjt=function(){let e=$st();return function(t,r,n,s,i,o){let a,c;for(r||(r=2),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],i(e,e,o),t[a]=e[0],t[a+1]=e[1];return t}}();function vF(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i||1;return e[0]=(r[0]*n+r[4]*s+r[8]*i)/o,e[1]=(r[1]*n+r[5]*s+r[9]*i)/o,e[2]=(r[2]*n+r[6]*s+r[10]*i)/o,e}function EF(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e}function MF(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e[3]=t[3],e}function S1(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=r[0]*n+r[3]*s+r[6]*i,e[1]=r[1]*n+r[4]*s+r[7]*i,e[2]=r[2]*n+r[5]*s+r[8]*i,e[3]=t[3],e}function f3(){let e=new Zt(3);return Zt!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function Kst(e){let t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)}function h3(e,t,r){let n=new Zt(3);return n[0]=e,n[1]=t,n[2]=r,n}function SF(e,t){let r=t[0],n=t[1],s=t[2],i=r*r+n*n+s*s;return i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function u3(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function rl(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2];return e[0]=s*c-i*a,e[1]=i*o-n*c,e[2]=n*a-s*o,e}function w1(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*s+r[8]*i+r[12])/o,e[1]=(r[1]*n+r[5]*s+r[9]*i+r[13])/o,e[2]=(r[2]*n+r[6]*s+r[10]*i+r[14])/o,e}function C1(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=n*r[0]+s*r[3]+i*r[6],e[1]=n*r[1]+s*r[4]+i*r[7],e[2]=n*r[2]+s*r[5]+i*r[8],e}function P1(e,t,r){let n=r[0],s=r[1],i=r[2],o=r[3],a=t[0],c=t[1],l=t[2],f=s*l-i*c,h=i*a-n*l,u=n*c-s*a,d=s*u-i*h,p=i*f-n*u,m=n*h-s*f,g=o*2;return f*=g,h*=g,u*=g,d*=2,p*=2,m*=2,e[0]=a+f+d,e[1]=c+h+p,e[2]=l+u+m,e}function wF(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0],i[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),i[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function CF(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),i[1]=s[1],i[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function PF(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),i[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),i[2]=s[2],e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function IF(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2],c=Math.sqrt((r*r+n*n+s*s)*(i*i+o*o+a*a)),l=c&&u3(e,t)/c;return Math.acos(Math.min(Math.max(l,-1),1))}var RF=Kst;var pjt=function(){let e=f3();return function(t,r,n,s,i,o){let a,c;for(r||(r=3),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}}();var d3=[0,0,0],I1,K=class extends tl{static get ZERO(){return I1||(I1=new K(0,0,0),Object.freeze(I1)),I1}constructor(t=0,r=0,n=0){super(-0,-0,-0),arguments.length===1&&ks(t)?this.copy(t):(ue.debug&&(At(t),At(r),At(n)),this[0]=t,this[1]=r,this[2]=n)}set(t,r,n){return this[0]=t,this[1]=r,this[2]=n,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.check()}fromObject(t){return ue.debug&&(At(t.x),At(t.y),At(t.z)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t}get ELEMENTS(){return 3}get z(){return this[2]}set z(t){this[2]=At(t)}angle(t){return IF(this,t)}cross(t){return rl(this,this,t),this.check()}rotateX({radians:t,origin:r=d3}){return wF(this,this,r,t),this.check()}rotateY({radians:t,origin:r=d3}){return CF(this,this,r,t),this.check()}rotateZ({radians:t,origin:r=d3}){return PF(this,this,r,t),this.check()}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return w1(this,this,t),this.check()}transformAsVector(t){return vF(this,this,t),this.check()}transformByMatrix3(t){return C1(this,this,t),this.check()}transformByMatrix2(t){return EF(this,this,t),this.check()}transformByQuaternion(t){return P1(this,this,t),this.check()}};var R1,nl=class extends tl{static get ZERO(){return R1||(R1=new nl(0,0,0,0),Object.freeze(R1)),R1}constructor(t=0,r=0,n=0,s=0){super(-0,-0,-0,-0),ks(t)&&arguments.length===1?this.copy(t):(ue.debug&&(At(t),At(r),At(n),At(s)),this[0]=t,this[1]=r,this[2]=n,this[3]=s)}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}fromObject(t){return ue.debug&&(At(t.x),At(t.y),At(t.z),At(t.w)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t.w=this[3],t}get ELEMENTS(){return 4}get z(){return this[2]}set z(t){this[2]=At(t)}get w(){return this[3]}set w(t){this[3]=At(t)}transform(t){return w1(this,this,t),this.check()}transformByMatrix3(t){return S1(this,this,t),this.check()}transformByMatrix2(t){return MF(this,this,t),this.check()}transformByQuaternion(t){return P1(this,this,t),this.check()}applyMatrix4(t){return t.transform(this,this),this}};var O1=class extends zi{toString(){let t="[";if(ue.printRowMajor){t+="row-major:";for(let r=0;r<this.RANK;++r)for(let n=0;n<this.RANK;++n)t+=` ${this[n*this.RANK+r]}`}else{t+="column-major:";for(let r=0;r<this.ELEMENTS;++r)t+=` ${this[r]}`}return t+="]",t}getElementIndex(t,r){return r*this.RANK+t}getElement(t,r){return this[r*this.RANK+t]}setElement(t,r,n){return this[r*this.RANK+t]=At(n),this}getColumn(t,r=new Array(this.RANK).fill(-0)){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)r[s]=this[n+s];return r}setColumn(t,r){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)this[n+s]=r[s];return this}};function OF(){let e=new Zt(9);return Zt!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function LF(e,t){if(e===t){let r=t[1],n=t[2],s=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=s}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function BF(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=f*o-a*l,u=-f*i+a*c,d=l*i-o*c,p=r*h+n*u+s*d;return p?(p=1/p,e[0]=h*p,e[1]=(-f*n+s*l)*p,e[2]=(a*n-s*o)*p,e[3]=u*p,e[4]=(f*r-s*c)*p,e[5]=(-a*r+s*i)*p,e[6]=d*p,e[7]=(-l*r+n*c)*p,e[8]=(o*r-n*i)*p,e):null}function NF(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*(l*i-o*c)+r*(-l*s+o*a)+n*(c*s-i*a)}function p3(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1],p=r[2],m=r[3],g=r[4],x=r[5],A=r[6],_=r[7],y=r[8];return e[0]=u*n+d*o+p*l,e[1]=u*s+d*a+p*f,e[2]=u*i+d*c+p*h,e[3]=m*n+g*o+x*l,e[4]=m*s+g*a+x*f,e[5]=m*i+g*c+x*h,e[6]=A*n+_*o+y*l,e[7]=A*s+_*a+y*f,e[8]=A*i+_*c+y*h,e}function FF(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1];return e[0]=n,e[1]=s,e[2]=i,e[3]=o,e[4]=a,e[5]=c,e[6]=u*n+d*o+l,e[7]=u*s+d*a+f,e[8]=u*i+d*c+h,e}function DF(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=Math.sin(r),d=Math.cos(r);return e[0]=d*n+u*o,e[1]=d*s+u*a,e[2]=d*i+u*c,e[3]=d*o-u*n,e[4]=d*a-u*s,e[5]=d*c-u*i,e[6]=l,e[7]=f,e[8]=h,e}function m3(e,t,r){let n=r[0],s=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=s*t[3],e[4]=s*t[4],e[5]=s*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function kF(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[3]=f-x,e[6]=u+g,e[1]=f+x,e[4]=1-l-p,e[7]=d-m,e[2]=u-g,e[5]=d+m,e[8]=1-l-h,e}var g3;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL1ROW0=3]="COL1ROW0",e[e.COL1ROW1=4]="COL1ROW1",e[e.COL1ROW2=5]="COL1ROW2",e[e.COL2ROW0=6]="COL2ROW0",e[e.COL2ROW1=7]="COL2ROW1",e[e.COL2ROW2=8]="COL2ROW2"})(g3||(g3={}));var Qst=Object.freeze([1,0,0,0,1,0,0,0,1]),Jt=class extends O1{static get IDENTITY(){return eit()}static get ZERO(){return tit()}get ELEMENTS(){return 9}get RANK(){return 3}get INDICES(){return g3}constructor(t,...r){super(-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):r.length>0?this.copy([t,...r]):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this.check()}identity(){return this.copy(Qst)}fromObject(t){return this.check()}fromQuaternion(t){return kF(this,t),this.check()}set(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=s,this[2]=a,this[3]=r,this[4]=i,this[5]=c,this[6]=n,this[7]=o,this[8]=l,this.check()}determinant(){return NF(this)}transpose(){return LF(this,this),this.check()}invert(){return BF(this,this),this.check()}multiplyLeft(t){return p3(this,t,this),this.check()}multiplyRight(t){return p3(this,this,t),this.check()}rotate(t){return DF(this,this,t),this.check()}scale(t){return Array.isArray(t)?m3(this,this,t):m3(this,this,[t,t]),this.check()}translate(t){return FF(this,this,t),this.check()}transform(t,r){let n;switch(t.length){case 2:n=TF(r||[-0,-0],t,this);break;case 3:n=C1(r||[-0,-0,-0],t,this);break;case 4:n=S1(r||[-0,-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return M1(n,t.length),n}transformVector(t,r){return this.transform(t,r)}transformVector2(t,r){return this.transform(t,r)}transformVector3(t,r){return this.transform(t,r)}},L1,B1=null;function tit(){return L1||(L1=new Jt([0,0,0,0,0,0,0,0,0]),Object.freeze(L1)),L1}function eit(){return B1||(B1=new Jt,Object.freeze(B1)),B1}var Qu={};Wt(Qu,{add:()=>zit,adjoint:()=>lit,clone:()=>nit,copy:()=>sit,create:()=>rit,decompose:()=>Sit,determinant:()=>fit,equals:()=>Git,exactEquals:()=>Hit,frob:()=>Uit,fromQuat:()=>Pit,fromQuat2:()=>vit,fromRotation:()=>yit,fromRotationTranslation:()=>VF,fromRotationTranslationScale:()=>wit,fromRotationTranslationScaleOrigin:()=>Cit,fromScaling:()=>_it,fromTranslation:()=>xit,fromValues:()=>iit,fromXRotation:()=>Ait,fromYRotation:()=>bit,fromZRotation:()=>Tit,frustum:()=>Iit,getRotation:()=>Mit,getScaling:()=>WF,getTranslation:()=>Eit,identity:()=>UF,invert:()=>cit,lookAt:()=>Fit,mul:()=>jit,multiply:()=>zF,multiplyScalar:()=>Vit,multiplyScalarAndAdd:()=>Wit,ortho:()=>Bit,orthoNO:()=>GF,orthoZO:()=>Nit,perspective:()=>Rit,perspectiveFromFieldOfView:()=>Lit,perspectiveNO:()=>HF,perspectiveZO:()=>Oit,rotate:()=>dit,rotateX:()=>pit,rotateY:()=>mit,rotateZ:()=>git,scale:()=>uit,set:()=>oit,str:()=>kit,sub:()=>qit,subtract:()=>jF,targetTo:()=>Dit,translate:()=>hit,transpose:()=>ait});function rit(){let e=new Zt(16);return Zt!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function nit(e){let t=new Zt(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function sit(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function iit(e,t,r,n,s,i,o,a,c,l,f,h,u,d,p,m){let g=new Zt(16);return g[0]=e,g[1]=t,g[2]=r,g[3]=n,g[4]=s,g[5]=i,g[6]=o,g[7]=a,g[8]=c,g[9]=l,g[10]=f,g[11]=h,g[12]=u,g[13]=d,g[14]=p,g[15]=m,g}function oit(e,t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return e[0]=t,e[1]=r,e[2]=n,e[3]=s,e[4]=i,e[5]=o,e[6]=a,e[7]=c,e[8]=l,e[9]=f,e[10]=h,e[11]=u,e[12]=d,e[13]=p,e[14]=m,e[15]=g,e}function UF(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ait(e,t){if(e===t){let r=t[1],n=t[2],s=t[3],i=t[6],o=t[7],a=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=i,e[11]=t[14],e[12]=s,e[13]=o,e[14]=a}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function cit(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],g=t[14],x=t[15],A=r*a-n*o,_=r*c-s*o,y=r*l-i*o,T=n*c-s*a,v=n*l-i*a,C=s*l-i*c,w=f*m-h*p,E=f*g-u*p,b=f*x-d*p,R=h*g-u*m,k=h*x-d*m,D=u*x-d*g,P=A*D-_*k+y*R+T*b-v*E+C*w;return P?(P=1/P,e[0]=(a*D-c*k+l*R)*P,e[1]=(s*k-n*D-i*R)*P,e[2]=(m*C-g*v+x*T)*P,e[3]=(u*v-h*C-d*T)*P,e[4]=(c*b-o*D-l*E)*P,e[5]=(r*D-s*b+i*E)*P,e[6]=(g*y-p*C-x*_)*P,e[7]=(f*C-u*y+d*_)*P,e[8]=(o*k-a*b+l*w)*P,e[9]=(n*b-r*k-i*w)*P,e[10]=(p*v-m*y+x*A)*P,e[11]=(h*y-f*v-d*A)*P,e[12]=(a*E-o*R-c*w)*P,e[13]=(r*R-n*E+s*w)*P,e[14]=(m*_-p*T-g*A)*P,e[15]=(f*T-h*_+u*A)*P,e):null}function lit(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],g=t[14],x=t[15],A=r*a-n*o,_=r*c-s*o,y=r*l-i*o,T=n*c-s*a,v=n*l-i*a,C=s*l-i*c,w=f*m-h*p,E=f*g-u*p,b=f*x-d*p,R=h*g-u*m,k=h*x-d*m,D=u*x-d*g;return e[0]=a*D-c*k+l*R,e[1]=s*k-n*D-i*R,e[2]=m*C-g*v+x*T,e[3]=u*v-h*C-d*T,e[4]=c*b-o*D-l*E,e[5]=r*D-s*b+i*E,e[6]=g*y-p*C-x*_,e[7]=f*C-u*y+d*_,e[8]=o*k-a*b+l*w,e[9]=n*b-r*k-i*w,e[10]=p*v-m*y+x*A,e[11]=h*y-f*v-d*A,e[12]=a*E-o*R-c*w,e[13]=r*R-n*E+s*w,e[14]=m*_-p*T-g*A,e[15]=f*T-h*_+u*A,e}function fit(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8],f=e[9],h=e[10],u=e[11],d=e[12],p=e[13],m=e[14],g=e[15],x=t*o-r*i,A=t*a-n*i,_=r*a-n*o,y=l*p-f*d,T=l*m-h*d,v=f*m-h*p,C=t*v-r*T+n*y,w=i*v-o*T+a*y,E=l*_-f*A+h*x,b=d*_-p*A+m*x;return c*C-s*w+g*E-u*b}function zF(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=t[9],d=t[10],p=t[11],m=t[12],g=t[13],x=t[14],A=t[15],_=r[0],y=r[1],T=r[2],v=r[3];return e[0]=_*n+y*a+T*h+v*m,e[1]=_*s+y*c+T*u+v*g,e[2]=_*i+y*l+T*d+v*x,e[3]=_*o+y*f+T*p+v*A,_=r[4],y=r[5],T=r[6],v=r[7],e[4]=_*n+y*a+T*h+v*m,e[5]=_*s+y*c+T*u+v*g,e[6]=_*i+y*l+T*d+v*x,e[7]=_*o+y*f+T*p+v*A,_=r[8],y=r[9],T=r[10],v=r[11],e[8]=_*n+y*a+T*h+v*m,e[9]=_*s+y*c+T*u+v*g,e[10]=_*i+y*l+T*d+v*x,e[11]=_*o+y*f+T*p+v*A,_=r[12],y=r[13],T=r[14],v=r[15],e[12]=_*n+y*a+T*h+v*m,e[13]=_*s+y*c+T*u+v*g,e[14]=_*i+y*l+T*d+v*x,e[15]=_*o+y*f+T*p+v*A,e}function hit(e,t,r){let n=r[0],s=r[1],i=r[2],o,a,c,l,f,h,u,d,p,m,g,x;return t===e?(e[12]=t[0]*n+t[4]*s+t[8]*i+t[12],e[13]=t[1]*n+t[5]*s+t[9]*i+t[13],e[14]=t[2]*n+t[6]*s+t[10]*i+t[14],e[15]=t[3]*n+t[7]*s+t[11]*i+t[15]):(o=t[0],a=t[1],c=t[2],l=t[3],f=t[4],h=t[5],u=t[6],d=t[7],p=t[8],m=t[9],g=t[10],x=t[11],e[0]=o,e[1]=a,e[2]=c,e[3]=l,e[4]=f,e[5]=h,e[6]=u,e[7]=d,e[8]=p,e[9]=m,e[10]=g,e[11]=x,e[12]=o*n+f*s+p*i+t[12],e[13]=a*n+h*s+m*i+t[13],e[14]=c*n+u*s+g*i+t[14],e[15]=l*n+d*s+x*i+t[15]),e}function uit(e,t,r){let n=r[0],s=r[1],i=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*s,e[5]=t[5]*s,e[6]=t[6]*s,e[7]=t[7]*s,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function dit(e,t,r,n){let s=n[0],i=n[1],o=n[2],a=Math.sqrt(s*s+i*i+o*o),c,l,f,h,u,d,p,m,g,x,A,_,y,T,v,C,w,E,b,R,k,D,P,j;return a<1e-6?null:(a=1/a,s*=a,i*=a,o*=a,l=Math.sin(r),c=Math.cos(r),f=1-c,h=t[0],u=t[1],d=t[2],p=t[3],m=t[4],g=t[5],x=t[6],A=t[7],_=t[8],y=t[9],T=t[10],v=t[11],C=s*s*f+c,w=i*s*f+o*l,E=o*s*f-i*l,b=s*i*f-o*l,R=i*i*f+c,k=o*i*f+s*l,D=s*o*f+i*l,P=i*o*f-s*l,j=o*o*f+c,e[0]=h*C+m*w+_*E,e[1]=u*C+g*w+y*E,e[2]=d*C+x*w+T*E,e[3]=p*C+A*w+v*E,e[4]=h*b+m*R+_*k,e[5]=u*b+g*R+y*k,e[6]=d*b+x*R+T*k,e[7]=p*b+A*R+v*k,e[8]=h*D+m*P+_*j,e[9]=u*D+g*P+y*j,e[10]=d*D+x*P+T*j,e[11]=p*D+A*P+v*j,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function pit(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[4],o=t[5],a=t[6],c=t[7],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=i*s+l*n,e[5]=o*s+f*n,e[6]=a*s+h*n,e[7]=c*s+u*n,e[8]=l*s-i*n,e[9]=f*s-o*n,e[10]=h*s-a*n,e[11]=u*s-c*n,e}function mit(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s-l*n,e[1]=o*s-f*n,e[2]=a*s-h*n,e[3]=c*s-u*n,e[8]=i*n+l*s,e[9]=o*n+f*s,e[10]=a*n+h*s,e[11]=c*n+u*s,e}function git(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[4],f=t[5],h=t[6],u=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s+l*n,e[1]=o*s+f*n,e[2]=a*s+h*n,e[3]=c*s+u*n,e[4]=l*s-i*n,e[5]=f*s-o*n,e[6]=h*s-a*n,e[7]=u*s-c*n,e}function xit(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e}function _it(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function yit(e,t,r){let n=r[0],s=r[1],i=r[2],o=Math.sqrt(n*n+s*s+i*i),a,c,l;return o<1e-6?null:(o=1/o,n*=o,s*=o,i*=o,c=Math.sin(t),a=Math.cos(t),l=1-a,e[0]=n*n*l+a,e[1]=s*n*l+i*c,e[2]=i*n*l-s*c,e[3]=0,e[4]=n*s*l-i*c,e[5]=s*s*l+a,e[6]=i*s*l+n*c,e[7]=0,e[8]=n*i*l+s*c,e[9]=s*i*l-n*c,e[10]=i*i*l+a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)}function Ait(e,t){let r=Math.sin(t),n=Math.cos(t);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=r,e[7]=0,e[8]=0,e[9]=-r,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function bit(e,t){let r=Math.sin(t),n=Math.cos(t);return e[0]=n,e[1]=0,e[2]=-r,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=r,e[9]=0,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function Tit(e,t){let r=Math.sin(t),n=Math.cos(t);return e[0]=n,e[1]=r,e[2]=0,e[3]=0,e[4]=-r,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function VF(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=n+n,c=s+s,l=i+i,f=n*a,h=n*c,u=n*l,d=s*c,p=s*l,m=i*l,g=o*a,x=o*c,A=o*l;return e[0]=1-(d+m),e[1]=h+A,e[2]=u-x,e[3]=0,e[4]=h-A,e[5]=1-(f+m),e[6]=p+g,e[7]=0,e[8]=u+x,e[9]=p-g,e[10]=1-(f+d),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function vit(e,t){let r=new Zt(3),n=-t[0],s=-t[1],i=-t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=n*n+s*s+i*i+o*o;return h>0?(r[0]=(a*o+f*n+c*i-l*s)*2/h,r[1]=(c*o+f*s+l*n-a*i)*2/h,r[2]=(l*o+f*i+a*s-c*n)*2/h):(r[0]=(a*o+f*n+c*i-l*s)*2,r[1]=(c*o+f*s+l*n-a*i)*2,r[2]=(l*o+f*i+a*s-c*n)*2),VF(e,t,r),e}function Eit(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e}function WF(e,t){let r=t[0],n=t[1],s=t[2],i=t[4],o=t[5],a=t[6],c=t[8],l=t[9],f=t[10];return e[0]=Math.sqrt(r*r+n*n+s*s),e[1]=Math.sqrt(i*i+o*o+a*a),e[2]=Math.sqrt(c*c+l*l+f*f),e}function Mit(e,t){let r=new Zt(3);WF(r,t);let n=1/r[0],s=1/r[1],i=1/r[2],o=t[0]*n,a=t[1]*s,c=t[2]*i,l=t[4]*n,f=t[5]*s,h=t[6]*i,u=t[8]*n,d=t[9]*s,p=t[10]*i,m=o+f+p,g=0;return m>0?(g=Math.sqrt(m+1)*2,e[3]=.25*g,e[0]=(h-d)/g,e[1]=(u-c)/g,e[2]=(a-l)/g):o>f&&o>p?(g=Math.sqrt(1+o-f-p)*2,e[3]=(h-d)/g,e[0]=.25*g,e[1]=(a+l)/g,e[2]=(u+c)/g):f>p?(g=Math.sqrt(1+f-o-p)*2,e[3]=(u-c)/g,e[0]=(a+l)/g,e[1]=.25*g,e[2]=(h+d)/g):(g=Math.sqrt(1+p-o-f)*2,e[3]=(a-l)/g,e[0]=(u+c)/g,e[1]=(h+d)/g,e[2]=.25*g),e}function Sit(e,t,r,n){t[0]=n[12],t[1]=n[13],t[2]=n[14];let s=n[0],i=n[1],o=n[2],a=n[4],c=n[5],l=n[6],f=n[8],h=n[9],u=n[10];r[0]=Math.sqrt(s*s+i*i+o*o),r[1]=Math.sqrt(a*a+c*c+l*l),r[2]=Math.sqrt(f*f+h*h+u*u);let d=1/r[0],p=1/r[1],m=1/r[2],g=s*d,x=i*p,A=o*m,_=a*d,y=c*p,T=l*m,v=f*d,C=h*p,w=u*m,E=g+y+w,b=0;return E>0?(b=Math.sqrt(E+1)*2,e[3]=.25*b,e[0]=(T-C)/b,e[1]=(v-A)/b,e[2]=(x-_)/b):g>y&&g>w?(b=Math.sqrt(1+g-y-w)*2,e[3]=(T-C)/b,e[0]=.25*b,e[1]=(x+_)/b,e[2]=(v+A)/b):y>w?(b=Math.sqrt(1+y-g-w)*2,e[3]=(v-A)/b,e[0]=(x+_)/b,e[1]=.25*b,e[2]=(T+C)/b):(b=Math.sqrt(1+w-g-y)*2,e[3]=(x-_)/b,e[0]=(v+A)/b,e[1]=(T+C)/b,e[2]=.25*b),e}function wit(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3],c=s+s,l=i+i,f=o+o,h=s*c,u=s*l,d=s*f,p=i*l,m=i*f,g=o*f,x=a*c,A=a*l,_=a*f,y=n[0],T=n[1],v=n[2];return e[0]=(1-(p+g))*y,e[1]=(u+_)*y,e[2]=(d-A)*y,e[3]=0,e[4]=(u-_)*T,e[5]=(1-(h+g))*T,e[6]=(m+x)*T,e[7]=0,e[8]=(d+A)*v,e[9]=(m-x)*v,e[10]=(1-(h+p))*v,e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function Cit(e,t,r,n,s){let i=t[0],o=t[1],a=t[2],c=t[3],l=i+i,f=o+o,h=a+a,u=i*l,d=i*f,p=i*h,m=o*f,g=o*h,x=a*h,A=c*l,_=c*f,y=c*h,T=n[0],v=n[1],C=n[2],w=s[0],E=s[1],b=s[2],R=(1-(m+x))*T,k=(d+y)*T,D=(p-_)*T,P=(d-y)*v,j=(1-(u+x))*v,ot=(g+A)*v,st=(p+_)*C,Bt=(g-A)*C,gt=(1-(u+m))*C;return e[0]=R,e[1]=k,e[2]=D,e[3]=0,e[4]=P,e[5]=j,e[6]=ot,e[7]=0,e[8]=st,e[9]=Bt,e[10]=gt,e[11]=0,e[12]=r[0]+w-(R*w+P*E+st*b),e[13]=r[1]+E-(k*w+j*E+Bt*b),e[14]=r[2]+b-(D*w+ot*E+gt*b),e[15]=1,e}function Pit(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[1]=f+x,e[2]=u-g,e[3]=0,e[4]=f-x,e[5]=1-l-p,e[6]=d+m,e[7]=0,e[8]=u+g,e[9]=d-m,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function Iit(e,t,r,n,s,i,o){let a=1/(r-t),c=1/(s-n),l=1/(i-o);return e[0]=i*2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i*2*c,e[6]=0,e[7]=0,e[8]=(r+t)*a,e[9]=(s+n)*c,e[10]=(o+i)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*i*2*l,e[15]=0,e}function HF(e,t,r,n,s){let i=1/Math.tan(t/2);if(e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,s!=null&&s!==1/0){let o=1/(n-s);e[10]=(s+n)*o,e[14]=2*s*n*o}else e[10]=-1,e[14]=-2*n;return e}var Rit=HF;function Oit(e,t,r,n,s){let i=1/Math.tan(t/2);if(e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,s!=null&&s!==1/0){let o=1/(n-s);e[10]=s*o,e[14]=s*n*o}else e[10]=-1,e[14]=-n;return e}function Lit(e,t,r,n){let s=Math.tan(t.upDegrees*Math.PI/180),i=Math.tan(t.downDegrees*Math.PI/180),o=Math.tan(t.leftDegrees*Math.PI/180),a=Math.tan(t.rightDegrees*Math.PI/180),c=2/(o+a),l=2/(s+i);return e[0]=c,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=l,e[6]=0,e[7]=0,e[8]=-((o-a)*c*.5),e[9]=(s-i)*l*.5,e[10]=n/(r-n),e[11]=-1,e[12]=0,e[13]=0,e[14]=n*r/(r-n),e[15]=0,e}function GF(e,t,r,n,s,i,o){let a=1/(t-r),c=1/(n-s),l=1/(i-o);return e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+r)*a,e[13]=(s+n)*c,e[14]=(o+i)*l,e[15]=1,e}var Bit=GF;function Nit(e,t,r,n,s,i,o){let a=1/(t-r),c=1/(n-s),l=1/(i-o);return e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=l,e[11]=0,e[12]=(t+r)*a,e[13]=(s+n)*c,e[14]=i*l,e[15]=1,e}function Fit(e,t,r,n){let s,i,o,a,c,l,f,h,u,d,p=t[0],m=t[1],g=t[2],x=n[0],A=n[1],_=n[2],y=r[0],T=r[1],v=r[2];return Math.abs(p-y)<1e-6&&Math.abs(m-T)<1e-6&&Math.abs(g-v)<1e-6?UF(e):(h=p-y,u=m-T,d=g-v,s=1/Math.sqrt(h*h+u*u+d*d),h*=s,u*=s,d*=s,i=A*d-_*u,o=_*h-x*d,a=x*u-A*h,s=Math.sqrt(i*i+o*o+a*a),s?(s=1/s,i*=s,o*=s,a*=s):(i=0,o=0,a=0),c=u*a-d*o,l=d*i-h*a,f=h*o-u*i,s=Math.sqrt(c*c+l*l+f*f),s?(s=1/s,c*=s,l*=s,f*=s):(c=0,l=0,f=0),e[0]=i,e[1]=c,e[2]=h,e[3]=0,e[4]=o,e[5]=l,e[6]=u,e[7]=0,e[8]=a,e[9]=f,e[10]=d,e[11]=0,e[12]=-(i*p+o*m+a*g),e[13]=-(c*p+l*m+f*g),e[14]=-(h*p+u*m+d*g),e[15]=1,e)}function Dit(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=n[0],c=n[1],l=n[2],f=s-r[0],h=i-r[1],u=o-r[2],d=f*f+h*h+u*u;d>0&&(d=1/Math.sqrt(d),f*=d,h*=d,u*=d);let p=c*u-l*h,m=l*f-a*u,g=a*h-c*f;return d=p*p+m*m+g*g,d>0&&(d=1/Math.sqrt(d),p*=d,m*=d,g*=d),e[0]=p,e[1]=m,e[2]=g,e[3]=0,e[4]=h*g-u*m,e[5]=u*p-f*g,e[6]=f*m-h*p,e[7]=0,e[8]=f,e[9]=h,e[10]=u,e[11]=0,e[12]=s,e[13]=i,e[14]=o,e[15]=1,e}function kit(e){return`mat4(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]}, ${e[4]}, ${e[5]}, ${e[6]}, ${e[7]}, ${e[8]}, ${e[9]}, ${e[10]}, ${e[11]}, ${e[12]}, ${e[13]}, ${e[14]}, ${e[15]})`}function Uit(e){return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]+e[4]*e[4]+e[5]*e[5]+e[6]*e[6]+e[7]*e[7]+e[8]*e[8]+e[9]*e[9]+e[10]*e[10]+e[11]*e[11]+e[12]*e[12]+e[13]*e[13]+e[14]*e[14]+e[15]*e[15])}function zit(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e[4]=t[4]+r[4],e[5]=t[5]+r[5],e[6]=t[6]+r[6],e[7]=t[7]+r[7],e[8]=t[8]+r[8],e[9]=t[9]+r[9],e[10]=t[10]+r[10],e[11]=t[11]+r[11],e[12]=t[12]+r[12],e[13]=t[13]+r[13],e[14]=t[14]+r[14],e[15]=t[15]+r[15],e}function jF(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e[4]=t[4]-r[4],e[5]=t[5]-r[5],e[6]=t[6]-r[6],e[7]=t[7]-r[7],e[8]=t[8]-r[8],e[9]=t[9]-r[9],e[10]=t[10]-r[10],e[11]=t[11]-r[11],e[12]=t[12]-r[12],e[13]=t[13]-r[13],e[14]=t[14]-r[14],e[15]=t[15]-r[15],e}function Vit(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e[4]=t[4]*r,e[5]=t[5]*r,e[6]=t[6]*r,e[7]=t[7]*r,e[8]=t[8]*r,e[9]=t[9]*r,e[10]=t[10]*r,e[11]=t[11]*r,e[12]=t[12]*r,e[13]=t[13]*r,e[14]=t[14]*r,e[15]=t[15]*r,e}function Wit(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e[3]=t[3]+r[3]*n,e[4]=t[4]+r[4]*n,e[5]=t[5]+r[5]*n,e[6]=t[6]+r[6]*n,e[7]=t[7]+r[7]*n,e[8]=t[8]+r[8]*n,e[9]=t[9]+r[9]*n,e[10]=t[10]+r[10]*n,e[11]=t[11]+r[11]*n,e[12]=t[12]+r[12]*n,e[13]=t[13]+r[13]*n,e[14]=t[14]+r[14]*n,e[15]=t[15]+r[15]*n,e}function Hit(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]}function Git(e,t){let r=e[0],n=e[1],s=e[2],i=e[3],o=e[4],a=e[5],c=e[6],l=e[7],f=e[8],h=e[9],u=e[10],d=e[11],p=e[12],m=e[13],g=e[14],x=e[15],A=t[0],_=t[1],y=t[2],T=t[3],v=t[4],C=t[5],w=t[6],E=t[7],b=t[8],R=t[9],k=t[10],D=t[11],P=t[12],j=t[13],ot=t[14],st=t[15];return Math.abs(r-A)<=1e-6*Math.max(1,Math.abs(r),Math.abs(A))&&Math.abs(n-_)<=1e-6*Math.max(1,Math.abs(n),Math.abs(_))&&Math.abs(s-y)<=1e-6*Math.max(1,Math.abs(s),Math.abs(y))&&Math.abs(i-T)<=1e-6*Math.max(1,Math.abs(i),Math.abs(T))&&Math.abs(o-v)<=1e-6*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(a-C)<=1e-6*Math.max(1,Math.abs(a),Math.abs(C))&&Math.abs(c-w)<=1e-6*Math.max(1,Math.abs(c),Math.abs(w))&&Math.abs(l-E)<=1e-6*Math.max(1,Math.abs(l),Math.abs(E))&&Math.abs(f-b)<=1e-6*Math.max(1,Math.abs(f),Math.abs(b))&&Math.abs(h-R)<=1e-6*Math.max(1,Math.abs(h),Math.abs(R))&&Math.abs(u-k)<=1e-6*Math.max(1,Math.abs(u),Math.abs(k))&&Math.abs(d-D)<=1e-6*Math.max(1,Math.abs(d),Math.abs(D))&&Math.abs(p-P)<=1e-6*Math.max(1,Math.abs(p),Math.abs(P))&&Math.abs(m-j)<=1e-6*Math.max(1,Math.abs(m),Math.abs(j))&&Math.abs(g-ot)<=1e-6*Math.max(1,Math.abs(g),Math.abs(ot))&&Math.abs(x-st)<=1e-6*Math.max(1,Math.abs(x),Math.abs(st))}var jit=zF,qit=jF;function Xit(){let e=new Zt(4);return Zt!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function qF(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e}function XF(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e}function YF(e){let t=e[0],r=e[1],n=e[2],s=e[3];return Math.sqrt(t*t+r*r+n*n+s*s)}function $F(e){let t=e[0],r=e[1],n=e[2],s=e[3];return t*t+r*r+n*n+s*s}function KF(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i;return o>0&&(o=1/Math.sqrt(o)),e[0]=r*o,e[1]=n*o,e[2]=s*o,e[3]=i*o,e}function ZF(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function JF(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3];return e[0]=s+n*(r[0]-s),e[1]=i+n*(r[1]-i),e[2]=o+n*(r[2]-o),e[3]=a+n*(r[3]-a),e}function QF(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2],l=r[3],f=l*n+a*i-c*s,h=l*s+c*n-o*i,u=l*i+o*s-a*n,d=-o*n-a*s-c*i;return e[0]=f*l+d*-o+h*-c-u*-a,e[1]=h*l+d*-a+u*-o-f*-c,e[2]=u*l+d*-c+f*-a-h*-o,e[3]=t[3],e}var kjt=function(){let e=Xit();return function(t,r,n,s,i,o){let a,c;for(r||(r=4),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],e[3]=t[a+3],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2],t[a+3]=e[3];return t}}();function tD(){let e=new Zt(4);return Zt!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function eD(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function x3(e,t,r){r=r*.5;let n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e}function _3(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=r[0],c=r[1],l=r[2],f=r[3];return e[0]=n*f+o*a+s*l-i*c,e[1]=s*f+o*c+i*a-n*l,e[2]=i*f+o*l+n*c-s*a,e[3]=o*f-n*a-s*c-i*l,e}function rD(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+o*a,e[1]=s*c+i*a,e[2]=i*c-s*a,e[3]=o*c-n*a,e}function nD(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c-i*a,e[1]=s*c+o*a,e[2]=i*c+n*a,e[3]=o*c-s*a,e}function sD(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+s*a,e[1]=s*c-n*a,e[2]=i*c+o*a,e[3]=o*c-i*a,e}function iD(e,t){let r=t[0],n=t[1],s=t[2];return e[0]=r,e[1]=n,e[2]=s,e[3]=Math.sqrt(Math.abs(1-r*r-n*n-s*s)),e}function td(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3],c=r[0],l=r[1],f=r[2],h=r[3],u,d,p,m,g;return u=s*c+i*l+o*f+a*h,u<0&&(u=-u,c=-c,l=-l,f=-f,h=-h),1-u>1e-6?(d=Math.acos(u),g=Math.sin(d),p=Math.sin((1-n)*d)/g,m=Math.sin(n*d)/g):(p=1-n,m=n),e[0]=p*s+m*c,e[1]=p*i+m*l,e[2]=p*o+m*f,e[3]=p*a+m*h,e}function oD(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i,a=o?1/o:0;return e[0]=-r*a,e[1]=-n*a,e[2]=-s*a,e[3]=i*a,e}function aD(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}function y3(e,t){let r=t[0]+t[4]+t[8],n;if(r>0)n=Math.sqrt(r+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{let s=0;t[4]>t[0]&&(s=1),t[8]>t[s*3+s]&&(s=2);let i=(s+1)%3,o=(s+2)%3;n=Math.sqrt(t[s*3+s]-t[i*3+i]-t[o*3+o]+1),e[s]=.5*n,n=.5/n,e[3]=(t[i*3+o]-t[o*3+i])*n,e[i]=(t[i*3+s]+t[s*3+i])*n,e[o]=(t[o*3+s]+t[s*3+o])*n}return e}var cD=qF;var lD=XF,fD=ZF,hD=JF,uD=YF;var dD=$F;var pD=KF;var mD=function(){let e=f3(),t=h3(1,0,0),r=h3(0,1,0);return function(n,s,i){let o=u3(s,i);return o<-.999999?(rl(e,t,s),RF(e)<1e-6&&rl(e,r,s),SF(e,e),x3(n,e,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(rl(e,s,i),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+o,pD(n,n))}}(),Gjt=function(){let e=tD(),t=tD();return function(r,n,s,i,o,a){return td(e,n,o,a),td(t,s,i,a),td(r,e,t,2*a*(1-a)),r}}(),jjt=function(){let e=OF();return function(t,r,n,s){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=s[0],e[4]=s[1],e[7]=s[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],pD(t,y3(t,e))}}();var $it=[0,0,0,1],sl=class extends zi{constructor(t=0,r=0,n=0,s=1){super(-0,-0,-0,-0),Array.isArray(t)&&arguments.length===1?this.copy(t):this.set(t,r,n,s)}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}fromObject(t){return this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this.check()}fromMatrix3(t){return y3(this,t),this.check()}fromAxisRotation(t,r){return x3(this,t,r),this.check()}identity(){return eD(this),this.check()}setAxisAngle(t,r){return this.fromAxisRotation(t,r)}get ELEMENTS(){return 4}get x(){return this[0]}set x(t){this[0]=At(t)}get y(){return this[1]}set y(t){this[1]=At(t)}get z(){return this[2]}set z(t){this[2]=At(t)}get w(){return this[3]}set w(t){this[3]=At(t)}len(){return uD(this)}lengthSquared(){return dD(this)}dot(t){return fD(this,t)}rotationTo(t,r){return mD(this,t,r),this.check()}add(t){return cD(this,this,t),this.check()}calculateW(){return iD(this,this),this.check()}conjugate(){return aD(this,this),this.check()}invert(){return oD(this,this),this.check()}lerp(t,r,n){return n===void 0?this.lerp(this,t,r):(hD(this,t,r,n),this.check())}multiplyRight(t){return _3(this,this,t),this.check()}multiplyLeft(t){return _3(this,t,this),this.check()}normalize(){let t=this.len(),r=t>0?1/t:0;return this[0]=this[0]*r,this[1]=this[1]*r,this[2]=this[2]*r,this[3]=this[3]*r,t===0&&(this[3]=1),this.check()}rotateX(t){return rD(this,this,t),this.check()}rotateY(t){return nD(this,this,t),this.check()}rotateZ(t){return sD(this,this,t),this.check()}scale(t){return lD(this,this,t),this.check()}slerp(t,r,n){let s,i,o;switch(arguments.length){case 1:({start:s=$it,target:i,ratio:o}=t);break;case 2:s=this,i=t,o=r;break;default:s=t,i=r,o=n}return td(this,s,i,o),this.check()}transformVector4(t,r=new nl){return QF(r,t,this),M1(r,4)}lengthSq(){return this.lengthSquared()}setFromAxisAngle(t,r){return this.setAxisAngle(t,r)}premultiply(t){return this.multiplyLeft(t)}multiply(t){return this.multiplyRight(t)}};var il={};Wt(il,{EPSILON1:()=>Kit,EPSILON10:()=>iot,EPSILON11:()=>oot,EPSILON12:()=>aot,EPSILON13:()=>cot,EPSILON14:()=>lot,EPSILON15:()=>fot,EPSILON16:()=>hot,EPSILON17:()=>uot,EPSILON18:()=>dot,EPSILON19:()=>pot,EPSILON2:()=>Zit,EPSILON20:()=>mot,EPSILON3:()=>Jit,EPSILON4:()=>Qit,EPSILON5:()=>tot,EPSILON6:()=>eot,EPSILON7:()=>rot,EPSILON8:()=>not,EPSILON9:()=>sot,PI_OVER_FOUR:()=>xot,PI_OVER_SIX:()=>_ot,PI_OVER_TWO:()=>got,TWO_PI:()=>yot});var Kit=.1,Zit=.01,Jit=.001,Qit=1e-4,tot=1e-5,eot=1e-6,rot=1e-7,not=1e-8,sot=1e-9,iot=1e-10,oot=1e-11,aot=1e-12,cot=1e-13,lot=1e-14,fot=1e-15,hot=1e-16,uot=1e-17,dot=1e-18,pot=1e-19,mot=1e-20,got=Math.PI/2,xot=Math.PI/4,_ot=Math.PI/6,yot=Math.PI*2;var v7t=new K,E7t=new K;var ed=new K,gD=new K,$r=class{constructor(t=[0,0,0],r=0){this.radius=-0,this.center=new K,this.fromCenterRadius(t,r)}fromCenterRadius(t,r){return this.center.from(t),this.radius=r,this}fromCornerPoints(t,r){return r=ed.from(r),this.center=new K().from(t).add(r).scale(.5),this.radius=this.center.distance(r),this}equals(t){return this===t||Boolean(t)&&this.center.equals(t.center)&&this.radius===t.radius}clone(){return new $r(this.center,this.radius)}union(t){let r=this.center,n=this.radius,s=t.center,i=t.radius,o=ed.copy(s).subtract(r),a=o.magnitude();if(n>=a+i)return this.clone();if(i>=a+n)return t.clone();let c=(n+a+i)*.5;return gD.copy(o).scale((-n+c)/a).add(r),this.center.copy(gD),this.radius=c,this}expand(t){let n=ed.from(t).subtract(this.center).magnitude();return n>this.radius&&(this.radius=n),this}transform(t){this.center.transform(t);let r=Qu.getScaling(ed,t);return this.radius=Math.max(r[0],Math.max(r[1],r[2]))*this.radius,this}distanceSquaredTo(t){let r=this.distanceTo(t);return r*r}distanceTo(t){let n=ed.from(t).subtract(this.center);return Math.max(0,n.len()-this.radius)}intersectPlane(t){let r=this.center,n=this.radius,i=t.normal.dot(r)+t.distance;return i<-n?Ie.OUTSIDE:i<n?Ie.INTERSECTING:Ie.INSIDE}};var Aot=new K,bot=new K,N1=new K,F1=new K,D1=new K,Tot=new K,vot=new K,Us={COLUMN0ROW0:0,COLUMN0ROW1:1,COLUMN0ROW2:2,COLUMN1ROW0:3,COLUMN1ROW1:4,COLUMN1ROW2:5,COLUMN2ROW0:6,COLUMN2ROW1:7,COLUMN2ROW2:8},Tn=class{constructor(t=[0,0,0],r=[0,0,0,0,0,0,0,0,0]){this.center=new K().from(t),this.halfAxes=new Jt(r)}get halfSize(){let t=this.halfAxes.getColumn(0),r=this.halfAxes.getColumn(1),n=this.halfAxes.getColumn(2);return[new K(t).len(),new K(r).len(),new K(n).len()]}get quaternion(){let t=this.halfAxes.getColumn(0),r=this.halfAxes.getColumn(1),n=this.halfAxes.getColumn(2),s=new K(t).normalize(),i=new K(r).normalize(),o=new K(n).normalize();return new sl().fromMatrix3(new Jt([...s,...i,...o]))}fromCenterHalfSizeQuaternion(t,r,n){let s=new sl(n),i=new Jt().fromQuaternion(s);return i[0]=i[0]*r[0],i[1]=i[1]*r[0],i[2]=i[2]*r[0],i[3]=i[3]*r[1],i[4]=i[4]*r[1],i[5]=i[5]*r[1],i[6]=i[6]*r[2],i[7]=i[7]*r[2],i[8]=i[8]*r[2],this.center=new K().from(t),this.halfAxes=i,this}clone(){return new Tn(this.center,this.halfAxes)}equals(t){return this===t||Boolean(t)&&this.center.equals(t.center)&&this.halfAxes.equals(t.halfAxes)}getBoundingSphere(t=new $r){let r=this.halfAxes,n=r.getColumn(0,N1),s=r.getColumn(1,F1),i=r.getColumn(2,D1),o=Aot.copy(n).add(s).add(i);return t.center.copy(this.center),t.radius=o.magnitude(),t}intersectPlane(t){let r=this.center,n=t.normal,s=this.halfAxes,i=n.x,o=n.y,a=n.z,c=Math.abs(i*s[Us.COLUMN0ROW0]+o*s[Us.COLUMN0ROW1]+a*s[Us.COLUMN0ROW2])+Math.abs(i*s[Us.COLUMN1ROW0]+o*s[Us.COLUMN1ROW1]+a*s[Us.COLUMN1ROW2])+Math.abs(i*s[Us.COLUMN2ROW0]+o*s[Us.COLUMN2ROW1]+a*s[Us.COLUMN2ROW2]),l=n.dot(r)+t.distance;return l<=-c?Ie.OUTSIDE:l>=c?Ie.INSIDE:Ie.INTERSECTING}distanceTo(t){return Math.sqrt(this.distanceSquaredTo(t))}distanceSquaredTo(t){let r=bot.from(t).subtract(this.center),n=this.halfAxes,s=n.getColumn(0,N1),i=n.getColumn(1,F1),o=n.getColumn(2,D1),a=s.magnitude(),c=i.magnitude(),l=o.magnitude();s.normalize(),i.normalize(),o.normalize();let f=0,h;return h=Math.abs(r.dot(s))-a,h>0&&(f+=h*h),h=Math.abs(r.dot(i))-c,h>0&&(f+=h*h),h=Math.abs(r.dot(o))-l,h>0&&(f+=h*h),f}computePlaneDistances(t,r,n=[-0,-0]){let s=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,o=this.center,a=this.halfAxes,c=a.getColumn(0,N1),l=a.getColumn(1,F1),f=a.getColumn(2,D1),h=Tot.copy(c).add(l).add(f).add(o),u=vot.copy(h).subtract(t),d=r.dot(u);return s=Math.min(d,s),i=Math.max(d,i),h.copy(o).add(c).add(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),h.copy(o).add(c).subtract(l).add(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),h.copy(o).add(c).subtract(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).add(l).add(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).add(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).subtract(l).add(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),o.copy(h).subtract(c).subtract(l).subtract(f),u.copy(h).subtract(t),d=r.dot(u),s=Math.min(d,s),i=Math.max(d,i),n[0]=s,n[1]=i,n}transform(t){this.center.transformAsPoint(t);let r=this.halfAxes.getColumn(0,N1);r.transformAsPoint(t);let n=this.halfAxes.getColumn(1,F1);n.transformAsPoint(t);let s=this.halfAxes.getColumn(2,D1);return s.transformAsPoint(t),this.halfAxes=new Jt([...r,...n,...s]),this}getTransform(){throw new Error("not implemented")}};var xD=new K,_D=new K,Xe=class{constructor(t=[0,0,1],r=0){this.normal=new K,this.distance=-0,this.fromNormalDistance(t,r)}fromNormalDistance(t,r){return Jn(Number.isFinite(r)),this.normal.from(t).normalize(),this.distance=r,this}fromPointNormal(t,r){t=xD.from(t),this.normal.from(r).normalize();let n=-this.normal.dot(t);return this.distance=n,this}fromCoefficients(t,r,n,s){return this.normal.set(t,r,n),Jn(Ui(this.normal.len(),1)),this.distance=s,this}clone(){return new Xe(this.normal,this.distance)}equals(t){return Ui(this.distance,t.distance)&&Ui(this.normal,t.normal)}getPointDistance(t){return this.normal.dot(t)+this.distance}transform(t){let r=_D.copy(this.normal).transformAsVector(t).normalize(),n=this.normal.scale(-this.distance).transform(t);return this.fromPointNormal(n,r)}projectPointOntoPlane(t,r=[0,0,0]){let n=xD.from(t),s=this.getPointDistance(n),i=_D.copy(this.normal).scale(s);return n.subtract(i).to(r)}};var yD=[new K([1,0,0]),new K([0,1,0]),new K([0,0,1])],AD=new K,Eot=new K,Re=class{constructor(t=[]){this.planes=t}fromBoundingSphere(t){this.planes.length=2*yD.length;let r=t.center,n=t.radius,s=0;for(let i of yD){let o=this.planes[s],a=this.planes[s+1];o||(o=this.planes[s]=new Xe),a||(a=this.planes[s+1]=new Xe);let c=AD.copy(i).scale(-n).add(r);o.fromPointNormal(c,i);let l=AD.copy(i).scale(n).add(r),f=Eot.copy(i).negate();a.fromPointNormal(l,f),s+=2}return this}computeVisibility(t){let r=Ie.INSIDE;for(let n of this.planes)switch(t.intersectPlane(n)){case Ie.OUTSIDE:return Ie.OUTSIDE;case Ie.INTERSECTING:r=Ie.INTERSECTING;break;default:}return r}computeVisibilityWithPlaneMask(t,r){if(Jn(Number.isFinite(r),"parentPlaneMask is required."),r===Re.MASK_OUTSIDE||r===Re.MASK_INSIDE)return r;let n=Re.MASK_INSIDE,s=this.planes;for(let i=0;i<this.planes.length;++i){let o=i<31?1<<i:0;if(i<31&&!(r&o))continue;let a=s[i],c=t.intersectPlane(a);if(c===Ie.OUTSIDE)return Re.MASK_OUTSIDE;c===Ie.INTERSECTING&&(n|=o)}return n}};Re.MASK_OUTSIDE=4294967295;Re.MASK_INSIDE=0;Re.MASK_INDETERMINATE=2147483647;var H7t=new K,G7t=new K,j7t=new K,q7t=new K,X7t=new K;var Q7t=new K,tqt=new K,eqt=new K,rqt=new K,nqt=new K,sqt=new K,iqt=new K,oqt=new K,aqt=new K,cqt=new K,lqt=new K,fqt=new K;var Qn=new Jt,Sot=new Jt,wot=new Jt,k1=new Jt,bD=new Jt;function T3(e,t={}){let r=il.EPSILON20,n=10,s=0,i=0,o=Sot,a=wot;o.identity(),a.copy(e);let c=r*Cot(a);for(;i<n&&Pot(a)>c;)Iot(a,k1),bD.copy(k1).transpose(),a.multiplyRight(k1),a.multiplyLeft(bD),o.multiplyRight(k1),++s>2&&(++i,s=0);return t.unitary=o.toTarget(t.unitary),t.diagonal=a.toTarget(t.diagonal),t}function Cot(e){let t=0;for(let r=0;r<9;++r){let n=e[r];t+=n*n}return Math.sqrt(t)}var A3=[1,0,0],b3=[2,2,1];function Pot(e){let t=0;for(let r=0;r<3;++r){let n=e[Qn.getElementIndex(b3[r],A3[r])];t+=2*n*n}return Math.sqrt(t)}function Iot(e,t){let r=il.EPSILON15,n=0,s=1;for(let l=0;l<3;++l){let f=Math.abs(e[Qn.getElementIndex(b3[l],A3[l])]);f>n&&(s=l,n=f)}let i=A3[s],o=b3[s],a=1,c=0;if(Math.abs(e[Qn.getElementIndex(o,i)])>r){let l=e[Qn.getElementIndex(o,o)],f=e[Qn.getElementIndex(i,i)],h=e[Qn.getElementIndex(o,i)],u=(l-f)/2/h,d;u<0?d=-1/(-u+Math.sqrt(1+u*u)):d=1/(u+Math.sqrt(1+u*u)),a=1/Math.sqrt(1+d*d),c=d*a}return Jt.IDENTITY.to(t),t[Qn.getElementIndex(i,i)]=t[Qn.getElementIndex(o,o)]=a,t[Qn.getElementIndex(o,i)]=c,t[Qn.getElementIndex(i,o)]=-c,t}var Vi=new K,Oot=new K,Lot=new K,Bot=new K,Not=new K,Fot=new Jt,Dot={diagonal:new Jt,unitary:new Jt};function v3(e,t=new Tn){if(!e||e.length===0)return t.halfAxes=new Jt([0,0,0,0,0,0,0,0,0]),t.center=new K,t;let r=e.length,n=new K(0,0,0);for(let E of e)n.add(E);let s=1/r;n.multiplyByScalar(s);let i=0,o=0,a=0,c=0,l=0,f=0;for(let E of e){let b=Vi.copy(E).subtract(n);i+=b.x*b.x,o+=b.x*b.y,a+=b.x*b.z,c+=b.y*b.y,l+=b.y*b.z,f+=b.z*b.z}i*=s,o*=s,a*=s,c*=s,l*=s,f*=s;let h=Fot;h[0]=i,h[1]=o,h[2]=a,h[3]=o,h[4]=c,h[5]=l,h[6]=a,h[7]=l,h[8]=f;let{unitary:u}=T3(h,Dot),d=t.halfAxes.copy(u),p=d.getColumn(0,Lot),m=d.getColumn(1,Bot),g=d.getColumn(2,Not),x=-Number.MAX_VALUE,A=-Number.MAX_VALUE,_=-Number.MAX_VALUE,y=Number.MAX_VALUE,T=Number.MAX_VALUE,v=Number.MAX_VALUE;for(let E of e)Vi.copy(E),x=Math.max(Vi.dot(p),x),A=Math.max(Vi.dot(m),A),_=Math.max(Vi.dot(g),_),y=Math.min(Vi.dot(p),y),T=Math.min(Vi.dot(m),T),v=Math.min(Vi.dot(g),v);p=p.multiplyByScalar(.5*(y+x)),m=m.multiplyByScalar(.5*(T+A)),g=g.multiplyByScalar(.5*(v+_)),t.center.copy(p).add(m).add(g);let C=Oot.set(x-y,A-T,_-v).multiplyByScalar(.5),w=new Jt([C[0],0,0,0,C[1],0,0,0,C[2]]);return t.halfAxes.multiplyRight(w),t}var TD=new Z,E3=new Z,M3=new Re([new Xe,new Xe,new Xe,new Xe,new Xe,new Xe]);function ED(e,t){let{cameraDirection:r,cameraUp:n,height:s}=e,{metersPerUnit:i}=e.distanceScales,o=U1(e,e.center),a=ut.WGS84.eastNorthUpToFixedFrame(o),c=e.unprojectPosition(e.cameraPosition),l=ut.WGS84.cartographicToCartesian(c,new Z),f=new Z(a.transformAsVector(new Z(r).scale(i))).normalize(),h=new Z(a.transformAsVector(new Z(n).scale(i))).normalize();kot(e);let u=e.constructor,{longitude:d,latitude:p,width:m,bearing:g,zoom:x}=e,A=new u({longitude:d,latitude:p,height:s,width:m,bearing:g,zoom:x,pitch:0});return{camera:{position:l,direction:f,up:h},viewport:e,topDownViewport:A,height:s,cullingVolume:M3,frameNumber:t,sseDenominator:1.15}}function MD(e,t,r){if(r===0||e.length<=r)return[e,[]];let n=[],{longitude:s,latitude:i}=t.viewport;for(let[l,f]of e.entries()){let[h,u]=f.header.mbs,d=Math.abs(s-h),p=Math.abs(i-u),m=Math.sqrt(p*p+d*d);n.push([l,m])}let o=n.sort((l,f)=>l[1]-f[1]),a=[];for(let l=0;l<r;l++)a.push(e[o[l][0]]);let c=[];for(let l=r;l<o.length;l++)c.push(e[o[l][0]]);return[a,c]}function kot(e){let t=e.getFrustumPlanes(),r=vD(t.near,e.cameraPosition),n=U1(e,r),s=U1(e,e.cameraPosition,E3),i=0;M3.planes[i++].fromPointNormal(n,TD.copy(n).subtract(s));for(let o in t){if(o==="near")continue;let a=t[o],c=vD(a,r,E3),l=U1(e,c,E3);M3.planes[i++].fromPointNormal(l,TD.copy(n).subtract(l))}}function vD(e,t,r=new Z){let n=e.normal.dot(t);return r.copy(e.normal).scale(e.distance-n).add(t),r}function U1(e,t,r=new Z){let n=e.unprojectPosition(t);return ut.WGS84.cartographicToCartesian(n,r)}var Uot=6378137,zot=6378137,S3=6356752314245179e-9,ol=new Z;function SD(e,t){if(e instanceof Tn){let{halfAxes:r}=e,n=Vot(r);return Math.log2(S3/(n+t[2]))}else if(e instanceof $r){let{radius:r}=e;return Math.log2(S3/(r+t[2]))}else if(e.width&&e.height){let{width:r,height:n}=e,s=Math.log2(Uot/r),i=Math.log2(zot/n);return(s+i)/2}return 1}function w3(e,t,r){ut.WGS84.cartographicToCartesian([e.xmax,e.ymax,e.zmax],ol);let n=Math.sqrt(Math.pow(ol[0]-r[0],2)+Math.pow(ol[1]-r[1],2)+Math.pow(ol[2]-r[2],2));return Math.log2(S3/(n+t[2]))}function wD(e,t,r){let[n,s,i,o]=e;return w3({xmin:n,xmax:i,ymin:s,ymax:o,zmin:0,zmax:0},t,r)}function Vot(e){e.getColumn(0,ol);let t=e.getColumn(1),r=e.getColumn(2);return ol.add(t).add(r).len()}var cr={UNLOADED:0,LOADING:1,PROCESSING:2,READY:3,EXPIRED:4,FAILED:5},Ye;(function(e){e[e.ADD=1]="ADD",e[e.REPLACE=2]="REPLACE"})(Ye||(Ye={}));var Kr;(function(e){e.EMPTY="empty",e.SCENEGRAPH="scenegraph",e.POINTCLOUD="pointcloud",e.MESH="mesh"})(Kr||(Kr={}));var Oe;(function(e){e.I3S="I3S",e.TILES3D="TILES3D"})(Oe||(Oe={}));var zs;(function(e){e.GEOMETRIC_ERROR="geometricError",e.MAX_SCREEN_THRESHOLD="maxScreenThreshold"})(zs||(zs={}));var CD={NOT_COMPUTED:-1,USE_OPTIMIZATION:1,SKIP_OPTIMIZATION:0};function OD(e){return e!=null}var $e=new Z,z1=new Z,Wot=new Z,Hot=new Z,ia=new Z,PD=new Z,ID=new Z,RD=new Z;function V1(e,t,r){if(lt(e,"3D Tile: boundingVolume must be defined"),e.box)return BD(e.box,t,r);if(e.region)return jot(e.region);if(e.sphere)return Got(e.sphere,t,r);throw new Error("3D Tile: boundingVolume must contain a sphere, region, or box")}function LD(e,t){if(e.box)return qot(t);if(e.region){let[r,n,s,i,o,a]=e.region;return[[Xr(r),Xr(n),o],[Xr(s),Xr(i),a]]}if(e.sphere)return Xot(t);throw new Error("Unkown boundingVolume type")}function BD(e,t,r){let n=new Z(e[0],e[1],e[2]);t.transform(n,n);let s=[];if(e.length===10){let l=e.slice(3,6),f=new $u;f.fromArray(e,6);let h=new Z([1,0,0]),u=new Z([0,1,0]),d=new Z([0,0,1]);h.transformByQuaternion(f),h.scale(l[0]),u.transformByQuaternion(f),u.scale(l[1]),d.transformByQuaternion(f),d.scale(l[2]),s=[...h.toArray(),...u.toArray(),...d.toArray()]}else s=[...e.slice(3,6),...e.slice(6,9),...e.slice(9,12)];let i=t.transformAsVector(s.slice(0,3)),o=t.transformAsVector(s.slice(3,6)),a=t.transformAsVector(s.slice(6,9)),c=new sa([i[0],i[1],i[2],o[0],o[1],o[2],a[0],a[1],a[2]]);return OD(r)?(r.center=n,r.halfAxes=c,r):new Tn(n,c)}function Got(e,t,r){let n=new Z(e[0],e[1],e[2]);t.transform(n,n);let s=t.getScale(z1),i=Math.max(Math.max(s[0],s[1]),s[2]),o=e[3]*i;return OD(r)?(r.center=n,r.radius=o,r):new $r(n,o)}function jot(e){let[t,r,n,s,i,o]=e,a=ut.WGS84.cartographicToCartesian([Xr(t),Xr(s),i],Wot),c=ut.WGS84.cartographicToCartesian([Xr(n),Xr(r),o],Hot),l=new Z().addVectors(a,c).multiplyByScalar(.5);return ut.WGS84.cartesianToCartographic(l,ia),ut.WGS84.cartographicToCartesian([Xr(n),ia[1],ia[2]],PD),ut.WGS84.cartographicToCartesian([ia[0],Xr(s),ia[2]],ID),ut.WGS84.cartographicToCartesian([ia[0],ia[1],o],RD),BD([...l,...PD.subtract(l),...ID.subtract(l),...RD.subtract(l)],new Ft)}function qot(e){let t=ND(),{halfAxes:r}=e,n=new Z(r.getColumn(0)),s=new Z(r.getColumn(1)),i=new Z(r.getColumn(2));for(let o=0;o<2;o++){for(let a=0;a<2;a++){for(let c=0;c<2;c++)$e.copy(e.center),$e.add(n),$e.add(s),$e.add(i),FD(t,$e),i.negate();s.negate()}n.negate()}return t}function Xot(e){let t=ND(),{center:r,radius:n}=e,s=ut.WGS84.scaleToGeodeticSurface(r,$e),i;s?i=ut.WGS84.geodeticSurfaceNormal(s):i=new Z(0,0,1);let o=new Z(i[2],-i[1],0);o.len()>0?o.normalize():o=new Z(0,1,0);let a=o.clone().cross(i);for(let c of[o,a,i]){z1.copy(c).scale(n);for(let l=0;l<2;l++)$e.copy(r),$e.add(z1),FD(t,$e),z1.negate()}return t}function ND(){return[[1/0,1/0,1/0],[-1/0,-1/0,-1/0]]}function FD(e,t){ut.WGS84.cartesianToCartographic(t,$e),e[0][0]=Math.min(e[0][0],$e[0]),e[0][1]=Math.min(e[0][1],$e[1]),e[0][2]=Math.min(e[0][2],$e[2]),e[1][0]=Math.max(e[1][0],$e[0]),e[1][1]=Math.max(e[1][1],$e[1]),e[1][2]=Math.max(e[1][2],$e[2])}var $qt=new Z,Kqt=new Z,Zqt=new Ft,Jqt=new Z,Qqt=new Z,tXt=new Z;function Yot(e,t){let r=e*t;return 1-Math.exp(-(r*r))}function $ot(e,t){if(e.dynamicScreenSpaceError&&e.dynamicScreenSpaceErrorComputedDensity){let r=e.dynamicScreenSpaceErrorComputedDensity,n=e.dynamicScreenSpaceErrorFactor;return Yot(t,r)*n}return 0}function DD(e,t,r){let n=e.tileset,s=e.parent&&e.parent.lodMetricValue||e.lodMetricValue,i=r?s:e.lodMetricValue;if(i===0)return 0;let o=Math.max(e._distanceToCamera,1e-7),{height:a,sseDenominator:c}=t,{viewDistanceScale:l}=n.options,f=i*a*(l||1)/(o*c);return f-=$ot(n,o),f}var C3=new Z,kD=new Z,Wi=new Z,UD=new Z,Kot=new Z,P3=new Ft,zD=new Ft;function VD(e,t){if(e.lodMetricValue===0||isNaN(e.lodMetricValue))return"DIG";let r=2*I3(e,t);return r<2?"OUT":!e.header.children||r<=e.lodMetricValue?"DRAW":e.header.children?"DIG":"OUT"}function I3(e,t){let{topDownViewport:r}=t,n=e.header.mbs[1],s=e.header.mbs[0],i=e.header.mbs[2],o=e.header.mbs[3],a=[...e.boundingVolume.center],c=r.unprojectPosition(r.cameraPosition);ut.WGS84.cartographicToCartesian(c,C3),kD.copy(C3).subtract(a).normalize(),ut.WGS84.eastNorthUpToFixedFrame(a,P3),zD.copy(P3).invert(),Wi.copy(C3).transform(zD);let l=Math.sqrt(Wi[0]*Wi[0]+Wi[1]*Wi[1]),f=l*l/Wi[2];UD.copy([Wi[0],Wi[1],f]);let u=UD.transform(P3).subtract(a).normalize(),p=kD.cross(u).normalize().scale(o).add(a),m=ut.WGS84.cartesianToCartographic(p),g=r.project([s,n,i]),x=r.project(m);return Kot.copy(g).subtract(x).magnitude()}function WD(e){return{assetGltfUpAxis:e.asset&&e.asset.gltfUpAxis||"Y"}}var rd=class{_map=new Map;_array;_length;constructor(t=0){this._array=new Array(t),this._length=t}get length(){return this._length}set length(t){this._length=t,t>this._array.length&&(this._array.length=t)}get values(){return this._array}get(t){return lt(t<this._array.length),this._array[t]}set(t,r){lt(t>=0),t>=this.length&&(this.length=t+1),this._map.has(this._array[t])&&this._map.delete(this._array[t]),this._array[t]=r,this._map.set(r,t)}delete(t){let r=this._map.get(t);r>=0&&(this._array.splice(r,1),this._map.delete(t),this.length--)}peek(){return this._array[this._length-1]}push(t){if(!this._map.has(t)){let r=this.length++;this._array[r]=t,this._map.set(t,r)}}pop(){let t=this._array[--this.length];return this._map.delete(t),t}reserve(t){lt(t>=0),t>this._array.length&&(this._array.length=t)}resize(t){lt(t>=0),this.length=t}trim(t){t==null&&(t=this.length),this._array.length=t}reset(){this._array=[],this._map=new Map,this._length=0}find(t){return this._map.has(t)}};var Zot={loadSiblings:!1,skipLevelOfDetail:!1,updateTransforms:!0,onTraversalEnd:()=>{},viewportTraversersMap:{},basePath:""},ts=class{options;root=null;selectedTiles={};requestedTiles={};emptyTiles={};lastUpdate=new Date().getTime();updateDebounceTime=1e3;_traversalStack=new rd;_emptyTraversalStack=new rd;_frameNumber=null;traversalFinished(t){return!0}constructor(t){this.options={...Zot,...t}}traverse(t,r,n){this.root=t,this.options={...this.options,...n},this.reset(),this.updateTile(t,r),this._frameNumber=r.frameNumber,this.executeTraversal(t,r)}reset(){this.requestedTiles={},this.selectedTiles={},this.emptyTiles={},this._traversalStack.reset(),this._emptyTraversalStack.reset()}executeTraversal(t,r){let n=this._traversalStack;for(t._selectionDepth=1,n.push(t);n.length>0;){let i=n.pop(),o=!1;this.canTraverse(i,r)&&(this.updateChildTiles(i,r),o=this.updateAndPushChildren(i,r,n,i.hasRenderContent?i._selectionDepth+1:i._selectionDepth));let a=i.parent,c=Boolean(!a||a._shouldRefine),l=!o;i.hasRenderContent?i.refine===Ye.ADD?(this.loadTile(i,r),this.selectTile(i,r)):i.refine===Ye.REPLACE&&(this.loadTile(i,r),l&&this.selectTile(i,r)):(this.emptyTiles[i.id]=i,this.loadTile(i,r),l&&this.selectTile(i,r)),this.touchTile(i,r),i._shouldRefine=o&&c}let s=new Date().getTime();(this.traversalFinished(r)||s-this.lastUpdate>this.updateDebounceTime)&&(this.lastUpdate=s,this.options.onTraversalEnd(r))}updateChildTiles(t,r){let n=t.children;for(let s of n)this.updateTile(s,r)}updateAndPushChildren(t,r,n,s){let{loadSiblings:i,skipLevelOfDetail:o}=this.options,a=t.children;a.sort(this.compareDistanceToCamera.bind(this));let c=t.refine===Ye.REPLACE&&t.hasRenderContent&&!o,l=!1,f=!0;for(let h of a)if(h._selectionDepth=s,h.isVisibleAndInRequestVolume?(n.find(h)&&n.delete(h),n.push(h),l=!0):(c||i)&&(this.loadTile(h,r),this.touchTile(h,r)),c){let u;if(h._inRequestVolume?h.hasRenderContent?u=h.contentAvailable:u=this.executeEmptyTraversal(h,r):u=!1,f=f&&u,!f)return!1}return l||(f=!1),f}updateTile(t,r){this.updateTileVisibility(t,r)}selectTile(t,r){this.shouldSelectTile(t)&&(t._selectedFrame=r.frameNumber,this.selectedTiles[t.id]=t)}loadTile(t,r){this.shouldLoadTile(t)&&(t._requestedFrame=r.frameNumber,t._priority=t._getPriority(),this.requestedTiles[t.id]=t)}touchTile(t,r){t.tileset._cache.touch(t),t._touchedFrame=r.frameNumber}canTraverse(t,r,n=!1,s=!1){return t.hasChildren?t.hasTilesetContent?!t.contentExpired:!s&&!t.isVisibleAndInRequestVolume?!1:this.shouldRefine(t,r,n):!1}shouldLoadTile(t){return t.hasUnloadedContent||t.contentExpired}shouldSelectTile(t){return t.contentAvailable&&!this.options.skipLevelOfDetail}shouldRefine(t,r,n=!1){let s=t._screenSpaceError;return n&&(s=t.getScreenSpaceError(r,!0)),s>t.tileset.memoryAdjustedScreenSpaceError}updateTileVisibility(t,r){let n=[];if(this.options.viewportTraversersMap)for(let s in this.options.viewportTraversersMap)this.options.viewportTraversersMap[s]===r.viewport.id&&n.push(s);else n.push(r.viewport.id);t.updateVisibility(r,n)}compareDistanceToCamera(t,r){return t._distanceToCamera-r._distanceToCamera}anyChildrenVisible(t,r){let n=!1;for(let s of t.children)s.updateVisibility(r),n=n||s.isVisibleAndInRequestVolume;return n}executeEmptyTraversal(t,r){let n=!0,s=this._emptyTraversalStack;for(s.push(t);s.length>0;){let i=s.pop(),o=!i.hasRenderContent&&this.canTraverse(i,r,!1,!1),a=!i.hasRenderContent&&i.children.length===0;if(!o&&!i.contentAvailable&&!a&&(n=!1),this.updateTile(i,r),i.isVisibleAndInRequestVolume||(this.loadTile(i,r),this.touchTile(i,r)),o){let c=i.children;for(let l of c)s.push(l)}}return n}};var HD=new Z;function Jot(e){return e!=null}var oa=class{tileset;header;id;url;parent;refine;type;contentUrl;lodMetricType="geometricError";lodMetricValue=0;boundingVolume=null;content=null;contentState=cr.UNLOADED;gpuMemoryUsageInBytes=0;children=[];depth=0;viewportIds=[];transform=new Ft;extensions=null;implicitTiling=null;userData={};computedTransform;hasEmptyContent=!1;hasTilesetContent=!1;traverser=new ts({});_cacheNode=null;_frameNumber=null;_expireDate=null;_expiredContent=null;_boundingBox=void 0;_distanceToCamera=0;_screenSpaceError=0;_visibilityPlaneMask;_visible=void 0;_contentBoundingVolume;_viewerRequestVolume;_initialTransform=new Ft;_priority=0;_selectedFrame=0;_requestedFrame=0;_selectionDepth=0;_touchedFrame=0;_centerZDepth=0;_shouldRefine=!1;_stackLength=0;_visitedFrame=0;_inRequestVolume=!1;_lodJudge=null;constructor(t,r,n,s=""){this.header=r,this.tileset=t,this.id=s||r.id,this.url=r.url,this.parent=n,this.refine=this._getRefine(r.refine),this.type=r.type,this.contentUrl=r.contentUrl,this._initializeLodMetric(r),this._initializeTransforms(r),this._initializeBoundingVolumes(r),this._initializeContent(r),this._initializeRenderingState(r),Object.seal(this)}destroy(){this.header=null}isDestroyed(){return this.header===null}get selected(){return this._selectedFrame===this.tileset._frameNumber}get isVisible(){return this._visible}get isVisibleAndInRequestVolume(){return this._visible&&this._inRequestVolume}get hasRenderContent(){return!this.hasEmptyContent&&!this.hasTilesetContent}get hasChildren(){return this.children.length>0||this.header.children&&this.header.children.length>0}get contentReady(){return this.contentState===cr.READY||this.hasEmptyContent}get contentAvailable(){return Boolean(this.contentReady&&this.hasRenderContent||this._expiredContent&&!this.contentFailed)}get hasUnloadedContent(){return this.hasRenderContent&&this.contentUnloaded}get contentUnloaded(){return this.contentState===cr.UNLOADED}get contentExpired(){return this.contentState===cr.EXPIRED}get contentFailed(){return this.contentState===cr.FAILED}get distanceToCamera(){return this._distanceToCamera}get screenSpaceError(){return this._screenSpaceError}get boundingBox(){return this._boundingBox||(this._boundingBox=LD(this.header.boundingVolume,this.boundingVolume)),this._boundingBox}getScreenSpaceError(t,r){switch(this.tileset.type){case Oe.I3S:return I3(this,t);case Oe.TILES3D:return DD(this,t,r);default:throw new Error("Unsupported tileset type")}}unselect(){this._selectedFrame=0}_getGpuMemoryUsageInBytes(){return this.content.gpuMemoryUsageInBytes||this.content.byteLength||0}_getPriority(){let t=this.tileset._traverser,{skipLevelOfDetail:r}=t.options,n=this.refine===Ye.ADD||r;if(n&&!this.isVisible&&this._visible!==void 0||this.tileset._frameNumber-this._touchedFrame>=1||this.contentState===cr.UNLOADED)return-1;let s=this.parent,o=s&&(!n||this._screenSpaceError===0||s.hasTilesetContent)?s._screenSpaceError:this._screenSpaceError,a=t.root?t.root._screenSpaceError:0;return Math.max(a-o,0)}async loadContent(){if(this.hasEmptyContent)return!1;if(this.content)return!0;this.contentExpired&&(this._expireDate=null),this.contentState=cr.LOADING;let r=await this.tileset._requestScheduler.scheduleRequest(this.id,this._getPriority.bind(this));if(!r)return this.contentState=cr.UNLOADED,!1;try{let n=this.tileset.getTileUrl(this.contentUrl),s=this.tileset.loader,i={...this.tileset.loadOptions,[s.id]:{...this.tileset.loadOptions[s.id],isTileset:this.type==="json",...this._getLoaderSpecificOptions(s.id)}};return this.content=await me(n,s,i),this.tileset.options.contentLoader&&await this.tileset.options.contentLoader(this),this._isTileset()&&this.tileset._initializeTileHeaders(this.content,this),this.contentState=cr.READY,this._onContentLoaded(),!0}catch(n){throw this.contentState=cr.FAILED,n}finally{r.done()}}unloadContent(){return this.content&&this.content.destroy&&this.content.destroy(),this.content=null,this.header.content&&this.header.content.destroy&&this.header.content.destroy(),this.header.content=null,this.contentState=cr.UNLOADED,!0}updateVisibility(t,r){if(this._frameNumber===t.frameNumber)return;let n=this.parent,s=n?n._visibilityPlaneMask:Re.MASK_INDETERMINATE;if(this.tileset._traverser.options.updateTransforms){let i=n?n.computedTransform:this.tileset.modelMatrix;this._updateTransform(i)}this._distanceToCamera=this.distanceToTile(t),this._screenSpaceError=this.getScreenSpaceError(t,!1),this._visibilityPlaneMask=this.visibility(t,s),this._visible=this._visibilityPlaneMask!==Re.MASK_OUTSIDE,this._inRequestVolume=this.insideViewerRequestVolume(t),this._frameNumber=t.frameNumber,this.viewportIds=r}visibility(t,r){let{cullingVolume:n}=t,{boundingVolume:s}=this;return n.computeVisibilityWithPlaneMask(s,r)}contentVisibility(){return!0}distanceToTile(t){let r=this.boundingVolume;return Math.sqrt(Math.max(r.distanceSquaredTo(t.camera.position),0))}cameraSpaceZDepth({camera:t}){let r=this.boundingVolume;return HD.subVectors(r.center,t.position),t.direction.dot(HD)}insideViewerRequestVolume(t){let r=this._viewerRequestVolume;return!r||r.distanceSquaredTo(t.camera.position)<=0}updateExpiration(){if(Jot(this._expireDate)&&this.contentReady&&!this.hasEmptyContent){let t=Date.now();Date.lessThan(this._expireDate,t)&&(this.contentState=cr.EXPIRED,this._expiredContent=this.content)}}get extras(){return this.header.extras}_initializeLodMetric(t){"lodMetricType"in t?this.lodMetricType=t.lodMetricType:(this.lodMetricType=this.parent&&this.parent.lodMetricType||this.tileset.lodMetricType,console.warn("3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType")),"lodMetricValue"in t?this.lodMetricValue=t.lodMetricValue:(this.lodMetricValue=this.parent&&this.parent.lodMetricValue||this.tileset.lodMetricValue,console.warn("3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue"))}_initializeTransforms(t){this.transform=t.transform?new Ft(t.transform):new Ft;let r=this.parent,n=this.tileset,s=r&&r.computedTransform?r.computedTransform.clone():n.modelMatrix.clone();this.computedTransform=new Ft(s).multiplyRight(this.transform);let i=r&&r._initialTransform?r._initialTransform.clone():new Ft;this._initialTransform=new Ft(i).multiplyRight(this.transform)}_initializeBoundingVolumes(t){this._contentBoundingVolume=null,this._viewerRequestVolume=null,this._updateBoundingVolume(t)}_initializeContent(t){this.content={_tileset:this.tileset,_tile:this},this.hasEmptyContent=!0,this.contentState=cr.UNLOADED,this.hasTilesetContent=!1,t.contentUrl&&(this.content=null,this.hasEmptyContent=!1)}_initializeRenderingState(t){this.depth=t.level||(this.parent?this.parent.depth+1:0),this._shouldRefine=!1,this._distanceToCamera=0,this._centerZDepth=0,this._screenSpaceError=0,this._visibilityPlaneMask=Re.MASK_INDETERMINATE,this._visible=void 0,this._inRequestVolume=!1,this._stackLength=0,this._selectionDepth=0,this._frameNumber=0,this._touchedFrame=0,this._visitedFrame=0,this._selectedFrame=0,this._requestedFrame=0,this._priority=0}_getRefine(t){return t||this.parent&&this.parent.refine||Ye.REPLACE}_isTileset(){return this.contentUrl.indexOf(".json")!==-1}_onContentLoaded(){switch(this.content&&this.content.type){case"vctr":case"geom":this.tileset._traverser.disableSkipLevelOfDetail=!0;break;default:}this._isTileset()?this.hasTilesetContent=!0:this.gpuMemoryUsageInBytes=this._getGpuMemoryUsageInBytes()}_updateBoundingVolume(t){this.boundingVolume=V1(t.boundingVolume,this.computedTransform,this.boundingVolume);let r=t.content;r&&(r.boundingVolume&&(this._contentBoundingVolume=V1(r.boundingVolume,this.computedTransform,this._contentBoundingVolume)),t.viewerRequestVolume&&(this._viewerRequestVolume=V1(t.viewerRequestVolume,this.computedTransform,this._viewerRequestVolume)))}_updateTransform(t=new Ft){let r=t.clone().multiplyRight(this.transform);r.equals(this.computedTransform)||(this.computedTransform=r,this._updateBoundingVolume(this.header))}_getLoaderSpecificOptions(t){switch(t){case"i3s":return{...this.tileset.options.i3s,_tileOptions:{attributeUrls:this.header.attributeUrls,textureUrl:this.header.textureUrl,textureFormat:this.header.textureFormat,textureLoaderOptions:this.header.textureLoaderOptions,materialDefinition:this.header.materialDefinition,isDracoGeometry:this.header.isDracoGeometry,mbs:this.header.mbs},_tilesetOptions:{store:this.tileset.tileset.store,attributeStorageInfo:this.tileset.tileset.attributeStorageInfo,fields:this.tileset.tileset.fields},isTileHeader:!1};case"3d-tiles":case"cesium-ion":default:return WD(this.tileset.tileset)}}};var W1=class extends ts{compareDistanceToCamera(t,r){return r._distanceToCamera===0&&t._distanceToCamera===0?r._centerZDepth-t._centerZDepth:r._distanceToCamera-t._distanceToCamera}updateTileVisibility(t,r){if(super.updateTileVisibility(t,r),!t.isVisibleAndInRequestVolume)return;let n=t.children.length>0;if(t.hasTilesetContent&&n){let o=t.children[0];this.updateTileVisibility(o,r),t._visible=o._visible;return}if(this.meetsScreenSpaceErrorEarly(t,r)){t._visible=!1;return}let s=t.refine===Ye.REPLACE,i=t._optimChildrenWithinParent===CD.USE_OPTIMIZATION;if(s&&i&&n&&!this.anyChildrenVisible(t,r)){t._visible=!1;return}}meetsScreenSpaceErrorEarly(t,r){let{parent:n}=t;return!n||n.hasTilesetContent||n.refine!==Ye.ADD?!1:!this.shouldRefine(t,r,!0)}};var H1=class{frameNumberMap=new Map;register(t,r){let n=this.frameNumberMap.get(t)||new Map,s=n.get(r)||0;n.set(r,s+1),this.frameNumberMap.set(t,n)}deregister(t,r){let n=this.frameNumberMap.get(t);if(!n)return;let s=n.get(r)||1;n.set(r,s-1)}isZero(t,r){return(this.frameNumberMap.get(t)?.get(r)||0)===0}};var R3={REQUESTED:"REQUESTED",COMPLETED:"COMPLETED",ERROR:"ERROR"},G1=class{_statusMap;pendingTilesRegister=new H1;constructor(){this._statusMap={}}add(t,r,n,s){if(!this._statusMap[r]){let{frameNumber:i,viewport:{id:o}}=s;this._statusMap[r]={request:t,callback:n,key:r,frameState:s,status:R3.REQUESTED},this.pendingTilesRegister.register(o,i),t().then(a=>{this._statusMap[r].status=R3.COMPLETED;let{frameNumber:c,viewport:{id:l}}=this._statusMap[r].frameState;this.pendingTilesRegister.deregister(l,c),this._statusMap[r].callback(a,s)}).catch(a=>{this._statusMap[r].status=R3.ERROR;let{frameNumber:c,viewport:{id:l}}=this._statusMap[r].frameState;this.pendingTilesRegister.deregister(l,c),n(a)})}}update(t,r){if(this._statusMap[t]){let{frameNumber:n,viewport:{id:s}}=this._statusMap[t].frameState;this.pendingTilesRegister.deregister(s,n);let{frameNumber:i,viewport:{id:o}}=r;this.pendingTilesRegister.register(o,i),this._statusMap[t].frameState=r}}find(t){return this._statusMap[t]}hasPendingTiles(t,r){return!this.pendingTilesRegister.isZero(t,r)}};var j1=class extends ts{_tileManager;constructor(t){super(t),this._tileManager=new G1}traversalFinished(t){return!this._tileManager.hasPendingTiles(t.viewport.id,this._frameNumber||0)}shouldRefine(t,r){return t._lodJudge=VD(t,r),t._lodJudge==="DIG"}updateChildTiles(t,r){let n=t.header.children||[],s=t.children,i=t.tileset;for(let o of n){let a=`${o.id}-${r.viewport.id}`,c=s&&s.find(l=>l.id===a);if(c)c&&this.updateTile(c,r);else{let l=()=>this._loadTile(o.id,i);this._tileManager.find(a)?this._tileManager.update(a,r):(i.tileset.nodePages&&(l=()=>i.tileset.nodePagesTile.formTileFromNodePages(o.id)),this._tileManager.add(l,a,h=>this._onTileLoad(h,t,a),r))}}return!1}async _loadTile(t,r){let{loader:n}=r,s=r.getTileUrl(`${r.url}/nodes/${t}`),i={...r.loadOptions,i3s:{...r.loadOptions.i3s,isTileHeader:!0}};return await me(s,n,i)}_onTileLoad(t,r,n){let s=new oa(r.tileset,t,r,n);r.children.push(s);let i=this._tileManager.find(s.id).frameState;this.updateTile(s,i),this._frameNumber===i.frameNumber&&(this.traversalFinished(i)||new Date().getTime()-this.lastUpdate>this.updateDebounceTime)&&this.executeTraversal(s,i)}};var Qot={description:"",ellipsoid:ut.WGS84,modelMatrix:new Ft,throttleRequests:!0,maxRequests:64,maximumMemoryUsage:32,memoryCacheOverflow:1,maximumTilesSelected:0,debounceTime:0,onTileLoad:()=>{},onTileUnload:()=>{},onTileError:()=>{},onTraversalComplete:e=>e,contentLoader:void 0,viewDistanceScale:1,maximumScreenSpaceError:8,memoryAdjustedScreenSpaceError:!1,loadTiles:!0,updateTransforms:!0,viewportTraversersMap:null,loadOptions:{fetch:{}},attributions:[],basePath:"",i3s:{}},q1="Tiles In Tileset(s)",O3="Tiles In Memory",GD="Tiles In View",jD="Tiles To Render",qD="Tiles Loaded",L3="Tiles Loading",XD="Tiles Unloaded",YD="Failed Tile Loads",$D="Points/Vertices",B3="Tile Memory Use",KD="Maximum Screen Space Error",nd=class{options;loadOptions;type;tileset;loader;url;basePath;modelMatrix;ellipsoid;lodMetricType;lodMetricValue;refine;root=null;roots={};asset={};description="";properties;extras=null;attributions={};credits={};stats;contentFormats={draco:!1,meshopt:!1,dds:!1,ktx2:!1};cartographicCenter=null;cartesianCenter=null;zoom=1;boundingVolume=null;dynamicScreenSpaceErrorComputedDensity=0;maximumMemoryUsage=32;gpuMemoryUsageInBytes=0;memoryAdjustedScreenSpaceError=0;_cacheBytes=0;_cacheOverflowBytes=0;_frameNumber=0;_queryParams={};_extensionsUsed=[];_tiles={};_pendingCount=0;selectedTiles=[];traverseCounter=0;geometricError=0;lastUpdatedVieports=null;_requestedTiles=[];_emptyTiles=[];frameStateData={};_traverser;_cache=new E1;_requestScheduler;updatePromise=null;tilesetInitializationPromise;constructor(t,r){this.options={...Qot,...r},this.tileset=t,this.loader=t.loader,this.type=t.type,this.url=t.url,this.basePath=t.basePath||Er.dirname(this.url),this.modelMatrix=this.options.modelMatrix,this.ellipsoid=this.options.ellipsoid,this.lodMetricType=t.lodMetricType,this.lodMetricValue=t.lodMetricValue,this.refine=t.root.refine,this.loadOptions=this.options.loadOptions||{},this._traverser=this._initializeTraverser(),this._requestScheduler=new Ys({throttleRequests:this.options.throttleRequests,maxRequests:this.options.maxRequests}),this.memoryAdjustedScreenSpaceError=this.options.maximumScreenSpaceError,this._cacheBytes=this.options.maximumMemoryUsage*1024*1024,this._cacheOverflowBytes=this.options.memoryCacheOverflow*1024*1024,this.stats=new Ue({id:this.url}),this._initializeStats(),this.tilesetInitializationPromise=this._initializeTileSet(t)}destroy(){this._destroy()}isLoaded(){return this._pendingCount===0&&this._frameNumber!==0&&this._requestedTiles.length===0}get tiles(){return Object.values(this._tiles)}get frameNumber(){return this._frameNumber}get queryParams(){return new URLSearchParams(this._queryParams).toString()}setProps(t){this.options={...this.options,...t}}getTileUrl(t){if(t.startsWith("data:"))return t;let n=t;return this.queryParams.length&&(n=`${t}${t.includes("?")?"&":"?"}${this.queryParams}`),n}hasExtension(t){return Boolean(this._extensionsUsed.indexOf(t)>-1)}update(t=null){this.tilesetInitializationPromise.then(()=>{!t&&this.lastUpdatedVieports?t=this.lastUpdatedVieports:this.lastUpdatedVieports=t,t&&this.doUpdate(t)})}async selectTiles(t=null){return await this.tilesetInitializationPromise,t&&(this.lastUpdatedVieports=t),this.updatePromise||(this.updatePromise=new Promise(r=>{setTimeout(()=>{this.lastUpdatedVieports&&this.doUpdate(this.lastUpdatedVieports),r(this._frameNumber),this.updatePromise=null},this.options.debounceTime)})),this.updatePromise}adjustScreenSpaceError(){this.gpuMemoryUsageInBytes<this._cacheBytes?this.memoryAdjustedScreenSpaceError=Math.max(this.memoryAdjustedScreenSpaceError/1.02,this.options.maximumScreenSpaceError):this.gpuMemoryUsageInBytes>this._cacheBytes+this._cacheOverflowBytes&&(this.memoryAdjustedScreenSpaceError*=1.02)}doUpdate(t){if("loadTiles"in this.options&&!this.options.loadTiles||this.traverseCounter>0)return;let r=t instanceof Array?t:[t];this._cache.reset(),this._frameNumber++,this.traverseCounter=r.length;let n=[];for(let s of r){let i=s.id;this._needTraverse(i)?n.push(i):this.traverseCounter--}for(let s of r){let i=s.id;if(this.roots[i]||(this.roots[i]=this._initializeTileHeaders(this.tileset,null)),!n.includes(i))continue;let o=ED(s,this._frameNumber);this._traverser.traverse(this.roots[i],o,this.options)}}_needTraverse(t){let r=t;return this.options.viewportTraversersMap&&(r=this.options.viewportTraversersMap[t]),r===t}_onTraversalEnd(t){let r=t.viewport.id;this.frameStateData[r]||(this.frameStateData[r]={selectedTiles:[],_requestedTiles:[],_emptyTiles:[]});let n=this.frameStateData[r],s=Object.values(this._traverser.selectedTiles),[i,o]=MD(s,t,this.options.maximumTilesSelected);n.selectedTiles=i;for(let a of o)a.unselect();n._requestedTiles=Object.values(this._traverser.requestedTiles),n._emptyTiles=Object.values(this._traverser.emptyTiles),this.traverseCounter--,!(this.traverseCounter>0)&&this._updateTiles()}_updateTiles(){this.selectedTiles=[],this._requestedTiles=[],this._emptyTiles=[];for(let t in this.frameStateData){let r=this.frameStateData[t];this.selectedTiles=this.selectedTiles.concat(r.selectedTiles),this._requestedTiles=this._requestedTiles.concat(r._requestedTiles),this._emptyTiles=this._emptyTiles.concat(r._emptyTiles)}this.selectedTiles=this.options.onTraversalComplete(this.selectedTiles);for(let t of this.selectedTiles)this._tiles[t.id]=t;this._loadTiles(),this._unloadTiles(),this._updateStats()}_tilesChanged(t,r){if(t.length!==r.length)return!0;let n=new Set(t.map(o=>o.id)),s=new Set(r.map(o=>o.id)),i=t.filter(o=>!s.has(o.id)).length>0;return i=i||r.filter(o=>!n.has(o.id)).length>0,i}_loadTiles(){for(let t of this._requestedTiles)t.contentUnloaded&&this._loadTile(t)}_unloadTiles(){this._cache.unloadTiles(this,(t,r)=>t._unloadTile(r))}_updateStats(){let t=0,r=0;for(let n of this.selectedTiles)n.contentAvailable&&n.content&&(t++,n.content.pointCount?r+=n.content.pointCount:r+=n.content.vertexCount);this.stats.get(GD).count=this.selectedTiles.length,this.stats.get(jD).count=t,this.stats.get($D).count=r,this.stats.get(KD).count=this.memoryAdjustedScreenSpaceError}async _initializeTileSet(t){this.type===Oe.I3S&&(this.calculateViewPropsI3S(),t.root=await t.root),this.root=this._initializeTileHeaders(t,null),this.type===Oe.TILES3D&&(this._initializeTiles3DTileset(t),this.calculateViewPropsTiles3D()),this.type===Oe.I3S&&this._initializeI3STileset()}calculateViewPropsI3S(){let t=this.tileset.fullExtent;if(t){let{xmin:n,xmax:s,ymin:i,ymax:o,zmin:a,zmax:c}=t;this.cartographicCenter=new Z(n+(s-n)/2,i+(o-i)/2,a+(c-a)/2),this.cartesianCenter=new Z,ut.WGS84.cartographicToCartesian(this.cartographicCenter,this.cartesianCenter),this.zoom=w3(t,this.cartographicCenter,this.cartesianCenter);return}let r=this.tileset.store?.extent;if(r){let[n,s,i,o]=r;this.cartographicCenter=new Z(n+(i-n)/2,s+(o-s)/2,0),this.cartesianCenter=new Z,ut.WGS84.cartographicToCartesian(this.cartographicCenter,this.cartesianCenter),this.zoom=wD(r,this.cartographicCenter,this.cartesianCenter);return}console.warn("Extent is not defined in the tileset header"),this.cartographicCenter=new Z,this.zoom=1}calculateViewPropsTiles3D(){let t=this.root,{center:r}=t.boundingVolume;if(!r){console.warn("center was not pre-calculated for the root tile"),this.cartographicCenter=new Z,this.zoom=1;return}r[0]!==0||r[1]!==0||r[2]!==0?(this.cartographicCenter=new Z,ut.WGS84.cartesianToCartographic(r,this.cartographicCenter)):this.cartographicCenter=new Z(0,0,-ut.WGS84.radii[0]),this.cartesianCenter=r,this.zoom=SD(t.boundingVolume,this.cartographicCenter)}_initializeStats(){this.stats.get(q1),this.stats.get(L3),this.stats.get(O3),this.stats.get(GD),this.stats.get(jD),this.stats.get(qD),this.stats.get(XD),this.stats.get(YD),this.stats.get($D),this.stats.get(B3,"memory"),this.stats.get(KD)}_initializeTileHeaders(t,r){let n=new oa(this,t.root,r);if(r&&(r.children.push(n),n.depth=r.depth+1),this.type===Oe.TILES3D){let s=[];for(s.push(n);s.length>0;){let i=s.pop();this.stats.get(q1).incrementCount();let o=i.header.children||[];for(let a of o){let c=new oa(this,a,i);if(c.contentUrl?.includes("?session=")){let f=new URL(c.contentUrl).searchParams.get("session");f&&(this._queryParams.session=f)}i.children.push(c),c.depth=i.depth+1,s.push(c)}}}return n}_initializeTraverser(){let t;switch(this.type){case Oe.TILES3D:t=W1;break;case Oe.I3S:t=j1;break;default:t=ts}return new t({basePath:this.basePath,onTraversalEnd:this._onTraversalEnd.bind(this)})}_destroyTileHeaders(t){this._destroySubtree(t)}async _loadTile(t){let r;try{this._onStartTileLoading(),r=await t.loadContent()}catch(n){this._onTileLoadError(t,n instanceof Error?n:new Error("load failed"))}finally{this._onEndTileLoading(),this._onTileLoad(t,r)}}_onTileLoadError(t,r){this.stats.get(YD).incrementCount();let n=r.message||r.toString(),s=t.url;console.error(`A 3D tile failed to load: ${t.url} ${n}`),this.options.onTileError(t,n,s)}_onTileLoad(t,r){if(r){if(this.type===Oe.I3S){let n=this.tileset?.nodePagesTile?.nodesInNodePages||0;this.stats.get(q1).reset(),this.stats.get(q1).addCount(n)}t&&t.content&&yF(t,t.content),this.updateContentTypes(t),this._addTileToCache(t),this.options.onTileLoad(t)}}updateContentTypes(t){if(this.type===Oe.I3S)switch(t.header.isDracoGeometry&&(this.contentFormats.draco=!0),t.header.textureFormat){case"dds":this.contentFormats.dds=!0;break;case"ktx2":this.contentFormats.ktx2=!0;break;default:}else if(this.type===Oe.TILES3D){let{extensionsRemoved:r=[]}=t.content?.gltf||{};r.includes("KHR_draco_mesh_compression")&&(this.contentFormats.draco=!0),r.includes("EXT_meshopt_compression")&&(this.contentFormats.meshopt=!0),r.includes("KHR_texture_basisu")&&(this.contentFormats.ktx2=!0)}}_onStartTileLoading(){this._pendingCount++,this.stats.get(L3).incrementCount()}_onEndTileLoading(){this._pendingCount--,this.stats.get(L3).decrementCount()}_addTileToCache(t){this._cache.add(this,t,r=>r._updateCacheStats(t))}_updateCacheStats(t){this.stats.get(qD).incrementCount(),this.stats.get(O3).incrementCount(),this.gpuMemoryUsageInBytes+=t.gpuMemoryUsageInBytes||0,this.stats.get(B3).count=this.gpuMemoryUsageInBytes,this.options.memoryAdjustedScreenSpaceError&&this.adjustScreenSpaceError()}_unloadTile(t){this.gpuMemoryUsageInBytes-=t.gpuMemoryUsageInBytes||0,this.stats.get(O3).decrementCount(),this.stats.get(XD).incrementCount(),this.stats.get(B3).count=this.gpuMemoryUsageInBytes,this.options.onTileUnload(t),t.unloadContent()}_destroy(){let t=[];for(this.root&&t.push(this.root);t.length>0;){let r=t.pop();for(let n of r.children)t.push(n);this._destroyTile(r)}this.root=null}_destroySubtree(t){let r=t,n=[];for(n.push(r);n.length>0;){t=n.pop();for(let s of t.children)n.push(s);t!==r&&this._destroyTile(t)}r.children=[]}_destroyTile(t){this._cache.unloadTile(this,t),this._unloadTile(t),t.destroy()}_initializeTiles3DTileset(t){if(t.queryString){let r=new URLSearchParams(t.queryString),n=Object.fromEntries(r.entries());this._queryParams={...this._queryParams,...n}}if(this.asset=t.asset,!this.asset)throw new Error("Tileset must have an asset property.");if(this.asset.version!=="0.0"&&this.asset.version!=="1.0"&&this.asset.version!=="1.1")throw new Error("The tileset must be 3D Tiles version either 0.0 or 1.0 or 1.1.");"tilesetVersion"in this.asset&&(this._queryParams.v=this.asset.tilesetVersion),this.credits={attributions:this.options.attributions||[]},this.description=this.options.description||"",this.properties=t.properties,this.geometricError=t.geometricError,this._extensionsUsed=t.extensionsUsed||[],this.extras=t.extras}_initializeI3STileset(){this.loadOptions.i3s&&"token"in this.loadOptions.i3s&&(this._queryParams.token=this.loadOptions.i3s.token)}};var X1="4.2.1";var aa={COMPOSITE:"cmpt",POINT_CLOUD:"pnts",BATCHED_3D_MODEL:"b3dm",INSTANCED_3D_MODEL:"i3dm",GEOMETRY:"geom",VECTOR:"vect",GLTF:"glTF"},ZXt=Object.keys(aa);function N3(e,t,r){lt(e instanceof ArrayBuffer);let n=new TextDecoder("utf8"),s=new Uint8Array(e,t,r);return n.decode(s)}function ZD(e,t=0){let r=new DataView(e);return`${String.fromCharCode(r.getUint8(t+0))}${String.fromCharCode(r.getUint8(t+1))}${String.fromCharCode(r.getUint8(t+2))}${String.fromCharCode(r.getUint8(t+3))}`}var tat={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},de={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DOUBLE:5130},ct={...tat,...de};var F3={[de.DOUBLE]:Float64Array,[de.FLOAT]:Float32Array,[de.UNSIGNED_SHORT]:Uint16Array,[de.UNSIGNED_INT]:Uint32Array,[de.UNSIGNED_BYTE]:Uint8Array,[de.BYTE]:Int8Array,[de.SHORT]:Int16Array,[de.INT]:Int32Array},eat={DOUBLE:de.DOUBLE,FLOAT:de.FLOAT,UNSIGNED_SHORT:de.UNSIGNED_SHORT,UNSIGNED_INT:de.UNSIGNED_INT,UNSIGNED_BYTE:de.UNSIGNED_BYTE,BYTE:de.BYTE,SHORT:de.SHORT,INT:de.INT},D3="Failed to convert GL type",Ke=class{static fromTypedArray(t){t=ArrayBuffer.isView(t)?t.constructor:t;for(let r in F3)if(F3[r]===t)return r;throw new Error(D3)}static fromName(t){let r=eat[t];if(!r)throw new Error(D3);return r}static getArrayType(t){switch(t){case de.UNSIGNED_SHORT_5_6_5:case de.UNSIGNED_SHORT_4_4_4_4:case de.UNSIGNED_SHORT_5_5_5_1:return Uint16Array;default:let r=F3[t];if(!r)throw new Error(D3);return r}}static getByteSize(t){return Ke.getArrayType(t).BYTES_PER_ELEMENT}static validate(t){return Boolean(Ke.getArrayType(t))}static createTypedArray(t,r,n=0,s){s===void 0&&(s=(r.byteLength-n)/Ke.getByteSize(t));let i=Ke.getArrayType(t);return new i(r,n,s)}};var sYt=1/Math.PI*180,iYt=1/180*Math.PI,rat={EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1};globalThis.mathgl=globalThis.mathgl||{config:{...rat}};var ke=globalThis.mathgl.config;function k3(e,{precision:t=ke.precision}={}){return e=nat(e),`${parseFloat(e.toPrecision(t))}`}function es(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}function U3(e,t,r){return iat(e,n=>Math.max(t,Math.min(r,n)))}function Y1(e,t,r){let n=ke.EPSILON;r&&(ke.EPSILON=r);try{if(e===t)return!0;if(es(e)&&es(t)){if(e.length!==t.length)return!1;for(let s=0;s<e.length;++s)if(!Y1(e[s],t[s]))return!1;return!0}return e&&e.equals?e.equals(t):t&&t.equals?t.equals(e):typeof e=="number"&&typeof t=="number"?Math.abs(e-t)<=ke.EPSILON*Math.max(1,Math.abs(e),Math.abs(t)):!1}finally{ke.EPSILON=n}}function nat(e){return Math.round(e/ke.EPSILON)*ke.EPSILON}function sat(e){return e.clone?e.clone():new Array(e.length)}function iat(e,t,r){if(es(e)){let n=e;r=r||sat(n);for(let s=0;s<r.length&&s<n.length;++s){let i=typeof e=="number"?e:e[s];r[s]=t(i,s,r)}return r}return t(e)}var $1=class extends Array{clone(){return new this.constructor().copy(this)}fromArray(t,r=0){for(let n=0;n<this.ELEMENTS;++n)this[n]=t[n+r];return this.check()}toArray(t=[],r=0){for(let n=0;n<this.ELEMENTS;++n)t[r+n]=this[n];return t}toObject(t){return t}from(t){return Array.isArray(t)?this.copy(t):this.fromObject(t)}to(t){return t===this?this:es(t)?this.toArray(t):this.toObject(t)}toTarget(t){return t?this.to(t):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(ke)}formatString(t){let r="";for(let n=0;n<this.ELEMENTS;++n)r+=(n>0?", ":"")+k3(this[n],t);return`${t.printTypes?this.constructor.name:""}[${r}]`}equals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(!Y1(this[r],t[r]))return!1;return!0}exactEquals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(this[r]!==t[r])return!1;return!0}negate(){for(let t=0;t<this.ELEMENTS;++t)this[t]=-this[t];return this.check()}lerp(t,r,n){if(n===void 0)return this.lerp(this,t,r);for(let s=0;s<this.ELEMENTS;++s){let i=t[s],o=typeof r=="number"?r:r[s];this[s]=i+n*(o-i)}return this.check()}min(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.min(t[r],this[r]);return this.check()}max(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.max(t[r],this[r]);return this.check()}clamp(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t[n]),r[n]);return this.check()}add(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]+=r[n];return this.check()}subtract(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]-=r[n];return this.check()}scale(t){if(typeof t=="number")for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;else for(let r=0;r<this.ELEMENTS&&r<t.length;++r)this[r]*=t[r];return this.check()}multiplyByScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}check(){if(ke.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let t=this.length===this.ELEMENTS;for(let r=0;r<this.ELEMENTS;++r)t=t&&Number.isFinite(this[r]);return t}sub(t){return this.subtract(t)}setScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=t;return this.check()}addScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]+=t;return this.check()}subScalar(t){return this.addScalar(-t)}multiplyScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}divideScalar(t){return this.multiplyByScalar(1/t)}clampScalar(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t),r);return this.check()}get elements(){return this}};function Me(e){if(!Number.isFinite(e))throw new Error(`Invalid number ${JSON.stringify(e)}`);return e}function z3(e,t){if(!e)throw new Error(`math.gl assertion ${t}`)}var al=class extends $1{get x(){return this[0]}set x(t){this[0]=Me(t)}get y(){return this[1]}set y(t){this[1]=Me(t)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let t=0;for(let r=0;r<this.ELEMENTS;++r)t+=this[r]*this[r];return t}magnitudeSquared(){return this.lengthSquared()}distance(t){return Math.sqrt(this.distanceSquared(t))}distanceSquared(t){let r=0;for(let n=0;n<this.ELEMENTS;++n){let s=this[n]-t[n];r+=s*s}return Me(r)}dot(t){let r=0;for(let n=0;n<this.ELEMENTS;++n)r+=this[n]*t[n];return Me(r)}normalize(){let t=this.magnitude();if(t!==0)for(let r=0;r<this.ELEMENTS;++r)this[r]/=t;return this.check()}multiply(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]*=r[n];return this.check()}divide(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]/=r[n];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(t){return this.distance(t)}distanceToSquared(t){return this.distanceSquared(t)}getComponent(t){return z3(t>=0&&t<this.ELEMENTS,"index is out of range"),Me(this[t])}setComponent(t,r){return z3(t>=0&&t<this.ELEMENTS,"index is out of range"),this[t]=r,this.check()}addVectors(t,r){return this.copy(t).add(r)}subVectors(t,r){return this.copy(t).subtract(r)}multiplyVectors(t,r){return this.copy(t).multiply(r)}addScaledVector(t,r){return this.add(new this.constructor(t).multiplyScalar(r))}};var cl=typeof Float32Array<"u"?Float32Array:Array;var mYt=Math.PI/180;function lat(){let e=new cl(2);return cl!=Float32Array&&(e[0]=0,e[1]=0),e}function QD(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e}function tk(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s+r[4],e[1]=r[1]*n+r[3]*s+r[5],e}function ek(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[3]*s+r[6],e[1]=r[1]*n+r[4]*s+r[7],e}function rk(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[4]*s+r[12],e[1]=r[1]*n+r[5]*s+r[13],e}var gYt=function(){let e=lat();return function(t,r,n,s,i,o){let a,c;for(r||(r=2),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],i(e,e,o),t[a]=e[0],t[a+1]=e[1];return t}}();function nk(e,t,r){let n=t[0],s=t[1],i=r[3]*n+r[7]*s||1;return e[0]=(r[0]*n+r[4]*s)/i,e[1]=(r[1]*n+r[5]*s)/i,e}function sk(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i||1;return e[0]=(r[0]*n+r[4]*s+r[8]*i)/o,e[1]=(r[1]*n+r[5]*s+r[9]*i)/o,e[2]=(r[2]*n+r[6]*s+r[10]*i)/o,e}function ik(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e}var ca=class extends al{constructor(t=0,r=0){super(2),es(t)&&arguments.length===1?this.copy(t):(ke.debug&&(Me(t),Me(r)),this[0]=t,this[1]=r)}set(t,r){return this[0]=t,this[1]=r,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this.check()}fromObject(t){return ke.debug&&(Me(t.x),Me(t.y)),this[0]=t.x,this[1]=t.y,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t}get ELEMENTS(){return 2}horizontalAngle(){return Math.atan2(this.y,this.x)}verticalAngle(){return Math.atan2(this.x,this.y)}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return rk(this,this,t),this.check()}transformAsVector(t){return nk(this,this,t),this.check()}transformByMatrix3(t){return ek(this,this,t),this.check()}transformByMatrix2x3(t){return tk(this,this,t),this.check()}transformByMatrix2(t){return QD(this,this,t),this.check()}};function fat(){let e=new cl(3);return cl!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function hat(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function ok(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2];return e[0]=s*c-i*a,e[1]=i*o-n*c,e[2]=n*a-s*o,e}function ak(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*s+r[8]*i+r[12])/o,e[1]=(r[1]*n+r[5]*s+r[9]*i+r[13])/o,e[2]=(r[2]*n+r[6]*s+r[10]*i+r[14])/o,e}function ck(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=n*r[0]+s*r[3]+i*r[6],e[1]=n*r[1]+s*r[4]+i*r[7],e[2]=n*r[2]+s*r[5]+i*r[8],e}function lk(e,t,r){let n=r[0],s=r[1],i=r[2],o=r[3],a=t[0],c=t[1],l=t[2],f=s*l-i*c,h=i*a-n*l,u=n*c-s*a,d=s*u-i*h,p=i*f-n*u,m=n*h-s*f,g=o*2;return f*=g,h*=g,u*=g,d*=2,p*=2,m*=2,e[0]=a+f+d,e[1]=c+h+p,e[2]=l+u+m,e}function fk(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0],i[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),i[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function hk(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),i[1]=s[1],i[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function uk(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),i[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),i[2]=s[2],e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function dk(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2],c=Math.sqrt((r*r+n*n+s*s)*(i*i+o*o+a*a)),l=c&&hat(e,t)/c;return Math.acos(Math.min(Math.max(l,-1),1))}var MYt=function(){let e=fat();return function(t,r,n,s,i,o){let a,c;for(r||(r=3),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}}();var V3=[0,0,0],K1,la=class extends al{static get ZERO(){return K1||(K1=new la(0,0,0),Object.freeze(K1)),K1}constructor(t=0,r=0,n=0){super(-0,-0,-0),arguments.length===1&&es(t)?this.copy(t):(ke.debug&&(Me(t),Me(r),Me(n)),this[0]=t,this[1]=r,this[2]=n)}set(t,r,n){return this[0]=t,this[1]=r,this[2]=n,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.check()}fromObject(t){return ke.debug&&(Me(t.x),Me(t.y),Me(t.z)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t}get ELEMENTS(){return 3}get z(){return this[2]}set z(t){this[2]=Me(t)}angle(t){return dk(this,t)}cross(t){return ok(this,this,t),this.check()}rotateX({radians:t,origin:r=V3}){return fk(this,this,r,t),this.check()}rotateY({radians:t,origin:r=V3}){return hk(this,this,r,t),this.check()}rotateZ({radians:t,origin:r=V3}){return uk(this,this,r,t),this.check()}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return ak(this,this,t),this.check()}transformAsVector(t){return sk(this,this,t),this.check()}transformByMatrix3(t){return ck(this,this,t),this.check()}transformByMatrix2(t){return ik(this,this,t),this.check()}transformByQuaternion(t){return lk(this,this,t),this.check()}};function pk(e,t){if(!e)throw new Error(`math.gl assertion failed. ${t}`)}function W3(e,t=[0,0,0]){let r=e>>11&31,n=e>>5&63,s=e&31;return t[0]=r<<3,t[1]=n<<2,t[2]=s<<3,t}var n$t=1/256;var s$t=new ca,i$t=new la,o$t=new ca,a$t=new ca,c$t=new Uint8Array(1);function mk(e,t=255){return U3(e,0,t)/t*2-1}function gk(e){return e<0?-1:1}function xk(e,t,r,n){if(pk(n),e<0||e>r||t<0||t>r)throw new Error(`x and y must be unsigned normalized integers between 0 and ${r}`);if(n.x=mk(e,r),n.y=mk(t,r),n.z=1-(Math.abs(n.x)+Math.abs(n.y)),n.z<0){let s=n.x;n.x=(1-Math.abs(n.y))*gk(s),n.y=(1-Math.abs(s))*gk(n.y)}return n.normalize()}function H3(e,t,r){return xk(e,t,255,r)}var C$t=1/Math.PI*180,P$t=1/180*Math.PI,uat={EPSILON:1e-12,debug:!1,precision:4,printTypes:!1,printDegrees:!1,printRowMajor:!0,_cartographicRadians:!1};globalThis.mathgl=globalThis.mathgl||{config:{...uat}};var Ae=globalThis.mathgl.config;function _k(e,{precision:t=Ae.precision}={}){return e=dat(e),`${parseFloat(e.toPrecision(t))}`}function Hi(e){return Array.isArray(e)||ArrayBuffer.isView(e)&&!(e instanceof DataView)}function G3(e,t,r){let n=Ae.EPSILON;r&&(Ae.EPSILON=r);try{if(e===t)return!0;if(Hi(e)&&Hi(t)){if(e.length!==t.length)return!1;for(let s=0;s<e.length;++s)if(!G3(e[s],t[s]))return!1;return!0}return e&&e.equals?e.equals(t):t&&t.equals?t.equals(e):typeof e=="number"&&typeof t=="number"?Math.abs(e-t)<=Ae.EPSILON*Math.max(1,Math.abs(e),Math.abs(t)):!1}finally{Ae.EPSILON=n}}function dat(e){return Math.round(e/Ae.EPSILON)*Ae.EPSILON}var Gi=class extends Array{clone(){return new this.constructor().copy(this)}fromArray(t,r=0){for(let n=0;n<this.ELEMENTS;++n)this[n]=t[n+r];return this.check()}toArray(t=[],r=0){for(let n=0;n<this.ELEMENTS;++n)t[r+n]=this[n];return t}toObject(t){return t}from(t){return Array.isArray(t)?this.copy(t):this.fromObject(t)}to(t){return t===this?this:Hi(t)?this.toArray(t):this.toObject(t)}toTarget(t){return t?this.to(t):this}toFloat32Array(){return new Float32Array(this)}toString(){return this.formatString(Ae)}formatString(t){let r="";for(let n=0;n<this.ELEMENTS;++n)r+=(n>0?", ":"")+_k(this[n],t);return`${t.printTypes?this.constructor.name:""}[${r}]`}equals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(!G3(this[r],t[r]))return!1;return!0}exactEquals(t){if(!t||this.length!==t.length)return!1;for(let r=0;r<this.ELEMENTS;++r)if(this[r]!==t[r])return!1;return!0}negate(){for(let t=0;t<this.ELEMENTS;++t)this[t]=-this[t];return this.check()}lerp(t,r,n){if(n===void 0)return this.lerp(this,t,r);for(let s=0;s<this.ELEMENTS;++s){let i=t[s],o=typeof r=="number"?r:r[s];this[s]=i+n*(o-i)}return this.check()}min(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.min(t[r],this[r]);return this.check()}max(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=Math.max(t[r],this[r]);return this.check()}clamp(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t[n]),r[n]);return this.check()}add(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]+=r[n];return this.check()}subtract(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]-=r[n];return this.check()}scale(t){if(typeof t=="number")for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;else for(let r=0;r<this.ELEMENTS&&r<t.length;++r)this[r]*=t[r];return this.check()}multiplyByScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}check(){if(Ae.debug&&!this.validate())throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);return this}validate(){let t=this.length===this.ELEMENTS;for(let r=0;r<this.ELEMENTS;++r)t=t&&Number.isFinite(this[r]);return t}sub(t){return this.subtract(t)}setScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]=t;return this.check()}addScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]+=t;return this.check()}subScalar(t){return this.addScalar(-t)}multiplyScalar(t){for(let r=0;r<this.ELEMENTS;++r)this[r]*=t;return this.check()}divideScalar(t){return this.multiplyByScalar(1/t)}clampScalar(t,r){for(let n=0;n<this.ELEMENTS;++n)this[n]=Math.min(Math.max(this[n],t),r);return this.check()}get elements(){return this}};function pat(e,t){if(e.length!==t)return!1;for(let r=0;r<e.length;++r)if(!Number.isFinite(e[r]))return!1;return!0}function bt(e){if(!Number.isFinite(e))throw new Error(`Invalid number ${JSON.stringify(e)}`);return e}function ji(e,t,r=""){if(Ae.debug&&!pat(e,t))throw new Error(`math.gl: ${r} some fields set to invalid numbers'`);return e}function j3(e,t){if(!e)throw new Error(`math.gl assertion ${t}`)}var ll=class extends Gi{get x(){return this[0]}set x(t){this[0]=bt(t)}get y(){return this[1]}set y(t){this[1]=bt(t)}len(){return Math.sqrt(this.lengthSquared())}magnitude(){return this.len()}lengthSquared(){let t=0;for(let r=0;r<this.ELEMENTS;++r)t+=this[r]*this[r];return t}magnitudeSquared(){return this.lengthSquared()}distance(t){return Math.sqrt(this.distanceSquared(t))}distanceSquared(t){let r=0;for(let n=0;n<this.ELEMENTS;++n){let s=this[n]-t[n];r+=s*s}return bt(r)}dot(t){let r=0;for(let n=0;n<this.ELEMENTS;++n)r+=this[n]*t[n];return bt(r)}normalize(){let t=this.magnitude();if(t!==0)for(let r=0;r<this.ELEMENTS;++r)this[r]/=t;return this.check()}multiply(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]*=r[n];return this.check()}divide(...t){for(let r of t)for(let n=0;n<this.ELEMENTS;++n)this[n]/=r[n];return this.check()}lengthSq(){return this.lengthSquared()}distanceTo(t){return this.distance(t)}distanceToSquared(t){return this.distanceSquared(t)}getComponent(t){return j3(t>=0&&t<this.ELEMENTS,"index is out of range"),bt(this[t])}setComponent(t,r){return j3(t>=0&&t<this.ELEMENTS,"index is out of range"),this[t]=r,this.check()}addVectors(t,r){return this.copy(t).add(r)}subVectors(t,r){return this.copy(t).subtract(r)}multiplyVectors(t,r){return this.copy(t).multiply(r)}addScaledVector(t,r){return this.add(new this.constructor(t).multiplyScalar(r))}};var Ze=typeof Float32Array<"u"?Float32Array:Array;var z$t=Math.PI/180;function mat(){let e=new Ze(2);return Ze!=Float32Array&&(e[0]=0,e[1]=0),e}function bk(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[3]*s+r[6],e[1]=r[1]*n+r[4]*s+r[7],e}function Tk(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[4]*s+r[12],e[1]=r[1]*n+r[5]*s+r[13],e}var V$t=function(){let e=mat();return function(t,r,n,s,i,o){let a,c;for(r||(r=2),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],i(e,e,o),t[a]=e[0],t[a+1]=e[1];return t}}();function vk(e,t,r){let n=t[0],s=t[1],i=r[3]*n+r[7]*s||1;return e[0]=(r[0]*n+r[4]*s)/i,e[1]=(r[1]*n+r[5]*s)/i,e}function Z1(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i||1;return e[0]=(r[0]*n+r[4]*s+r[8]*i)/o,e[1]=(r[1]*n+r[5]*s+r[9]*i)/o,e[2]=(r[2]*n+r[6]*s+r[10]*i)/o,e}function Ek(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e}function Mk(e,t,r){let n=t[0],s=t[1];return e[0]=r[0]*n+r[2]*s,e[1]=r[1]*n+r[3]*s,e[2]=t[2],e[3]=t[3],e}function J1(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=r[0]*n+r[3]*s+r[6]*i,e[1]=r[1]*n+r[4]*s+r[7]*i,e[2]=r[2]*n+r[5]*s+r[8]*i,e[3]=t[3],e}function q3(){let e=new Ze(3);return Ze!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function gat(e){let t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)}function X3(e,t,r){let n=new Ze(3);return n[0]=e,n[1]=t,n[2]=r,n}function Sk(e,t){let r=t[0],n=t[1],s=t[2],i=r*r+n*n+s*s;return i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function Y3(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function fl(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2];return e[0]=s*c-i*a,e[1]=i*o-n*c,e[2]=n*a-s*o,e}function hl(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[3]*n+r[7]*s+r[11]*i+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*s+r[8]*i+r[12])/o,e[1]=(r[1]*n+r[5]*s+r[9]*i+r[13])/o,e[2]=(r[2]*n+r[6]*s+r[10]*i+r[14])/o,e}function Q1(e,t,r){let n=t[0],s=t[1],i=t[2];return e[0]=n*r[0]+s*r[3]+i*r[6],e[1]=n*r[1]+s*r[4]+i*r[7],e[2]=n*r[2]+s*r[5]+i*r[8],e}function tx(e,t,r){let n=r[0],s=r[1],i=r[2],o=r[3],a=t[0],c=t[1],l=t[2],f=s*l-i*c,h=i*a-n*l,u=n*c-s*a,d=s*u-i*h,p=i*f-n*u,m=n*h-s*f,g=o*2;return f*=g,h*=g,u*=g,d*=2,p*=2,m*=2,e[0]=a+f+d,e[1]=c+h+p,e[2]=l+u+m,e}function wk(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0],i[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),i[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function Ck(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),i[1]=s[1],i[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function Pk(e,t,r,n){let s=[],i=[];return s[0]=t[0]-r[0],s[1]=t[1]-r[1],s[2]=t[2]-r[2],i[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),i[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),i[2]=s[2],e[0]=i[0]+r[0],e[1]=i[1]+r[1],e[2]=i[2]+r[2],e}function Ik(e,t){let r=e[0],n=e[1],s=e[2],i=t[0],o=t[1],a=t[2],c=Math.sqrt((r*r+n*n+s*s)*(i*i+o*o+a*a)),l=c&&Y3(e,t)/c;return Math.acos(Math.min(Math.max(l,-1),1))}var Rk=gat;var G$t=function(){let e=q3();return function(t,r,n,s,i,o){let a,c;for(r||(r=3),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}}();var $3=[0,0,0],ex,It=class extends ll{static get ZERO(){return ex||(ex=new It(0,0,0),Object.freeze(ex)),ex}constructor(t=0,r=0,n=0){super(-0,-0,-0),arguments.length===1&&Hi(t)?this.copy(t):(Ae.debug&&(bt(t),bt(r),bt(n)),this[0]=t,this[1]=r,this[2]=n)}set(t,r,n){return this[0]=t,this[1]=r,this[2]=n,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this.check()}fromObject(t){return Ae.debug&&(bt(t.x),bt(t.y),bt(t.z)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this.check()}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t}get ELEMENTS(){return 3}get z(){return this[2]}set z(t){this[2]=bt(t)}angle(t){return Ik(this,t)}cross(t){return fl(this,this,t),this.check()}rotateX({radians:t,origin:r=$3}){return wk(this,this,r,t),this.check()}rotateY({radians:t,origin:r=$3}){return Ck(this,this,r,t),this.check()}rotateZ({radians:t,origin:r=$3}){return Pk(this,this,r,t),this.check()}transform(t){return this.transformAsPoint(t)}transformAsPoint(t){return hl(this,this,t),this.check()}transformAsVector(t){return Z1(this,this,t),this.check()}transformByMatrix3(t){return Q1(this,this,t),this.check()}transformByMatrix2(t){return Ek(this,this,t),this.check()}transformByQuaternion(t){return tx(this,this,t),this.check()}};var rx,ul=class extends ll{static get ZERO(){return rx||(rx=new ul(0,0,0,0),Object.freeze(rx)),rx}constructor(t=0,r=0,n=0,s=0){super(-0,-0,-0,-0),Hi(t)&&arguments.length===1?this.copy(t):(Ae.debug&&(bt(t),bt(r),bt(n),bt(s)),this[0]=t,this[1]=r,this[2]=n,this[3]=s)}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}fromObject(t){return Ae.debug&&(bt(t.x),bt(t.y),bt(t.z),bt(t.w)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t.w=this[3],t}get ELEMENTS(){return 4}get z(){return this[2]}set z(t){this[2]=bt(t)}get w(){return this[3]}set w(t){this[3]=bt(t)}transform(t){return hl(this,this,t),this.check()}transformByMatrix3(t){return J1(this,this,t),this.check()}transformByMatrix2(t){return Mk(this,this,t),this.check()}transformByQuaternion(t){return tx(this,this,t),this.check()}applyMatrix4(t){return t.transform(this,this),this}};var dl=class extends Gi{toString(){let t="[";if(Ae.printRowMajor){t+="row-major:";for(let r=0;r<this.RANK;++r)for(let n=0;n<this.RANK;++n)t+=` ${this[n*this.RANK+r]}`}else{t+="column-major:";for(let r=0;r<this.ELEMENTS;++r)t+=` ${this[r]}`}return t+="]",t}getElementIndex(t,r){return r*this.RANK+t}getElement(t,r){return this[r*this.RANK+t]}setElement(t,r,n){return this[r*this.RANK+t]=bt(n),this}getColumn(t,r=new Array(this.RANK).fill(-0)){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)r[s]=this[n+s];return r}setColumn(t,r){let n=t*this.RANK;for(let s=0;s<this.RANK;++s)this[n+s]=r[s];return this}};function Ok(){let e=new Ze(9);return Ze!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function Lk(e,t){if(e===t){let r=t[1],n=t[2],s=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=s}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e}function Bk(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=f*o-a*l,u=-f*i+a*c,d=l*i-o*c,p=r*h+n*u+s*d;return p?(p=1/p,e[0]=h*p,e[1]=(-f*n+s*l)*p,e[2]=(a*n-s*o)*p,e[3]=u*p,e[4]=(f*r-s*c)*p,e[5]=(-a*r+s*i)*p,e[6]=d*p,e[7]=(-l*r+n*c)*p,e[8]=(o*r-n*i)*p,e):null}function Nk(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*(l*i-o*c)+r*(-l*s+o*a)+n*(c*s-i*a)}function K3(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1],p=r[2],m=r[3],g=r[4],x=r[5],A=r[6],_=r[7],y=r[8];return e[0]=u*n+d*o+p*l,e[1]=u*s+d*a+p*f,e[2]=u*i+d*c+p*h,e[3]=m*n+g*o+x*l,e[4]=m*s+g*a+x*f,e[5]=m*i+g*c+x*h,e[6]=A*n+_*o+y*l,e[7]=A*s+_*a+y*f,e[8]=A*i+_*c+y*h,e}function Fk(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=r[0],d=r[1];return e[0]=n,e[1]=s,e[2]=i,e[3]=o,e[4]=a,e[5]=c,e[6]=u*n+d*o+l,e[7]=u*s+d*a+f,e[8]=u*i+d*c+h,e}function Dk(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=Math.sin(r),d=Math.cos(r);return e[0]=d*n+u*o,e[1]=d*s+u*a,e[2]=d*i+u*c,e[3]=d*o-u*n,e[4]=d*a-u*s,e[5]=d*c-u*i,e[6]=l,e[7]=f,e[8]=h,e}function Z3(e,t,r){let n=r[0],s=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=s*t[3],e[4]=s*t[4],e[5]=s*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function kk(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[3]=f-x,e[6]=u+g,e[1]=f+x,e[4]=1-l-p,e[7]=d-m,e[2]=u-g,e[5]=d+m,e[8]=1-l-h,e}var J3;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL1ROW0=3]="COL1ROW0",e[e.COL1ROW1=4]="COL1ROW1",e[e.COL1ROW2=5]="COL1ROW2",e[e.COL2ROW0=6]="COL2ROW0",e[e.COL2ROW1=7]="COL2ROW1",e[e.COL2ROW2=8]="COL2ROW2"})(J3||(J3={}));var yat=Object.freeze([1,0,0,0,1,0,0,0,1]),fa=class extends dl{static get IDENTITY(){return bat()}static get ZERO(){return Aat()}get ELEMENTS(){return 9}get RANK(){return 3}get INDICES(){return J3}constructor(t,...r){super(-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):r.length>0?this.copy([t,...r]):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this.check()}identity(){return this.copy(yat)}fromObject(t){return this.check()}fromQuaternion(t){return kk(this,t),this.check()}set(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l){return this[0]=t,this[1]=s,this[2]=a,this[3]=r,this[4]=i,this[5]=c,this[6]=n,this[7]=o,this[8]=l,this.check()}determinant(){return Nk(this)}transpose(){return Lk(this,this),this.check()}invert(){return Bk(this,this),this.check()}multiplyLeft(t){return K3(this,t,this),this.check()}multiplyRight(t){return K3(this,this,t),this.check()}rotate(t){return Dk(this,this,t),this.check()}scale(t){return Array.isArray(t)?Z3(this,this,t):Z3(this,this,[t,t]),this.check()}translate(t){return Fk(this,this,t),this.check()}transform(t,r){let n;switch(t.length){case 2:n=bk(r||[-0,-0],t,this);break;case 3:n=Q1(r||[-0,-0,-0],t,this);break;case 4:n=J1(r||[-0,-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return ji(n,t.length),n}transformVector(t,r){return this.transform(t,r)}transformVector2(t,r){return this.transform(t,r)}transformVector3(t,r){return this.transform(t,r)}},nx,sx=null;function Aat(){return nx||(nx=new fa([0,0,0,0,0,0,0,0,0]),Object.freeze(nx)),nx}function bat(){return sx||(sx=new fa,Object.freeze(sx)),sx}function Tat(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function Uk(e,t){if(e===t){let r=t[1],n=t[2],s=t[3],i=t[6],o=t[7],a=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=i,e[11]=t[14],e[12]=s,e[13]=o,e[14]=a}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function zk(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=t[4],a=t[5],c=t[6],l=t[7],f=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],g=t[14],x=t[15],A=r*a-n*o,_=r*c-s*o,y=r*l-i*o,T=n*c-s*a,v=n*l-i*a,C=s*l-i*c,w=f*m-h*p,E=f*g-u*p,b=f*x-d*p,R=h*g-u*m,k=h*x-d*m,D=u*x-d*g,P=A*D-_*k+y*R+T*b-v*E+C*w;return P?(P=1/P,e[0]=(a*D-c*k+l*R)*P,e[1]=(s*k-n*D-i*R)*P,e[2]=(m*C-g*v+x*T)*P,e[3]=(u*v-h*C-d*T)*P,e[4]=(c*b-o*D-l*E)*P,e[5]=(r*D-s*b+i*E)*P,e[6]=(g*y-p*C-x*_)*P,e[7]=(f*C-u*y+d*_)*P,e[8]=(o*k-a*b+l*w)*P,e[9]=(n*b-r*k-i*w)*P,e[10]=(p*v-m*y+x*A)*P,e[11]=(h*y-f*v-d*A)*P,e[12]=(a*E-o*R-c*w)*P,e[13]=(r*R-n*E+s*w)*P,e[14]=(m*_-p*T-g*A)*P,e[15]=(f*T-h*_+u*A)*P,e):null}function Vk(e){let t=e[0],r=e[1],n=e[2],s=e[3],i=e[4],o=e[5],a=e[6],c=e[7],l=e[8],f=e[9],h=e[10],u=e[11],d=e[12],p=e[13],m=e[14],g=e[15],x=t*o-r*i,A=t*a-n*i,_=r*a-n*o,y=l*p-f*d,T=l*m-h*d,v=f*m-h*p,C=t*v-r*T+n*y,w=i*v-o*T+a*y,E=l*_-f*A+h*x,b=d*_-p*A+m*x;return c*C-s*w+g*E-u*b}function Q3(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=t[4],c=t[5],l=t[6],f=t[7],h=t[8],u=t[9],d=t[10],p=t[11],m=t[12],g=t[13],x=t[14],A=t[15],_=r[0],y=r[1],T=r[2],v=r[3];return e[0]=_*n+y*a+T*h+v*m,e[1]=_*s+y*c+T*u+v*g,e[2]=_*i+y*l+T*d+v*x,e[3]=_*o+y*f+T*p+v*A,_=r[4],y=r[5],T=r[6],v=r[7],e[4]=_*n+y*a+T*h+v*m,e[5]=_*s+y*c+T*u+v*g,e[6]=_*i+y*l+T*d+v*x,e[7]=_*o+y*f+T*p+v*A,_=r[8],y=r[9],T=r[10],v=r[11],e[8]=_*n+y*a+T*h+v*m,e[9]=_*s+y*c+T*u+v*g,e[10]=_*i+y*l+T*d+v*x,e[11]=_*o+y*f+T*p+v*A,_=r[12],y=r[13],T=r[14],v=r[15],e[12]=_*n+y*a+T*h+v*m,e[13]=_*s+y*c+T*u+v*g,e[14]=_*i+y*l+T*d+v*x,e[15]=_*o+y*f+T*p+v*A,e}function Wk(e,t,r){let n=r[0],s=r[1],i=r[2],o,a,c,l,f,h,u,d,p,m,g,x;return t===e?(e[12]=t[0]*n+t[4]*s+t[8]*i+t[12],e[13]=t[1]*n+t[5]*s+t[9]*i+t[13],e[14]=t[2]*n+t[6]*s+t[10]*i+t[14],e[15]=t[3]*n+t[7]*s+t[11]*i+t[15]):(o=t[0],a=t[1],c=t[2],l=t[3],f=t[4],h=t[5],u=t[6],d=t[7],p=t[8],m=t[9],g=t[10],x=t[11],e[0]=o,e[1]=a,e[2]=c,e[3]=l,e[4]=f,e[5]=h,e[6]=u,e[7]=d,e[8]=p,e[9]=m,e[10]=g,e[11]=x,e[12]=o*n+f*s+p*i+t[12],e[13]=a*n+h*s+m*i+t[13],e[14]=c*n+u*s+g*i+t[14],e[15]=l*n+d*s+x*i+t[15]),e}function Hk(e,t,r){let n=r[0],s=r[1],i=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*s,e[5]=t[5]*s,e[6]=t[6]*s,e[7]=t[7]*s,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function Gk(e,t,r,n){let s=n[0],i=n[1],o=n[2],a=Math.sqrt(s*s+i*i+o*o),c,l,f,h,u,d,p,m,g,x,A,_,y,T,v,C,w,E,b,R,k,D,P,j;return a<1e-6?null:(a=1/a,s*=a,i*=a,o*=a,l=Math.sin(r),c=Math.cos(r),f=1-c,h=t[0],u=t[1],d=t[2],p=t[3],m=t[4],g=t[5],x=t[6],A=t[7],_=t[8],y=t[9],T=t[10],v=t[11],C=s*s*f+c,w=i*s*f+o*l,E=o*s*f-i*l,b=s*i*f-o*l,R=i*i*f+c,k=o*i*f+s*l,D=s*o*f+i*l,P=i*o*f-s*l,j=o*o*f+c,e[0]=h*C+m*w+_*E,e[1]=u*C+g*w+y*E,e[2]=d*C+x*w+T*E,e[3]=p*C+A*w+v*E,e[4]=h*b+m*R+_*k,e[5]=u*b+g*R+y*k,e[6]=d*b+x*R+T*k,e[7]=p*b+A*R+v*k,e[8]=h*D+m*P+_*j,e[9]=u*D+g*P+y*j,e[10]=d*D+x*P+T*j,e[11]=p*D+A*P+v*j,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function jk(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[4],o=t[5],a=t[6],c=t[7],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=i*s+l*n,e[5]=o*s+f*n,e[6]=a*s+h*n,e[7]=c*s+u*n,e[8]=l*s-i*n,e[9]=f*s-o*n,e[10]=h*s-a*n,e[11]=u*s-c*n,e}function qk(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[8],f=t[9],h=t[10],u=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s-l*n,e[1]=o*s-f*n,e[2]=a*s-h*n,e[3]=c*s-u*n,e[8]=i*n+l*s,e[9]=o*n+f*s,e[10]=a*n+h*s,e[11]=c*n+u*s,e}function Xk(e,t,r){let n=Math.sin(r),s=Math.cos(r),i=t[0],o=t[1],a=t[2],c=t[3],l=t[4],f=t[5],h=t[6],u=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=i*s+l*n,e[1]=o*s+f*n,e[2]=a*s+h*n,e[3]=c*s+u*n,e[4]=l*s-i*n,e[5]=f*s-o*n,e[6]=h*s-a*n,e[7]=u*s-c*n,e}function Yk(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r+r,a=n+n,c=s+s,l=r*o,f=n*o,h=n*a,u=s*o,d=s*a,p=s*c,m=i*o,g=i*a,x=i*c;return e[0]=1-h-p,e[1]=f+x,e[2]=u-g,e[3]=0,e[4]=f-x,e[5]=1-l-p,e[6]=d+m,e[7]=0,e[8]=u+g,e[9]=d-m,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function $k(e,t,r,n,s,i,o){let a=1/(r-t),c=1/(s-n),l=1/(i-o);return e[0]=i*2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i*2*c,e[6]=0,e[7]=0,e[8]=(r+t)*a,e[9]=(s+n)*c,e[10]=(o+i)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*i*2*l,e[15]=0,e}function vat(e,t,r,n,s){let i=1/Math.tan(t/2);if(e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,s!=null&&s!==1/0){let o=1/(n-s);e[10]=(s+n)*o,e[14]=2*s*n*o}else e[10]=-1,e[14]=-2*n;return e}var Kk=vat;function Eat(e,t,r,n,s,i,o){let a=1/(t-r),c=1/(n-s),l=1/(i-o);return e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+r)*a,e[13]=(s+n)*c,e[14]=(o+i)*l,e[15]=1,e}var Zk=Eat;function Jk(e,t,r,n){let s,i,o,a,c,l,f,h,u,d,p=t[0],m=t[1],g=t[2],x=n[0],A=n[1],_=n[2],y=r[0],T=r[1],v=r[2];return Math.abs(p-y)<1e-6&&Math.abs(m-T)<1e-6&&Math.abs(g-v)<1e-6?Tat(e):(h=p-y,u=m-T,d=g-v,s=1/Math.sqrt(h*h+u*u+d*d),h*=s,u*=s,d*=s,i=A*d-_*u,o=_*h-x*d,a=x*u-A*h,s=Math.sqrt(i*i+o*o+a*a),s?(s=1/s,i*=s,o*=s,a*=s):(i=0,o=0,a=0),c=u*a-d*o,l=d*i-h*a,f=h*o-u*i,s=Math.sqrt(c*c+l*l+f*f),s?(s=1/s,c*=s,l*=s,f*=s):(c=0,l=0,f=0),e[0]=i,e[1]=c,e[2]=h,e[3]=0,e[4]=o,e[5]=l,e[6]=u,e[7]=0,e[8]=a,e[9]=f,e[10]=d,e[11]=0,e[12]=-(i*p+o*m+a*g),e[13]=-(c*p+l*m+f*g),e[14]=-(h*p+u*m+d*g),e[15]=1,e)}function Mat(){let e=new Ze(4);return Ze!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function Qk(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e}function t6(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e}function e6(e){let t=e[0],r=e[1],n=e[2],s=e[3];return Math.sqrt(t*t+r*r+n*n+s*s)}function r6(e){let t=e[0],r=e[1],n=e[2],s=e[3];return t*t+r*r+n*n+s*s}function n6(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i;return o>0&&(o=1/Math.sqrt(o)),e[0]=r*o,e[1]=n*o,e[2]=s*o,e[3]=i*o,e}function s6(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function i6(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3];return e[0]=s+n*(r[0]-s),e[1]=i+n*(r[1]-i),e[2]=o+n*(r[2]-o),e[3]=a+n*(r[3]-a),e}function o6(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3];return e[0]=r[0]*n+r[4]*s+r[8]*i+r[12]*o,e[1]=r[1]*n+r[5]*s+r[9]*i+r[13]*o,e[2]=r[2]*n+r[6]*s+r[10]*i+r[14]*o,e[3]=r[3]*n+r[7]*s+r[11]*i+r[15]*o,e}function a6(e,t,r){let n=t[0],s=t[1],i=t[2],o=r[0],a=r[1],c=r[2],l=r[3],f=l*n+a*i-c*s,h=l*s+c*n-o*i,u=l*i+o*s-a*n,d=-o*n-a*s-c*i;return e[0]=f*l+d*-o+h*-c-u*-a,e[1]=h*l+d*-a+u*-o-f*-c,e[2]=u*l+d*-c+f*-a-h*-o,e[3]=t[3],e}var mKt=function(){let e=Mat();return function(t,r,n,s,i,o){let a,c;for(r||(r=4),n||(n=0),s?c=Math.min(s*r+n,t.length):c=t.length,a=n;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],e[3]=t[a+3],i(e,e,o),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2],t[a+3]=e[3];return t}}();var rv;(function(e){e[e.COL0ROW0=0]="COL0ROW0",e[e.COL0ROW1=1]="COL0ROW1",e[e.COL0ROW2=2]="COL0ROW2",e[e.COL0ROW3=3]="COL0ROW3",e[e.COL1ROW0=4]="COL1ROW0",e[e.COL1ROW1=5]="COL1ROW1",e[e.COL1ROW2=6]="COL1ROW2",e[e.COL1ROW3=7]="COL1ROW3",e[e.COL2ROW0=8]="COL2ROW0",e[e.COL2ROW1=9]="COL2ROW1",e[e.COL2ROW2=10]="COL2ROW2",e[e.COL2ROW3=11]="COL2ROW3",e[e.COL3ROW0=12]="COL3ROW0",e[e.COL3ROW1=13]="COL3ROW1",e[e.COL3ROW2=14]="COL3ROW2",e[e.COL3ROW3=15]="COL3ROW3"})(rv||(rv={}));var wat=45*Math.PI/180,Cat=1,tv=.1,ev=500,Pat=Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),qi=class extends dl{static get IDENTITY(){return Rat()}static get ZERO(){return Iat()}get ELEMENTS(){return 16}get RANK(){return 4}get INDICES(){return rv}constructor(t){super(-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0),arguments.length===1&&Array.isArray(t)?this.copy(t):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this[9]=t[9],this[10]=t[10],this[11]=t[11],this[12]=t[12],this[13]=t[13],this[14]=t[14],this[15]=t[15],this.check()}set(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this[4]=i,this[5]=o,this[6]=a,this[7]=c,this[8]=l,this[9]=f,this[10]=h,this[11]=u,this[12]=d,this[13]=p,this[14]=m,this[15]=g,this.check()}setRowMajor(t,r,n,s,i,o,a,c,l,f,h,u,d,p,m,g){return this[0]=t,this[1]=i,this[2]=l,this[3]=d,this[4]=r,this[5]=o,this[6]=f,this[7]=p,this[8]=n,this[9]=a,this[10]=h,this[11]=m,this[12]=s,this[13]=c,this[14]=u,this[15]=g,this.check()}toRowMajor(t){return t[0]=this[0],t[1]=this[4],t[2]=this[8],t[3]=this[12],t[4]=this[1],t[5]=this[5],t[6]=this[9],t[7]=this[13],t[8]=this[2],t[9]=this[6],t[10]=this[10],t[11]=this[14],t[12]=this[3],t[13]=this[7],t[14]=this[11],t[15]=this[15],t}identity(){return this.copy(Pat)}fromObject(t){return this.check()}fromQuaternion(t){return Yk(this,t),this.check()}frustum(t){let{left:r,right:n,bottom:s,top:i,near:o=tv,far:a=ev}=t;return a===1/0?Oat(this,r,n,s,i,o):$k(this,r,n,s,i,o,a),this.check()}lookAt(t){let{eye:r,center:n=[0,0,0],up:s=[0,1,0]}=t;return Jk(this,r,n,s),this.check()}ortho(t){let{left:r,right:n,bottom:s,top:i,near:o=tv,far:a=ev}=t;return Zk(this,r,n,s,i,o,a),this.check()}orthographic(t){let{fovy:r=wat,aspect:n=Cat,focalDistance:s=1,near:i=tv,far:o=ev}=t;c6(r);let a=r/2,c=s*Math.tan(a),l=c*n;return this.ortho({left:-l,right:l,bottom:-c,top:c,near:i,far:o})}perspective(t){let{fovy:r=45*Math.PI/180,aspect:n=1,near:s=.1,far:i=500}=t;return c6(r),Kk(this,r,n,s,i),this.check()}determinant(){return Vk(this)}getScale(t=[-0,-0,-0]){return t[0]=Math.sqrt(this[0]*this[0]+this[1]*this[1]+this[2]*this[2]),t[1]=Math.sqrt(this[4]*this[4]+this[5]*this[5]+this[6]*this[6]),t[2]=Math.sqrt(this[8]*this[8]+this[9]*this[9]+this[10]*this[10]),t}getTranslation(t=[-0,-0,-0]){return t[0]=this[12],t[1]=this[13],t[2]=this[14],t}getRotation(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=0,t[4]=this[4]*s,t[5]=this[5]*i,t[6]=this[6]*o,t[7]=0,t[8]=this[8]*s,t[9]=this[9]*i,t[10]=this[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}getRotationMatrix3(t,r){t=t||[-0,-0,-0,-0,-0,-0,-0,-0,-0],r=r||[-0,-0,-0];let n=this.getScale(r),s=1/n[0],i=1/n[1],o=1/n[2];return t[0]=this[0]*s,t[1]=this[1]*i,t[2]=this[2]*o,t[3]=this[4]*s,t[4]=this[5]*i,t[5]=this[6]*o,t[6]=this[8]*s,t[7]=this[9]*i,t[8]=this[10]*o,t}transpose(){return Uk(this,this),this.check()}invert(){return zk(this,this),this.check()}multiplyLeft(t){return Q3(this,t,this),this.check()}multiplyRight(t){return Q3(this,this,t),this.check()}rotateX(t){return jk(this,this,t),this.check()}rotateY(t){return qk(this,this,t),this.check()}rotateZ(t){return Xk(this,this,t),this.check()}rotateXYZ(t){return this.rotateX(t[0]).rotateY(t[1]).rotateZ(t[2])}rotateAxis(t,r){return Gk(this,this,t,r),this.check()}scale(t){return Hk(this,this,Array.isArray(t)?t:[t,t,t]),this.check()}translate(t){return Wk(this,this,t),this.check()}transform(t,r){return t.length===4?(r=o6(r||[-0,-0,-0,-0],t,this),ji(r,4),r):this.transformAsPoint(t,r)}transformAsPoint(t,r){let{length:n}=t,s;switch(n){case 2:s=Tk(r||[-0,-0],t,this);break;case 3:s=hl(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return ji(s,t.length),s}transformAsVector(t,r){let n;switch(t.length){case 2:n=vk(r||[-0,-0],t,this);break;case 3:n=Z1(r||[-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return ji(n,t.length),n}transformPoint(t,r){return this.transformAsPoint(t,r)}transformVector(t,r){return this.transformAsPoint(t,r)}transformDirection(t,r){return this.transformAsVector(t,r)}makeRotationX(t){return this.identity().rotateX(t)}makeTranslation(t,r,n){return this.identity().translate([t,r,n])}},ix,ox;function Iat(){return ix||(ix=new qi([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Object.freeze(ix)),ix}function Rat(){return ox||(ox=new qi,Object.freeze(ox)),ox}function c6(e){if(e>Math.PI*2)throw Error("expected radians")}function Oat(e,t,r,n,s,i){let o=2*i/(r-t),a=2*i/(s-n),c=(r+t)/(r-t),l=(s+n)/(s-n),f=-1,h=-1,u=-2*i;return e[0]=o,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=c,e[9]=l,e[10]=f,e[11]=h,e[12]=0,e[13]=0,e[14]=u,e[15]=0,e}function l6(){let e=new Ze(4);return Ze!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function f6(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function nv(e,t,r){r=r*.5;let n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e}function sv(e,t,r){let n=t[0],s=t[1],i=t[2],o=t[3],a=r[0],c=r[1],l=r[2],f=r[3];return e[0]=n*f+o*a+s*l-i*c,e[1]=s*f+o*c+i*a-n*l,e[2]=i*f+o*l+n*c-s*a,e[3]=o*f-n*a-s*c-i*l,e}function h6(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+o*a,e[1]=s*c+i*a,e[2]=i*c-s*a,e[3]=o*c-n*a,e}function u6(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c-i*a,e[1]=s*c+o*a,e[2]=i*c+n*a,e[3]=o*c-s*a,e}function d6(e,t,r){r*=.5;let n=t[0],s=t[1],i=t[2],o=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=n*c+s*a,e[1]=s*c-n*a,e[2]=i*c+o*a,e[3]=o*c-i*a,e}function p6(e,t){let r=t[0],n=t[1],s=t[2];return e[0]=r,e[1]=n,e[2]=s,e[3]=Math.sqrt(Math.abs(1-r*r-n*n-s*s)),e}function id(e,t,r,n){let s=t[0],i=t[1],o=t[2],a=t[3],c=r[0],l=r[1],f=r[2],h=r[3],u,d,p,m,g;return u=s*c+i*l+o*f+a*h,u<0&&(u=-u,c=-c,l=-l,f=-f,h=-h),1-u>1e-6?(d=Math.acos(u),g=Math.sin(d),p=Math.sin((1-n)*d)/g,m=Math.sin(n*d)/g):(p=1-n,m=n),e[0]=p*s+m*c,e[1]=p*i+m*l,e[2]=p*o+m*f,e[3]=p*a+m*h,e}function m6(e,t){let r=t[0],n=t[1],s=t[2],i=t[3],o=r*r+n*n+s*s+i*i,a=o?1/o:0;return e[0]=-r*a,e[1]=-n*a,e[2]=-s*a,e[3]=i*a,e}function g6(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}function iv(e,t){let r=t[0]+t[4]+t[8],n;if(r>0)n=Math.sqrt(r+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{let s=0;t[4]>t[0]&&(s=1),t[8]>t[s*3+s]&&(s=2);let i=(s+1)%3,o=(s+2)%3;n=Math.sqrt(t[s*3+s]-t[i*3+i]-t[o*3+o]+1),e[s]=.5*n,n=.5/n,e[3]=(t[i*3+o]-t[o*3+i])*n,e[i]=(t[i*3+s]+t[s*3+i])*n,e[o]=(t[o*3+s]+t[s*3+o])*n}return e}var x6=Qk;var _6=t6,y6=s6,A6=i6,b6=e6;var T6=r6;var v6=n6;var E6=function(){let e=q3(),t=X3(1,0,0),r=X3(0,1,0);return function(n,s,i){let o=Y3(s,i);return o<-.999999?(fl(e,t,s),Rk(e)<1e-6&&fl(e,r,s),Sk(e,e),nv(n,e,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(fl(e,s,i),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+o,v6(n,n))}}(),PKt=function(){let e=l6(),t=l6();return function(r,n,s,i,o,a){return id(e,n,o,a),id(t,s,i,a),id(r,e,t,2*a*(1-a)),r}}(),IKt=function(){let e=Ok();return function(t,r,n,s){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=s[0],e[4]=s[1],e[7]=s[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],v6(t,iv(t,e))}}();var Lat=[0,0,0,1],od=class extends Gi{constructor(t=0,r=0,n=0,s=1){super(-0,-0,-0,-0),Array.isArray(t)&&arguments.length===1?this.copy(t):this.set(t,r,n,s)}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}set(t,r,n,s){return this[0]=t,this[1]=r,this[2]=n,this[3]=s,this.check()}fromObject(t){return this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this.check()}fromMatrix3(t){return iv(this,t),this.check()}fromAxisRotation(t,r){return nv(this,t,r),this.check()}identity(){return f6(this),this.check()}setAxisAngle(t,r){return this.fromAxisRotation(t,r)}get ELEMENTS(){return 4}get x(){return this[0]}set x(t){this[0]=bt(t)}get y(){return this[1]}set y(t){this[1]=bt(t)}get z(){return this[2]}set z(t){this[2]=bt(t)}get w(){return this[3]}set w(t){this[3]=bt(t)}len(){return b6(this)}lengthSquared(){return T6(this)}dot(t){return y6(this,t)}rotationTo(t,r){return E6(this,t,r),this.check()}add(t){return x6(this,this,t),this.check()}calculateW(){return p6(this,this),this.check()}conjugate(){return g6(this,this),this.check()}invert(){return m6(this,this),this.check()}lerp(t,r,n){return n===void 0?this.lerp(this,t,r):(A6(this,t,r,n),this.check())}multiplyRight(t){return sv(this,this,t),this.check()}multiplyLeft(t){return sv(this,t,this),this.check()}normalize(){let t=this.len(),r=t>0?1/t:0;return this[0]=this[0]*r,this[1]=this[1]*r,this[2]=this[2]*r,this[3]=this[3]*r,t===0&&(this[3]=1),this.check()}rotateX(t){return h6(this,this,t),this.check()}rotateY(t){return u6(this,this,t),this.check()}rotateZ(t){return d6(this,this,t),this.check()}scale(t){return _6(this,this,t),this.check()}slerp(t,r,n){let s,i,o;switch(arguments.length){case 1:({start:s=Lat,target:i,ratio:o}=t);break;case 2:s=this,i=t,o=r;break;default:s=t,i=r,o=n}return id(this,s,i,o),this.check()}transformVector4(t,r=new ul){return a6(r,t,this),ji(r,4)}lengthSq(){return this.lengthSquared()}setFromAxisAngle(t,r){return this.setAxisAngle(t,r)}premultiply(t){return this.multiplyLeft(t)}multiply(t){return this.multiplyRight(t)}};var Ws=class{json;buffer;featuresLength=0;_cachedTypedArrays={};constructor(t,r){this.json=t,this.buffer=r}getExtension(t){return this.json.extensions&&this.json.extensions[t]}hasProperty(t){return Boolean(this.json[t])}getGlobalProperty(t,r=ct.UNSIGNED_INT,n=1){let s=this.json[t];return s&&Number.isFinite(s.byteOffset)?this._getTypedArrayFromBinary(t,r,n,1,s.byteOffset):s}getPropertyArray(t,r,n){let s=this.json[t];return s&&Number.isFinite(s.byteOffset)?("componentType"in s&&(r=Ke.fromName(s.componentType)),this._getTypedArrayFromBinary(t,r,n,this.featuresLength,s.byteOffset)):this._getTypedArrayFromArray(t,r,s)}getProperty(t,r,n,s,i){let o=this.json[t];if(!o)return o;let a=this.getPropertyArray(t,r,n);if(n===1)return a[s];for(let c=0;c<n;++c)i[c]=a[n*s+c];return i}_getTypedArrayFromBinary(t,r,n,s,i){let o=this._cachedTypedArrays,a=o[t];return a||(a=Ke.createTypedArray(r,this.buffer.buffer,this.buffer.byteOffset+i,s*n),o[t]=a),a}_getTypedArrayFromArray(t,r,n){let s=this._cachedTypedArrays,i=s[t];return i||(i=Ke.createTypedArray(r,n),s[t]=i),i}};var Bat={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Nat={SCALAR:(e,t)=>e[t],VEC2:(e,t)=>[e[2*t+0],e[2*t+1]],VEC3:(e,t)=>[e[3*t+0],e[3*t+1],e[3*t+2]],VEC4:(e,t)=>[e[4*t+0],e[4*t+1],e[4*t+2],e[4*t+3]],MAT2:(e,t)=>[e[4*t+0],e[4*t+1],e[4*t+2],e[4*t+3]],MAT3:(e,t)=>[e[9*t+0],e[9*t+1],e[9*t+2],e[9*t+3],e[9*t+4],e[9*t+5],e[9*t+6],e[9*t+7],e[9*t+8]],MAT4:(e,t)=>[e[16*t+0],e[16*t+1],e[16*t+2],e[16*t+3],e[16*t+4],e[16*t+5],e[16*t+6],e[16*t+7],e[16*t+8],e[16*t+9],e[16*t+10],e[16*t+11],e[16*t+12],e[16*t+13],e[16*t+14],e[16*t+15]]},Fat={SCALAR:(e,t,r)=>{t[r]=e},VEC2:(e,t,r)=>{t[2*r+0]=e[0],t[2*r+1]=e[1]},VEC3:(e,t,r)=>{t[3*r+0]=e[0],t[3*r+1]=e[1],t[3*r+2]=e[2]},VEC4:(e,t,r)=>{t[4*r+0]=e[0],t[4*r+1]=e[1],t[4*r+2]=e[2],t[4*r+3]=e[3]},MAT2:(e,t,r)=>{t[4*r+0]=e[0],t[4*r+1]=e[1],t[4*r+2]=e[2],t[4*r+3]=e[3]},MAT3:(e,t,r)=>{t[9*r+0]=e[0],t[9*r+1]=e[1],t[9*r+2]=e[2],t[9*r+3]=e[3],t[9*r+4]=e[4],t[9*r+5]=e[5],t[9*r+6]=e[6],t[9*r+7]=e[7],t[9*r+8]=e[8],t[9*r+9]=e[9]},MAT4:(e,t,r)=>{t[16*r+0]=e[0],t[16*r+1]=e[1],t[16*r+2]=e[2],t[16*r+3]=e[3],t[16*r+4]=e[4],t[16*r+5]=e[5],t[16*r+6]=e[6],t[16*r+7]=e[7],t[16*r+8]=e[8],t[16*r+9]=e[9],t[16*r+10]=e[10],t[16*r+11]=e[11],t[16*r+12]=e[12],t[16*r+13]=e[13],t[16*r+14]=e[14],t[16*r+15]=e[15]}};function M6(e,t,r,n){let{componentType:s}=e;lt(e.componentType);let i=typeof s=="string"?Ke.fromName(s):s,o=Bat[e.type],a=Nat[e.type],c=Fat[e.type];return r+=e.byteOffset,{values:Ke.createTypedArray(i,t,r,o*n),type:i,size:o,unpacker:a,packer:c}}var rs=e=>e!==void 0;function S6(e,t,r){if(!t)return null;let n=e.getExtension("3DTILES_batch_table_hierarchy"),s=t.HIERARCHY;return s&&(console.warn("3D Tile Parser: HIERARCHY is deprecated. Use 3DTILES_batch_table_hierarchy."),t.extensions=t.extensions||{},t.extensions["3DTILES_batch_table_hierarchy"]=s,n=s),n?Dat(n,r):null}function Dat(e,t){let r,n,s,i=e.instancesLength,o=e.classes,a=e.classIds,c=e.parentCounts,l=e.parentIds,f=i;rs(a.byteOffset)&&(a.componentType=defaultValue(a.componentType,GL.UNSIGNED_SHORT),a.type=AttributeType.SCALAR,s=getBinaryAccessor(a),a=s.createArrayBufferView(t.buffer,t.byteOffset+a.byteOffset,i));let h;if(rs(c))for(rs(c.byteOffset)&&(c.componentType=defaultValue(c.componentType,GL.UNSIGNED_SHORT),c.type=AttributeType.SCALAR,s=getBinaryAccessor(c),c=s.createArrayBufferView(t.buffer,t.byteOffset+c.byteOffset,i)),h=new Uint16Array(i),f=0,r=0;r<i;++r)h[r]=f,f+=c[r];rs(l)&&rs(l.byteOffset)&&(l.componentType=defaultValue(l.componentType,GL.UNSIGNED_SHORT),l.type=AttributeType.SCALAR,s=getBinaryAccessor(l),l=s.createArrayBufferView(t.buffer,t.byteOffset+l.byteOffset,f));let u=o.length;for(r=0;r<u;++r){let g=o[r].length,x=o[r].instances,A=getBinaryProperties(g,x,t);o[r].instances=combine(A,x)}let d=new Array(u).fill(0),p=new Uint16Array(i);for(r=0;r<i;++r)n=a[r],p[r]=d[n],++d[n];let m={classes:o,classIds:a,classIndexes:p,parentCounts:c,parentIndexes:h,parentIds:l};return zat(m),m}function pl(e,t,r){if(!e)return;let n=e.parentCounts;return e.parentIds?r(e,t):n>0?kat(e,t,r):Uat(e,t,r)}function kat(e,t,r){let n=e.classIds,s=e.parentCounts,i=e.parentIds,o=e.parentIndexes,a=n.length,c=scratchVisited;c.length=Math.max(c.length,a);let l=++marker,f=scratchStack;for(f.length=0,f.push(t);f.length>0;){if(t=f.pop(),c[t]===l)continue;c[t]=l;let h=r(e,t);if(rs(h))return h;let u=s[t],d=o[t];for(let p=0;p<u;++p){let m=i[d+p];m!==t&&f.push(m)}}return null}function Uat(e,t,r){let n=!0;for(;n;){let s=r(e,t);if(rs(s))return s;let i=e.parentIds[t];n=i!==t,t=i}throw new Error("traverseHierarchySingleParent")}function zat(e){let t=[],n=e.classIds.length;for(let s=0;s<n;++s)w6(e,s,stack)}function w6(e,t,r){let n=e.parentCounts,s=e.parentIds,i=e.parentIndexes,a=e.classIds.length;if(!rs(s))return;assert(t<a,`Parent index ${t} exceeds the total number of instances: ${a}`),assert(r.indexOf(t)===-1,"Circular dependency detected in the batch table hierarchy."),r.push(t);let c=rs(n)?n[t]:1,l=rs(n)?i[t]:t;for(let f=0;f<c;++f){let h=s[l+f];h!==t&&w6(e,h,r)}r.pop(t)}function br(e){return e!=null}var ax=(e,t)=>e,Vat={HIERARCHY:!0,extensions:!0,extras:!0},ha=class{json;binary;featureCount;_extensions;_properties;_binaryProperties;_hierarchy;constructor(t,r,n,s={}){lt(n>=0),this.json=t||{},this.binary=r,this.featureCount=n,this._extensions=this.json?.extensions||{},this._properties={};for(let i in this.json)Vat[i]||(this._properties[i]=this.json[i]);this._binaryProperties=this._initializeBinaryProperties(),s["3DTILES_batch_table_hierarchy"]&&(this._hierarchy=S6(this,this.json,this.binary))}getExtension(t){return this.json&&this.json.extensions&&this.json.extensions[t]}memorySizeInBytes(){return 0}isClass(t,r){if(this._checkBatchId(t),lt(typeof r=="string",r),this._hierarchy){let n=pl(this._hierarchy,t,(s,i)=>{let o=s.classIds[i];return s.classes[o].name===r});return br(n)}return!1}isExactClass(t,r){return lt(typeof r=="string",r),this.getExactClassName(t)===r}getExactClassName(t){if(this._checkBatchId(t),this._hierarchy){let r=this._hierarchy.classIds[t];return this._hierarchy.classes[r].name}}hasProperty(t,r){return this._checkBatchId(t),lt(typeof r=="string",r),br(this._properties[r])||this._hasPropertyInHierarchy(t,r)}getPropertyNames(t,r){this._checkBatchId(t),r=br(r)?r:[],r.length=0;let n=Object.keys(this._properties);return r.push(...n),this._hierarchy&&this._getPropertyNamesInHierarchy(t,r),r}getProperty(t,r){if(this._checkBatchId(t),lt(typeof r=="string",r),this._binaryProperties){let s=this._binaryProperties[r];if(br(s))return this._getBinaryProperty(s,t)}let n=this._properties[r];if(br(n))return ax(n[t],!0);if(this._hierarchy){let s=this._getHierarchyProperty(t,r);if(br(s))return s}}setProperty(t,r,n){let s=this.featureCount;if(this._checkBatchId(t),lt(typeof r=="string",r),this._binaryProperties){let o=this._binaryProperties[r];if(o){this._setBinaryProperty(o,t,n);return}}if(this._hierarchy&&this._setHierarchyProperty(this,t,r,n))return;let i=this._properties[r];br(i)||(this._properties[r]=new Array(s),i=this._properties[r]),i[t]=ax(n,!0)}_checkBatchId(t){if(!(t>=0&&t<this.featureCount))throw new Error("batchId not in range [0, featureCount - 1].")}_getBinaryProperty(t,r){return t.unpack(t.typedArray,r)}_setBinaryProperty(t,r,n){t.pack(n,t.typedArray,r)}_initializeBinaryProperties(){let t=null;for(let r in this._properties){let n=this._properties[r],s=this._initializeBinaryProperty(r,n);s&&(t=t||{},t[r]=s)}return t}_initializeBinaryProperty(t,r){if("byteOffset"in r){let n=r;lt(this.binary,`Property ${t} requires a batch table binary.`),lt(n.type,`Property ${t} requires a type.`);let s=M6(n,this.binary.buffer,this.binary.byteOffset|0,this.featureCount);return{typedArray:s.values,componentCount:s.size,unpack:s.unpacker,pack:s.packer}}return null}_hasPropertyInHierarchy(t,r){if(!this._hierarchy)return!1;let n=pl(this._hierarchy,t,(s,i)=>{let o=s.classIds[i],a=s.classes[o].instances;return br(a[r])});return br(n)}_getPropertyNamesInHierarchy(t,r){pl(this._hierarchy,t,(n,s)=>{let i=n.classIds[s],o=n.classes[i].instances;for(let a in o)o.hasOwnProperty(a)&&r.indexOf(a)===-1&&r.push(a)})}_getHierarchyProperty(t,r){return pl(this._hierarchy,t,(n,s)=>{let i=n.classIds[s],o=n.classes[i],a=n.classIndexes[s],c=o.instances[r];return br(c)?br(c.typedArray)?this._getBinaryProperty(c,a):ax(c[a],!0):null})}_setHierarchyProperty(t,r,n,s){let i=pl(this._hierarchy,r,(o,a)=>{let c=o.classIds[a],l=o.classes[c],f=o.classIndexes[a],h=l.instances[n];return br(h)?(lt(a===r,`Inherited property "${n}" is read-only.`),br(h.typedArray)?this._setBinaryProperty(h,f,s):h[f]=ax(s,!0),!0):!1});return br(i)}};function Xi(e,t,r=0){let n=new DataView(t);if(e.magic=n.getUint32(r,!0),r+=4,e.version=n.getUint32(r,!0),r+=4,e.byteLength=n.getUint32(r,!0),r+=4,e.version!==1)throw new Error(`3D Tile Version ${e.version} not supported`);return r}var ml=4,C6="b3dm tile in legacy format.";function gl(e,t,r){let n=new DataView(t),s;e.header=e.header||{};let i=n.getUint32(r,!0);r+=ml;let o=n.getUint32(r,!0);r+=ml;let a=n.getUint32(r,!0);r+=ml;let c=n.getUint32(r,!0);return r+=ml,a>=570425344?(r-=ml*2,s=i,a=o,c=0,i=0,o=0,console.warn(C6)):c>=570425344&&(r-=ml,s=a,a=i,c=o,i=0,o=0,console.warn(C6)),e.header.featureTableJsonByteLength=i,e.header.featureTableBinaryByteLength=o,e.header.batchTableJsonByteLength=a,e.header.batchTableBinaryByteLength=c,e.header.batchLength=s,r}function xl(e,t,r,n){return r=Wat(e,t,r,n),r=Hat(e,t,r,n),r}function Wat(e,t,r,n){let{featureTableJsonByteLength:s,featureTableBinaryByteLength:i,batchLength:o}=e.header||{};if(e.featureTableJson={BATCH_LENGTH:o||0},s&&s>0){let a=N3(t,r,s);e.featureTableJson=JSON.parse(a)}return r+=s||0,e.featureTableBinary=new Uint8Array(t,r,i),r+=i||0,r}function Hat(e,t,r,n){let{batchTableJsonByteLength:s,batchTableBinaryByteLength:i}=e.header||{};if(s&&s>0){let o=N3(t,r,s);e.batchTableJson=JSON.parse(o),r+=s,i&&i>0&&(e.batchTableBinary=new Uint8Array(t,r,i),e.batchTableBinary=new Uint8Array(e.batchTableBinary),r+=i)}return r}function ov(e,t,r){if(!t&&(!e||!e.batchIds||!r))return null;let{batchIds:n,isRGB565:s,pointCount:i=0}=e;if(n&&r){let o=new Uint8ClampedArray(i*3);for(let a=0;a<i;a++){let c=n[a],f=r.getProperty(c,"dimensions").map(h=>h*255);o[a*3]=f[0],o[a*3+1]=f[1],o[a*3+2]=f[2]}return{type:ct.UNSIGNED_BYTE,value:o,size:3,normalized:!0}}if(t&&s){let o=new Uint8ClampedArray(i*3);for(let a=0;a<i;a++){let c=W3(t[a]);o[a*3]=c[0],o[a*3+1]=c[1],o[a*3+2]=c[2]}return{type:ct.UNSIGNED_BYTE,value:o,size:3,normalized:!0}}return t&&t.length===i*3?{type:ct.UNSIGNED_BYTE,value:t,size:3,normalized:!0}:{type:ct.UNSIGNED_BYTE,value:t||new Uint8ClampedArray,size:4,normalized:!0}}var P6=new It;function I6(e,t){if(!t)return null;if(e.isOctEncoded16P){let r=new Float32Array((e.pointsLength||0)*3);for(let n=0;n<(e.pointsLength||0);n++)H3(t[n*2],t[n*2+1],P6),P6.toArray(r,n*3);return{type:ct.FLOAT,size:2,value:r}}return{type:ct.FLOAT,size:2,value:t}}function R6(e,t,r){return e.isQuantized?r["3d-tiles"]&&r["3d-tiles"].decodeQuantizedPositions?(e.isQuantized=!1,Gat(e,t)):{type:ct.UNSIGNED_SHORT,value:t,size:3,normalized:!0}:t}function Gat(e,t){let r=new It,n=new Float32Array(e.pointCount*3);for(let s=0;s<e.pointCount;s++)r.set(t[s*3],t[s*3+1],t[s*3+2]).scale(1/e.quantizedRange).multiply(e.quantizedVolumeScale).add(e.quantizedVolumeOffset).toArray(n,s*3);return n}async function O6(e,t,r,n,s){r=Xi(e,t,r),r=gl(e,t,r),r=xl(e,t,r,n),jat(e);let{featureTable:i,batchTable:o}=qat(e);return await Zat(e,i,o,n,s),Xat(e,i,n),Yat(e,i,o),$at(e,i),r}function jat(e){e.attributes={positions:null,colors:null,normals:null,batchIds:null},e.isQuantized=!1,e.isTranslucent=!1,e.isRGB565=!1,e.isOctEncoded16P=!1}function qat(e){let t=new Ws(e.featureTableJson,e.featureTableBinary),r=t.getGlobalProperty("POINTS_LENGTH");if(!Number.isFinite(r))throw new Error("POINTS_LENGTH must be defined");t.featuresLength=r,e.featuresLength=r,e.pointsLength=r,e.pointCount=r,e.rtcCenter=t.getGlobalProperty("RTC_CENTER",ct.FLOAT,3);let n=Kat(e,t);return{featureTable:t,batchTable:n}}function Xat(e,t,r){if(e.attributes=e.attributes||{positions:null,colors:null,normals:null,batchIds:null},!e.attributes.positions){if(t.hasProperty("POSITION"))e.attributes.positions=t.getPropertyArray("POSITION",ct.FLOAT,3);else if(t.hasProperty("POSITION_QUANTIZED")){let n=t.getPropertyArray("POSITION_QUANTIZED",ct.UNSIGNED_SHORT,3);if(e.isQuantized=!0,e.quantizedRange=(1<<16)-1,e.quantizedVolumeScale=t.getGlobalProperty("QUANTIZED_VOLUME_SCALE",ct.FLOAT,3),!e.quantizedVolumeScale)throw new Error("QUANTIZED_VOLUME_SCALE must be defined for quantized positions.");if(e.quantizedVolumeOffset=t.getGlobalProperty("QUANTIZED_VOLUME_OFFSET",ct.FLOAT,3),!e.quantizedVolumeOffset)throw new Error("QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.");e.attributes.positions=R6(e,n,r)}}if(!e.attributes.positions)throw new Error("Either POSITION or POSITION_QUANTIZED must be defined.")}function Yat(e,t,r){if(e.attributes=e.attributes||{positions:null,colors:null,normals:null,batchIds:null},!e.attributes.colors){let n=null;t.hasProperty("RGBA")?(n=t.getPropertyArray("RGBA",ct.UNSIGNED_BYTE,4),e.isTranslucent=!0):t.hasProperty("RGB")?n=t.getPropertyArray("RGB",ct.UNSIGNED_BYTE,3):t.hasProperty("RGB565")&&(n=t.getPropertyArray("RGB565",ct.UNSIGNED_SHORT,1),e.isRGB565=!0),e.attributes.colors=ov(e,n,r)}t.hasProperty("CONSTANT_RGBA")&&(e.constantRGBA=t.getGlobalProperty("CONSTANT_RGBA",ct.UNSIGNED_BYTE,4))}function $at(e,t){if(e.attributes=e.attributes||{positions:null,colors:null,normals:null,batchIds:null},!e.attributes.normals){let r=null;t.hasProperty("NORMAL")?r=t.getPropertyArray("NORMAL",ct.FLOAT,3):t.hasProperty("NORMAL_OCT16P")&&(r=t.getPropertyArray("NORMAL_OCT16P",ct.UNSIGNED_BYTE,2),e.isOctEncoded16P=!0),e.attributes.normals=I6(e,r)}}function Kat(e,t){let r=null;if(!e.batchIds&&t.hasProperty("BATCH_ID")&&(e.batchIds=t.getPropertyArray("BATCH_ID",ct.UNSIGNED_SHORT,1),e.batchIds)){let n=t.getGlobalProperty("BATCH_LENGTH");if(!n)throw new Error("Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.");let{batchTableJson:s,batchTableBinary:i}=e;r=new ha(s,i,n)}return r}async function Zat(e,t,r,n,s){let i,o,a,c=e.batchTableJson&&e.batchTableJson.extensions&&e.batchTableJson.extensions["3DTILES_draco_point_compression"];c&&(a=c.properties);let l=t.getExtension("3DTILES_draco_point_compression");if(l){o=l.properties;let h=l.byteOffset,u=l.byteLength;if(!o||!Number.isFinite(h)||!u)throw new Error("Draco properties, byteOffset, and byteLength must be defined");i=(e.featureTableBinary||[]).slice(h,h+u),e.hasPositions=Number.isFinite(o.POSITION),e.hasColors=Number.isFinite(o.RGB)||Number.isFinite(o.RGBA),e.hasNormals=Number.isFinite(o.NORMAL),e.hasBatchIds=Number.isFinite(o.BATCH_ID),e.isTranslucent=Number.isFinite(o.RGBA)}if(!i)return!0;let f={buffer:i,properties:{...o,...a},featureTableProperties:o,batchTableProperties:a,dequantizeInShader:!1};return await Jat(e,f,n,s)}async function Jat(e,t,r,n){if(!n)return;let s={...r,draco:{...r?.draco,extraAttributes:t.batchTableProperties||{}}};delete s["3d-tiles"];let i=await vr(t.buffer,j0,s,n),o=i.attributes.POSITION&&i.attributes.POSITION.value,a=i.attributes.COLOR_0&&i.attributes.COLOR_0.value,c=i.attributes.NORMAL&&i.attributes.NORMAL.value,l=i.attributes.BATCH_ID&&i.attributes.BATCH_ID.value,f=o&&i.attributes.POSITION.value.quantization,h=c&&i.attributes.NORMAL.value.quantization;if(f){let d=i.POSITION.data.quantization,p=d.range;e.quantizedVolumeScale=new It(p,p,p),e.quantizedVolumeOffset=new It(d.minValues),e.quantizedRange=(1<<d.quantizationBits)-1,e.isQuantizedDraco=!0}h&&(e.octEncodedRange=(1<<i.NORMAL.data.quantization.quantizationBits)-1,e.isOctEncodedDraco=!0);let u={};if(t.batchTableProperties)for(let d of Object.keys(t.batchTableProperties))i.attributes[d]&&i.attributes[d].value&&(u[d.toLowerCase()]=i.attributes[d].value);e.attributes={positions:o,colors:ov(e,a,void 0),normals:c,batchIds:l,...u}}var cx={URI:0,EMBEDDED:1};function lx(e,t,r,n){e.rotateYtoZ=!0;let s=(e.byteOffset||0)+(e.byteLength||0)-r;if(s===0)throw new Error("glTF byte length must be greater than 0.");return e.gltfUpAxis=n?.["3d-tiles"]&&n["3d-tiles"].assetGltfUpAxis?n["3d-tiles"].assetGltfUpAxis:"Y",e.gltfArrayBuffer=Qi(t,r,s),e.gltfByteOffset=0,e.gltfByteLength=s,r%4===0||console.warn(`${e.type}: embedded glb is not aligned to a 4-byte boundary.`),(e.byteOffset||0)+(e.byteLength||0)}async function fx(e,t,r,n){let s=r?.["3d-tiles"]||{};if(Qat(e,t,r),s.loadGLTF){if(!n)return;if(e.gltfUrl){let{fetch:i}=n,o=await i(e.gltfUrl,r);e.gltfArrayBuffer=await o.arrayBuffer(),e.gltfByteOffset=0}if(e.gltfArrayBuffer){let i=await vr(e.gltfArrayBuffer,Ls,r,n);e.gltf=na(i),e.gpuMemoryUsageInBytes=zu(e.gltf),delete e.gltfArrayBuffer,delete e.gltfByteOffset,delete e.gltfByteLength}}}function Qat(e,t,r){switch(t){case cx.URI:if(e.gltfArrayBuffer){let n=new Uint8Array(e.gltfArrayBuffer,e.gltfByteOffset),i=new TextDecoder().decode(n);e.gltfUrl=i.replace(/[\s\0]+$/,"")}delete e.gltfArrayBuffer,delete e.gltfByteOffset,delete e.gltfByteLength;break;case cx.EMBEDDED:break;default:throw new Error("b3dm: Illegal glTF format field")}}async function L6(e,t,r,n,s){r=tct(e,t,r,n,s),await fx(e,cx.EMBEDDED,n,s);let i=e?.gltf?.extensions;return i&&i.CESIUM_RTC&&(e.rtcCenter=i.CESIUM_RTC.center),r}function tct(e,t,r,n,s){r=Xi(e,t,r),r=gl(e,t,r),r=xl(e,t,r,n),r=lx(e,t,r,n);let i=new Ws(e.featureTableJson,e.featureTableBinary);return e.rtcCenter=i.getGlobalProperty("RTC_CENTER",ct.FLOAT,3),r}async function B6(e,t,r,n,s){return r=ect(e,t,r,n,s),await fx(e,e.gltfFormat||0,n,s),r}function ect(e,t,r,n,s){if(r=Xi(e,t,r),e.version!==1)throw new Error(`Instanced 3D Model version ${e.version} is not supported`);r=gl(e,t,r);let i=new DataView(t);if(e.gltfFormat=i.getUint32(r,!0),r+=4,r=xl(e,t,r,n),r=lx(e,t,r,n),!e?.header?.featureTableJsonByteLength||e.header.featureTableJsonByteLength===0)throw new Error("i3dm parser: featureTableJsonByteLength is zero.");let o=new Ws(e.featureTableJson,e.featureTableBinary),a=o.getGlobalProperty("INSTANCES_LENGTH");if(o.featuresLength=a,!Number.isFinite(a))throw new Error("i3dm parser: INSTANCES_LENGTH must be defined");e.eastNorthUp=o.getGlobalProperty("EAST_NORTH_UP"),e.rtcCenter=o.getGlobalProperty("RTC_CENTER",ct.FLOAT,3);let c=new ha(e.batchTableJson,e.batchTableBinary,a);return rct(e,o,c,a),r}function rct(e,t,r,n){let s=new Array(n),i=new It,o=new It,a=new It,c=new It,l=new fa,f=new od,h=new It,u={},d=new qi,p=[],m=[],g=[],x=[];for(let A=0;A<n;A++){let _;if(t.hasProperty("POSITION"))_=t.getProperty("POSITION",ct.FLOAT,3,A,i);else if(t.hasProperty("POSITION_QUANTIZED")){_=t.getProperty("POSITION_QUANTIZED",ct.UNSIGNED_SHORT,3,A,i);let b=t.getGlobalProperty("QUANTIZED_VOLUME_OFFSET",ct.FLOAT,3);if(!b)throw new Error("i3dm parser: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.");let R=t.getGlobalProperty("QUANTIZED_VOLUME_SCALE",ct.FLOAT,3);if(!R)throw new Error("i3dm parser: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.");let k=65535;for(let D=0;D<3;D++)_[D]=_[D]/k*R[D]+b[D]}if(!_)throw new Error("i3dm: POSITION or POSITION_QUANTIZED must be defined for each instance.");i.copy(_),u.translation=i,e.normalUp=t.getProperty("NORMAL_UP",ct.FLOAT,3,A,p),e.normalRight=t.getProperty("NORMAL_RIGHT",ct.FLOAT,3,A,m);let y=!1;if(e.normalUp){if(!e.normalRight)throw new Error("i3dm: Custom orientation requires both NORMAL_UP and NORMAL_RIGHT.");e.hasCustomOrientation=!0}else{if(e.octNormalUp=t.getProperty("NORMAL_UP_OCT32P",ct.UNSIGNED_SHORT,2,A,p),e.octNormalRight=t.getProperty("NORMAL_RIGHT_OCT32P",ct.UNSIGNED_SHORT,2,A,m),e.octNormalUp)throw e.octNormalRight?new Error("i3dm: oct-encoded orientation not implemented"):new Error("i3dm: oct-encoded orientation requires NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P");e.eastNorthUp?(ut.WGS84.eastNorthUpToFixedFrame(i,d),d.getRotationMatrix3(l)):l.identity()}y&&(c.copy(o).cross(a).normalize(),l.setColumn(0,o),l.setColumn(1,a),l.setColumn(2,c)),f.fromMatrix3(l),u.rotation=f,h.set(1,1,1);let T=t.getProperty("SCALE",ct.FLOAT,1,A,g);Number.isFinite(T)&&h.multiplyByScalar(T);let v=t.getProperty("SCALE_NON_UNIFORM",ct.FLOAT,3,A,p);v&&h.scale(v),u.scale=h;let C=t.getProperty("BATCH_ID",ct.UNSIGNED_SHORT,1,A,x);C===void 0&&(C=A);let w=new qi().fromQuaternion(u.rotation);d.identity(),d.translate(u.translation),d.multiplyRight(w),d.scale(u.scale);let E=d.clone();s[A]={modelMatrix:E,batchId:C}}e.instances=s}async function N6(e,t,r,n,s,i){r=Xi(e,t,r);let o=new DataView(t);for(e.tilesLength=o.getUint32(r,!0),r+=4,e.tiles=[];e.tiles.length<e.tilesLength&&(e.byteLength||0)-r>12;){let a={shape:"tile3d"};e.tiles.push(a),r=await i(t,r,n,s,a)}return r}async function F6(e,t,r,n){if(e.rotateYtoZ=!0,e.gltfUpAxis=r?.["3d-tiles"]?.assetGltfUpAxis?r["3d-tiles"].assetGltfUpAxis:"Y",r?.["3d-tiles"]?.loadGLTF){if(!n)return t.byteLength;let s=await vr(t,Ls,r,n);e.gltf=na(s),e.gpuMemoryUsageInBytes=zu(e.gltf)}else e.gltfArrayBuffer=t;return t.byteLength}async function av(e,t=0,r,n,s={shape:"tile3d"}){switch(s.byteOffset=t,s.type=ZD(e,t),s.type){case aa.COMPOSITE:return await N6(s,e,t,r,n,av);case aa.BATCHED_3D_MODEL:return await L6(s,e,t,r,n);case aa.GLTF:return await F6(s,e,r,n);case aa.INSTANCED_3D_MODEL:return await B6(s,e,t,r,n);case aa.POINT_CLOUD:return await O6(s,e,t,r,n);default:throw new Error(`3DTileLoader: unknown type ${s.type}`)}}async function cv(e,t,r){if(new Uint32Array(e.slice(0,4))[0]!==1952609651)throw new Error("Wrong subtree file magic number");if(new Uint32Array(e.slice(4,8))[0]!==1)throw new Error("Wrong subtree file verson, must be 1");let i=D6(e.slice(8,16)),o=new Uint8Array(e,24,i),c=new TextDecoder("utf8").decode(o),l=JSON.parse(c),f=D6(e.slice(16,24)),h=new ArrayBuffer(0);if(f&&(h=e.slice(24+i)),await hx(l,l.tileAvailability,h,r),Array.isArray(l.contentAvailability))for(let u of l.contentAvailability)await hx(l,u,h,r);else await hx(l,l.contentAvailability,h,r);return await hx(l,l.childSubtreeAvailability,h,r),l}async function hx(e,t,r,n){let s=Number.isFinite(t.bitstream)?t.bitstream:t.bufferView;if(typeof s!="number")return;let i=e.bufferViews[s],o=e.buffers[i.buffer];if(!n?.baseUrl)throw new Error("Url is not provided");if(!n.fetch)throw new Error("fetch is not provided");if(o.uri){let c=`${n?.baseUrl||""}/${o.uri}`,f=await(await n.fetch(c)).arrayBuffer();t.explicitBitstream=new Uint8Array(f,i.byteOffset,i.byteLength);return}let a=e.buffers.slice(0,i.buffer).reduce((c,l)=>c+l.byteLength,0);t.explicitBitstream=new Uint8Array(r.slice(a,a+o.byteLength),i.byteOffset,i.byteLength)}function D6(e){let t=new DataView(e),r=t.getUint32(0,!0),n=t.getUint32(4,!0);return r+2**32*n}var ux={dataType:null,batchType:null,id:"3d-tiles-subtree",name:"3D Tiles Subtree",module:"3d-tiles",version:X1,extensions:["subtree"],mimeTypes:["application/octet-stream"],tests:["subtree"],parse:cv,options:{}};var Zr=null;try{Zr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function zt(e,t,r){this.low=e|0,this.high=t|0,this.unsigned=!!r}zt.prototype.__isLong__;Object.defineProperty(zt.prototype,"__isLong__",{value:!0});function Je(e){return(e&&e.__isLong__)===!0}function k6(e){var t=Math.clz32(e&-e);return e?31-t:t}zt.isLong=Je;var U6={},z6={};function ua(e,t){var r,n,s;return t?(e>>>=0,(s=0<=e&&e<256)&&(n=z6[e],n)?n:(r=Tt(e,0,!0),s&&(z6[e]=r),r)):(e|=0,(s=-128<=e&&e<128)&&(n=U6[e],n)?n:(r=Tt(e,e<0?-1:0,!1),s&&(U6[e]=r),r))}zt.fromInt=ua;function Jr(e,t){if(isNaN(e))return t?Hs:vn;if(t){if(e<0)return Hs;if(e>=G6)return X6}else{if(e<=-W6)return Tr;if(e+1>=W6)return q6}return e<0?Jr(-e,t).neg():Tt(e%yl|0,e/yl|0,t)}zt.fromNumber=Jr;function Tt(e,t,r){return new zt(e,t,r)}zt.fromBits=Tt;var dx=Math.pow;function fv(e,t,r){if(e.length===0)throw Error("empty string");if(typeof t=="number"?(r=t,t=!1):t=!!t,e==="NaN"||e==="Infinity"||e==="+Infinity"||e==="-Infinity")return t?Hs:vn;if(r=r||10,r<2||36<r)throw RangeError("radix");var n;if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return fv(e.substring(1),t,r).neg();for(var s=Jr(dx(r,8)),i=vn,o=0;o<e.length;o+=8){var a=Math.min(8,e.length-o),c=parseInt(e.substring(o,o+a),r);if(a<8){var l=Jr(dx(r,a));i=i.mul(l).add(Jr(c))}else i=i.mul(s),i=i.add(Jr(c))}return i.unsigned=t,i}zt.fromString=fv;function En(e,t){return typeof e=="number"?Jr(e,t):typeof e=="string"?fv(e,t):Tt(e.low,e.high,typeof t=="boolean"?t:e.unsigned)}zt.fromValue=En;var V6=1<<16,nct=1<<24,yl=V6*V6,G6=yl*yl,W6=G6/2,H6=ua(nct),vn=ua(0);zt.ZERO=vn;var Hs=ua(0,!0);zt.UZERO=Hs;var _l=ua(1);zt.ONE=_l;var j6=ua(1,!0);zt.UONE=j6;var lv=ua(-1);zt.NEG_ONE=lv;var q6=Tt(-1,2147483647,!1);zt.MAX_VALUE=q6;var X6=Tt(-1,-1,!0);zt.MAX_UNSIGNED_VALUE=X6;var Tr=Tt(0,-2147483648,!1);zt.MIN_VALUE=Tr;var H=zt.prototype;H.toInt=function(){return this.unsigned?this.low>>>0:this.low};H.toNumber=function(){return this.unsigned?(this.high>>>0)*yl+(this.low>>>0):this.high*yl+(this.low>>>0)};H.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Tr)){var r=Jr(t),n=this.div(r),s=n.mul(r).sub(this);return n.toString(t)+s.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=Jr(dx(t,6),this.unsigned),o=this,a="";;){var c=o.div(i),l=o.sub(c.mul(i)).toInt()>>>0,f=l.toString(t);if(o=c,o.isZero())return f+a;for(;f.length<6;)f="0"+f;a=""+f+a}};H.getHighBits=function(){return this.high};H.getHighBitsUnsigned=function(){return this.high>>>0};H.getLowBits=function(){return this.low};H.getLowBitsUnsigned=function(){return this.low>>>0};H.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Tr)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,r=31;r>0&&!(t&1<<r);r--);return this.high!=0?r+33:r+1};H.isZero=function(){return this.high===0&&this.low===0};H.eqz=H.isZero;H.isNegative=function(){return!this.unsigned&&this.high<0};H.isPositive=function(){return this.unsigned||this.high>=0};H.isOdd=function(){return(this.low&1)===1};H.isEven=function(){return(this.low&1)===0};H.equals=function(t){return Je(t)||(t=En(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};H.eq=H.equals;H.notEquals=function(t){return!this.eq(t)};H.neq=H.notEquals;H.ne=H.notEquals;H.lessThan=function(t){return this.comp(t)<0};H.lt=H.lessThan;H.lessThanOrEqual=function(t){return this.comp(t)<=0};H.lte=H.lessThanOrEqual;H.le=H.lessThanOrEqual;H.greaterThan=function(t){return this.comp(t)>0};H.gt=H.greaterThan;H.greaterThanOrEqual=function(t){return this.comp(t)>=0};H.gte=H.greaterThanOrEqual;H.ge=H.greaterThanOrEqual;H.compare=function(t){if(Je(t)||(t=En(t)),this.eq(t))return 0;var r=this.isNegative(),n=t.isNegative();return r&&!n?-1:!r&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};H.comp=H.compare;H.negate=function(){return!this.unsigned&&this.eq(Tr)?Tr:this.not().add(_l)};H.neg=H.negate;H.add=function(t){Je(t)||(t=En(t));var r=this.high>>>16,n=this.high&65535,s=this.low>>>16,i=this.low&65535,o=t.high>>>16,a=t.high&65535,c=t.low>>>16,l=t.low&65535,f=0,h=0,u=0,d=0;return d+=i+l,u+=d>>>16,d&=65535,u+=s+c,h+=u>>>16,u&=65535,h+=n+a,f+=h>>>16,h&=65535,f+=r+o,f&=65535,Tt(u<<16|d,f<<16|h,this.unsigned)};H.subtract=function(t){return Je(t)||(t=En(t)),this.add(t.neg())};H.sub=H.subtract;H.multiply=function(t){if(this.isZero())return this;if(Je(t)||(t=En(t)),Zr){var r=Zr.mul(this.low,this.high,t.low,t.high);return Tt(r,Zr.get_high(),this.unsigned)}if(t.isZero())return this.unsigned?Hs:vn;if(this.eq(Tr))return t.isOdd()?Tr:vn;if(t.eq(Tr))return this.isOdd()?Tr:vn;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(H6)&&t.lt(H6))return Jr(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,s=this.high&65535,i=this.low>>>16,o=this.low&65535,a=t.high>>>16,c=t.high&65535,l=t.low>>>16,f=t.low&65535,h=0,u=0,d=0,p=0;return p+=o*f,d+=p>>>16,p&=65535,d+=i*f,u+=d>>>16,d&=65535,d+=o*l,u+=d>>>16,d&=65535,u+=s*f,h+=u>>>16,u&=65535,u+=i*l,h+=u>>>16,u&=65535,u+=o*c,h+=u>>>16,u&=65535,h+=n*f+s*l+i*c+o*a,h&=65535,Tt(d<<16|p,h<<16|u,this.unsigned)};H.mul=H.multiply;H.divide=function(t){if(Je(t)||(t=En(t)),t.isZero())throw Error("division by zero");if(Zr){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var r=(this.unsigned?Zr.div_u:Zr.div_s)(this.low,this.high,t.low,t.high);return Tt(r,Zr.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Hs:vn;var n,s,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Hs;if(t.gt(this.shru(1)))return j6;i=Hs}else{if(this.eq(Tr)){if(t.eq(_l)||t.eq(lv))return Tr;if(t.eq(Tr))return _l;var o=this.shr(1);return n=o.div(t).shl(1),n.eq(vn)?t.isNegative()?_l:lv:(s=this.sub(t.mul(n)),i=n.add(s.div(t)),i)}else if(t.eq(Tr))return this.unsigned?Hs:vn;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=vn}for(s=this;s.gte(t);){n=Math.max(1,Math.floor(s.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:dx(2,a-48),l=Jr(n),f=l.mul(t);f.isNegative()||f.gt(s);)n-=c,l=Jr(n,this.unsigned),f=l.mul(t);l.isZero()&&(l=_l),i=i.add(l),s=s.sub(f)}return i};H.div=H.divide;H.modulo=function(t){if(Je(t)||(t=En(t)),Zr){var r=(this.unsigned?Zr.rem_u:Zr.rem_s)(this.low,this.high,t.low,t.high);return Tt(r,Zr.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};H.mod=H.modulo;H.rem=H.modulo;H.not=function(){return Tt(~this.low,~this.high,this.unsigned)};H.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};H.clz=H.countLeadingZeros;H.countTrailingZeros=function(){return this.low?k6(this.low):k6(this.high)+32};H.ctz=H.countTrailingZeros;H.and=function(t){return Je(t)||(t=En(t)),Tt(this.low&t.low,this.high&t.high,this.unsigned)};H.or=function(t){return Je(t)||(t=En(t)),Tt(this.low|t.low,this.high|t.high,this.unsigned)};H.xor=function(t){return Je(t)||(t=En(t)),Tt(this.low^t.low,this.high^t.high,this.unsigned)};H.shiftLeft=function(t){return Je(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Tt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Tt(0,this.low<<t-32,this.unsigned)};H.shl=H.shiftLeft;H.shiftRight=function(t){return Je(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Tt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Tt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};H.shr=H.shiftRight;H.shiftRightUnsigned=function(t){return Je(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Tt(this.low>>>t|this.high<<32-t,this.high>>>t,this.unsigned):t===32?Tt(this.high,0,this.unsigned):Tt(this.high>>>t-32,0,this.unsigned)};H.shru=H.shiftRightUnsigned;H.shr_u=H.shiftRightUnsigned;H.rotateLeft=function(t){var r;return Je(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?Tt(this.high,this.low,this.unsigned):t<32?(r=32-t,Tt(this.low<<t|this.high>>>r,this.high<<t|this.low>>>r,this.unsigned)):(t-=32,r=32-t,Tt(this.high<<t|this.low>>>r,this.low<<t|this.high>>>r,this.unsigned))};H.rotl=H.rotateLeft;H.rotateRight=function(t){var r;return Je(t)&&(t=t.toInt()),(t&=63)===0?this:t===32?Tt(this.high,this.low,this.unsigned):t<32?(r=32-t,Tt(this.high<<r|this.low>>>t,this.low<<r|this.high>>>t,this.unsigned)):(t-=32,r=32-t,Tt(this.low<<r|this.high>>>t,this.high<<r|this.low>>>t,this.unsigned))};H.rotr=H.rotateRight;H.toSigned=function(){return this.unsigned?Tt(this.low,this.high,!1):this};H.toUnsigned=function(){return this.unsigned?this:Tt(this.low,this.high,!0)};H.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};H.toBytesLE=function(){var t=this.high,r=this.low;return[r&255,r>>>8&255,r>>>16&255,r>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};H.toBytesBE=function(){var t=this.high,r=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,r>>>24,r>>>16&255,r>>>8&255,r&255]};zt.fromBytes=function(t,r,n){return n?zt.fromBytesLE(t,r):zt.fromBytesBE(t,r)};zt.fromBytesLE=function(t,r){return new zt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,r)};zt.fromBytesBE=function(t,r){return new zt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],r)};var Al=zt;var sct=16;function ad(e){e==="X"&&(e="");let t=e.padEnd(sct,"0");return Al.fromString(t,!0,16)}function hv(e){if(e.isZero())return"X";let t=e.countTrailingZeros(),r=t%4;t=(t-r)/4;let n=t;t*=4;let i=e.shiftRightUnsigned(t).toString(16).replace(/0+$/,"");return Array(17-n-i.length).join("0")+i}function uv(e,t){let r=ict(e).shiftRightUnsigned(2);return e.add(Al.fromNumber(2*t+1-4).multiply(r))}function ict(e){return e.and(e.not().add(1))}var oct=3,act=30,cct=2*act+1,Y6=180/Math.PI;function K6(e){if(e.length===0)throw new Error(`Invalid Hilbert quad key ${e}`);let t=e.split("/"),r=parseInt(t[0],10),n=t[1],s=n.length,i=0,o=[0,0];for(let a=s-1;a>=0;a--){i=s-a;let c=n[a],l=0,f=0;c==="1"?f=1:c==="2"?(l=1,f=1):c==="3"&&(l=1);let h=Math.pow(2,i-1);lct(h,o,l,f),o[0]+=h*l,o[1]+=h*f}if(r%2===1){let a=o[0];o[0]=o[1],o[1]=a}return{face:r,ij:o,level:i}}function Z6(e){if(e.isZero())return"";let t=e.toString(2);for(;t.length<oct+cct;)t="0"+t;let r=t.lastIndexOf("1"),n=t.substring(0,3),s=t.substring(3,r),i=s.length/2,o=Al.fromString(n,!0,2).toString(10),a="";if(i!==0)for(a=Al.fromString(s,!0,2).toString(4);a.length<i;)a="0"+a;return`${o}/${a}`}function dv(e,t,r){let n=1<<t;return[(e[0]+r[0])/n,(e[1]+r[1])/n]}function $6(e){return e>=.5?1/3*(4*e*e-1):1/3*(1-4*(1-e)*(1-e))}function pv(e){return[$6(e[0]),$6(e[1])]}function mv(e,[t,r]){switch(e){case 0:return[1,t,r];case 1:return[-t,1,r];case 2:return[-t,-r,1];case 3:return[-1,-r,-t];case 4:return[r,-1,-t];case 5:return[r,t,-1];default:throw new Error("Invalid face")}}function gv([e,t,r]){let n=Math.atan2(r,Math.sqrt(e*e+t*t));return[Math.atan2(t,e)*Y6,n*Y6]}function lct(e,t,r,n){if(n===0){r===1&&(t[0]=e-1-t[0],t[1]=e-1-t[1]);let s=t[0];t[0]=t[1],t[1]=s}}function J6(e){let t=dv(e.ij,e.level,[.5,.5]),r=pv(t),n=mv(e.face,r);return gv(n)}var fct=100;function xv(e){let{face:t,ij:r,level:n}=e,s=[[0,0],[0,1],[1,1],[1,0],[0,0]],i=Math.max(1,Math.ceil(fct*Math.pow(2,-n))),o=new Float64Array(4*i*2+2),a=0,c=0;for(let l=0;l<4;l++){let f=s[l].slice(0),h=s[l+1],u=(h[0]-f[0])/i,d=(h[1]-f[1])/i;for(let p=0;p<i;p++){f[0]+=u,f[1]+=d;let m=dv(r,n,f),g=pv(m),x=mv(t,g),A=gv(x);Math.abs(A[1])>89.999&&(A[0]=c);let _=A[0]-c;A[0]+=_>180?-360:_<-180?360:0,o[a++]=A[0],o[a++]=A[1],c=A[0]}}return o[a++]=o[0],o[a++]=o[1],o}function bl(e){let t=hct(e);return K6(t)}function hct(e){if(e.indexOf("/")>0)return e;let t=ad(e);return Z6(t)}function _v(e){let t=bl(e);return J6(t)}function tU(e){let t;if(e.face===2||e.face===5){let r=null,n=0;for(let s=0;s<4;s++){let i=`${e.face}/${s}`,o=bl(i),a=xv(o);(typeof r>"u"||r===null)&&(r=new Float64Array(4*a.length)),r.set(a,n),n+=a.length}t=Q6(r)}else{let r=xv(e);t=Q6(r)}return t}function Q6(e){if(e.length%2!==0)throw new Error("Invalid corners");let t=[],r=[];for(let n=0;n<e.length;n+=2)t.push(e[n]),r.push(e[n+1]);return t.sort((n,s)=>n-s),r.sort((n,s)=>n-s),{west:t[0],east:t[t.length-1],north:r[r.length-1],south:r[0]}}function yv(e,t){let r=t?.minimumHeight||0,n=t?.maximumHeight||0,s=bl(e),i=tU(s),o=i.west,a=i.south,c=i.east,l=i.north,f=[];return f.push(new It(o,l,r)),f.push(new It(c,l,r)),f.push(new It(c,a,r)),f.push(new It(o,a,r)),f.push(new It(o,l,n)),f.push(new It(c,l,n)),f.push(new It(c,a,n)),f.push(new It(o,a,n)),f}function px(e){let t=e.token,r={minimumHeight:e.minimumHeight,maximumHeight:e.maximumHeight},n=yv(t,r),s=_v(t),i=s[0],o=s[1],a=ut.WGS84.cartographicToCartesian([i,o,r.maximumHeight]),c=new It(a[0],a[1],a[2]);n.push(c);let l=v3(n);return[...l.center,...l.halfAxes]}var uct=4,dct=8,pct={QUADTREE:uct,OCTREE:dct};function mct(e,t,r){if(e?.box){let n=ad(e.s2VolumeInfo.token),s=uv(n,t),i=hv(s),o={...e.s2VolumeInfo};switch(o.token=i,r){case"OCTREE":let l=e.s2VolumeInfo,f=l.maximumHeight-l.minimumHeight,h=f/2,u=l.minimumHeight+f/2;l.minimumHeight=u-h,l.maximumHeight=u+h;break;default:break}return{box:px(o),s2VolumeInfo:o}}}async function bv(e){let{implicitOptions:t,parentData:r={mortonIndex:0,x:0,y:0,z:0},childIndex:n=0,s2VolumeBox:s,loaderOptions:i}=e,{subtree:o,level:a=0,globalData:c={level:0,mortonIndex:0,x:0,y:0,z:0}}=e,{subdivisionScheme:l,subtreeLevels:f,maximumLevel:h,contentUrlTemplate:u,subtreesUriTemplate:d,basePath:p}=t,m={children:[],lodMetricValue:0,contentUrl:""};if(!h)return y_.once(`Missing 'maximumLevel' or 'availableLevels' property. The subtree ${u} won't be loaded...`),m;let g=a+c.level;if(g>h)return m;let x=pct[l],A=Math.log2(x),_=n&1,y=n>>1&1,T=n>>2&1,v=(x**a-1)/(x-1),C=da(r.mortonIndex,n,A),w=v+C,E=da(r.x,_,1),b=da(r.y,y,1),R=da(r.z,T,1),k=!1;a>=f&&(k=Av(o.childSubtreeAvailability,C));let D=da(c.x,E,a),P=da(c.y,b,a),j=da(c.z,R,a);if(k){let Nt=`${p}/${d}`,Xt=mx(Nt,g,D,P,j);o=await me(Xt,ux,i),c={mortonIndex:C,x:E,y:b,z:R,level:a},C=0,w=0,E=0,b=0,R=0,a=0}if(!Av(o.tileAvailability,w))return m;Av(o.contentAvailability,w)&&(m.contentUrl=mx(u,g,D,P,j));let Bt=a+1,gt={mortonIndex:C,x:E,y:b,z:R};for(let Nt=0;Nt<x;Nt++){let Xt=mct(s,Nt,l),fr=await bv({subtree:o,implicitOptions:t,loaderOptions:i,parentData:gt,childIndex:Nt,level:Bt,globalData:{...c},s2VolumeBox:Xt});if(fr.contentUrl||fr.children.length){let Cz=g+1,Pz=gct(fr,Cz,{childTileX:E,childTileY:b,childTileZ:R},t,s);m.children.push(Pz)}}return m}function Av(e,t){let r;return Array.isArray(e)?(r=e[0],e.length>1&&y_.once('Not supported extension "3DTILES_multiple_contents" has been detected')):r=e,"constant"in r?Boolean(r.constant):r.explicitBitstream?yct(t,r.explicitBitstream):!1}function gct(e,t,r,n,s){let{basePath:i,refine:o,getRefine:a,lodMetricType:c,getTileType:l,rootLodMetricValue:f,rootBoundingVolume:h}=n,u=e.contentUrl&&e.contentUrl.replace(`${i}/`,""),d=f/2**t,p=s?.box?{box:s.box}:h,m=xct(t,p,r);return{children:e.children,contentUrl:e.contentUrl,content:{uri:u},id:e.contentUrl,refine:a(o),type:l(e),lodMetricType:c,lodMetricValue:d,geometricError:d,transform:e.transform,boundingVolume:m}}function xct(e,t,r){if(t.region){let{childTileX:n,childTileY:s,childTileZ:i}=r,[o,a,c,l,f,h]=t.region,u=2**e,d=(c-o)/u,p=(l-a)/u,m=(h-f)/u,[g,x]=[o+d*n,o+d*(n+1)],[A,_]=[a+p*s,a+p*(s+1)],[y,T]=[f+m*i,f+m*(i+1)];return{region:[g,A,x,_,y,T]}}if(t.box)return t;throw new Error(`Unsupported bounding volume type ${JSON.stringify(t)}`)}function da(e,t,r){return(e<<r)+t}function mx(e,t,r,n,s){let i=_ct({level:t,x:r,y:n,z:s});return e.replace(/{level}|{x}|{y}|{z}/gi,o=>i[o])}function _ct(e){let t={};for(let r in e)t[`{${r}}`]=e[r];return t}function yct(e,t){let r=Math.floor(e/8),n=e%8;return(t[r]>>n&1)===1}function vv(e,t=""){if(!t)return Kr.EMPTY;let n=t.split("?")[0].split(".").pop();switch(n){case"pnts":return Kr.POINTCLOUD;case"i3dm":case"b3dm":case"glb":case"gltf":return Kr.SCENEGRAPH;default:return n||Kr.EMPTY}}function Ev(e){switch(e){case"REPLACE":case"replace":return Ye.REPLACE;case"ADD":case"add":return Ye.ADD;default:return e}}function Tv(e,t){if(/^[a-z][0-9a-z+.-]*:/i.test(t)){let n=new URL(e,`${t}/`);return decodeURI(n.toString())}else if(e.startsWith("/"))return e;return Er.resolve(t,e)}function eU(e,t){if(!e)return null;let r;if(e.content){let s=e.content.uri||e.content?.url;typeof s<"u"&&(r=Tv(s,t))}return{...e,id:r,contentUrl:r,lodMetricType:zs.GEOMETRIC_ERROR,lodMetricValue:e.geometricError,transformMatrix:e.transform,type:vv(e,r),refine:Ev(e.refine)}}async function sU(e,t,r){let n=null,s=nU(e.root);s&&e.root?n=await rU(e.root,e,t,s,r):n=eU(e.root,t);let i=[];for(i.push(n);i.length>0;){let o=i.pop()||{},a=o.children||[],c=[];for(let l of a){let f=nU(l),h;f?h=await rU(l,e,t,f,r):h=eU(l,t),h&&(c.push(h),i.push(h))}o.children=c}return n}async function rU(e,t,r,n,s){let{subdivisionScheme:i,maximumLevel:o,availableLevels:a,subtreeLevels:c,subtrees:{uri:l}}=n,f=mx(l,0,0,0,0),h=Tv(f,r),u=await me(h,ux,s),d=e.content?.uri,p=d?Tv(d,r):"",m=t?.root?.refine,g=e.geometricError,x=e.boundingVolume.extensions?.["3DTILES_bounding_volume_S2"];if(x){let T={box:px(x),s2VolumeInfo:x};e.boundingVolume=T}let A=e.boundingVolume,_={contentUrlTemplate:p,subtreesUriTemplate:l,subdivisionScheme:i,subtreeLevels:c,maximumLevel:Number.isFinite(a)?a-1:o,refine:m,basePath:r,lodMetricType:zs.GEOMETRIC_ERROR,rootLodMetricValue:g,rootBoundingVolume:A,getTileType:vv,getRefine:Ev};return await Act(e,r,u,_,s)}async function Act(e,t,r,n,s){if(!e)return null;let{children:i,contentUrl:o}=await bv({subtree:r,implicitOptions:n,loaderOptions:s}),a,c=null;return o&&(a=o,c={uri:o.replace(`${t}/`,"")}),{...e,id:a,contentUrl:a,lodMetricType:zs.GEOMETRIC_ERROR,lodMetricValue:e.geometricError,transformMatrix:e.transform,type:vv(e,a),refine:Ev(e.refine),content:c||e.content,children:i}}function nU(e){return e?.extensions?.["3DTILES_implicit_tiling"]||e?.implicitTiling}var gx={dataType:null,batchType:null,id:"3d-tiles",name:"3D Tiles",module:"3d-tiles",version:X1,extensions:["cmpt","pnts","b3dm","i3dm"],mimeTypes:["application/octet-stream"],tests:["cmpt","pnts","b3dm","i3dm"],parse:bct,options:{"3d-tiles":{loadGLTF:!0,decodeQuantizedPositions:!1,isTileset:"auto",assetGltfUpAxis:null}}};async function bct(e,t={},r){let n=t["3d-tiles"]||{},s;return n.isTileset==="auto"?s=r?.url&&r.url.indexOf(".json")!==-1:s=n.isTileset,s?Tct(e,t,r):vct(e,t,r)}async function Tct(e,t,r){let n=JSON.parse(new TextDecoder().decode(e)),s=r?.url||"",i=Ect(s),o=await sU(n,i,t||{});return{...n,shape:"tileset3d",loader:gx,url:s,queryString:r?.queryString||"",basePath:i,root:o||n.root,type:Oe.TILES3D,lodMetricType:zs.GEOMETRIC_ERROR,lodMetricValue:n.root?.geometricError||0}}async function vct(e,t,r){let n={content:{shape:"tile3d",featureIds:null}};return await av(e,0,t,r,n.content),n.content}function Ect(e){return Er.dirname(e)}var iU=[0],Mct={getPointColor:{type:"accessor",value:[0,0,0,255]},pointSize:1,data:"",loader:gx,onTilesetLoad:{type:"function",value:e=>{}},onTileLoad:{type:"function",value:e=>{}},onTileUnload:{type:"function",value:e=>{}},onTileError:{type:"function",value:(e,t,r)=>{}},_getMeshColor:{type:"function",value:e=>[255,255,255]}},cd=class extends qt{initializeState(){"onTileLoadFail"in this.props&&W.removed("onTileLoadFail","onTileError")(),this.state={layerMap:{},tileset3d:null,activeViewports:{},lastUpdatedViewports:null}}get isLoaded(){return Boolean(this.state?.tileset3d?.isLoaded()&&super.isLoaded)}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState({props:t,oldProps:r,changeFlags:n}){if(t.data&&t.data!==r.data&&this._loadTileset(t.data),n.viewportChanged){let{activeViewports:s}=this.state;Object.keys(s).length&&(this._updateTileset(s),this.state.lastUpdatedViewports=s,this.state.activeViewports={})}if(n.propsChanged){let{layerMap:s}=this.state;for(let i in s)s[i].needsUpdate=!0}}activateViewport(t){let{activeViewports:r,lastUpdatedViewports:n}=this.state;this.internalState.viewport=t,r[t.id]=t;let s=n?.[t.id];(!s||!t.equals(s))&&(this.setChangeFlags({viewportChanged:!0}),this.setNeedsUpdate())}getPickingInfo({info:t,sourceLayer:r}){let n=r&&r.props.tile;return t.picked&&(t.object=n),t.sourceTile=n,t}filterSubLayer({layer:t,viewport:r}){let{tile:n}=t.props,{id:s}=r;return n.selected&&n.viewportIds.includes(s)}_updateAutoHighlight(t){let r=t.sourceTile,n=this.state.layerMap[r?.id];n&&n.layer&&n.layer.updateAutoHighlight(t)}async _loadTileset(t){let{loadOptions:r={}}=this.props,n=this.props.loader||this.props.loaders,s=Array.isArray(n)?n[0]:n,i={loadOptions:{...r}},o=t;if(s.preload){let l=await s.preload(t,r);l.url&&(o=l.url),l.headers&&(i.loadOptions.fetch={...i.loadOptions.fetch,headers:l.headers}),Object.assign(i,l)}let a=await me(o,s,i.loadOptions),c=new nd(a,{onTileLoad:this._onTileLoad.bind(this),onTileUnload:this._onTileUnload.bind(this),onTileError:this.props.onTileError,...i});this.setState({tileset3d:c,layerMap:{}}),this._updateTileset(this.state.activeViewports),this.props.onTilesetLoad(c)}_onTileLoad(t){let{lastUpdatedViewports:r}=this.state;this.props.onTileLoad(t),this._updateTileset(r),this.setNeedsUpdate()}_onTileUnload(t){delete this.state.layerMap[t.id],this.props.onTileUnload(t)}_updateTileset(t){if(!t)return;let{tileset3d:r}=this.state,{timeline:n}=this.context,s=Object.keys(t).length;!n||!s||!r||r.selectTiles(Object.values(t)).then(i=>{this.state.frameNumber!==i&&this.setState({frameNumber:i})})}_getSubLayer(t,r){if(!t.content)return null;switch(t.type){case Kr.POINTCLOUD:return this._makePointCloudLayer(t,r);case Kr.SCENEGRAPH:return this._make3DModelLayer(t);case Kr.MESH:return this._makeSimpleMeshLayer(t,r);default:throw new Error(`Tile3DLayer: Failed to render layer of type ${t.content.type}`)}}_makePointCloudLayer(t,r){let{attributes:n,pointCount:s,constantRGBA:i,cartographicOrigin:o,modelMatrix:a}=t.content,{positions:c,normals:l,colors:f}=n;if(!c)return null;let h=r&&r.props.data||{header:{vertexCount:s},attributes:{POSITION:c,NORMAL:l,COLOR_0:f}},{pointSize:u,getPointColor:d}=this.props,p=this.getSubLayerClass("pointcloud",Xg);return new p({pointSize:u},this.getSubLayerProps({id:"pointcloud"}),{id:`${this.id}-pointcloud-${t.id}`,tile:t,data:h,coordinateSystem:q.METER_OFFSETS,coordinateOrigin:o,modelMatrix:a,getColor:i||d,_offset:0})}_make3DModelLayer(t){let{gltf:r,instances:n,cartographicOrigin:s,modelMatrix:i}=t.content,o=this.getSubLayerClass("scenegraph",t1);return new o({_lighting:"pbr"},this.getSubLayerProps({id:"scenegraph"}),{id:`${this.id}-scenegraph-${t.id}`,tile:t,data:n||iU,scenegraph:r,coordinateSystem:q.METER_OFFSETS,coordinateOrigin:s,modelMatrix:i,getTransformMatrix:a=>a.modelMatrix,getPosition:[0,0,0],_offset:0})}_makeSimpleMeshLayer(t,r){let n=t.content,{attributes:s,indices:i,modelMatrix:o,cartographicOrigin:a,coordinateSystem:c=q.METER_OFFSETS,material:l,featureIds:f}=n,{_getMeshColor:h}=this.props,u=r&&r.props.mesh||new ht({topology:"triangle-list",attributes:Sct(s),indices:i}),d=this.getSubLayerClass("mesh",IB);return new d(this.getSubLayerProps({id:"mesh"}),{id:`${this.id}-mesh-${t.id}`,tile:t,mesh:u,data:iU,getColor:h(t),pbrMaterial:l,modelMatrix:o,coordinateOrigin:a,coordinateSystem:c,featureIds:f,_offset:0})}renderLayers(){let{tileset3d:t,layerMap:r}=this.state;return t?t.tiles.map(n=>{let s=r[n.id]=r[n.id]||{tile:n},{layer:i}=s;return n.selected&&(i?s.needsUpdate&&(i=this._getSubLayer(n,i),s.needsUpdate=!1):i=this._getSubLayer(n)),s.layer=i,i}).filter(Boolean):null}};cd.defaultProps=Mct;cd.layerName="Tile3DLayer";var oU=cd;function Sct(e){let t={};return t.positions={...e.positions,value:new Float32Array(e.positions.value)},e.normals&&(t.normals=e.normals),e.texCoords&&(t.texCoords=e.texCoords),e.colors&&(t.colors=e.colors),e.uvRegions&&(t.uvRegions=e.uvRegions),t}var wct=new Map([["centerX",Float64Array.BYTES_PER_ELEMENT],["centerY",Float64Array.BYTES_PER_ELEMENT],["centerZ",Float64Array.BYTES_PER_ELEMENT],["minHeight",Float32Array.BYTES_PER_ELEMENT],["maxHeight",Float32Array.BYTES_PER_ELEMENT],["boundingSphereCenterX",Float64Array.BYTES_PER_ELEMENT],["boundingSphereCenterY",Float64Array.BYTES_PER_ELEMENT],["boundingSphereCenterZ",Float64Array.BYTES_PER_ELEMENT],["boundingSphereRadius",Float64Array.BYTES_PER_ELEMENT],["horizonOcclusionPointX",Float64Array.BYTES_PER_ELEMENT],["horizonOcclusionPointY",Float64Array.BYTES_PER_ELEMENT],["horizonOcclusionPointZ",Float64Array.BYTES_PER_ELEMENT]]);function Mv(e){return e>>1^-(e&1)}function Cct(e){let t=0,r={};for(let[n,s]of wct){let i=s===8?e.getFloat64:e.getFloat32;r[n]=i.call(e,t,!0),t+=s}return{header:r,headerEndPosition:t}}function Pct(e,t){let r=t,n=3,s=e.getUint32(r,!0),i=new Uint16Array(s*n);r+=Uint32Array.BYTES_PER_ELEMENT;let o=Uint16Array.BYTES_PER_ELEMENT,a=s*o,c=r,l=c+a,f=l+a,h=0,u=0,d=0;for(let p=0;p<s;p++)h+=Mv(e.getUint16(c+o*p,!0)),u+=Mv(e.getUint16(l+o*p,!0)),d+=Mv(e.getUint16(f+o*p,!0)),i[p]=h,i[p+s]=u,i[p+s*2]=d;return r+=a*3,{vertexData:i,vertexDataEndPosition:r}}function ld(e,t,r,n,s=!0){let i;if(n===2?i=new Uint16Array(e,t,r):i=new Uint32Array(e,t,r),!s)return i;let o=0;for(let a=0;a<i.length;++a){let c=i[a];i[a]=o-c,c===0&&++o}return i}function Ict(e,t,r){let n=r,s=3,o=t.length/s>65536?Uint32Array.BYTES_PER_ELEMENT:Uint16Array.BYTES_PER_ELEMENT;n%o!==0&&(n+=o-n%o);let a=e.getUint32(n,!0);n+=Uint32Array.BYTES_PER_ELEMENT;let c=a*3,l=ld(e.buffer,n,c,o);return n+=c*o,{triangleIndicesEndPosition:n,triangleIndices:l}}function Rct(e,t,r){let n=r,s=3,o=t.length/s>65536?Uint32Array.BYTES_PER_ELEMENT:Uint16Array.BYTES_PER_ELEMENT,a=e.getUint32(n,!0);n+=Uint32Array.BYTES_PER_ELEMENT;let c=ld(e.buffer,n,a,o,!1);n+=a*o;let l=e.getUint32(n,!0);n+=Uint32Array.BYTES_PER_ELEMENT;let f=ld(e.buffer,n,l,o,!1);n+=l*o;let h=e.getUint32(n,!0);n+=Uint32Array.BYTES_PER_ELEMENT;let u=ld(e.buffer,n,h,o,!1);n+=h*o;let d=e.getUint32(n,!0);n+=Uint32Array.BYTES_PER_ELEMENT;let p=ld(e.buffer,n,d,o,!1);return n+=d*o,{edgeIndicesEndPosition:n,westIndices:c,southIndices:f,eastIndices:u,northIndices:p}}function Oct(e){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}function Lct(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}function Bct(e,t){let r={};if(e.byteLength<=t)return{extensions:r,extensionsEndPosition:t};let n=t;for(;n<e.byteLength;){let s=e.getUint8(n,!0);n+=Uint8Array.BYTES_PER_ELEMENT;let i=e.getUint32(n,!0);n+=Uint32Array.BYTES_PER_ELEMENT;let o=new DataView(e.buffer,n,i);switch(s){case 1:{r.vertexNormals=Oct(o);break}case 2:{r.waterMask=Lct(o);break}default:}n+=i}return{extensions:r,extensionsEndPosition:n}}var pa={header:0,vertices:1,triangleIndices:2,edgeIndices:3,extensions:4},Nct={maxDecodingStep:pa.extensions};function Sv(e,t){let r=Object.assign({},Nct,t),n=new DataView(e),{header:s,headerEndPosition:i}=Cct(n);if(r.maxDecodingStep<pa.vertices)return{header:s};let{vertexData:o,vertexDataEndPosition:a}=Pct(n,i);if(r.maxDecodingStep<pa.triangleIndices)return{header:s,vertexData:o};let{triangleIndices:c,triangleIndicesEndPosition:l}=Ict(n,o,a);if(r.maxDecodingStep<pa.edgeIndices)return{header:s,vertexData:o,triangleIndices:c};let{westIndices:f,southIndices:h,eastIndices:u,northIndices:d,edgeIndicesEndPosition:p}=Rct(n,o,l);if(r.maxDecodingStep<pa.extensions)return{header:s,vertexData:o,triangleIndices:c,westIndices:f,northIndices:d,eastIndices:u,southIndices:h};let{extensions:m}=Bct(n,p);return{header:s,vertexData:o,triangleIndices:c,westIndices:f,northIndices:d,eastIndices:u,southIndices:h,extensions:m}}function xx(e,t,r,n){let s=n?Dct(n,e.POSITION.value):Fct(t),i=new e.POSITION.value.constructor(s.length*6),o=new e.TEXCOORD_0.value.constructor(s.length*4),a=new t.constructor(s.length*6);for(let l=0;l<s.length;l++){let f=s[l];kct({edge:f,edgeIndex:l,attributes:e,skirtHeight:r,newPosition:i,newTexcoord0:o,newTriangles:a})}e.POSITION.value=Zl(e.POSITION.value,i),e.TEXCOORD_0.value=Zl(e.TEXCOORD_0.value,o);let c=t instanceof Array?t.concat(a):Zl(t,a);return{attributes:e,triangles:c}}function Fct(e){let t=[];for(let s=0;s<e.length;s+=3)t.push([e[s],e[s+1]]),t.push([e[s+1],e[s+2]]),t.push([e[s+2],e[s]]);t.sort((s,i)=>Math.min(...s)-Math.min(...i)||Math.max(...s)-Math.max(...i));let r=[],n=0;for(;n<t.length;)t[n][0]===t[n+1]?.[1]&&t[n][1]===t[n+1]?.[0]?n+=2:(r.push(t[n]),n++);return r}function Dct(e,t){e.westIndices.sort((n,s)=>t[3*n+1]-t[3*s+1]),e.eastIndices.sort((n,s)=>t[3*s+1]-t[3*n+1]),e.southIndices.sort((n,s)=>t[3*s]-t[3*n]),e.northIndices.sort((n,s)=>t[3*n]-t[3*s]);let r=[];for(let n in e){let s=e[n];for(let i=0;i<s.length-1;i++)r.push([s[i],s[i+1]])}return r}function kct({edge:e,edgeIndex:t,attributes:r,skirtHeight:n,newPosition:s,newTexcoord0:i,newTriangles:o}){let a=r.POSITION.value.length,c=t*2,l=t*2+1;s.set(r.POSITION.value.subarray(e[0]*3,e[0]*3+3),c*3),s[c*3+2]=s[c*3+2]-n,s.set(r.POSITION.value.subarray(e[1]*3,e[1]*3+3),l*3),s[l*3+2]=s[l*3+2]-n,i.set(r.TEXCOORD_0.value.subarray(e[0]*2,e[0]*2+2),c*2),i.set(r.TEXCOORD_0.value.subarray(e[1]*2,e[1]*2+2),l*2);let f=t*2*3;o[f]=e[0],o[f+1]=a/3+l,o[f+2]=e[1],o[f+3]=a/3+l,o[f+4]=e[0],o[f+5]=a/3+c}function wv(e,t={}){let{bounds:r}=t,{header:n,vertexData:s,triangleIndices:i,westIndices:o,northIndices:a,eastIndices:c,southIndices:l}=Sv(e,pa.triangleIndices),f=i,h=Uct(s,n,r),u=cs(h);if(t?.skirtHeight){let{attributes:d,triangles:p}=xx(h,f,t.skirtHeight,{westIndices:o,northIndices:a,eastIndices:c,southIndices:l});h=d,f=p}return{loaderData:{header:{}},header:{vertexCount:f.length,boundingBox:u},schema:void 0,topology:"triangle-list",mode:4,indices:{value:f,size:1},attributes:h}}function Uct(e,t,r){let{minHeight:n,maxHeight:s}=t,[i,o,a,c]=r||[0,0,1,1],l=a-i,f=c-o,h=s-n,u=e.length/3,d=new Float32Array(u*3),p=new Float32Array(u*2);for(let m=0;m<u;m++){let g=e[m]/32767,x=e[m+u]/32767,A=e[m+u*2]/32767;d[3*m+0]=g*l+i,d[3*m+1]=x*f+o,d[3*m+2]=A*h+n,p[2*m+0]=g,p[2*m+1]=x}return{POSITION:{value:d,size:3},TEXCOORD_0:{value:p,size:2}}}var fd=class{constructor(t=257){this.gridSize=t;let r=t-1;if(r&r-1)throw new Error(`Expected grid size to be 2^n+1, got ${t}.`);this.numTriangles=r*r*2-2,this.numParentTriangles=this.numTriangles-r*r,this.indices=new Uint32Array(this.gridSize*this.gridSize),this.coords=new Uint16Array(this.numTriangles*4);for(let n=0;n<this.numTriangles;n++){let s=n+2,i=0,o=0,a=0,c=0,l=0,f=0;for(s&1?a=c=l=r:i=o=f=r;(s>>=1)>1;){let u=i+a>>1,d=o+c>>1;s&1?(a=i,c=o,i=l,o=f):(i=a,o=c,a=l,c=f),l=u,f=d}let h=n*4;this.coords[h+0]=i,this.coords[h+1]=o,this.coords[h+2]=a,this.coords[h+3]=c}}createTile(t){return new Cv(t,this)}},Cv=class{constructor(t,r){let n=r.gridSize;if(t.length!==n*n)throw new Error(`Expected terrain data of length ${n*n} (${n} x ${n}), got ${t.length}.`);this.terrain=t,this.martini=r,this.errors=new Float32Array(t.length),this.update()}update(){let{numTriangles:t,numParentTriangles:r,coords:n,gridSize:s}=this.martini,{terrain:i,errors:o}=this;for(let a=t-1;a>=0;a--){let c=a*4,l=n[c+0],f=n[c+1],h=n[c+2],u=n[c+3],d=l+h>>1,p=f+u>>1,m=d+p-f,g=p+l-d,x=(i[f*s+l]+i[u*s+h])/2,A=p*s+d,_=Math.abs(x-i[A]);if(o[A]=Math.max(o[A],_),a<r){let y=(f+g>>1)*s+(l+m>>1),T=(u+g>>1)*s+(h+m>>1);o[A]=Math.max(o[A],o[y],o[T])}}}getMesh(t=0){let{gridSize:r,indices:n}=this.martini,{errors:s}=this,i=0,o=0,a=r-1;n.fill(0);function c(d,p,m,g,x,A){let _=d+m>>1,y=p+g>>1;Math.abs(d-x)+Math.abs(p-A)>1&&s[y*r+_]>t?(c(x,A,d,p,_,y),c(m,g,x,A,_,y)):(n[p*r+d]=n[p*r+d]||++i,n[g*r+m]=n[g*r+m]||++i,n[A*r+x]=n[A*r+x]||++i,o++)}c(0,0,a,a,a,0),c(a,a,0,0,0,a);let l=new Uint16Array(i*2),f=new Uint32Array(o*3),h=0;function u(d,p,m,g,x,A){let _=d+m>>1,y=p+g>>1;if(Math.abs(d-x)+Math.abs(p-A)>1&&s[y*r+_]>t)u(x,A,d,p,_,y),u(m,g,x,A,_,y);else{let T=n[p*r+d]-1,v=n[g*r+m]-1,C=n[A*r+x]-1;l[2*T]=d,l[2*T+1]=p,l[2*v]=m,l[2*v+1]=g,l[2*C]=x,l[2*C+1]=A,f[h++]=T,f[h++]=v,f[h++]=C}}return u(0,0,a,a,a,0),u(a,a,0,0,0,a),{vertices:l,triangles:f}}};var hd=class{constructor(t,r,n=r){this.data=t,this.width=r,this.height=n,this.coords=[],this.triangles=[],this._halfedges=[],this._candidates=[],this._queueIndices=[],this._queue=[],this._errors=[],this._rms=[],this._pending=[],this._pendingLen=0,this._rmsSum=0;let s=r-1,i=n-1,o=this._addPoint(0,0),a=this._addPoint(s,0),c=this._addPoint(0,i),l=this._addPoint(s,i),f=this._addTriangle(l,o,c,-1,-1,-1);this._addTriangle(o,l,a,f,-1,-1),this._flush()}run(t=1){for(;this.getMaxError()>t;)this.refine()}refine(){this._step(),this._flush()}getMaxError(){return this._errors[0]}getRMSD(){return this._rmsSum>0?Math.sqrt(this._rmsSum/(this.width*this.height)):0}heightAt(t,r){return this.data[this.width*r+t]}_flush(){let t=this.coords;for(let r=0;r<this._pendingLen;r++){let n=this._pending[r],s=2*this.triangles[n*3+0],i=2*this.triangles[n*3+1],o=2*this.triangles[n*3+2];this._findCandidate(t[s],t[s+1],t[i],t[i+1],t[o],t[o+1],n)}this._pendingLen=0}_findCandidate(t,r,n,s,i,o,a){let c=Math.min(t,n,i),l=Math.min(r,s,o),f=Math.max(t,n,i),h=Math.max(r,s,o),u=ma(n,s,i,o,c,l),d=ma(i,o,t,r,c,l),p=ma(t,r,n,s,c,l),m=s-r,g=t-n,x=o-s,A=n-i,_=r-o,y=i-t,T=ma(t,r,n,s,i,o),v=this.heightAt(t,r)/T,C=this.heightAt(n,s)/T,w=this.heightAt(i,o)/T,E=0,b=0,R=0,k=0;for(let D=l;D<=h;D++){let P=0;u<0&&x!==0&&(P=Math.max(P,Math.floor(-u/x))),d<0&&_!==0&&(P=Math.max(P,Math.floor(-d/_))),p<0&&m!==0&&(P=Math.max(P,Math.floor(-p/m)));let j=u+x*P,ot=d+_*P,st=p+m*P,Bt=!1;for(let gt=c+P;gt<=f;gt++){if(j>=0&&ot>=0&&st>=0){Bt=!0;let Nt=v*j+C*ot+w*st,Xt=Math.abs(Nt-this.heightAt(gt,D));k+=Xt*Xt,Xt>E&&(E=Xt,b=gt,R=D)}else if(Bt)break;j+=x,ot+=_,st+=m}u+=A,d+=y,p+=g}(b===t&&R===r||b===n&&R===s||b===i&&R===o)&&(E=0),this._candidates[2*a]=b,this._candidates[2*a+1]=R,this._rms[a]=k,this._queuePush(a,E,k)}_step(){let t=this._queuePop(),r=t*3+0,n=t*3+1,s=t*3+2,i=this.triangles[r],o=this.triangles[n],a=this.triangles[s],c=this.coords[2*i],l=this.coords[2*i+1],f=this.coords[2*o],h=this.coords[2*o+1],u=this.coords[2*a],d=this.coords[2*a+1],p=this._candidates[2*t],m=this._candidates[2*t+1],g=this._addPoint(p,m);if(ma(c,l,f,h,p,m)===0)this._handleCollinear(g,r);else if(ma(f,h,u,d,p,m)===0)this._handleCollinear(g,n);else if(ma(u,d,c,l,p,m)===0)this._handleCollinear(g,s);else{let x=this._halfedges[r],A=this._halfedges[n],_=this._halfedges[s],y=this._addTriangle(i,o,g,x,-1,-1,r),T=this._addTriangle(o,a,g,A,-1,y+1),v=this._addTriangle(a,i,g,_,y+2,T+1);this._legalize(y),this._legalize(T),this._legalize(v)}}_addPoint(t,r){let n=this.coords.length>>1;return this.coords.push(t,r),n}_addTriangle(t,r,n,s,i,o,a=this.triangles.length){let c=a/3;return this.triangles[a+0]=t,this.triangles[a+1]=r,this.triangles[a+2]=n,this._halfedges[a+0]=s,this._halfedges[a+1]=i,this._halfedges[a+2]=o,s>=0&&(this._halfedges[s]=a+0),i>=0&&(this._halfedges[i]=a+1),o>=0&&(this._halfedges[o]=a+2),this._candidates[2*c+0]=0,this._candidates[2*c+1]=0,this._queueIndices[c]=-1,this._rms[c]=0,this._pending[this._pendingLen++]=c,a}_legalize(t){let r=this._halfedges[t];if(r<0)return;let n=t-t%3,s=r-r%3,i=n+(t+1)%3,o=n+(t+2)%3,a=s+(r+2)%3,c=s+(r+1)%3,l=this.triangles[o],f=this.triangles[t],h=this.triangles[i],u=this.triangles[a],d=this.coords;if(!zct(d[2*l],d[2*l+1],d[2*f],d[2*f+1],d[2*h],d[2*h+1],d[2*u],d[2*u+1]))return;let p=this._halfedges[i],m=this._halfedges[o],g=this._halfedges[a],x=this._halfedges[c];this._queueRemove(n/3),this._queueRemove(s/3);let A=this._addTriangle(l,u,h,-1,g,p,n),_=this._addTriangle(u,l,f,A,m,x,s);this._legalize(A+1),this._legalize(_+2)}_handleCollinear(t,r){let n=r-r%3,s=n+(r+1)%3,i=n+(r+2)%3,o=this.triangles[i],a=this.triangles[r],c=this.triangles[s],l=this._halfedges[s],f=this._halfedges[i],h=this._halfedges[r];if(h<0){let v=this._addTriangle(t,o,a,-1,f,-1,n),C=this._addTriangle(o,t,c,v,-1,l);this._legalize(v+1),this._legalize(C+2);return}let u=h-h%3,d=u+(h+2)%3,p=u+(h+1)%3,m=this.triangles[d],g=this._halfedges[d],x=this._halfedges[p];this._queueRemove(u/3);let A=this._addTriangle(o,a,t,f,-1,-1,n),_=this._addTriangle(a,m,t,x,-1,A+1,u),y=this._addTriangle(m,c,t,g,-1,_+1),T=this._addTriangle(c,o,t,l,A+2,y+1);this._legalize(A),this._legalize(_),this._legalize(y),this._legalize(T)}_queuePush(t,r,n){let s=this._queue.length;this._queueIndices[t]=s,this._queue.push(t),this._errors.push(r),this._rmsSum+=n,this._queueUp(s)}_queuePop(){let t=this._queue.length-1;return this._queueSwap(0,t),this._queueDown(0,t),this._queuePopBack()}_queuePopBack(){let t=this._queue.pop();return this._errors.pop(),this._rmsSum-=this._rms[t],this._queueIndices[t]=-1,t}_queueRemove(t){let r=this._queueIndices[t];if(r<0){let s=this._pending.indexOf(t);if(s!==-1)this._pending[s]=this._pending[--this._pendingLen];else throw new Error("Broken triangulation (something went wrong).");return}let n=this._queue.length-1;n!==r&&(this._queueSwap(r,n),this._queueDown(r,n)||this._queueUp(r)),this._queuePopBack()}_queueLess(t,r){return this._errors[t]>this._errors[r]}_queueSwap(t,r){let n=this._queue[t],s=this._queue[r];this._queue[t]=s,this._queue[r]=n,this._queueIndices[n]=r,this._queueIndices[s]=t;let i=this._errors[t];this._errors[t]=this._errors[r],this._errors[r]=i}_queueUp(t){let r=t;for(;;){let n=r-1>>1;if(n===r||!this._queueLess(r,n))break;this._queueSwap(n,r),r=n}}_queueDown(t,r){let n=t;for(;;){let s=2*n+1;if(s>=r||s<0)break;let i=s+1,o=s;if(i<r&&this._queueLess(i,s)&&(o=i),!this._queueLess(o,n))break;this._queueSwap(n,o),n=o}return n>t}};function ma(e,t,r,n,s,i){return(r-s)*(t-i)-(n-i)*(e-s)}function zct(e,t,r,n,s,i,o,a){let c=e-o,l=t-a,f=r-o,h=n-a,u=s-o,d=i-a,p=c*c+l*l,m=f*f+h*h,g=u*u+d*d;return c*(h*g-m*d)-l*(f*g-m*u)+p*(f*d-h*u)<0}function lU(e,t){let{meshMaxError:r,bounds:n,elevationDecoder:s}=t,{data:i,width:o,height:a}=e,c,l;switch(t.tesselator){case"martini":c=_x(i,o,a,s,t.tesselator),l=aU(r,o,c);break;case"delatin":c=_x(i,o,a,s,t.tesselator),l=cU(r,o,a,c);break;default:o===a&&!(a&o-1)?(c=_x(i,o,a,s,"martini"),l=aU(r,o,c)):(c=_x(i,o,a,s,"delatin"),l=cU(r,o,a,c));break}let{vertices:f}=l,{triangles:h}=l,u=Vct(f,c,o,a,n),d=cs(u);if(t.skirtHeight){let{attributes:p,triangles:m}=xx(u,h,t.skirtHeight);u=p,h=m}return{loaderData:{header:{}},header:{vertexCount:h.length,boundingBox:d},mode:4,indices:{value:Uint32Array.from(h),size:1},attributes:u}}function aU(e,t,r){let n=t+1,i=new fd(n).createTile(r),{vertices:o,triangles:a}=i.getMesh(e);return{vertices:o,triangles:a}}function cU(e,t,r,n){let s=new hd(n,t+1,r+1);s.run(e);let{coords:i,triangles:o}=s;return{vertices:i,triangles:o}}function _x(e,t,r,n,s){let{rScaler:i,bScaler:o,gScaler:a,offset:c}=n,l=new Float32Array((t+1)*(r+1));for(let f=0,h=0;h<r;h++)for(let u=0;u<t;u++,f++){let d=f*4,p=e[d+0],m=e[d+1],g=e[d+2];l[f+h]=p*i+m*a+g*o+c}if(s==="martini"){for(let f=(t+1)*t,h=0;h<t;h++,f++)l[f]=l[f-t-1];for(let f=r,h=0;h<r+1;h++,f+=r+1)l[f]=l[f-1]}return l}function Vct(e,t,r,n,s){let i=r+1,o=e.length/2,a=new Float32Array(o*3),c=new Float32Array(o*2),[l,f,h,u]=s||[0,0,r,n],d=(h-l)/r,p=(u-f)/n;for(let m=0;m<o;m++){let g=e[m*2],x=e[m*2+1],A=x*i+g;a[3*m+0]=g*d+l,a[3*m+1]=-x*p+u,a[3*m+2]=t[A],c[2*m+0]=g/r,c[2*m+1]=x/n}return{POSITION:{value:a,size:3},TEXCOORD_0:{value:c,size:2}}}var yx="4.2.1";var Ax={dataType:null,batchType:null,name:"Terrain",id:"terrain",module:"terrain",version:yx,worker:!0,extensions:["png","pngraw","jpg","jpeg","gif","webp","bmp"],mimeTypes:["image/png","image/jpeg","image/gif","image/webp","image/bmp"],options:{terrain:{tesselator:"auto",bounds:void 0,meshMaxError:10,elevationDecoder:{rScaler:1,gScaler:0,bScaler:0,offset:0},skirtHeight:void 0}}};var fU={dataType:null,batchType:null,name:"Quantized Mesh",id:"quantized-mesh",module:"terrain",version:yx,worker:!0,extensions:["terrain"],mimeTypes:["application/vnd.quantized-mesh"],options:{"quantized-mesh":{bounds:[0,0,1,1],skirtHeight:null}}};var Wct={...Ax,parse:Hct};async function Hct(e,t,r){let n={...t,mimeType:"application/x.image",image:{...t?.image,type:"data"}},s=await vr(e,[],n,r),i={...Wct.options.terrain,...t?.terrain};return lU(s,i)}var BQt={...fU,parseSync:(e,t)=>wv(e,t?.["quantized-mesh"]),parse:async(e,t)=>wv(e,t?.["quantized-mesh"])};var hU=[1],Gct={...Zo.defaultProps,elevationData:Ri,texture:{...Ri,optional:!0},meshMaxError:{type:"number",value:4},bounds:{type:"array",value:null,optional:!0,compare:!0},color:{type:"color",value:[255,255,255]},elevationDecoder:{type:"object",value:{rScaler:1,gScaler:0,bScaler:0,offset:0}},workerUrl:"",wireframe:!1,material:!0,loaders:[Ax]};function uU(e){return Array.isArray(e)?e.join(";"):e||""}var ud=class extends qt{updateState({props:t,oldProps:r}){let n=t.elevationData!==r.elevationData;if(n){let{elevationData:i}=t,o=i&&(Array.isArray(i)||i.includes("{x}")&&i.includes("{y}"));this.setState({isTiled:o})}let s=n||t.meshMaxError!==r.meshMaxError||t.elevationDecoder!==r.elevationDecoder||t.bounds!==r.bounds;if(!this.state.isTiled&&s){let i=this.loadTerrain(t);this.setState({terrain:i})}t.workerUrl&&W.removed("workerUrl","loadOptions.terrain.workerUrl")()}loadTerrain({elevationData:t,bounds:r,elevationDecoder:n,meshMaxError:s,signal:i}){if(!t)return null;let o=this.getLoadOptions();o={...o,terrain:{skirtHeight:this.state.isTiled?s*2:0,...o?.terrain,bounds:r,meshMaxError:s,elevationDecoder:n}};let{fetch:a}=this.props;return a(t,{propName:"elevationData",layer:this,loadOptions:o,signal:i})}getTiledTerrainData(t){let{elevationData:r,fetch:n,texture:s,elevationDecoder:i,meshMaxError:o}=this.props,{viewport:a}=this.context,c=Kn(r,t),l=s&&Kn(s,t),{signal:f}=t,h=[0,0],u=[0,0];if(a.isGeospatial){let g=t.bbox;h=a.projectFlat([g.west,g.south]),u=a.projectFlat([g.east,g.north])}else{let g=t.bbox;h=[g.left,g.bottom],u=[g.right,g.top]}let d=[h[0],h[1],u[0],u[1]],p=this.loadTerrain({elevationData:c,bounds:d,elevationDecoder:i,meshMaxError:o,signal:f}),m=l?n(l,{propName:"texture",layer:this,loaders:[],signal:f}).catch(g=>null):Promise.resolve(null);return Promise.all([p,m])}renderSubLayers(t){let r=this.getSubLayerClass("mesh",Jo),{color:n,wireframe:s,material:i}=this.props,{data:o}=t;if(!o)return null;let[a,c]=o;return new r(t,{data:hU,mesh:a,texture:c,_instanced:!1,coordinateSystem:q.CARTESIAN,getPosition:l=>[0,0,0],getColor:n,wireframe:s,material:i})}onViewportLoad(t){if(!t)return;let{zRange:r}=this.state,n=t.map(o=>o.content).filter(Boolean).map(o=>o[0].header.boundingBox.map(c=>c[2]));if(n.length===0)return;let s=Math.min(...n.map(o=>o[0])),i=Math.max(...n.map(o=>o[1]));(!r||s<r[0]||i>r[1])&&this.setState({zRange:[s,i]})}renderLayers(){let{color:t,material:r,elevationData:n,texture:s,wireframe:i,meshMaxError:o,elevationDecoder:a,tileSize:c,maxZoom:l,minZoom:f,extent:h,maxRequests:u,onTileLoad:d,onTileUnload:p,onTileError:m,maxCacheSize:g,maxCacheByteSize:x,refinementStrategy:A}=this.props;if(this.state.isTiled)return new Zo(this.getSubLayerProps({id:"tiles"}),{getTileData:this.getTiledTerrainData.bind(this),renderSubLayers:this.renderSubLayers.bind(this),updateTriggers:{getTileData:{elevationData:uU(n),texture:uU(s),meshMaxError:o,elevationDecoder:a}},onViewportLoad:this.onViewportLoad.bind(this),zRange:this.state.zRange||null,tileSize:c,maxZoom:l,minZoom:f,extent:h,maxRequests:u,onTileLoad:d,onTileUnload:p,onTileError:m,maxCacheSize:g,maxCacheByteSize:x,refinementStrategy:A});if(!n)return null;let _=this.getSubLayerClass("mesh",Jo);return new _(this.getSubLayerProps({id:"mesh"}),{data:hU,mesh:this.state.terrain,texture:s,_instanced:!1,getPosition:y=>[0,0,0],getColor:t,material:r,wireframe:i})}};ud.defaultProps=Gct;ud.layerName="TerrainLayer";var dU=ud;var pU=`uniform brushingUniforms {
  bool enabled;
  highp int target;
  vec2 mousePos;
  float radius;
} brushing;
`,jct=`
  in vec2 brushingTargets;

  out float brushing_isVisible;

  bool brushing_isPointInRange(vec2 position) {
    if (!brushing.enabled) {
      return true;
    }
    vec2 source_commonspace = project_position(position);
    vec2 target_commonspace = project_position(brushing.mousePos);
    float distance = length((target_commonspace - source_commonspace) / project.commonUnitsPerMeter.xy);

    return distance <= brushing.radius;
  }

  bool brushing_arePointsInRange(vec2 sourcePos, vec2 targetPos) {
    return brushing_isPointInRange(sourcePos) || brushing_isPointInRange(targetPos);
  }

  void brushing_setVisible(bool visible) {
    brushing_isVisible = float(visible);
  }
`,qct=`
${pU}
${jct}
`,Xct=`
  in float brushing_isVisible;
`,Yct=`
${pU}
${Xct}
`,$ct={source:0,target:1,custom:2,source_target:3},Kct={"vs:DECKGL_FILTER_GL_POSITION":`
    vec2 brushingTarget;
    vec2 brushingSource;
    if (brushing.target == 3) {
      brushingTarget = geometry.worldPositionAlt.xy;
      brushingSource = geometry.worldPosition.xy;
    } else if (brushing.target == 0) {
      brushingTarget = geometry.worldPosition.xy;
    } else if (brushing.target == 1) {
      brushingTarget = geometry.worldPositionAlt.xy;
    } else {
      brushingTarget = brushingTargets;
    }
    bool visible;
    if (brushing.target == 3) {
      visible = brushing_arePointsInRange(brushingSource, brushingTarget);
    } else {
      visible = brushing_isPointInRange(brushingTarget);
    }
    brushing_setVisible(visible);
  `,"fs:DECKGL_FILTER_COLOR":`
    if (brushing.enabled && brushing_isVisible < 0.5) {
      discard;
    }
  `},mU={name:"brushing",dependencies:[ne],vs:qct,fs:Yct,inject:Kct,getUniforms:e=>{if(!e||!("viewport"in e))return{};let{brushingEnabled:t=!0,brushingRadius:r=1e4,brushingTarget:n="source",mousePosition:s,viewport:i}=e;return{enabled:Boolean(t&&s&&i.containsPixel(s)),radius:r,target:$ct[n]||0,mousePos:s?i.unproject([s.x-i.x,s.y-i.y]):[0,0]}},uniformTypes:{enabled:"i32",target:"i32",mousePos:"vec2<f32>",radius:"f32"}};var Zct={getBrushingTarget:{type:"accessor",value:[0,0]},brushingTarget:"source",brushingEnabled:!0,brushingRadius:1e4},dd=class extends ye{getShaders(){return{modules:[mU]}}initializeState(t,r){let n=this.getAttributeManager();n&&n.add({brushingTargets:{size:2,stepMode:"dynamic",accessor:"getBrushingTarget"}});let s=()=>{this.getCurrentLayer()?.setNeedsRedraw()};this.state.onMouseMove=s,t.deck&&t.deck.eventManager.on({pointermove:s,pointerleave:s})}finalizeState(t,r){if(t.deck){let n=this.state.onMouseMove;t.deck.eventManager.off({pointermove:n,pointerleave:n})}}draw(t,r){let{viewport:n,mousePosition:s}=t.context,{brushingEnabled:i,brushingRadius:o,brushingTarget:a}=this.props,c={viewport:n,mousePosition:s,brushingEnabled:i,brushingRadius:o,brushingTarget:a};this.setShaderModuleProps({brushing:c})}};dd.defaultProps=Zct;dd.extensionName="BrushingExtension";var gU=dd;var xU=`uniform dataFilterUniforms {
  bool useSoftMargin;
  bool enabled;
  bool transformSize;
  bool transformColor;
#ifdef DATAFILTER_TYPE
  DATAFILTER_TYPE min;
  DATAFILTER_TYPE softMin;
  DATAFILTER_TYPE softMax;
  DATAFILTER_TYPE max;
#ifdef DATAFILTER_DOUBLE
  DATAFILTER_TYPE min64High;
  DATAFILTER_TYPE max64High;
#endif
#endif
#ifdef DATACATEGORY_TYPE
  highp uvec4 categoryBitMask;
#endif
} dataFilter;
`,Jct=`
#ifdef DATAFILTER_TYPE
  in DATAFILTER_TYPE filterValues;
#ifdef DATAFILTER_DOUBLE
  in DATAFILTER_TYPE filterValues64Low;
#endif
#endif

#ifdef DATACATEGORY_TYPE
  in DATACATEGORY_TYPE filterCategoryValues;
#endif

out float dataFilter_value;

float dataFilter_reduceValue(float value) {
  return value;
}
float dataFilter_reduceValue(vec2 value) {
  return min(value.x, value.y);
}
float dataFilter_reduceValue(vec3 value) {
  return min(min(value.x, value.y), value.z);
}
float dataFilter_reduceValue(vec4 value) {
  return min(min(value.x, value.y), min(value.z, value.w));
}

#ifdef DATAFILTER_TYPE
  void dataFilter_setValue(DATAFILTER_TYPE valueFromMin, DATAFILTER_TYPE valueFromMax) {
    if (dataFilter.useSoftMargin) {
      // smoothstep results are undefined if edge0 \u2265 edge1
      // Fallback to ignore filterSoftRange if it is truncated by filterRange
      DATAFILTER_TYPE leftInRange = mix(
        smoothstep(dataFilter.min, dataFilter.softMin, valueFromMin),
        step(dataFilter.min, valueFromMin),
        step(dataFilter.softMin, dataFilter.min)
      );
      DATAFILTER_TYPE rightInRange = mix(
        1.0 - smoothstep(dataFilter.softMax, dataFilter.max, valueFromMax),
        step(valueFromMax, dataFilter.max),
        step(dataFilter.max, dataFilter.softMax)
      );
      dataFilter_value = dataFilter_reduceValue(leftInRange * rightInRange);
    } else {
      dataFilter_value = dataFilter_reduceValue(
        step(dataFilter.min, valueFromMin) * step(valueFromMax, dataFilter.max)
      );
    }
  }
#endif

#ifdef DATACATEGORY_TYPE
  void dataFilter_setCategoryValue(DATACATEGORY_TYPE category) {
    #if DATACATEGORY_CHANNELS == 1 // One 128-bit mask
    uint dataFilter_masks = dataFilter.categoryBitMask[category / 32u];
    #elif DATACATEGORY_CHANNELS == 2 // Two 64-bit masks
    uvec2 dataFilter_masks = uvec2(
      dataFilter.categoryBitMask[category.x / 32u],
      dataFilter.categoryBitMask[category.y / 32u + 2u]
    );
    #elif DATACATEGORY_CHANNELS == 3 // Three 32-bit masks
    uvec3 dataFilter_masks = dataFilter.categoryBitMask.xyz;
    #else // Four 32-bit masks
    uvec4 dataFilter_masks = dataFilter.categoryBitMask;
    #endif

    // Shift mask and extract relevant bits
    DATACATEGORY_TYPE dataFilter_bits = DATACATEGORY_TYPE(dataFilter_masks) >> (category & 31u);
    dataFilter_bits &= 1u;

    #if DATACATEGORY_CHANNELS == 1
    if(dataFilter_bits == 0u) dataFilter_value = 0.0;
    #else
    if(any(equal(dataFilter_bits, DATACATEGORY_TYPE(0u)))) dataFilter_value = 0.0;
    #endif
  }
#endif
`,_U=`
${xU}
${Jct}
`,Qct=`
in float dataFilter_value;
`,yU=`
${xU}
${Qct}
`;function AU(e){if(!e||!("extensions"in e))return{};let{filterRange:t=[-1,1],filterEnabled:r=!0,filterTransformSize:n=!0,filterTransformColor:s=!0,categoryBitMask:i}=e,o=e.filterSoftRange||t;return{...Number.isFinite(t[0])?{min:t[0],softMin:o[0],softMax:o[1],max:t[1]}:{min:t.map(a=>a[0]),softMin:o.map(a=>a[0]),softMax:o.map(a=>a[1]),max:t.map(a=>a[1])},enabled:r,useSoftMargin:Boolean(e.filterSoftRange),transformSize:r&&n,transformColor:r&&s,...i&&{categoryBitMask:i}}}function tlt(e){if(!e||!("extensions"in e))return{};let t=AU(e);if(Number.isFinite(t.min)){let r=Math.fround(t.min);t.min-=r,t.softMin-=r,t.min64High=r;let n=Math.fround(t.max);t.max-=n,t.softMax-=n,t.max64High=n}else{let r=t.min.map(Math.fround);t.min=t.min.map((s,i)=>s-r[i]),t.softMin=t.softMin.map((s,i)=>s-r[i]),t.min64High=r;let n=t.max.map(Math.fround);t.max=t.max.map((s,i)=>s-n[i]),t.softMax=t.softMax.map((s,i)=>s-n[i]),t.max64High=n}return t}var bU={"vs:#main-start":`
    dataFilter_value = 1.0;
    if (dataFilter.enabled) {
      #ifdef DATAFILTER_TYPE
        #ifdef DATAFILTER_DOUBLE
          dataFilter_setValue(
            filterValues - dataFilter.min64High + filterValues64Low,
            filterValues - dataFilter.max64High + filterValues64Low
          );
        #else
          dataFilter_setValue(filterValues, filterValues);
        #endif
      #endif

      #ifdef DATACATEGORY_TYPE
        dataFilter_setCategoryValue(filterCategoryValues);
      #endif
    }
  `,"vs:#main-end":`
    if (dataFilter_value == 0.0) {
      gl_Position = vec4(0.);
    }
  `,"vs:DECKGL_FILTER_SIZE":`
    if (dataFilter.transformSize) {
      size = size * dataFilter_value;
    }
  `,"fs:DECKGL_FILTER_COLOR":`
    if (dataFilter_value == 0.0) discard;
    if (dataFilter.transformColor) {
      color.a *= dataFilter_value;
    }
  `};function TU(e){let{categorySize:t,filterSize:r,fp64:n}=e,s={useSoftMargin:"i32",enabled:"i32",transformSize:"i32",transformColor:"i32"};if(r){let i=r===1?"f32":`vec${r}<f32>`;s.min=i,s.softMin=i,s.softMax=i,s.max=i,n&&(s.min64High=i,s.max64High=i)}return t&&(s.categoryBitMask="vec4<i32>"),s}var vU={name:"dataFilter",vs:_U,fs:yU,inject:bU,getUniforms:AU,uniformTypesFromOptions:TU},EU={name:"dataFilter",vs:_U,fs:yU,inject:bU,getUniforms:tlt,uniformTypesFromOptions:TU};var elt=`#version 300 es
#define SHADER_NAME data-filter-vertex-shader

#ifdef FLOAT_TARGET
  in float filterIndices;
  in float filterPrevIndices;
#else
  in vec2 filterIndices;
  in vec2 filterPrevIndices;
#endif

out vec4 vColor;
const float component = 1.0 / 255.0;

void main() {
  #ifdef FLOAT_TARGET
    dataFilter_value *= float(filterIndices != filterPrevIndices);
    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);
    vColor = vec4(0.0, 0.0, 0.0, 1.0);
  #else
    // Float texture is not supported: pack result into 4 channels x 256 px x 64px
    dataFilter_value *= float(filterIndices.x != filterPrevIndices.x);
    float col = filterIndices.x;
    float row = filterIndices.y * 4.0;
    float channel = floor(row);
    row = fract(row);
    vColor = component * vec4(bvec4(channel == 0.0, channel == 1.0, channel == 2.0, channel == 3.0));
    gl_Position = vec4(col * 2.0 - 1.0, row * 2.0 - 1.0, 0.0, 1.0);
  #endif
  gl_PointSize = 1.0;
}
`,rlt=`#version 300 es
#define SHADER_NAME data-filter-fragment-shader
precision highp float;

in vec4 vColor;

out vec4 fragColor;

void main() {
  if (dataFilter_value < 0.5) {
    discard;
  }
  fragColor = vColor;
}
`,nlt=["float32-renderable-webgl","texture-blend-float-webgl"];function MU(e){return nlt.every(t=>e.features.has(t))}function SU(e,t){return t?e.createFramebuffer({width:1,height:1,colorAttachments:[e.createTexture({format:"rgba32float",mipmaps:!1})]}):e.createFramebuffer({width:256,height:64,colorAttachments:[e.createTexture({format:"rgba8unorm",mipmaps:!1})]})}function wU(e,t,r,n){return r.defines.NON_INSTANCED_MODEL=1,n&&(r.defines.FLOAT_TARGET=1),new tt(e,{id:"data-filter-aggregation-model",vertexCount:1,isInstanced:!1,topology:"point-list",disableWarnings:!0,vs:elt,fs:rlt,bufferLayout:t,...r})}var CU={blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendColorOperation:"add",blendAlphaOperation:"add",depthCompare:"never"};var ilt={getFilterValue:{type:"accessor",value:0},getFilterCategory:{type:"accessor",value:0},onFilteredItemsChange:{type:"function",value:null,optional:!0},filterEnabled:!0,filterRange:[-1,1],filterSoftRange:null,filterCategories:[0],filterTransformSize:!0,filterTransformColor:!0},olt={categorySize:0,filterSize:1,fp64:!1,countItems:!1},alt={1:"uint",2:"uvec2",3:"uvec3",4:"uvec4"},clt={1:"float",2:"vec2",3:"vec3",4:"vec4"},pd=class extends ye{constructor(t={}){super({...olt,...t})}getShaders(t){let{categorySize:r,filterSize:n,fp64:s}=t.opts,i={};r&&(i.DATACATEGORY_TYPE=alt[r],i.DATACATEGORY_CHANNELS=r),n&&(i.DATAFILTER_TYPE=clt[n],i.DATAFILTER_DOUBLE=Boolean(s));let o=s?EU:vU;return o.uniformTypes=o.uniformTypesFromOptions(t.opts),{modules:[o],defines:i}}initializeState(t,r){let n=this.getAttributeManager(),{categorySize:s,filterSize:i,fp64:o}=r.opts;n&&(i&&n.add({filterValues:{size:i,type:o?"float64":"float32",stepMode:"dynamic",accessor:"getFilterValue"}}),s&&n.add({filterCategoryValues:{size:s,stepMode:"dynamic",accessor:"getFilterCategory",type:"uint32",transform:s===1?c=>r._getCategoryKey.call(this,c,0):c=>c.map((l,f)=>r._getCategoryKey.call(this,l,f))}}));let{device:a}=this.context;if(n&&r.opts.countItems){let c=MU(a);n.add({filterVertexIndices:{size:c?1:2,vertexOffset:1,type:"unorm8",accessor:(h,{index:u})=>{let d=h&&h.__source?h.__source.index:u;return c?(d+1)%255:[(d+1)%255,Math.floor(d/255)%255]},shaderAttributes:{filterPrevIndices:{vertexOffset:0},filterIndices:{vertexOffset:1}}}});let l=SU(a,c),f=wU(a,n.getBufferLayouts({isInstanced:!1}),r.getShaders.call(this,r),c);this.setState({filterFBO:l,filterModel:f})}}updateState({props:t,oldProps:r,changeFlags:n},s){let i=this.getAttributeManager(),{categorySize:o}=s.opts;if(this.state.filterModel){let a=i.attributes.filterValues?.needsUpdate()||i.attributes.filterCategoryValues?.needsUpdate()||t.filterEnabled!==r.filterEnabled||t.filterRange!==r.filterRange||t.filterSoftRange!==r.filterSoftRange||t.filterCategories!==r.filterCategories;a&&this.setState({filterNeedsUpdate:a})}i?.attributes.filterCategoryValues&&((i.attributes.filterCategoryValues.needsUpdate()||!it(t.filterCategories,r.filterCategories,2))&&this.setState({categoryBitMask:null}),n.dataChanged&&(this.setState({categoryMap:Array(o).fill(0).map(()=>({}))}),i.attributes.filterCategoryValues.setNeedsUpdate("categoryMap")))}draw(t,r){let n=this.state.filterFBO,s=this.state.filterModel,i=this.state.filterNeedsUpdate;this.state.categoryBitMask||r._updateCategoryBitMask.call(this,t,r);let{onFilteredItemsChange:o,extensions:a,filterEnabled:c,filterRange:l,filterSoftRange:f,filterTransformSize:h,filterTransformColor:u,filterCategories:d}=this.props,p={extensions:a,filterEnabled:c,filterRange:l,filterSoftRange:f,filterTransformSize:h,filterTransformColor:u,filterCategories:d};if(this.state.categoryBitMask&&(p.categoryBitMask=this.state.categoryBitMask),this.setShaderModuleProps({dataFilter:p}),i&&o&&s){let m=this.getAttributeManager(),{attributes:{filterValues:g,filterCategoryValues:x,filterVertexIndices:A}}=m;s.setVertexCount(this.getNumInstances());let _={...g?.getValue(),...x?.getValue(),...A?.getValue()};s.setAttributes(_),s.shaderInputs.setProps({dataFilter:p});let y=[0,0,n.width,n.height],T=s.device.beginRenderPass({id:"data-filter-aggregation",framebuffer:n,parameters:{viewport:y},clearColor:[0,0,0,0]});s.setParameters(CU),s.draw(T),T.end();let v=s.device.readPixelsToArrayWebGL(n),C=0;for(let w=0;w<v.length;w++)C+=v[w];o({id:this.id,count:C}),this.state.filterNeedsUpdate=!1}}finalizeState(){let t=this.state.filterFBO,r=this.state.filterModel;t?.destroy(),r?.destroy()}_updateCategoryBitMask(t,r){let{categorySize:n}=r.opts;if(!n)return;let{filterCategories:s}=this.props,i=new Uint32Array([0,0,0,0]),o=n===1?[s]:s,a=n===1?128:n===2?64:32;for(let c=0;c<o.length;c++){let l=o[c];for(let f of l){let h=r._getCategoryKey.call(this,f,c);if(h<a){let u=c*(a/32)+Math.floor(h/32);i[u]+=Math.pow(2,h%32)}else W.warn(`Exceeded maximum number of categories (${a})`)()}}this.state.categoryBitMask=i}_getCategoryKey(t,r){let n=this.state.categoryMap[r];return t in n||(n[t]=Object.keys(n).length),n[t]}};pd.defaultProps=ilt;pd.extensionName="DataFilterExtension";var PU=pd;var IU=`const vec2 WORLD_SCALE_FP64 = vec2(81.4873275756836, 0.0000032873668232014097);
uniform project64Uniforms {
vec2 scale;
mat4 viewProjectionMatrix;
mat4 viewProjectionMatrix64Low;
} project64;
void mercatorProject_fp64(vec4 lnglat_fp64, out vec2 out_val[2]) {
#if defined(NVIDIA_FP64_WORKAROUND)
out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64 * ONE);
#else
out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64);
#endif
out_val[1] = sum_fp64(PI_FP64,
log_fp64(tan_fp64(sum_fp64(PI_4_FP64, radians_fp64(lnglat_fp64.zw) / 2.0))));
return;
}
void project_position_fp64(vec4 position_fp64, out vec2 out_val[2]) {
vec2 pos_fp64[2];
mercatorProject_fp64(position_fp64, pos_fp64);
out_val[0] = mul_fp64(pos_fp64[0], WORLD_SCALE_FP64);
out_val[1] = mul_fp64(pos_fp64[1], WORLD_SCALE_FP64);
return;
}
void project_position_fp64(vec2 position, vec2 position64xyLow, out vec2 out_val[2]) {
vec4 position64xy = vec4(
position.x, position64xyLow.x,
position.y, position64xyLow.y);
project_position_fp64(position64xy, out_val);
}
vec4 project_common_position_to_clipspace_fp64(vec2 vertex_pos_modelspace[4]) {
vec2 vertex_pos_clipspace[4];
vec2 viewProjectionMatrixFP64[16];
for (int i = 0; i < 4; i++) {
for (int j = 0; j < 4; j++) {
viewProjectionMatrixFP64[4 * i + j] = vec2(
project64.viewProjectionMatrix[j][i],
project64.viewProjectionMatrix64Low[j][i]
);
}
}
mat4_vec4_mul_fp64(viewProjectionMatrixFP64, vertex_pos_modelspace,
vertex_pos_clipspace);
return vec4(
vertex_pos_clipspace[0].x,
vertex_pos_clipspace[1].x,
vertex_pos_clipspace[2].x,
vertex_pos_clipspace[3].x
);
}
vec4 project_position_to_clipspace(
vec3 position, vec3 position64xyLow, vec3 offset, out vec4 commonPosition
) {
vec2 offset64[4];
vec4_fp64(vec4(offset, 0.0), offset64);
float z = project_size(position.z);
vec2 projectedPosition64xy[2];
project_position_fp64(position.xy, position64xyLow.xy, projectedPosition64xy);
vec2 commonPosition64[4];
commonPosition64[0] = sum_fp64(offset64[0], projectedPosition64xy[0]);
commonPosition64[1] = sum_fp64(offset64[1], projectedPosition64xy[1]);
commonPosition64[2] = sum_fp64(offset64[2], vec2(z, 0.0));
commonPosition64[3] = vec2(1.0, 0.0);
commonPosition = vec4(projectedPosition64xy[0].x, projectedPosition64xy[1].x, z, 1.0);
return project_common_position_to_clipspace_fp64(commonPosition64);
}
vec4 project_position_to_clipspace(
vec3 position, vec3 position64xyLow, vec3 offset
) {
vec4 commonPosition;
return project_position_to_clipspace(
position, position64xyLow, offset, commonPosition
);
}
`;var{fp64ify:llt,fp64ifyMatrix4:flt}=ym,bx={name:"project64",dependencies:[ne,ym],vs:IU,getUniforms:ult,uniformTypes:{scale:"vec2<f32>",viewProjectionMatrix:"mat4x4<f32>",viewProjectionMatrix64Low:"mat4x4<f32>"}},hlt=mr(dlt);function ult(e){if(e&&"viewport"in e){let{viewProjectionMatrix:t,scale:r}=e.viewport;return hlt({viewProjectionMatrix:t,scale:r})}return{}}function dlt({viewProjectionMatrix:e,scale:t}){let r=flt(e),n=new Float32Array(16),s=new Float32Array(16);for(let i=0;i<4;i++)for(let o=0;o<4;o++){let a=4*i+o,c=4*o+i;n[c]=r[2*a],s[c]=r[2*a+1]}return{scale:llt(t),viewProjectionMatrix:[...n],viewProjectionMatrix64Low:[...s]}}var Tx=class extends ye{getShaders(){let{coordinateSystem:t}=this.props;if(t!==q.LNGLAT&&t!==q.DEFAULT)throw new Error("fp64: coordinateSystem must be LNGLAT");return{modules:[bx]}}draw(t,r){let{viewport:n}=t.context;this.setShaderModuleProps({project64:{viewport:n}})}};Tx.extensionName="Fp64Extension";var RU=Tx;var OU={inject:{"vs:#decl":`
in vec2 instanceDashArrays;
in float instanceDashOffsets;
out vec2 vDashArray;
out float vDashOffset;
`,"vs:#main-end":`
vDashArray = instanceDashArrays;
vDashOffset = instanceDashOffsets / width.x;
`,"fs:#decl":`
uniform pathStyleUniforms {
float dashAlignMode;
bool dashGapPickable;
} pathStyle;
in vec2 vDashArray;
in float vDashOffset;
`,"fs:#main-start":`
float solidLength = vDashArray.x;
float gapLength = vDashArray.y;
float unitLength = solidLength + gapLength;
float offset;
if (unitLength > 0.0) {
if (pathStyle.dashAlignMode == 0.0) {
offset = vDashOffset;
} else {
unitLength = vPathLength / round(vPathLength / unitLength);
offset = solidLength / 2.0;
}
float unitOffset = mod(vPathPosition.y + offset, unitLength);
if (gapLength > 0.0 && unitOffset > solidLength) {
if (path.capType <= 0.5) {
if (!(pathStyle.dashGapPickable && bool(picking.isActive))) {
discard;
}
} else {
float distToEnd = length(vec2(
min(unitOffset - solidLength, unitLength - unitOffset),
vPathPosition.x
));
if (distToEnd > 1.0) {
if (!(pathStyle.dashGapPickable && bool(picking.isActive))) {
discard;
}
}
}
}
}
`}},LU={inject:{"vs:#decl":`
in float instanceOffsets;
`,"vs:DECKGL_FILTER_SIZE":`
float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;
size *= offsetWidth;
`,"vs:#main-end":`
float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;
float offsetDir = sign(instanceOffsets);
vPathPosition.x = (vPathPosition.x + offsetDir) * offsetWidth - offsetDir;
vPathPosition.y *= offsetWidth;
vPathLength *= offsetWidth;
`,"fs:#main-start":`
float isInside;
isInside = step(-1.0, vPathPosition.x) * step(vPathPosition.x, 1.0);
if (isInside == 0.0) {
discard;
}
`}};var plt={getDashArray:{type:"accessor",value:[0,0]},getOffset:{type:"accessor",value:0},dashJustified:!1,dashGapPickable:!1},md=class extends ye{constructor({dash:t=!1,offset:r=!1,highPrecisionDash:n=!1}={}){super({dash:t||n,offset:r,highPrecisionDash:n})}isEnabled(t){return"pathTesselator"in t.state}getShaders(t){if(!t.isEnabled(this))return null;let r={};t.opts.dash&&(r=bi(r,OU)),t.opts.offset&&(r=bi(r,LU));let{inject:n}=r;return{modules:[{name:"pathStyle",inject:n,uniformTypes:{dashAlignMode:"f32",dashGapPickable:"i32"}}]}}initializeState(t,r){let n=this.getAttributeManager();!n||!r.isEnabled(this)||(r.opts.dash&&n.addInstanced({instanceDashArrays:{size:2,accessor:"getDashArray"},instanceDashOffsets:r.opts.highPrecisionDash?{size:1,accessor:"getPath",transform:r.getDashOffsets.bind(this)}:{size:1,update:s=>{s.constant=!0,s.value=[0]}}}),r.opts.offset&&n.addInstanced({instanceOffsets:{size:1,accessor:"getOffset"}}))}updateState(t,r){if(r.isEnabled(this)&&r.opts.dash){let n={dashAlignMode:this.props.dashJustified?1:0,dashGapPickable:Boolean(this.props.dashGapPickable)};this.setShaderModuleProps({pathStyle:n})}}getDashOffsets(t){let r=[0],n=this.props.positionFormat==="XY"?2:3,s=Array.isArray(t[0]),i=s?t.length:t.length/n,o,a;for(let c=0;c<i-1;c++)o=s?t[c]:t.slice(c*n,c*n+n),o=this.projectPosition(o),c>0&&(r[c]=r[c-1]+Ce.dist(a,o)),a=o;return r[i-1]=0,r}};md.defaultProps=plt;md.extensionName="PathStyleExtension";var BU=md;var NU=`uniform fillUniforms {
  vec2 patternTextureSize;
  bool patternEnabled;
  bool patternMask;
  vec2 uvCoordinateOrigin;
  vec2 uvCoordinateOrigin64Low;
} fill;
`,mlt=`
in vec4 fillPatternFrames;
in float fillPatternScales;
in vec2 fillPatternOffsets;

out vec2 fill_uv;
out vec4 fill_patternBounds;
out vec4 fill_patternPlacement;
`,glt=`
${NU}
${mlt}
`,xlt=`
uniform sampler2D fill_patternTexture;

in vec4 fill_patternBounds;
in vec4 fill_patternPlacement;
in vec2 fill_uv;

const float FILL_UV_SCALE = 512.0 / 40000000.0;
`,_lt=`
${NU}
${xlt}
`,ylt={"vs:DECKGL_FILTER_GL_POSITION":`
    fill_uv = geometry.position.xy;
  `,"vs:DECKGL_FILTER_COLOR":`
    if (fill.patternEnabled) {
      fill_patternBounds = fillPatternFrames / vec4(fill.patternTextureSize, fill.patternTextureSize);
      fill_patternPlacement.xy = fillPatternOffsets;
      fill_patternPlacement.zw = fillPatternScales * fillPatternFrames.zw;
    }
  `,"fs:DECKGL_FILTER_COLOR":`
    if (fill.patternEnabled) {
      vec2 scale = FILL_UV_SCALE * fill_patternPlacement.zw;
      vec2 patternUV = mod(mod(fill.uvCoordinateOrigin, scale) + fill.uvCoordinateOrigin64Low + fill_uv, scale) / scale;
      patternUV = mod(fill_patternPlacement.xy + patternUV, 1.0);

      vec2 texCoords = fill_patternBounds.xy + fill_patternBounds.zw * patternUV;

      vec4 patternColor = texture(fill_patternTexture, texCoords);
      color.a *= patternColor.a;
      if (!fill.patternMask) {
        color.rgb = patternColor.rgb;
      }
    }
  `};function Alt(e){if(!e)return{};let t={};if("fillPatternTexture"in e){let{fillPatternTexture:r}=e;t.fill_patternTexture=r,t.patternTextureSize=[r.width,r.height]}if("project"in e){let{fillPatternMask:r=!0,fillPatternEnabled:n=!0}=e,s=ne.getUniforms(e.project),{commonOrigin:i}=s,o=[hc(i[0]),hc(i[1])];t.uvCoordinateOrigin=i.slice(0,2),t.uvCoordinateOrigin64Low=o,t.patternMask=r,t.patternEnabled=n}return t}var FU={name:"fill",vs:glt,fs:_lt,inject:ylt,dependencies:[ne],getUniforms:Alt,uniformTypes:{patternTextureSize:"vec2<f32>",patternEnabled:"i32",patternMask:"i32",uvCoordinateOrigin:"vec2<f32>",uvCoordinateOrigin64Low:"vec2<f32>"}};var blt={fillPatternEnabled:!0,fillPatternAtlas:{type:"image",value:null,async:!0,parameters:{lodMaxClamp:0}},fillPatternMapping:{type:"object",value:{},async:!0},fillPatternMask:!0,getFillPattern:{type:"accessor",value:e=>e.pattern},getFillPatternScale:{type:"accessor",value:1},getFillPatternOffset:{type:"accessor",value:[0,0]}},gd=class extends ye{constructor({pattern:t=!1}={}){super({pattern:t})}isEnabled(t){return t.getAttributeManager()!==null&&!("pathTesselator"in t.state)}getShaders(t){return t.isEnabled(this)?{modules:[t.opts.pattern&&FU].filter(Boolean)}:null}initializeState(t,r){if(!r.isEnabled(this))return;let n=this.getAttributeManager();r.opts.pattern&&n.add({fillPatternFrames:{size:4,stepMode:"dynamic",accessor:"getFillPattern",transform:r.getPatternFrame.bind(this)},fillPatternScales:{size:1,stepMode:"dynamic",accessor:"getFillPatternScale",defaultValue:1},fillPatternOffsets:{size:2,stepMode:"dynamic",accessor:"getFillPatternOffset"}}),this.setState({emptyTexture:this.context.device.createTexture({data:new Uint8Array(4),width:1,height:1})})}updateState({props:t,oldProps:r},n){n.isEnabled(this)&&t.fillPatternMapping&&t.fillPatternMapping!==r.fillPatternMapping&&this.getAttributeManager().invalidate("getFillPattern")}draw(t,r){if(!r.isEnabled(this))return;let{fillPatternAtlas:n,fillPatternEnabled:s,fillPatternMask:i}=this.props,o={project:t.shaderModuleProps.project,fillPatternEnabled:s,fillPatternMask:i,fillPatternTexture:n||this.state.emptyTexture};this.setShaderModuleProps({fill:o})}finalizeState(){this.state.emptyTexture?.delete()}getPatternFrame(t){let{fillPatternMapping:r}=this.getCurrentLayer().props,n=r&&r[t];return n?[n.x,n.y,n.width,n.height]:[0,0,0,0]}};gd.defaultProps=blt;gd.extensionName="FillStyleExtension";var DU=gd;var Tlt={clipBounds:[0,0,1,1],clipByInstance:void 0},kU=`
uniform clipUniforms {
  vec4 bounds;
} clip;

bool clip_isInBounds(vec2 position) {
  return position.x >= clip.bounds[0] && position.y >= clip.bounds[1] && position.x < clip.bounds[2] && position.y < clip.bounds[3];
}
`,vlt={name:"clip",vs:kU,uniformTypes:{bounds:"vec4<f32>"}},Elt={"vs:#decl":`
out float clip_isVisible;
`,"vs:DECKGL_FILTER_GL_POSITION":`
  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));
`,"fs:#decl":`
in float clip_isVisible;
`,"fs:DECKGL_FILTER_COLOR":`
  if (clip_isVisible < 0.5) discard;
`},Mlt={name:"clip",fs:kU,uniformTypes:{bounds:"vec4<f32>"}},Slt={"vs:#decl":`
out vec2 clip_commonPosition;
`,"vs:DECKGL_FILTER_GL_POSITION":`
  clip_commonPosition = geometry.position.xy;
`,"fs:#decl":`
in vec2 clip_commonPosition;
`,"fs:DECKGL_FILTER_COLOR":`
  if (!clip_isInBounds(clip_commonPosition)) discard;
`},xd=class extends ye{getShaders(){let t="instancePositions"in this.getAttributeManager().attributes;return this.props.clipByInstance!==void 0&&(t=Boolean(this.props.clipByInstance)),this.state.clipByInstance=t,t?{modules:[vlt],inject:Elt}:{modules:[Mlt],inject:Slt}}draw(){let{clipBounds:t}=this.props,r={};if(this.state.clipByInstance)r.bounds=t;else{let n=this.projectPosition([t[0],t[1],0]),s=this.projectPosition([t[2],t[3],0]);r.bounds=[Math.min(n[0],s[0]),Math.min(n[1],s[1]),Math.max(n[0],s[0]),Math.max(n[1],s[1])]}this.setShaderModuleProps({clip:r})}};xd.defaultProps=Tlt;xd.extensionName="ClipExtension";var vx=xd;var wlt=`
in float collisionPriorities;

uniform sampler2D collision_texture;

uniform collisionUniforms {
  bool sort;
  bool enabled;
} collision;

vec2 collision_getCoords(vec4 position) {
  vec4 collision_clipspace = project_common_position_to_clipspace(position);
  return (1.0 + collision_clipspace.xy / collision_clipspace.w) / 2.0;
}

float collision_match(vec2 tex, vec3 pickingColor) {
  vec4 collision_pickingColor = texture(collision_texture, tex);
  float delta = dot(abs(collision_pickingColor.rgb - pickingColor), vec3(1.0));
  float e = 0.001;
  return step(delta, e);
}

float collision_isVisible(vec2 texCoords, vec3 pickingColor) {
  if (!collision.enabled) {
    return 1.0;
  }

  // Visibility test, sample area of 5x5 pixels in order to fade in/out.
  // Due to the locality, the lookups will be cached
  // This reduces the flicker present when objects are shown/hidden
  const int N = 2;
  float accumulator = 0.0;
  vec2 step = vec2(1.0 / project.viewportSize);

  const float floatN = float(N);
  vec2 delta = -floatN * step;
  for(int i = -N; i <= N; i++) {
    delta.x = -step.x * floatN;
    for(int j = -N; j <= N; j++) {
      accumulator += collision_match(texCoords + delta, pickingColor);
      delta.x += step.x;
    }
    delta.y += step.y;
  }

  float W = 2.0 * floatN + 1.0;
  return pow(accumulator / (W * W), 2.2);
}
`,Clt={"vs:#decl":`
  float collision_fade = 1.0;
`,"vs:DECKGL_FILTER_GL_POSITION":`
  if (collision.sort) {
    float collisionPriority = collisionPriorities;
    position.z = -0.001 * collisionPriority * position.w; // Support range -1000 -> 1000
  }

  if (collision.enabled) {
    vec4 collision_common_position = project_position(vec4(geometry.worldPosition, 1.0));
    vec2 collision_texCoords = collision_getCoords(collision_common_position);
    collision_fade = collision_isVisible(collision_texCoords, geometry.pickingColor / 255.0);
    if (collision_fade < 0.0001) {
      // Position outside clip space bounds to discard
      position = vec4(0.0, 0.0, 2.0, 1.0);
    }
  }
  `,"vs:DECKGL_FILTER_COLOR":`
  color.a *= collision_fade;
  `},Plt=e=>{if(!e||!("dummyCollisionMap"in e))return{};let{enabled:t,collisionFBO:r,drawToCollisionMap:n,dummyCollisionMap:s}=e;return{enabled:t&&!n,sort:Boolean(n),collision_texture:!n&&r?r.colorAttachments[0]:s}},UU={name:"collision",dependencies:[ne],vs:wlt,inject:Clt,getUniforms:Plt,uniformTypes:{sort:"i32",enabled:"i32"}};var _d=class extends Fe{renderCollisionMap(t,r){let s=[0,0,0,0],i=[1,1,t.width-2*1,t.height-2*1];this.render({...r,clearColor:s,scissorRect:i,target:t,pass:"collision"})}getLayerParameters(t,r,n){return{...t.props.parameters,blend:!1,depthWriteEnabled:!0,depthCompare:"less-equal"}}getShaderModuleProps(){return{collision:{drawToCollisionMap:!0},picking:{isActive:1,isAttribute:!1},lighting:{enabled:!1}}}};var Pv=2,yd=class{constructor(){this.id="collision-filter-effect",this.props=null,this.useInPicking=!0,this.order=1,this.channels={},this.collisionFBOs={}}setup(t){this.context=t;let{device:r}=t;this.dummyCollisionMap=r.createTexture({width:1,height:1}),this.collisionFilterPass=new _d(r,{id:"default-collision-filter"})}preRender({effects:t,layers:r,layerFilter:n,viewports:s,onViewportActive:i,views:o,isPicking:a,preRenderStats:c={}}){let{device:l}=this.context;if(a)return;let f=r.filter(({props:{visible:g,collisionEnabled:x}})=>g&&x);if(f.length===0){this.channels={};return}let h=t?.filter(g=>g.useInPicking&&c[g.id]),u=c["mask-effect"]?.didRender,d=this._groupByCollisionGroup(l,f),p=s[0],m=!this.lastViewport||!this.lastViewport.equals(p)||u;for(let g in d){let x=this.collisionFBOs[g],A=d[g],[_,y]=l.canvasContext.getPixelSize();x.resize({width:_/Pv,height:y/Pv}),this._render(A,{effects:h,layerFilter:n,onViewportActive:i,views:o,viewport:p,viewportChanged:m})}}_render(t,{effects:r,layerFilter:n,onViewportActive:s,views:i,viewport:o,viewportChanged:a}){let{collisionGroup:c}=t,l=this.channels[c];if(!l)return;let f=a||t===l||!it(l.layers,t.layers,1)||t.layerBounds.some((h,u)=>!Yt(h,l.layerBounds[u]))||t.allLayersLoaded!==l.allLayersLoaded||t.layers.some(h=>h.props.transitions);if(this.channels[c]=t,f){this.lastViewport=o;let h=this.collisionFBOs[c];this.collisionFilterPass.renderCollisionMap(h,{pass:"collision-filter",isPicking:!0,layers:t.layers,effects:r,layerFilter:n,viewports:o?[o]:[],onViewportActive:s,views:i,shaderModuleProps:{collision:{enabled:!0,dummyCollisionMap:this.dummyCollisionMap},project:{devicePixelRatio:h.device.canvasContext.getDevicePixelRatio()/Pv}}})}}_groupByCollisionGroup(t,r){let n={};for(let s of r){let i=s.props.collisionGroup,o=n[i];o||(o={collisionGroup:i,layers:[],layerBounds:[],allLayersLoaded:!0},n[i]=o),o.layers.push(s),o.layerBounds.push(s.getBounds()),s.isLoaded||(o.allLayersLoaded=!1)}for(let s of Object.keys(n))this.collisionFBOs[s]||this.createFBO(t,s),this.channels[s]||(this.channels[s]=n[s]);for(let s of Object.keys(this.collisionFBOs))n[s]||this.destroyFBO(s);return n}getShaderModuleProps(t){let{collisionGroup:r,collisionEnabled:n}=t.props,{collisionFBOs:s,dummyCollisionMap:i}=this,o=s[r];return{collision:{enabled:n&&Boolean(o),collisionFBO:o,dummyCollisionMap:i}}}cleanup(){this.dummyCollisionMap&&(this.dummyCollisionMap.delete(),this.dummyCollisionMap=void 0),this.channels={};for(let t of Object.keys(this.collisionFBOs))this.destroyFBO(t);this.collisionFBOs={},this.lastViewport=void 0}createFBO(t,r){let{width:n,height:s}=t.gl.canvas,i=t.createTexture({format:"rgba8unorm",width:n,height:s,sampler:{minFilter:"nearest",magFilter:"nearest",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}}),o=t.createTexture({format:"depth16unorm",width:n,height:s,mipmaps:!1});this.collisionFBOs[r]=t.createFramebuffer({id:`collision-${r}`,width:n,height:s,colorAttachments:[i],depthStencilAttachment:o})}destroyFBO(t){let r=this.collisionFBOs[t];r.colorAttachments[0]?.destroy(),r.depthStencilAttachment?.destroy(),r.destroy(),delete this.collisionFBOs[t]}};var Ilt={getCollisionPriority:{type:"accessor",value:0},collisionEnabled:!0,collisionGroup:{type:"string",value:"default"},collisionTestProps:{}},Ad=class extends ye{getShaders(){return{modules:[UU]}}draw({shaderModuleProps:t}){t.collision?.drawToCollisionMap&&(this.props=this.clone(this.props.collisionTestProps).props)}initializeState(t,r){if(this.getAttributeManager()===null)return;this.context.deck?._addDefaultEffect(new yd),this.getAttributeManager().add({collisionPriorities:{size:1,stepMode:"dynamic",accessor:"getCollisionPriority"}})}getNeedsPickingBuffer(){return this.props.collisionEnabled}};Ad.defaultProps=Ilt;Ad.extensionName="CollisionFilterExtension";var zU=Ad;var VU=`uniform maskUniforms {
  vec4 bounds;
  highp int channel;
  bool enabled;
  bool inverted;
  bool maskByInstance;
} mask;
`,Rlt=`
vec2 mask_getCoords(vec4 position) {
  return (position.xy - mask.bounds.xy) / (mask.bounds.zw - mask.bounds.xy);
}
`,Olt=`
${VU}
${Rlt}
`,Llt=`
uniform sampler2D mask_texture;

bool mask_isInBounds(vec2 texCoords) {
  if (!mask.enabled) {
    return true;
  }
  vec4 maskColor = texture(mask_texture, texCoords);
  float maskValue = 1.0;
  if (mask.channel == 0) {
    maskValue = maskColor.r;
  } else if (mask.channel == 1) {
    maskValue = maskColor.g;
  } else if (mask.channel == 2) {
    maskValue = maskColor.b;
  } else if (mask.channel == 3) {
    maskValue = maskColor.a;
  }

  if (mask.inverted) {
    return maskValue >= 0.5;
  } else {
    return maskValue < 0.5;
  }
}
`,Blt=`
${VU}
${Llt}
`,Nlt={"vs:#decl":`
out vec2 mask_texCoords;
`,"vs:#main-end":`
   vec4 mask_common_position;
   if (mask.maskByInstance) {
     mask_common_position = project_position(vec4(geometry.worldPosition, 1.0));
   } else {
     mask_common_position = geometry.position;
   }
   mask_texCoords = mask_getCoords(mask_common_position);
`,"fs:#decl":`
in vec2 mask_texCoords;
`,"fs:#main-start":`
  if (mask.enabled) {
    bool mask = mask_isInBounds(mask_texCoords);

    // Debug: show extent of render target
    // fragColor = vec4(mask_texCoords, 0.0, 1.0);
    // fragColor = texture(mask_texture, mask_texCoords);

    if (!mask) discard;
  }
`},Flt=e=>e&&"maskMap"in e?{mask_texture:e.maskMap}:e||{},WU={name:"mask",dependencies:[ne],vs:Olt,fs:Blt,inject:Nlt,getUniforms:Flt,uniformTypes:{bounds:"vec4<f32>",channel:"i32",enabled:"i32",inverted:"i32",maskByInstance:"i32"}};var Dlt={blendColorOperation:"subtract",blendColorSrcFactor:"zero",blendColorDstFactor:"one",blendAlphaOperation:"subtract",blendAlphaSrcFactor:"zero",blendAlphaDstFactor:"one"},bd=class extends Fe{constructor(t,r){super(t,r);let{mapSize:n=2048}=r;this.maskMap=t.createTexture({format:"rgba8unorm",width:n,height:n,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}}),this.fbo=t.createFramebuffer({id:"maskmap",width:n,height:n,colorAttachments:[this.maskMap]})}render(t){let r=2**t.channel,n=[255,255,255,255];super.render({...t,clearColor:n,colorMask:r,target:this.fbo,pass:"mask"})}getLayerParameters(t,r,n){return{...t.props.parameters,blend:!0,depthCompare:"always",...Dlt}}shouldDrawLayer(t){return t.props.operation.includes("mask")}delete(){this.fbo.delete(),this.maskMap.delete()}};function Tl(e,t){let r=[1/0,1/0,-1/0,-1/0];for(let n of e){let s=n.getBounds();if(s){let i=n.projectPosition(s[0],{viewport:t,autoOffset:!1}),o=n.projectPosition(s[1],{viewport:t,autoOffset:!1});r[0]=Math.min(r[0],i[0]),r[1]=Math.min(r[1],i[1]),r[2]=Math.max(r[2],o[0]),r[3]=Math.max(r[3],o[1])}}return Number.isFinite(r[0])?r:null}var klt=2048;function vl(e){let{bounds:t,viewport:r,border:n=0}=e,{isGeospatial:s}=r;if(t[2]<=t[0]||t[3]<=t[1])return null;let i=r.unprojectPosition([(t[0]+t[2])/2,(t[1]+t[3])/2,0]),{width:o,height:a,zoom:c}=e;if(c===void 0){o=o-n*2,a=a-n*2;let l=Math.min(o/(t[2]-t[0]),a/(t[3]-t[1]));c=Math.min(Math.log2(l),20)}else if(!o||!a){let l=2**c;o=Math.round(Math.abs(t[2]-t[0])*l),a=Math.round(Math.abs(t[3]-t[1])*l);let f=klt-n*2;if(o>f||a>f){let h=f/Math.max(o,a);o=Math.round(o*h),a=Math.round(a*h),c+=Math.log2(h)}}return s?new We({id:r.id,x:n,y:n,width:o,height:a,longitude:i[0],latitude:i[1],zoom:c,orthographic:!0}):new Ss({id:r.id,x:n,y:n,width:o,height:a,target:i,zoom:c,flipY:!1})}function Ult(e,t){let r;if(t&&t.length===2){let[i,o]=t,a=e.getBounds({z:i}),c=e.getBounds({z:o});r=[Math.min(a[0],c[0]),Math.min(a[1],c[1]),Math.max(a[2],c[2]),Math.max(a[3],c[3])]}else r=e.getBounds();let n=e.projectPosition(r.slice(0,2)),s=e.projectPosition(r.slice(2,4));return[n[0],n[1],s[0],s[1]]}function El(e,t,r){if(!e)return[0,0,1,1];let n=Ult(t,r),s=zlt(n);return e[2]-e[0]<=s[2]-s[0]&&e[3]-e[1]<=s[3]-s[1]?e:[Math.max(e[0],s[0]),Math.max(e[1],s[1]),Math.min(e[2],s[2]),Math.min(e[3],s[3])]}function zlt(e){let t=e[2]-e[0],r=e[3]-e[1],n=(e[0]+e[2])/2,s=(e[1]+e[3])/2;return[n-t,s-r,n+t,s+r]}var Td=class{constructor(){this.id="mask-effect",this.props=null,this.useInPicking=!0,this.order=0,this.channels=[],this.masks=null}setup({device:t}){this.dummyMaskMap=t.createTexture({width:1,height:1}),this.maskPass=new bd(t,{id:"default-mask"}),this.maskMap=this.maskPass.maskMap}preRender({layers:t,layerFilter:r,viewports:n,onViewportActive:s,views:i,isPicking:o}){let a=!1;if(o)return{didRender:a};let c=t.filter(u=>u.props.visible&&u.props.operation.includes("mask"));if(c.length===0)return this.masks=null,this.channels.length=0,{didRender:a};this.masks={};let l=this._sortMaskChannels(c),f=n[0],h=!this.lastViewport||!this.lastViewport.equals(f);if(f.resolution!==void 0)return W.warn("MaskExtension is not supported in GlobeView")(),{didRender:a};for(let u in l){let d=this._renderChannel(l[u],{layerFilter:r,onViewportActive:s,views:i,viewport:f,viewportChanged:h});a||(a=d)}return{didRender:a}}_renderChannel(t,{layerFilter:r,onViewportActive:n,views:s,viewport:i,viewportChanged:o}){let a=!1,c=this.channels[t.index];if(!c)return a;let l=t===c||t.layers.length!==c.layers.length||t.layers.some((f,h)=>f!==c.layers[h]||f.props.transitions)||t.layerBounds.some((f,h)=>f!==c.layerBounds[h]);if(t.bounds=c.bounds,t.maskBounds=c.maskBounds,this.channels[t.index]=t,l||o){this.lastViewport=i;let f=Tl(t.layers,i);if(t.bounds=f&&El(f,i),l||!Yt(t.bounds,c.bounds)){let{maskPass:h,maskMap:u}=this,d=f&&vl({bounds:t.bounds,viewport:i,width:u.width,height:u.height,border:1});t.maskBounds=d?d.getBounds():[0,0,1,1],h.render({pass:"mask",channel:t.index,layers:t.layers,layerFilter:r,viewports:d?[d]:[],onViewportActive:n,views:s,shaderModuleProps:{project:{devicePixelRatio:1}}}),a=!0}}return this.masks[t.id]={index:t.index,bounds:t.maskBounds,coordinateOrigin:t.coordinateOrigin,coordinateSystem:t.coordinateSystem},a}_sortMaskChannels(t){let r={},n=0;for(let s of t){let{id:i}=s.root,o=r[i];if(!o){if(++n>4){W.warn("Too many mask layers. The max supported is 4")();continue}o={id:i,index:this.channels.findIndex(a=>a?.id===i),layers:[],layerBounds:[],coordinateOrigin:s.root.props.coordinateOrigin,coordinateSystem:s.root.props.coordinateSystem},r[i]=o}o.layers.push(s),o.layerBounds.push(s.getBounds())}for(let s=0;s<4;s++){let i=this.channels[s];(!i||!(i.id in r))&&(this.channels[s]=null)}for(let s in r){let i=r[s];i.index<0&&(i.index=this.channels.findIndex(o=>!o),this.channels[i.index]=i)}return r}getShaderModuleProps(){return{mask:{maskMap:this.masks?this.maskMap:this.dummyMaskMap,maskChannels:this.masks}}}cleanup(){this.dummyMaskMap&&(this.dummyMaskMap.delete(),this.dummyMaskMap=void 0),this.maskPass&&(this.maskPass.delete(),this.maskPass=void 0,this.maskMap=void 0),this.lastViewport=void 0,this.masks=null,this.channels.length=0}};var Vlt={maskId:"",maskByInstance:void 0,maskInverted:!1},vd=class extends ye{initializeState(){this.context.deck?._addDefaultEffect(new Td)}getShaders(){let t="instancePositions"in this.getAttributeManager().attributes;return this.props.maskByInstance!==void 0&&(t=Boolean(this.props.maskByInstance)),this.state.maskByInstance=t,{modules:[WU]}}draw({context:t,shaderModuleProps:r}){let n={};n.maskByInstance=Boolean(this.state.maskByInstance);let{maskId:s,maskInverted:i}=this.props,{maskChannels:o}=r.mask||{},{viewport:a}=t;if(o&&o[s]){let{index:c,bounds:l,coordinateOrigin:f}=o[s],{coordinateSystem:h}=o[s];n.enabled=!0,n.channel=c,n.inverted=i,h===q.DEFAULT&&(h=a.isGeospatial?q.LNGLAT:q.CARTESIAN);let u={modelMatrix:null,fromCoordinateOrigin:f,fromCoordinateSystem:h},d=this.projectPosition([l[0],l[1],0],u),p=this.projectPosition([l[2],l[3],0],u);n.bounds=[d[0],d[1],p[0],p[1]]}else s&&W.warn(`Could not find a mask layer with id: ${s}`)(),n.enabled=!1;this.setShaderModuleProps({mask:n})}};vd.defaultProps=Vlt;vd.extensionName="MaskExtension";var HU=vd;var ns={NONE:0,WRITE_HEIGHT_MAP:1,USE_HEIGHT_MAP:2,USE_COVER:3,USE_COVER_ONLY:4,SKIP:5},Wlt=Object.keys(ns).map(e=>`const float TERRAIN_MODE_${e} = ${ns[e]}.0;`).join(`
`),GU=Wlt+`
uniform terrainUniforms {
  float mode;
  vec4 bounds;
} terrain;

uniform sampler2D terrain_map;
`,Ed={name:"terrain",dependencies:[ne],vs:GU+"out vec3 commonPos;",fs:GU+"in vec3 commonPos;",inject:{"vs:#main-start":`
if (terrain.mode == TERRAIN_MODE_SKIP) {
  gl_Position = vec4(0.0);
  return;
}
`,"vs:DECKGL_FILTER_GL_POSITION":`
commonPos = geometry.position.xyz;
if (terrain.mode == TERRAIN_MODE_WRITE_HEIGHT_MAP) {
  vec2 texCoords = (commonPos.xy - terrain.bounds.xy) / terrain.bounds.zw;
  position = vec4(texCoords * 2.0 - 1.0, 0.0, 1.0);
  commonPos.z += project.commonOrigin.z;
}
if (terrain.mode == TERRAIN_MODE_USE_HEIGHT_MAP) {
  vec3 anchor = geometry.worldPosition;
  anchor.z = 0.0;
  vec3 anchorCommon = project_position(anchor);
  vec2 texCoords = (anchorCommon.xy - terrain.bounds.xy) / terrain.bounds.zw;
  if (texCoords.x >= 0.0 && texCoords.y >= 0.0 && texCoords.x <= 1.0 && texCoords.y <= 1.0) {
    float terrainZ = texture(terrain_map, texCoords).r;
    geometry.position.z += terrainZ;
    position = project_common_position_to_clipspace(geometry.position);
  }
}
    `,"fs:#main-start":`
if (terrain.mode == TERRAIN_MODE_WRITE_HEIGHT_MAP) {
  fragColor = vec4(commonPos.z, 0.0, 0.0, 1.0);
  return;
}
    `,"fs:DECKGL_FILTER_COLOR":`
if ((terrain.mode == TERRAIN_MODE_USE_COVER) || (terrain.mode == TERRAIN_MODE_USE_COVER_ONLY)) {
  vec2 texCoords = (commonPos.xy - terrain.bounds.xy) / terrain.bounds.zw;
  vec4 pixel = texture(terrain_map, texCoords);
  if (terrain.mode == TERRAIN_MODE_USE_COVER_ONLY) {
    color = pixel;
  } else {
    // pixel is premultiplied
    color = pixel + color * (1.0 - pixel.a);
  }
  return;
}
    `},getUniforms:(e={})=>{if("dummyHeightMap"in e){let{drawToTerrainHeightMap:t,heightMap:r,heightMapBounds:n,dummyHeightMap:s,terrainCover:i,useTerrainHeightMap:o,terrainSkipRender:a}=e,c=ne.getUniforms(e.project),{commonOrigin:l}=c,f=a?ns.SKIP:ns.NONE,h=s,u=null;return t?(f=ns.WRITE_HEIGHT_MAP,u=n):o&&r?(f=ns.USE_HEIGHT_MAP,h=r,u=n):i&&(h=(e.isPicking?i.getPickingFramebuffer():i.getRenderFramebuffer())?.colorAttachments[0].texture,e.isPicking&&(f=ns.SKIP),h?(f=f===ns.SKIP?ns.USE_COVER_ONLY:ns.USE_COVER,u=i.bounds):h=s),{mode:f,terrain_map:h,bounds:u?[u[0]-l[0],u[1]-l[1],u[2]-u[0],u[3]-u[1]]:[0,0,0,0]}}return{}},uniformTypes:{mode:"f32",bounds:"vec4<f32>"}};function Md(e,t){return e.createFramebuffer({id:t.id,colorAttachments:[e.createTexture({id:t.id,...t.float&&{format:"rgba32float",type:5126},mipmaps:!1,sampler:t.interpolate===!1?{minFilter:"nearest",magFilter:"nearest"}:{minFilter:"linear",magFilter:"linear"}})]})}var Ex=class{constructor(t){this.isDirty=!0,this.renderViewport=null,this.bounds=null,this.layers=[],this.targetBounds=null,this.targetBoundsCommon=null,this.targetLayer=t,this.tile=jU(t)}get id(){return this.targetLayer.id}get isActive(){return Boolean(this.targetLayer.getCurrentLayer())}shouldUpdate({targetLayer:t,viewport:r,layers:n,layerNeedsRedraw:s}){t&&(this.targetLayer=t);let i=r?this._updateViewport(r):!1,o=n?this._updateLayers(n):!1;if(s){for(let a of this.layers)if(s[a]){o=!0;break}}return o||i}_updateLayers(t){let r=!1;if(t=this.tile?Hlt(this.tile,t):t,t.length!==this.layers.length)r=!0;else for(let n=0;n<t.length;n++)if(t[n].id!==this.layers[n]){r=!0;break}return r&&(this.layers=t.map(n=>n.id)),r}_updateViewport(t){let r=this.targetLayer,n=!1;if(this.tile&&"boundingBox"in this.tile){if(!this.targetBounds){n=!0,this.targetBounds=this.tile.boundingBox;let i=t.projectPosition(this.targetBounds[0]),o=t.projectPosition(this.targetBounds[1]);this.targetBoundsCommon=[i[0],i[1],o[0],o[1]]}}else this.targetBounds!==r.getBounds()&&(n=!0,this.targetBounds=r.getBounds(),this.targetBoundsCommon=Tl([r],t));if(!this.targetBoundsCommon)return!1;let s=Math.ceil(t.zoom+.5);if(this.tile)this.bounds=this.targetBoundsCommon;else{let i=this.renderViewport?.zoom;n=n||s!==i;let o=El(this.targetBoundsCommon,t),a=this.bounds;n=n||!a||o.some((c,l)=>c!==a[l]),this.bounds=o}return n&&(this.renderViewport=vl({bounds:this.bounds,zoom:s,viewport:t})),n}getRenderFramebuffer(){return!this.renderViewport||this.layers.length===0?null:(this.fbo||(this.fbo=Md(this.targetLayer.context.device,{id:this.id})),this.fbo)}getPickingFramebuffer(){return!this.renderViewport||this.layers.length===0&&!this.targetLayer.props.pickable?null:(this.pickingFbo||(this.pickingFbo=Md(this.targetLayer.context.device,{id:`${this.id}-picking`,interpolate:!1})),this.pickingFbo)}filterLayers(t){return t.filter(({id:r})=>this.layers.includes(r))}delete(){let{fbo:t,pickingFbo:r}=this;t&&(t.colorAttachments[0].destroy(),t.destroy()),r&&(r.colorAttachments[0].destroy(),r.destroy())}};function Hlt(e,t){return t.filter(r=>{let n=jU(r);return n?Glt(e.boundingBox,n.boundingBox):!0})}function jU(e){for(;e;){let{tile:t}=e.props;if(t)return t;e=e.parent}return null}function Glt(e,t){return e&&t?e[0][0]<t[1][0]&&t[0][0]<e[1][0]&&e[0][1]<t[1][1]&&t[0][1]<e[1][1]:!1}var jlt={blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"},Mx=class extends Fe{getRenderableLayers(t,r){let{layers:n}=r,s=[],i=this._getDrawLayerParams(t,r,!0);for(let o=0;o<n.length;o++){let a=n[o];!a.isComposite&&i[o].shouldDrawLayer&&s.push(a)}return s}renderHeightMap(t,r){let n=t.getRenderFramebuffer(),s=t.renderViewport;!n||!s||(n.resize(s),this.render({...r,target:n,pass:"terrain-height-map",layers:r.layers,viewports:[s],effects:[],clearColor:[0,0,0,0]}))}renderTerrainCover(t,r){let n=t.getRenderFramebuffer(),s=t.renderViewport;if(!n||!s)return;let i=t.filterLayers(r.layers);n.resize(s),this.render({...r,target:n,pass:`terrain-cover-${t.id}`,layers:i,effects:[],viewports:[s],clearColor:[0,0,0,0]})}getLayerParameters(t,r,n){return{...t.props.parameters,blend:!0,depthCompare:"always",...t.props.operation.includes("terrain")&&jlt}}getShaderModuleProps(t,r,n){return{terrain:{project:n.project}}}};var Sx=class extends cn{constructor(){super(...arguments),this.drawParameters={}}getRenderableLayers(t,r){let{layers:n}=r,s=[];this.drawParameters={},this._resetColorEncoder(r.pickZ);let i=this._getDrawLayerParams(t,r);for(let o=0;o<n.length;o++){let a=n[o];!a.isComposite&&i[o].shouldDrawLayer&&(s.push(a),this.drawParameters[a.id]=i[o].layerParameters)}return s}renderTerrainCover(t,r){let n=t.getPickingFramebuffer(),s=t.renderViewport;if(!n||!s)return;let i=t.filterLayers(r.layers),o=t.targetLayer;o.props.pickable&&i.unshift(o),n.resize(s),this.render({...r,pickingFBO:n,pass:`terrain-cover-picking-${t.id}`,layers:i,effects:[],viewports:[s],cullRect:void 0,deviceRect:s,pickZ:!1})}getLayerParameters(t,r,n){let s;return this.drawParameters[t.id]?s=this.drawParameters[t.id]:(s=super.getLayerParameters(t,r,n),s.blend=!0),{...s,depthCompare:"always"}}getShaderModuleProps(t,r,n){return{terrain:{project:n.project}}}};var qU=2048,Sd=class{static isSupported(t){return t.isTextureFormatRenderable("rgba32float")}constructor(t){this.renderViewport=null,this.bounds=null,this.layers=[],this.layersBounds=[],this.layersBoundsCommon=null,this.lastViewport=null,this.device=t}getRenderFramebuffer(){return this.renderViewport?(this.fbo||(this.fbo=Md(this.device,{id:"height-map",float:!0})),this.fbo):null}shouldUpdate({layers:t,viewport:r}){let n=t.length!==this.layers.length||t.some((i,o)=>i!==this.layers[o]||i.props.transitions||i.getBounds()!==this.layersBounds[o]);n&&(this.layers=t,this.layersBounds=t.map(i=>i.getBounds()),this.layersBoundsCommon=Tl(t,r));let s=!this.lastViewport||!r.equals(this.lastViewport);if(!this.layersBoundsCommon)this.renderViewport=null;else if(n||s){let i=El(this.layersBoundsCommon,r);if(i[2]<=i[0]||i[3]<=i[1])return this.renderViewport=null,!1;this.bounds=i,this.lastViewport=r;let o=r.scale,a=(i[2]-i[0])*o,c=(i[3]-i[1])*o;return this.renderViewport=a>0||c>0?vl({bounds:[r.center[0]-1,r.center[1]-1,r.center[0]+1,r.center[1]+1],zoom:r.zoom,width:Math.min(a,qU),height:Math.min(c,qU),viewport:r}):null,!0}return!1}delete(){this.fbo&&(this.fbo.colorAttachments[0].delete(),this.fbo.delete())}};var wx=class{constructor(){this.id="terrain-effect",this.props=null,this.useInPicking=!0,this.isPicking=!1,this.isDrapingEnabled=!1,this.terrainCovers=new Map}setup({device:t,deck:r}){this.dummyHeightMap=t.createTexture({width:1,height:1,data:new Uint8Array([0,0,0,0])}),this.terrainPass=new Mx(t,{id:"terrain"}),this.terrainPickingPass=new Sx(t,{id:"terrain-picking"}),Sd.isSupported(t)?this.heightMap=new Sd(t):W.warn("Terrain offset mode is not supported by this browser")(),r._addDefaultShaderModule(Ed)}preRender(t){if(t.pickZ){this.isDrapingEnabled=!1;return}let{viewports:r}=t,n=t.pass.startsWith("picking");this.isPicking=n,this.isDrapingEnabled=!0;let s=r[0],i=(n?this.terrainPickingPass:this.terrainPass).getRenderableLayers(s,t),o=i.filter(c=>c.props.operation.includes("terrain"));if(o.length===0)return;n||i.filter(l=>l.state.terrainDrawMode==="offset").length>0&&this._updateHeightMap(o,s,t);let a=i.filter(c=>c.state.terrainDrawMode==="drape");this._updateTerrainCovers(o,a,s,t)}getShaderModuleProps(t,r){let{terrainDrawMode:n}=t.state;return{terrain:{project:r.project,isPicking:this.isPicking,heightMap:this.heightMap?.getRenderFramebuffer()?.colorAttachments[0].texture||null,heightMapBounds:this.heightMap?.bounds,dummyHeightMap:this.dummyHeightMap,terrainCover:this.isDrapingEnabled?this.terrainCovers.get(t.id):null,useTerrainHeightMap:n==="offset",terrainSkipRender:n==="drape"||!t.props.operation.includes("draw")}}}cleanup({deck:t}){this.dummyHeightMap&&(this.dummyHeightMap.delete(),this.dummyHeightMap=void 0),this.heightMap&&(this.heightMap.delete(),this.heightMap=void 0);for(let r of this.terrainCovers.values())r.delete();this.terrainCovers.clear(),t._removeDefaultShaderModule(Ed)}_updateHeightMap(t,r,n){!this.heightMap||!this.heightMap.shouldUpdate({layers:t,viewport:r})||this.terrainPass.renderHeightMap(this.heightMap,{...n,layers:t,shaderModuleProps:{terrain:{heightMapBounds:this.heightMap.bounds,dummyHeightMap:this.dummyHeightMap,drawToTerrainHeightMap:!0},project:{devicePixelRatio:1}}})}_updateTerrainCovers(t,r,n,s){let i={};for(let o of r)o.state.terrainCoverNeedsRedraw&&(i[o.id]=!0,o.state.terrainCoverNeedsRedraw=!1);for(let o of this.terrainCovers.values())o.isDirty=o.isDirty||o.shouldUpdate({layerNeedsRedraw:i});for(let o of t)this._updateTerrainCover(o,r,n,s);this.isPicking||this._pruneTerrainCovers()}_updateTerrainCover(t,r,n,s){let i=this.isPicking?this.terrainPickingPass:this.terrainPass,o=this.terrainCovers.get(t.id);o||(o=new Ex(t),this.terrainCovers.set(t.id,o));try{let a=o.shouldUpdate({targetLayer:t,viewport:n,layers:r});(this.isPicking||o.isDirty||a)&&(i.renderTerrainCover(o,{...s,layers:r,shaderModuleProps:{terrain:{dummyHeightMap:this.dummyHeightMap,terrainSkipRender:!1},project:{devicePixelRatio:1}}}),this.isPicking||(o.isDirty=!1))}catch(a){t.raiseError(a,`Error rendering terrain cover ${o.id}`)}}_pruneTerrainCovers(){let t=[];for(let[r,n]of this.terrainCovers)n.isActive||t.push(r);for(let r of t)this.terrainCovers.delete(r)}};var qlt={terrainDrawMode:void 0},wd=class extends ye{getShaders(){return{modules:[Ed]}}initializeState(){this.context.deck?._addDefaultEffect(new wx)}updateState(t){let{props:r,oldProps:n}=t;if(this.state.terrainDrawMode&&r.terrainDrawMode===n.terrainDrawMode&&r.extruded===n.extruded)return;let{terrainDrawMode:s}=r;if(!s){let i=this.props.extruded,o=this.getAttributeManager()?.attributes,a=o&&"instancePositions"in o;s=i||a?"offset":"drape"}this.setState({terrainDrawMode:s})}onNeedsRedraw(){let t=this.state;t.terrainDrawMode==="drape"&&(t.terrainCoverNeedsRedraw=!0)}};wd.defaultProps=qlt;wd.extensionName="TerrainExtension";var XU=wd;var Cd={x:0,y:1,z:2};function ga(e,t={}){let{start:r=0,end:n=e.length,plane:s="xy"}=t,i=t.size||2,o=0,a=Cd[s[0]],c=Cd[s[1]];for(let l=r,f=n-i;l<n;l+=i)o+=(e[l+a]-e[f+a])*(e[l+c]+e[f+c]),f=l;return o/2}function Rv(e,t,r=2,n,s="xy"){let i=t&&t.length,o=i?t[0]*r:e.length,a=$U(e,0,o,r,!0,n&&n[0],s),c=[];if(!a||a.next===a.prev)return c;let l,f,h,u,d,p,m;if(i&&(a=Qlt(e,t,a,r,n,s)),e.length>80*r){u=f=e[0],d=h=e[1];for(let g=r;g<o;g+=r)p=e[g],m=e[g+1],p<u&&(u=p),m<d&&(d=m),p>f&&(f=p),m>h&&(h=m);l=Math.max(f-u,h-d),l=l!==0?32767/l:0}return Pd(a,c,r,u,d,l,0),c}function $U(e,t,r,n,s,i,o){let a,c;i===void 0&&(i=ga(e,{start:t,end:r,size:n,plane:o}));let l=Cd[o[0]],f=Cd[o[1]];if(s===i<0)for(a=t;a<r;a+=n)c=YU(a,e[a+l],e[a+f],c);else for(a=r-n;a>=t;a-=n)c=YU(a,e[a+l],e[a+f],c);return c&&Ix(c,c.next)&&(Rd(c),c=c.next),c}function xa(e,t){if(!e)return e;t||(t=e);let r=e,n;do if(n=!1,!r.steiner&&(Ix(r,r.next)||Qt(r.prev,r,r.next)===0)){if(Rd(r),r=t=r.prev,r===r.next)break;n=!0}else r=r.next;while(n||r!==t);return t}function Pd(e,t,r,n,s,i,o){if(!e)return;!o&&i&&sft(e,n,s,i);let a=e,c,l;for(;e.prev!==e.next;){if(c=e.prev,l=e.next,i?Klt(e,n,s,i):$lt(e)){t.push(c.i/r|0),t.push(e.i/r|0),t.push(l.i/r|0),Rd(e),e=l.next,a=l.next;continue}if(e=l,e===a){o?o===1?(e=Zlt(xa(e),t,r),Pd(e,t,r,n,s,i,2)):o===2&&Jlt(e,t,r,n,s,i):Pd(xa(e),t,r,n,s,i,1);break}}}function $lt(e){let t=e.prev,r=e,n=e.next;if(Qt(t,r,n)>=0)return!1;let s=t.x,i=r.x,o=n.x,a=t.y,c=r.y,l=n.y,f=s<i?s<o?s:o:i<o?i:o,h=a<c?a<l?a:l:c<l?c:l,u=s>i?s>o?s:o:i>o?i:o,d=a>c?a>l?a:l:c>l?c:l,p=n.next;for(;p!==t;){if(p.x>=f&&p.x<=u&&p.y>=h&&p.y<=d&&Ml(s,a,i,c,o,l,p.x,p.y)&&Qt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function Klt(e,t,r,n){let s=e.prev,i=e,o=e.next;if(Qt(s,i,o)>=0)return!1;let a=s.x,c=i.x,l=o.x,f=s.y,h=i.y,u=o.y,d=a<c?a<l?a:l:c<l?c:l,p=f<h?f<u?f:u:h<u?h:u,m=a>c?a>l?a:l:c>l?c:l,g=f>h?f>u?f:u:h>u?h:u,x=Iv(d,p,t,r,n),A=Iv(m,g,t,r,n),_=e.prevZ,y=e.nextZ;for(;_&&_.z>=x&&y&&y.z<=A;){if(_.x>=d&&_.x<=m&&_.y>=p&&_.y<=g&&_!==s&&_!==o&&Ml(a,f,c,h,l,u,_.x,_.y)&&Qt(_.prev,_,_.next)>=0||(_=_.prevZ,y.x>=d&&y.x<=m&&y.y>=p&&y.y<=g&&y!==s&&y!==o&&Ml(a,f,c,h,l,u,y.x,y.y)&&Qt(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;_&&_.z>=x;){if(_.x>=d&&_.x<=m&&_.y>=p&&_.y<=g&&_!==s&&_!==o&&Ml(a,f,c,h,l,u,_.x,_.y)&&Qt(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;y&&y.z<=A;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=g&&y!==s&&y!==o&&Ml(a,f,c,h,l,u,y.x,y.y)&&Qt(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function Zlt(e,t,r){let n=e;do{let s=n.prev,i=n.next.next;!Ix(s,i)&&KU(s,n,n.next,i)&&Id(s,i)&&Id(i,s)&&(t.push(s.i/r|0),t.push(n.i/r|0),t.push(i.i/r|0),Rd(n),Rd(n.next),n=e=i),n=n.next}while(n!==e);return xa(n)}function Jlt(e,t,r,n,s,i){let o=e;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&aft(o,a)){let c=ZU(o,a);o=xa(o,o.next),c=xa(c,c.next),Pd(o,t,r,n,s,i,0),Pd(c,t,r,n,s,i,0);return}a=a.next}o=o.next}while(o!==e)}function Qlt(e,t,r,n,s,i){let o=[],a,c,l,f,h;for(a=0,c=t.length;a<c;a++)l=t[a]*n,f=a<c-1?t[a+1]*n:e.length,h=$U(e,l,f,n,!1,s&&s[a+1],i),h===h.next&&(h.steiner=!0),o.push(oft(h));for(o.sort(tft),a=0;a<o.length;a++)r=eft(o[a],r);return r}function tft(e,t){return e.x-t.x}function eft(e,t){let r=rft(e,t);if(!r)return t;let n=ZU(r,e);return xa(n,n.next),xa(r,r.next)}function rft(e,t){let r=t,n=e.x,s=e.y,i=-1/0,o;do{if(s<=r.y&&s>=r.next.y&&r.next.y!==r.y){let u=r.x+(s-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(u<=n&&u>i&&(i=u,o=r.x<r.next.x?r:r.next,u===n))return o}r=r.next}while(r!==t);if(!o)return null;let a=o,c=o.x,l=o.y,f=1/0,h;r=o;do n>=r.x&&r.x>=c&&n!==r.x&&Ml(s<l?n:i,s,c,l,s<l?i:n,s,r.x,r.y)&&(h=Math.abs(s-r.y)/(n-r.x),Id(r,e)&&(h<f||h===f&&(r.x>o.x||r.x===o.x&&nft(o,r)))&&(o=r,f=h)),r=r.next;while(r!==a);return o}function nft(e,t){return Qt(e.prev,e,t.prev)<0&&Qt(t.next,e,e.next)<0}function sft(e,t,r,n){let s=e;do s.z===0&&(s.z=Iv(s.x,s.y,t,r,n)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==e);s.prevZ.nextZ=null,s.prevZ=null,ift(s)}function ift(e){let t,r,n=1,s,i,o,a,c,l;do{for(i=e,e=null,l=null,s=0;i;){for(s++,a=i,o=0,r=0;r<n&&(o++,a=a.nextZ,!!a);r++);for(c=n;o>0||c>0&&a;)o!==0&&(c===0||!a||i.z<=a.z)?(t=i,i=i.nextZ,o--):(t=a,a=a.nextZ,c--),l?l.nextZ=t:e=t,t.prevZ=l,l=t;i=a}l.nextZ=null,n*=2}while(s>1);return e}function Iv(e,t,r,n,s){return e=(e-r)*s|0,t=(t-n)*s|0,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function oft(e){let t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e);return r}function Ml(e,t,r,n,s,i,o,a){return(s-o)*(t-a)>=(e-o)*(i-a)&&(e-o)*(n-a)>=(r-o)*(t-a)&&(r-o)*(i-a)>=(s-o)*(n-a)}function aft(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!cft(e,t)&&(Id(e,t)&&Id(t,e)&&lft(e,t)&&(Qt(e.prev,e,t.prev)||Qt(e,t.prev,t))||Ix(e,t)&&Qt(e.prev,e,e.next)>0&&Qt(t.prev,t,t.next)>0)}function Qt(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function Ix(e,t){return e.x===t.x&&e.y===t.y}function KU(e,t,r,n){let s=Px(Qt(e,t,r)),i=Px(Qt(e,t,n)),o=Px(Qt(r,n,e)),a=Px(Qt(r,n,t));return!!(s!==i&&o!==a||s===0&&Cx(e,r,t)||i===0&&Cx(e,n,t)||o===0&&Cx(r,e,n)||a===0&&Cx(r,t,n))}function Cx(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function Px(e){return e>0?1:e<0?-1:0}function cft(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&KU(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function Id(e,t){return Qt(e.prev,e,e.next)<0?Qt(e,t,e.next)>=0&&Qt(e,e.prev,t)>=0:Qt(e,t,e.prev)<0||Qt(e,e.next,t)<0}function lft(e,t){let r=e,n=!1,s=(e.x+t.x)/2,i=(e.y+t.y)/2;do r.y>i!=r.next.y>i&&r.next.y!==r.y&&s<(r.next.x-r.x)*(i-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next;while(r!==e);return n}function ZU(e,t){let r=new Od(e.i,e.x,e.y),n=new Od(t.i,t.x,t.y),s=e.next,i=t.prev;return e.next=t,t.prev=e,r.next=s,s.prev=r,n.next=r,r.prev=n,i.next=n,n.prev=i,n}function YU(e,t,r,n){let s=new Od(e,t,r);return n?(s.next=n.next,s.prev=n,n.next.prev=s,n.next=s):(s.prev=s,s.next=s),s}function Rd(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}var Od=class{constructor(t,r,n){this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1,this.i=t,this.x=r,this.y=n}};function Bv(e,t,r){let n=pft(e),s=Object.keys(n).filter(i=>n[i]!==Array);return mft(e,{propArrayTypes:n,...t},{numericPropKeys:r&&r.numericPropKeys||s,PositionDataType:r?r.PositionDataType:Float32Array,triangulate:r?r.triangulate:!0})}function pft(e){let t={};for(let r of e)if(r.properties)for(let n in r.properties){let s=r.properties[n];t[n]=bft(s,t[n])}return t}function mft(e,t,r){let{pointPositionsCount:n,pointFeaturesCount:s,linePositionsCount:i,linePathsCount:o,lineFeaturesCount:a,polygonPositionsCount:c,polygonObjectsCount:l,polygonRingsCount:f,polygonFeaturesCount:h,propArrayTypes:u,coordLength:d}=t,{numericPropKeys:p=[],PositionDataType:m=Float32Array,triangulate:g=!0}=r,x=e[0]&&"id"in e[0],A=e.length>65535?Uint32Array:Uint16Array,_={type:"Point",positions:new m(n*d),globalFeatureIds:new A(n),featureIds:s>65535?new Uint32Array(n):new Uint16Array(n),numericProps:{},properties:[],fields:[]},y={type:"LineString",pathIndices:i>65535?new Uint32Array(o+1):new Uint16Array(o+1),positions:new m(i*d),globalFeatureIds:new A(i),featureIds:a>65535?new Uint32Array(i):new Uint16Array(i),numericProps:{},properties:[],fields:[]},T={type:"Polygon",polygonIndices:c>65535?new Uint32Array(l+1):new Uint16Array(l+1),primitivePolygonIndices:c>65535?new Uint32Array(f+1):new Uint16Array(f+1),positions:new m(c*d),globalFeatureIds:new A(c),featureIds:h>65535?new Uint32Array(c):new Uint16Array(c),numericProps:{},properties:[],fields:[]};g&&(T.triangles=[]);for(let C of[_,y,T])for(let w of p){let E=u[w];C.numericProps[w]=new E(C.positions.length/d)}y.pathIndices[o]=i,T.polygonIndices[l]=c,T.primitivePolygonIndices[f]=c;let v={pointPosition:0,pointFeature:0,linePosition:0,linePath:0,lineFeature:0,polygonPosition:0,polygonObject:0,polygonRing:0,polygonFeature:0,feature:0};for(let C of e){let w=C.geometry,E=C.properties||{};switch(w.type){case"Point":gft(w,_,v,d,E),_.properties.push(Lv(E,p)),x&&_.fields.push({id:C.id}),v.pointFeature++;break;case"LineString":xft(w,y,v,d,E),y.properties.push(Lv(E,p)),x&&y.fields.push({id:C.id}),v.lineFeature++;break;case"Polygon":_ft(w,T,v,d,E),T.properties.push(Lv(E,p)),x&&T.fields.push({id:C.id}),v.polygonFeature++;break;default:throw new Error("Invalid geometry type")}v.feature++}return Aft(_,y,T,d)}function gft(e,t,r,n,s){t.positions.set(e.data,r.pointPosition*n);let i=e.data.length/n;Nv(t,s,r.pointPosition,i),t.globalFeatureIds.fill(r.feature,r.pointPosition,r.pointPosition+i),t.featureIds.fill(r.pointFeature,r.pointPosition,r.pointPosition+i),r.pointPosition+=i}function xft(e,t,r,n,s){t.positions.set(e.data,r.linePosition*n);let i=e.data.length/n;Nv(t,s,r.linePosition,i),t.globalFeatureIds.fill(r.feature,r.linePosition,r.linePosition+i),t.featureIds.fill(r.lineFeature,r.linePosition,r.linePosition+i);for(let o=0,a=e.indices.length;o<a;++o){let c=e.indices[o],l=o===a-1?e.data.length:e.indices[o+1];t.pathIndices[r.linePath++]=r.linePosition,r.linePosition+=(l-c)/n}}function _ft(e,t,r,n,s){t.positions.set(e.data,r.polygonPosition*n);let i=e.data.length/n;Nv(t,s,r.polygonPosition,i),t.globalFeatureIds.fill(r.feature,r.polygonPosition,r.polygonPosition+i),t.featureIds.fill(r.polygonFeature,r.polygonPosition,r.polygonPosition+i);for(let o=0,a=e.indices.length;o<a;++o){let c=r.polygonPosition;t.polygonIndices[r.polygonObject++]=c;let l=e.areas[o],f=e.indices[o],h=e.indices[o+1];for(let d=0,p=f.length;d<p;++d){let m=f[d],g=d===p-1?h===void 0?e.data.length:h[0]:f[d+1];t.primitivePolygonIndices[r.polygonRing++]=r.polygonPosition,r.polygonPosition+=(g-m)/n}let u=r.polygonPosition;yft(t,l,f,{startPosition:c,endPosition:u,coordLength:n})}}function yft(e,t,r,{startPosition:n,endPosition:s,coordLength:i}){if(!e.triangles)return;let o=n*i,a=s*i,c=e.positions.subarray(o,a),l=r[0],f=r.slice(1).map(u=>(u-l)/i),h=Rv(c,f,i,t);for(let u=0,d=h.length;u<d;++u)e.triangles.push(n+h[u])}function Ov(e,t){let r={};for(let n in e)r[n]={value:e[n],size:t};return r}function Aft(e,t,r,n){let s={shape:"binary-feature-collection",points:{...e,positions:{value:e.positions,size:n},globalFeatureIds:{value:e.globalFeatureIds,size:1},featureIds:{value:e.featureIds,size:1},numericProps:Ov(e.numericProps,1)},lines:{...t,positions:{value:t.positions,size:n},pathIndices:{value:t.pathIndices,size:1},globalFeatureIds:{value:t.globalFeatureIds,size:1},featureIds:{value:t.featureIds,size:1},numericProps:Ov(t.numericProps,1)},polygons:{...r,positions:{value:r.positions,size:n},polygonIndices:{value:r.polygonIndices,size:1},primitivePolygonIndices:{value:r.primitivePolygonIndices,size:1},globalFeatureIds:{value:r.globalFeatureIds,size:1},featureIds:{value:r.featureIds,size:1},numericProps:Ov(r.numericProps,1)}};return s.polygons&&r.triangles&&(s.polygons.triangles={value:new Uint32Array(r.triangles),size:1}),s}function Nv(e,t,r,n){for(let s in e.numericProps)if(s in t){let i=t[s];e.numericProps[s].fill(i,r,r+n)}}function Lv(e,t){let r={};for(let n in e)t.includes(n)||(r[n]=e[n]);return r}function bft(e,t){return t===Array||!Number.isFinite(e)?Array:t===Float64Array||Math.fround(e)!==e?Float64Array:Float32Array}function Lx(e,t){let r=t?.globalFeatureId;return r!==void 0?Tft(e,r):vft(e,t?.type)}function Tft(e,t){let r=e8(e);for(let n of r){let s=0,i=n.featureIds.value[0];for(let o=0;o<n.featureIds.value.length;o++){let a=n.featureIds.value[o];if(a!==i){if(t===n.globalFeatureIds.value[s])return Rx(n,s,o);s=o,i=a}}if(t===n.globalFeatureIds.value[s])return Rx(n,s,n.featureIds.value.length)}throw new Error(`featureId:${t} not found`)}function vft(e,t){let r=e8(e,t);return Eft(r)}function t8(e,t,r){switch(e.type){case"Point":return Cft(e,t,r);case"LineString":return wft(e,t,r);case"Polygon":return r8(e,t,r);default:let n=e;throw new Error(`Unsupported geometry type: ${n?.type}`)}}function e8(e,t){let r=[];return e.points&&(e.points.type="Point",r.push(e.points)),e.lines&&(e.lines.type="LineString",r.push(e.lines)),e.polygons&&(e.polygons.type="Polygon",r.push(e.polygons)),r}function Eft(e){let t=[];for(let r of e){if(r.featureIds.value.length===0)continue;let n=0,s=r.featureIds.value[0];for(let i=0;i<r.featureIds.value.length;i++){let o=r.featureIds.value[i];o!==s&&(t.push(Rx(r,n,i)),n=i,s=o)}t.push(Rx(r,n,r.featureIds.value.length))}return t}function Rx(e,t,r){let n=t8(e,t,r),s=Sft(e,t,r),i=Mft(e,t,r);return{type:"Feature",geometry:n,properties:s,...i}}function Mft(e,t=0,r){return e.fields&&e.fields[e.featureIds.value[t]]}function Sft(e,t=0,r){let n=Object.assign({},e.properties[e.featureIds.value[t]]);for(let s in e.numericProps)n[s]=e.numericProps[s].value[t];return n}function r8(e,t=-1/0,r=1/0){let{positions:n}=e,s=e.polygonIndices.value.filter(c=>c>=t&&c<=r),i=e.primitivePolygonIndices.value.filter(c=>c>=t&&c<=r);if(!(s.length>2)){let c=[];for(let l=0;l<i.length-1;l++){let f=i[l],h=i[l+1],u=Ox(n,f,h);c.push(u)}return{type:"Polygon",coordinates:c}}let a=[];for(let c=0;c<s.length-1;c++){let l=s[c],f=s[c+1],h=r8(e,l,f).coordinates;a.push(h)}return{type:"MultiPolygon",coordinates:a}}function wft(e,t=-1/0,r=1/0){let{positions:n}=e,s=e.pathIndices.value.filter(a=>a>=t&&a<=r);if(!(s.length>2))return{type:"LineString",coordinates:Ox(n,s[0],s[1])};let o=[];for(let a=0;a<s.length-1;a++){let c=Ox(n,s[a],s[a+1]);o.push(c)}return{type:"MultiLineString",coordinates:o}}function Cft(e,t,r){let{positions:n}=e,s=Ox(n,t,r);return s.length>1?{type:"MultiPoint",coordinates:s}:{type:"Point",coordinates:s[0]}}function Ox(e,t,r){t=t||0,r=r||e.value.length/e.size;let n=[];for(let s=t;s<r;s++){let i=Array();for(let o=s*e.size;o<(s+1)*e.size;o++)i.push(Number(e.value[o]));n.push(i)}return n}var Wv=os(l8(),1);function f8(e){let t=e.length;if(t<=1)return[e];let r=[],n,s;for(let i=0;i<t;i++){let o=qft(e[i]);o!==0&&(s===void 0&&(s=o<0),s===o<0?(n&&r.push(n),n=[e[i]]):n&&n.push(e[i]))}return n&&r.push(n),r}function qft(e){let t=0;for(let r=0,n=e.length-1,s,i;r<e.length;n=r++)s=e[r],i=e[n],t+=(i[0]-s[0])*(s[1]+i[1]);return t}function h8(e,t,r){t&&r&&(e===1?t.id=r.readVarint():e===2?Xft(r,t):e===3?t.type=r.readVarint():e===4&&(t._geometry=r.pos))}function Xft(e,t){let r=e.readVarint()+e.pos;for(;e.pos<r;){let n=t._keys[e.readVarint()],s=t._values[e.readVarint()];t.properties[n]=s}}var Cl=class{properties;extent;type;id;_pbf;_geometry;_keys;_values;static get types(){return["Unknown","Point","LineString","Polygon"]}constructor(t,r,n,s,i){this.properties={},this.extent=n,this.type=0,this.id=null,this._pbf=t,this._geometry=-1,this._keys=s,this._values=i,t.readFields(h8,this,r)}loadGeometry(){let t=this._pbf;t.pos=this._geometry;let r=t.readVarint()+t.pos,n=1,s=0,i=0,o=0,a=[],c;for(;t.pos<r;){if(s<=0){let l=t.readVarint();n=l&7,s=l>>3}if(s--,n===1||n===2)i+=t.readSVarint(),o+=t.readSVarint(),n===1&&(c&&a.push(c),c=[]),c&&c.push([i,o]);else if(n===7)c&&c.push(c[0].slice());else throw new Error(`unknown command ${n}`)}return c&&a.push(c),a}bbox(){let t=this._pbf;t.pos=this._geometry;let r=t.readVarint()+t.pos,n=1,s=0,i=0,o=0,a=1/0,c=-1/0,l=1/0,f=-1/0;for(;t.pos<r;){if(s<=0){let h=t.readVarint();n=h&7,s=h>>3}if(s--,n===1||n===2)i+=t.readSVarint(),o+=t.readSVarint(),i<a&&(a=i),i>c&&(c=i),o<l&&(l=o),o>f&&(f=o);else if(n!==7)throw new Error(`unknown command ${n}`)}return[a,l,c,f]}_toGeoJSON(t){let r=this.loadGeometry(),n=Cl.types[this.type],s,i;switch(this.type){case 1:let a=[];for(s=0;s<r.length;s++)a[s]=r[s][0];r=a,t(r,this);break;case 2:for(s=0;s<r.length;s++)t(r[s],this);break;case 3:for(r=f8(r),s=0;s<r.length;s++)for(i=0;i<r[s].length;i++)t(r[s][i],this);break}r.length===1?r=r[0]:n=`Multi${n}`;let o={type:"Feature",geometry:{type:n,coordinates:r},properties:this.properties};return this.id!==null&&(o.id=this.id),o}toGeoJSON(t){if(typeof t=="function")return this._toGeoJSON(t);let{x:r,y:n,z:s}=t,i=this.extent*Math.pow(2,s),o=this.extent*r,a=this.extent*n;function c(l){for(let f=0;f<l.length;f++){let h=l[f];h[0]=(h[0]+o)*360/i-180;let u=180-(h[1]+a)*360/i;h[1]=360/Math.PI*Math.atan(Math.exp(u*Math.PI/180))-90}}return this._toGeoJSON(c)}};var Fx=class{version;name;extent;length;_pbf;_keys;_values;_features;constructor(t,r){this.version=1,this.name="",this.extent=4096,this.length=0,this._pbf=t,this._keys=[],this._values=[],this._features=[],t.readFields(Yft,this,r),this.length=this._features.length}feature(t){if(t<0||t>=this._features.length)throw new Error("feature index out of bounds");this._pbf.pos=this._features[t];let r=this._pbf.readVarint()+this._pbf.pos;return new Cl(this._pbf,r,this.extent,this._keys,this._values)}};function Yft(e,t,r){t&&r&&(e===15?t.version=r.readVarint():e===1?t.name=r.readString():e===5?t.extent=r.readVarint():e===2?t._features.push(r.pos):e===3?t._keys.push(r.readString()):e===4&&t._values.push($ft(r)))}function $ft(e){let t=null,r=e.readVarint()+e.pos;for(;e.pos<r;){let n=e.readVarint()>>3;t=n===1?e.readString():n===2?e.readFloat():n===3?e.readDouble():n===4?e.readVarint64():n===5?e.readVarint():n===6?e.readSVarint():n===7?e.readBoolean():null}return t}var Dx=class{layers;constructor(t,r){this.layers=t.readFields(Kft,{},r)}};function Kft(e,t,r){if(e===3&&r){let n=new Fx(r,r.readVarint()+r.pos);n.length&&t&&(t[n.name]=n)}}function u8(e){let t=e.indices.length,r="Polygon";if(t<=1)return{type:r,data:e.data,areas:[[ga(e.data)]],indices:[e.indices]};let n=[],s=[],i=[],o=[],a,c=0;for(let l,f=0,h;f<t;f++){h=e.indices[f]-c,l=e.indices[f+1]-c||e.data.length;let u=e.data.slice(h,l),d=ga(u);if(d===0){let p=e.data.slice(0,h),m=e.data.slice(l);e.data=p.concat(m),c+=l-h;continue}a===void 0&&(a=d<0),a===d<0?(o.length&&(n.push(i),s.push(o)),o=[h],i=[d]):(i.push(d),o.push(h))}return i&&n.push(i),o.length&&s.push(o),{type:r,areas:n,indices:s,data:e.data}}function d8(e,t,r,n){for(let s=0,i=e.length;s<i;s+=2){e[s]=(e[s]+t)*360/n-180;let o=180-(e[s+1]+r)*360/n;e[s+1]=360/Math.PI*Math.atan(Math.exp(o*Math.PI/180))-90}}function p8(e,t,r){t&&r&&(e===1?t.id=r.readVarint():e===2?Zft(r,t):e===3?t.type=r.readVarint():e===4&&(t._geometry=r.pos))}function Zft(e,t){let r=e.readVarint()+e.pos;for(;e.pos<r;){let n=t._keys[e.readVarint()],s=t._values[e.readVarint()];t.properties[n]=s}}var m8,_a,kv,kx,Uv,zv,Ld;var Ux=class{properties;extent;type;id;_pbf;_geometry;_keys;_values;_geometryInfo;constructor(t,r,n,s,i,o){this.properties={},this.extent=n,this.type=0,this.id=null,this._pbf=t,this._geometry=-1,this._keys=s,this._values=i,this._geometryInfo=o,t.readFields(p8,this,r)}loadGeometry(){let t=this._pbf;t.pos=this._geometry,m8=t.readVarint()+t.pos,_a=1,kx=0,Uv=0,zv=0,Ld=0;let r=[],n=[];for(;t.pos<m8;)if(kx<=0&&(kv=t.readVarint(),_a=kv&7,kx=kv>>3),kx--,_a===1||_a===2)Uv+=t.readSVarint(),zv+=t.readSVarint(),_a===1&&r.push(Ld),n.push(Uv,zv),Ld+=2;else if(_a===7){if(Ld>0){let s=r[r.length-1];n.push(n[s],n[s+1]),Ld+=2}}else throw new Error(`unknown command ${_a}`);return{data:n,indices:r}}_toBinaryCoordinates(t){let r=this.loadGeometry(),n;t(r.data,this);let s=2;switch(this.type){case 1:this._geometryInfo.pointFeaturesCount++,this._geometryInfo.pointPositionsCount+=r.indices.length,n={type:"Point",...r};break;case 2:this._geometryInfo.lineFeaturesCount++,this._geometryInfo.linePathsCount+=r.indices.length,this._geometryInfo.linePositionsCount+=r.data.length/s,n={type:"LineString",...r};break;case 3:n=u8(r),this._geometryInfo.polygonFeaturesCount++,this._geometryInfo.polygonObjectsCount+=n.indices.length;for(let o of n.indices)this._geometryInfo.polygonRingsCount+=o.length;this._geometryInfo.polygonPositionsCount+=n.data.length/s;break;default:throw new Error(`Invalid geometry type: ${this.type}`)}let i={type:"Feature",geometry:n,properties:this.properties};return this.id!==null&&(i.id=this.id),i}toBinaryCoordinates(t){if(typeof t=="function")return this._toBinaryCoordinates(t);let{x:r,y:n,z:s}=t,i=this.extent*Math.pow(2,s),o=this.extent*r,a=this.extent*n;return this._toBinaryCoordinates(c=>d8(c,o,a,i))}};var zx=class{version;name;extent;length;_pbf;_keys;_values;_features;constructor(t,r){this.version=1,this.name="",this.extent=4096,this.length=0,this._pbf=t,this._keys=[],this._values=[],this._features=[],t.readFields(Jft,this,r),this.length=this._features.length}feature(t,r){if(t<0||t>=this._features.length)throw new Error("feature index out of bounds");this._pbf.pos=this._features[t];let n=this._pbf.readVarint()+this._pbf.pos;return new Ux(this._pbf,n,this.extent,this._keys,this._values,r)}};function Jft(e,t,r){t&&r&&(e===15?t.version=r.readVarint():e===1?t.name=r.readString():e===5?t.extent=r.readVarint():e===2?t._features.push(r.pos):e===3?t._keys.push(r.readString()):e===4&&t._values.push(Qft(r)))}function Qft(e){let t=null,r=e.readVarint()+e.pos;for(;e.pos<r;){let n=e.readVarint()>>3;t=n===1?e.readString():n===2?e.readFloat():n===3?e.readDouble():n===4?e.readVarint64():n===5?e.readVarint():n===6?e.readSVarint():n===7?e.readBoolean():null}return t}var Vx=class{layers;constructor(t,r){this.layers=t.readFields(tht,{},r)}};function tht(e,t,r){if(e===3&&r){let n=new zx(r,r.readVarint()+r.pos);n.length&&t&&(t[n.name]=n)}}function Hv(e,t){let r=rht(t),n=t?.gis?.format||t?.mvt?.shape||t?.shape;switch(n){case"columnar-table":return{shape:"columnar-table",data:Vv(e,r)};case"geojson-table":return{shape:"geojson-table",type:"FeatureCollection",features:g8(e,r)};case"geojson":return g8(e,r);case"binary-geometry":return Vv(e,r);case"binary":return Vv(e,r);default:throw new Error(n||"undefined shape")}}function Vv(e,t){let[r,n]=eht(e,t),s=Bv(r,n);return s.byteLength=e.byteLength,s}function eht(e,t){let r=[],n={coordLength:2,pointPositionsCount:0,pointFeaturesCount:0,linePositionsCount:0,linePathsCount:0,lineFeaturesCount:0,polygonPositionsCount:0,polygonObjectsCount:0,polygonRingsCount:0,polygonFeaturesCount:0};if(e.byteLength<=0)return[r,n];let s=new Vx(new Wv.default(e));return(t&&Array.isArray(t.layers)?t.layers:Object.keys(s.layers)).forEach(o=>{let a=s.layers[o];if(a)for(let c=0;c<a.length;c++){let l=a.feature(c,n),f=sht(l,t,o);r.push(f)}}),[r,n]}function g8(e,t){if(e.byteLength<=0)return[];let r=[],n=new Dx(new Wv.default(e));return(Array.isArray(t.layers)?t.layers:Object.keys(n.layers)).forEach(i=>{let o=n.layers[i];if(o)for(let a=0;a<o.length;a++){let c=o.feature(a),l=nht(c,t,i);r.push(l)}}),r}function rht(e){if(!e?.mvt)throw new Error("mvt options required");let t=e.mvt?.coordinates==="wgs84",{tileIndex:r}=e.mvt,n=r&&Number.isFinite(r.x)&&Number.isFinite(r.y)&&Number.isFinite(r.z);if(t&&!n)throw new Error("MVT Loader: WGS84 coordinates need tileIndex property");return e.mvt}function nht(e,t,r){let n=e.toGeoJSON(t.coordinates==="wgs84"?t.tileIndex:iht);return t.layerProperty&&(n.properties[t.layerProperty]=r),n}function sht(e,t,r){let n=e.toBinaryCoordinates(t.coordinates==="wgs84"?t.tileIndex:oht);return t.layerProperty&&n.properties&&(n.properties[t.layerProperty]=r),n}function iht(e,t){let{extent:r}=t;for(let n=0;n<e.length;n++){let s=e[n];s[0]/=r,s[1]/=r}}function oht(e,t){let{extent:r}=t;for(let n=0,s=e.length;n<s;++n)e[n]/=r}var aht="4.2.1",Wx={dataType:null,batchType:null,name:"Mapbox Vector Tile",id:"mvt",module:"mvt",version:aht,extensions:["mvt","pbf"],mimeTypes:["application/vnd.mapbox-vector-tile","application/x-protobuf"],worker:!0,category:"geometry",options:{mvt:{shape:"geojson",coordinates:"local",layerProperty:"layerName",layers:void 0,tileIndex:null}}},cht={...Wx,parse:async(e,t)=>Hv(e,t),parseSync:Hv,binary:!0};var lht={Point:x8,MultiPoint:fht,LineString:_8,MultiLineString:hht,Polygon:y8,MultiPolygon:uht};function x8([e,t],[r,n],s){let i=be(r[0],n[0],e),o=be(r[1],n[1],t);return s.unprojectFlat([i,o])}function Gv(e,t,r){return e.map(n=>x8(n,t,r))}function fht(e,t,r){return Gv(e,t,r)}function _8(e,t,r){return Gv(e,t,r)}function hht(e,t,r){return e.map(n=>_8(n,t,r))}function y8(e,t,r){return e.map(n=>Gv(n,t,r))}function uht(e,t,r){return e.map(n=>y8(n,t,r))}function A8(e,t,r){let n=r.projectFlat([t.west,t.north]),s=r.projectFlat([t.east,t.south]),i=[n,s];return{...e,coordinates:lht[e.type](e.coordinates,i,r)}}var dht=["points","lines","polygons"];function jv(e,t,r,n){for(let s of dht){let i=e[s]&&pht(e[s],t,r,n);if(i>=0)return i}return-1}function pht(e,t,r,n){let s=e.featureIds.value;if(!s.length)return-1;let i=0,o=s[s.length-1]+1;if(n){let c=mht(e,n);if(c)i=c[0],o=c[1]+1;else return-1}let a=-1;if(t in e.numericProps){let c=e.numericProps[t].value.findIndex((l,f)=>l===r&&s[f]>=i&&s[f]<o);return c>=0?e.globalFeatureIds.value[c]:-1}else t?a=b8(e.properties,c=>c[t]===r,i,o):e.fields&&(a=b8(e.fields,c=>c.id===r,i,o));return a>=0?ght(e,a):-1}function mht(e,t){if(!e.__layers){let r={},{properties:n}=e;for(let s=0;s<n.length;s++){let{layerName:i}=n[s];i&&(r[i]?r[i][1]=s:r[i]=[s,s])}e.__layers=r}return e.__layers[t]}function ght(e,t){if(!e.__ids){let r=[],n=e.featureIds.value,s=e.globalFeatureIds.value;for(let i=0;i<n.length;i++)r[n[i]]=s[i];e.__ids=r}return e.__ids[t]}function b8(e,t,r,n){for(let s=r;s<n;s++)if(t(e[s],s))return s;return-1}var qv=512,xht={...Go.defaultProps,data:Ri,onDataLoad:{type:"function",value:null,optional:!0,compare:!1},uniqueIdProperty:"",highlightedFeatureId:null,loaders:[Wx],binary:!0},Bd=class extends Zo{initializeState(){super.initializeState();let t=this.context.viewport.resolution!==void 0?!1:this.props.binary;this.setState({binary:t,data:null,tileJSON:null,hoveredFeatureId:null,hoveredFeatureLayerName:null})}get isLoaded(){return Boolean(this.state?.data&&super.isLoaded)}updateState({props:t,oldProps:r,context:n,changeFlags:s}){s.dataChanged&&this._updateTileData(),this.state?.data&&(super.updateState({props:t,oldProps:r,context:n,changeFlags:s}),this._setWGS84PropertyForTiles());let{highlightColor:i}=t;i!==r.highlightColor&&Array.isArray(i)&&this.setState({highlightColor:i})}async _updateTileData(){let t=this.props.data,r=null;if(typeof t=="string"&&!Nb(t)){let{onDataLoad:n,fetch:s}=this.props;this.setState({data:null,tileJSON:null});try{r=await s(t,{propName:"data",layer:this,loaders:[]})}catch(i){this.raiseError(i,"loading TileJSON"),t=null}n&&n(r,{propName:"data",layer:this})}else t&&typeof t=="object"&&"tilejson"in t&&(r=t);r&&(t=r.tiles),this.setState({data:t,tileJSON:r})}_getTilesetOptions(){let t=super._getTilesetOptions(),r=this.state.tileJSON,{minZoom:n,maxZoom:s}=this.props;return r&&(Number.isFinite(r.minzoom)&&r.minzoom>n&&(t.minZoom=r.minzoom),Number.isFinite(r.maxzoom)&&(!Number.isFinite(s)||r.maxzoom<s)&&(t.maxZoom=r.maxzoom)),t}renderLayers(){return this.state?.data?super.renderLayers():null}getTileData(t){let{data:r,binary:n}=this.state,{index:s,signal:i}=t,o=Kn(r,t);if(!o)return Promise.reject("Invalid URL");let a=this.getLoadOptions(),{fetch:c}=this.props;return a={...a,mimeType:"application/x-protobuf",mvt:{...a?.mvt,coordinates:this.context.viewport.resolution?"wgs84":"local",tileIndex:s},gis:n?{format:"binary"}:{}},c(o,{propName:"data",layer:this,loadOptions:a,signal:i})}renderSubLayers(t){let{x:r,y:n,z:s}=t.tile.index,i=Math.pow(2,s),o=qv/i,a=-o,c=qv*r/i,l=qv*(1-n/i),f=new rt().scale([o,a,1]);t.autoHighlight=!1,this.context.viewport.resolution||(t.modelMatrix=f,t.coordinateOrigin=[c,l,0],t.coordinateSystem=q.CARTESIAN,t.extensions=[...t.extensions||[],new vx]);let h=super.renderSubLayers(t);return this.state.binary&&!(h instanceof Go)&&W.warn("renderSubLayers() must return GeoJsonLayer when using binary:true")(),h}_updateAutoHighlight(t){let{uniqueIdProperty:r}=this.props,{hoveredFeatureId:n,hoveredFeatureLayerName:s}=this.state,i=t.object,o=null,a=null;i&&(o=Xv(i,r),a=T8(i));let{highlightColor:c}=this.props;typeof c=="function"&&(c=c(t)),(n!==o||s!==a)&&this.setState({highlightColor:c,hoveredFeatureId:o,hoveredFeatureLayerName:a})}_isWGS84(){return Boolean(this.context.viewport.resolution)}getPickingInfo(t){let r=super.getPickingInfo(t);if(this.state.binary&&r.index!==-1){let{data:n}=t.sourceLayer.props;r.object=Lx(n,{globalFeatureId:r.index})}return r.object&&!this._isWGS84()&&(r.object=E8(r.object,r.tile.bbox,this.context.viewport)),r}getSubLayerPropsByTile(t){return{highlightedObjectIndex:this.getHighlightedObjectIndex(t),highlightColor:this.state.highlightColor}}getHighlightedObjectIndex(t){let{hoveredFeatureId:r,hoveredFeatureLayerName:n,binary:s}=this.state,{uniqueIdProperty:i,highlightedFeatureId:o}=this.props,a=t.content,c=v8(o);if(!(v8(r)||c))return-1;let f=c?o:r;return Array.isArray(a)?a.findIndex(h=>{let u=Xv(h,i)===f,d=c||T8(h)===n;return u&&d}):a&&s?jv(a,i,f,c?"":n):-1}_pickObjects(t){let{deck:r,viewport:n}=this.context,s=n.width,i=n.height,o=n.x,a=n.y,c=[this.id];return r.pickObjects({x:o,y:a,width:s,height:i,layerIds:c,maxObjects:t})}getRenderedFeatures(t=null){let r=this._pickObjects(t),n=new Set,s=[];for(let i of r){let o=Xv(i.object,this.props.uniqueIdProperty);o===void 0?s.push(i.object):n.has(o)||(n.add(o),s.push(i.object))}return s}_setWGS84PropertyForTiles(){let t="dataInWGS84";this.state.tileset.selectedTiles.forEach(n=>{n.hasOwnProperty(t)||Object.defineProperty(n,t,{get:()=>{if(!n.content)return null;if(this.state.binary&&Array.isArray(n.content)&&!n.content.length)return[];let{bbox:s}=n;if(n._contentWGS84===void 0&&Fb(s)){let i=this.state.binary?Lx(n.content):n.content;n._contentWGS84=i.map(o=>E8(o,s,this.context.viewport))}return n._contentWGS84}})})}};Bd.layerName="MVTLayer";Bd.defaultProps=xht;var M8=Bd;function Xv(e,t){if(e.properties&&t)return e.properties[t];if("id"in e)return e.id}function T8(e){return e.properties?.layerName||null}function v8(e){return e!=null&&e!==""}function E8(e,t,r){let n={...e,geometry:{type:e.geometry.type}};return Object.defineProperty(n.geometry,"coordinates",{get:()=>A8(e.geometry,t,r).coordinates}),n}var S8="0123456789bcdefghjkmnpqrstuvwxyz",w8={};for(let e=0;e<S8.length;e++)w8[S8.charAt(e)]=e;var _ht=-90,yht=90,Aht=-180,bht=180;function Tht(e){let t=!0,r=yht,n=_ht,s=bht,i=Aht,o,a=0;for(let c=0,l=e.length;c<l;c++){let f=e[c].toLowerCase();a=w8[f];for(let h=4;h>=0;h--){let u=a>>h&1;t?(o=(s+i)/2,u===1?i=o:s=o):(o=(r+n)/2,u===1?n=o:r=o),t=!t}}return[n,i,r,s]}function C8(e){let[t,r,n,s]=Tht(e);return[s,n,s,t,r,t,r,n,s,n]}var vht={getGeohash:{type:"accessor",value:e=>e.geohash}},Nd=class extends Yn{indexToBounds(){let{data:t,getGeohash:r}=this.props;return{data:t,_normalize:!1,positionFormat:"XY",getPolygon:(n,s)=>C8(r(n,s))}}};Nd.layerName="GeohashLayer";Nd.defaultProps=vht;var P8=Nd;var Yv={};Wt(Yv,{Buffer:()=>et,BufferTransform:()=>Cr,CubeGeometry:()=>ys,Device:()=>tr,Framebuffer:()=>On,Geometry:()=>ht,GroupNode:()=>Pr,Model:()=>tt,ModelNode:()=>kn,ScenegraphNode:()=>Hr,SphereGeometry:()=>ch,Texture:()=>at,TextureTransform:()=>pi,attachDevice:()=>Pht,createDevice:()=>Iht,enforceWebGL2:()=>Rht,getBestAvailableAdapter:()=>wht,getSupportedAdapters:()=>Sht,registerDevices:()=>Mht,setDefaultDeviceProps:()=>Cht,stats:()=>Eht});var{stats:Eht,registerDevices:Mht,getSupportedAdapters:Sht,getBestAvailableAdapter:wht,setDefaultDeviceProps:Cht,attachDevice:Pht,createDevice:Iht,enforceWebGL2:Rht}=Js;var $v={};Wt($v,{fetchFile:()=>Pa,load:()=>me,parse:()=>$s,registerLoaders:()=>sf});var Hx=class{constructor(t){this.map=null,this.width=0,this.height=0,this.props={...t},this._initialize(this.props)}finalize(){this.map?.remove(),this.map=null}setProps(t){let r=this.props,n={...this.props,...t};if(this.props=n,!this.map)return;this._update(r,n)&&this.redraw()}redraw(){let t=this.map;t.style&&(t._frame&&(t._frame.cancel(),t._frame=null),t._render())}getMap(){return this.map}_initialize(t){let{mapLib:r,container:n}=t;r.accessToken=t.mapboxApiAccessToken||"",this.map=new t.mapLib.Map({container:n,maxZoom:24,...t.mapOptions,...I8(t.viewState),style:t.mapStyle,interactive:!1,trackResize:!1}),Object.defineProperty(n,"offsetWidth",{get:()=>this.width}),Object.defineProperty(n,"clientWidth",{get:()=>this.width}),Object.defineProperty(n,"offsetHeight",{get:()=>this.height}),Object.defineProperty(n,"clientHeight",{get:()=>this.height}),this.map.resize()}_update(t,r){t.mapStyle!==r.mapStyle&&this.map.setStyle(r.mapStyle);let s=t.width!==r.width||t.height!==r.height;s&&(this.width=r.width,this.height=r.height,this.map.resize());let i=t.viewState,o=r.viewState,a=o.latitude!==i.latitude||o.longitude!==i.longitude||o.zoom!==i.zoom||o.pitch!==i.pitch||o.bearing!==i.bearing;return a&&this.map.jumpTo(I8(o)),s||a}};function I8(e){return{center:[e.longitude,e.latitude],zoom:e.zoom,bearing:e.bearing??0,pitch:e.pitch??0}}var R8={position:"absolute",left:0,top:0,width:"100%",height:"100%"};function Oht(e){let{container:t=document.body}=e;if(typeof t=="string"&&(t=document.getElementById(t)),!t)throw Error("Deck: container not found");window.getComputedStyle(t).position==="static"&&(t.style.position="relative");let n=document.createElement("div");t.appendChild(n),Object.assign(n.style,R8);let s=document.createElement("canvas");return t.appendChild(s),Object.assign(s.style,R8),{container:t,mapCanvas:n,deckCanvas:s}}var Fd=class extends pn{constructor(t){if(typeof document>"u")throw Error("Deck can only be used in the browser");let{mapCanvas:r,deckCanvas:n}=Oht(t),s=t.viewState||t.initialViewState,i=Number.isFinite(s&&s.latitude),{map:o=globalThis.mapboxgl||globalThis.maplibregl}=t;super({canvas:n,...t}),o&&o.Map?this._map=i&&new Hx({...t,width:0,height:0,viewState:s,container:r,mapLib:o}):this._map=o}getMapboxMap(){return this._map&&this._map.getMap()}finalize(){this._map&&this._map.finalize(),super.finalize()}setProps(t){"mapStyle"in t&&this._map&&this._map.setProps({mapStyle:t.mapStyle}),super.setProps(t)}_drawLayers(t,r){if(this._map){let n=this.getViewports()[0];n&&this._map.setProps({width:n.width,height:n.height,viewState:n})}super._drawLayers(t,r)}};globalThis.luma=globalThis.luma||{};globalThis.loaders=globalThis.loaders||{};Object.assign(globalThis.luma,Yv);Object.assign(globalThis.loaders,$v);function O8({pointCount:e,getBinId:t}){let r=new Map;for(let n=0;n<e;n++){let s=t(n);if(s===null)continue;let i=r.get(String(s));i?i.points.push(n):(i={id:s,index:r.size,points:[n]},r.set(String(s),i))}return Array.from(r.values())}function L8({bins:e,dimensions:t,target:r}){let n=e.length*t;(!r||r.length<n)&&(r=new Float32Array(n));for(let s=0;s<e.length;s++){let{id:i}=e[s];Array.isArray(i)?r.set(i,s*t):r[s]=i}return r}var Lht=e=>e.length,B8=(e,t)=>{let r=0;for(let n of e)r+=t(n);return r},Bht=(e,t)=>e.length===0?NaN:B8(e,t)/e.length,Nht=(e,t)=>{let r=1/0;for(let n of e){let s=t(n);s<r&&(r=s)}return r},Fht=(e,t)=>{let r=-1/0;for(let n of e){let s=t(n);s>r&&(r=s)}return r},N8={COUNT:Lht,SUM:B8,MEAN:Bht,MIN:Nht,MAX:Fht};function F8({bins:e,getValue:t,operation:r,target:n}){(!n||n.length<e.length)&&(n=new Float32Array(e.length));let s=1/0,i=-1/0;for(let o=0;o<e.length;o++){let{points:a}=e[o];n[o]=r(a,t),n[o]<s&&(s=n[o]),n[o]>i&&(i=n[o])}return{value:n,domain:[s,i]}}function Kv(e,t,r){let n={};for(let i of e.sources||[]){let o=t[i];if(o)n[i]=Dht(o);else throw new Error(`Cannot find attribute ${i}`)}let s={};return i=>{for(let o in n)s[o]=n[o](i);return e.getValue(s,i,r)}}function Dht(e){let t=e.value,{offset:r=0,stride:n,size:s}=e.getAccessor(),i=t.BYTES_PER_ELEMENT,o=r/i,a=n?n/i:s;if(s===1)return e.isConstant?()=>t[0]:l=>{let f=o+a*l;return t[f]};let c;return e.isConstant?(c=Array.from(t),()=>c):(c=new Array(s),l=>{let f=o+a*l;for(let h=0;h<s;h++)c[h]=t[f+h];return c})}var lr=class{constructor(t){this.bins=[],this.binIds=null,this.results=[],this.dimensions=t.dimensions,this.channelCount=t.getValue.length,this.props={...t,binOptions:{},pointCount:0,operations:[],customOperations:[],attributes:{}},this.needsUpdate=!0,this.setProps(t)}destroy(){}get binCount(){return this.bins.length}setProps(t){let r=this.props;if(t.binOptions&&(it(t.binOptions,r.binOptions,2)||this.setNeedsUpdate()),t.operations)for(let n=0;n<this.channelCount;n++)t.operations[n]!==r.operations[n]&&this.setNeedsUpdate(n);if(t.customOperations)for(let n=0;n<this.channelCount;n++)Boolean(t.customOperations[n])!==Boolean(r.customOperations[n])&&this.setNeedsUpdate(n);t.pointCount!==void 0&&t.pointCount!==r.pointCount&&this.setNeedsUpdate(),t.attributes&&(t.attributes={...r.attributes,...t.attributes}),Object.assign(this.props,t)}setNeedsUpdate(t){t===void 0?this.needsUpdate=!0:this.needsUpdate!==!0&&(this.needsUpdate=this.needsUpdate||[],this.needsUpdate[t]=!0)}update(){if(this.needsUpdate===!0){this.bins=O8({pointCount:this.props.pointCount,getBinId:Kv(this.props.getBin,this.props.attributes,this.props.binOptions)});let t=L8({bins:this.bins,dimensions:this.dimensions,target:this.binIds?.value});this.binIds={value:t,type:"float32",size:this.dimensions}}for(let t=0;t<this.channelCount;t++)if(this.needsUpdate===!0||this.needsUpdate[t]){let r=this.props.customOperations[t]||N8[this.props.operations[t]],{value:n,domain:s}=F8({bins:this.bins,getValue:Kv(this.props.getValue[t],this.props.attributes,void 0),operation:r,target:this.results[t]?.value});this.results[t]={value:n,domain:s,type:"float32",size:1},this.props.onUpdate?.({channel:t})}this.needsUpdate=!1}preDraw(){}getBins(){return this.binIds}getResult(t){return this.results[t]}getResultDomain(t){return this.results[t]?.domain??[1/0,-1/0]}getBin(t){let r=this.bins[t];if(!r)return null;let n=new Array(this.channelCount);for(let s=0;s<n.length;s++){let i=this.results[s];n[s]=i?.value[t]}return{id:r.id,value:n,count:r.points.length,pointIndices:r.points}}};function Gx(e,t,r){return e.createFramebuffer({width:t,height:r,colorAttachments:[e.createTexture({width:t,height:r,format:"rgba32float",mipmaps:!1,sampler:{minFilter:"nearest",magFilter:"nearest"}})]})}var kht=`uniform binSorterUniforms {
  ivec4 binIdRange;
  ivec2 targetSize;
} binSorter;
`,D8={name:"binSorter",vs:kht,uniformTypes:{binIdRange:"vec4<i32>",targetSize:"vec2<i32>"}};var U8=[1,2,4,8],k8=3e38,Uht={SUM:0,MEAN:0,MIN:0,MAX:0,COUNT:0},Dd=1024,jx=class{constructor(t,r){this.binsFBO=null,this.device=t,this.model=Vht(t,r)}get texture(){return this.binsFBO?this.binsFBO.colorAttachments[0].texture:null}destroy(){this.model.destroy(),this.binsFBO?.colorAttachments[0].texture.destroy(),this.binsFBO?.destroy()}getBinValues(t){if(!this.binsFBO)return null;let r=t%Dd,n=Math.floor(t/Dd),s=this.device.readPixelsToArrayWebGL(this.binsFBO,{sourceX:r,sourceY:n,sourceWidth:1,sourceHeight:1}).buffer;return new Float32Array(s)}setDimensions(t,r){let n=Dd,s=Math.ceil(t/n);this.binsFBO?this.binsFBO.height<s&&this.binsFBO.resize({width:n,height:s}):this.binsFBO=Gx(this.device,n,s);let i={binIdRange:[r[0][0],r[0][1],r[1]?.[0]||0,r[1]?.[1]||0],targetSize:[this.binsFBO.width,this.binsFBO.height]};this.model.shaderInputs.setProps({binSorter:i})}setModelProps(t){let r=this.model;t.attributes&&r.setAttributes(t.attributes),t.constantAttributes&&r.setConstantAttributes(t.constantAttributes),t.vertexCount!==void 0&&r.setVertexCount(t.vertexCount),t.shaderModuleProps&&r.shaderInputs.setProps(t.shaderModuleProps)}update(t){if(!this.binsFBO)return;let r=zht(t);this._updateBins("SUM",r.SUM+r.MEAN),this._updateBins("MIN",r.MIN),this._updateBins("MAX",r.MAX)}_updateBins(t,r){if(r===0)return;r|=U8[3];let n=this.model,s=this.binsFBO,i=t==="MAX"?-k8:t==="MIN"?k8:0,o=this.device.beginRenderPass({id:`gpu-aggregation-${t}`,framebuffer:s,parameters:{viewport:[0,0,s.width,s.height],colorMask:r},clearColor:[i,i,i,0],clearDepth:!1,clearStencil:!1});n.setParameters({blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendColorOperation:t==="MAX"?"max":t==="MIN"?"min":"add",blendAlphaOperation:"add"}),n.draw(o),o.end()}};function zht(e){let t={...Uht};for(let r=0;r<e.length;r++){let n=e[r];n&&(t[n]+=U8[r])}return t}function Vht(e,t){let r=t.vs;t.dimensions===2&&(r+=`
void getBin(out int binId) {
  ivec2 binId2;
  getBin(binId2);
  if (binId2.x < binSorter.binIdRange.x || binId2.x >= binSorter.binIdRange.y) {
    binId = -1;
  } else {
    binId = (binId2.y - binSorter.binIdRange.z) * (binSorter.binIdRange.y - binSorter.binIdRange.x) + binId2.x;
  }
}
`);let n=`#version 300 es
#define SHADER_NAME gpu-aggregation-sort-bins-vertex

${r}

out vec3 v_Value;

void main() {
  int binIndex;
  getBin(binIndex);
  binIndex = binIndex - binSorter.binIdRange.x;
  if (binIndex < 0) {
    gl_Position = vec4(0.);
    return;
  }
  int row = binIndex / binSorter.targetSize.x;
  int col = binIndex - row * binSorter.targetSize.x;
  vec2 position = (vec2(col, row) + 0.5) / vec2(binSorter.targetSize) * 2.0 - 1.0;
  gl_Position = vec4(position, 0.0, 1.0);
  gl_PointSize = 1.0;

#if NUM_CHANNELS == 3
  getValue(v_Value);
#elif NUM_CHANNELS == 2
  getValue(v_Value.xy);
#else
  getValue(v_Value.x);
#endif
}
`,s=`#version 300 es
#define SHADER_NAME gpu-aggregation-sort-bins-fragment

precision highp float;

in vec3 v_Value;
out vec4 fragColor;

void main() {
  fragColor.xyz = v_Value;

  #ifdef MODULE_GEOMETRY
  geometry.uv = vec2(0.);
  DECKGL_FILTER_COLOR(fragColor, geometry);
  #endif

  fragColor.w = 1.0;
}
`;return new tt(e,{bufferLayout:t.bufferLayout,modules:[...t.modules||[],D8],defines:{...t.defines,NON_INSTANCED_MODEL:1,NUM_CHANNELS:t.channelCount},isInstanced:!1,vs:n,fs:s,topology:"point-list",disableWarnings:!0})}var Wht=`uniform aggregatorTransformUniforms {
  ivec4 binIdRange;
  bvec3 isCount;
  bvec3 isMean;
  float naN;
} aggregatorTransform;
`,z8={name:"aggregatorTransform",vs:Wht,uniformTypes:{binIdRange:"vec4<i32>",isCount:"vec3<f32>",isMean:"vec3<f32>"}};var Zv=3e38,qx=class{constructor(t,r){this.binBuffer=null,this.valueBuffer=null,this._domains=null,this.device=t,this.channelCount=r.channelCount,this.transform=Hht(t,r),this.domainFBO=Gx(t,2,1)}destroy(){this.transform.destroy(),this.binBuffer?.destroy(),this.valueBuffer?.destroy(),this.domainFBO.colorAttachments[0].texture.destroy(),this.domainFBO.destroy()}get domains(){if(!this._domains){let t=this.device.readPixelsToArrayWebGL(this.domainFBO).buffer,r=new Float32Array(t);this._domains=[[-r[4],r[0]],[-r[5],r[1]],[-r[6],r[2]]].slice(0,this.channelCount)}return this._domains}setDimensions(t,r){let{model:n,transformFeedback:s}=this.transform;n.setVertexCount(t);let i={binIdRange:[r[0][0],r[0][1],r[1]?.[0]||0,r[1]?.[1]||0]};n.shaderInputs.setProps({aggregatorTransform:i});let o=t*r.length*4;(!this.binBuffer||this.binBuffer.byteLength<o)&&(this.binBuffer?.destroy(),this.binBuffer=this.device.createBuffer({byteLength:o}),s.setBuffer("binIds",this.binBuffer));let a=t*this.channelCount*4;(!this.valueBuffer||this.valueBuffer.byteLength<a)&&(this.valueBuffer?.destroy(),this.valueBuffer=this.device.createBuffer({byteLength:a}),s.setBuffer("values",this.valueBuffer))}update(t,r){if(!t)return;let n=this.transform,s=this.domainFBO,i=[0,1,2].map(c=>r[c]==="COUNT"?1:0),o=[0,1,2].map(c=>r[c]==="MEAN"?1:0),a={isCount:i,isMean:o,bins:t};n.model.shaderInputs.setProps({aggregatorTransform:a}),n.run({id:"gpu-aggregation-domain",framebuffer:s,parameters:{viewport:[0,0,2,1]},clearColor:[-Zv,-Zv,-Zv,0],clearDepth:!1,clearStencil:!1}),this._domains=null}};function Hht(e,t){let r=`#version 300 es
#define SHADER_NAME gpu-aggregation-domain-vertex

uniform sampler2D bins;

#if NUM_DIMS == 1
out float binIds;
#else
out vec2 binIds;
#endif

#if NUM_CHANNELS == 1
flat out float values;
#elif NUM_CHANNELS == 2
flat out vec2 values;
#else
flat out vec3 values;
#endif

const float NAN = intBitsToFloat(-1);

void main() {
  int row = gl_VertexID / SAMPLER_WIDTH;
  int col = gl_VertexID - row * SAMPLER_WIDTH;
  vec4 weights = texelFetch(bins, ivec2(col, row), 0);
  vec3 value3 = mix(
    mix(weights.rgb, vec3(weights.a), aggregatorTransform.isCount),
    weights.rgb / max(weights.a, 1.0),
    aggregatorTransform.isMean
  );
  if (weights.a == 0.0) {
    value3 = vec3(NAN);
  }

#if NUM_DIMS == 1
  binIds = float(gl_VertexID + aggregatorTransform.binIdRange.x);
#else
  int y = gl_VertexID / (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);
  int x = gl_VertexID - y * (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);
  binIds.y = float(y + aggregatorTransform.binIdRange.z);
  binIds.x = float(x + aggregatorTransform.binIdRange.x);
#endif

#if NUM_CHANNELS == 3
  values = value3;
#elif NUM_CHANNELS == 2
  values = value3.xy;
#else
  values = value3.x;
#endif

  gl_Position = vec4(0., 0., 0., 1.);
  // This model renders into a 2x1 texture to obtain min and max simultaneously.
  // See comments in fragment shader
  gl_PointSize = 2.0;
}
`,n=`#version 300 es
#define SHADER_NAME gpu-aggregation-domain-fragment

precision highp float;

#if NUM_CHANNELS == 1
flat in float values;
#elif NUM_CHANNELS == 2
flat in vec2 values;
#else
flat in vec3 values;
#endif

out vec4 fragColor;

void main() {
  vec3 value3;
#if NUM_CHANNELS == 3
  value3 = values;
#elif NUM_CHANNELS == 2
  value3.xy = values;
#else
  value3.x = values;
#endif
  if (isnan(value3.x)) discard;
  // This shader renders into a 2x1 texture with blending=max
  // The left pixel yields the max value of each channel
  // The right pixel yields the min value of each channel
  if (gl_FragCoord.x < 1.0) {
    fragColor = vec4(value3, 1.0);
  } else {
    fragColor = vec4(-value3, 1.0);
  }
}
`;return new Cr(e,{vs:r,fs:n,topology:"point-list",modules:[z8],parameters:{blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendColorOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendAlphaOperation:"max"},defines:{NUM_DIMS:t.dimensions,NUM_CHANNELS:t.channelCount,SAMPLER_WIDTH:Dd},varyings:["binIds","values"],disableWarnings:!0})}var pe=class{static isSupported(t){return t.features.has("float32-renderable-webgl")&&t.features.has("texture-blend-float-webgl")}constructor(t,r){this.binCount=0,this.binIds=null,this.results=[],this.device=t,this.dimensions=r.dimensions,this.channelCount=r.channelCount,this.props={...r,pointCount:0,binIdRange:[[0,0]],operations:[],attributes:{},binOptions:{}},this.needsUpdate=new Array(this.channelCount).fill(!0),this.binSorter=new jx(t,r),this.aggregationTransform=new qx(t,r),this.setProps(r)}getBins(){let t=this.aggregationTransform.binBuffer;return t?(this.binIds?.buffer!==t&&(this.binIds={buffer:t,type:"float32",size:this.dimensions}),this.binIds):null}getResult(t){let r=this.aggregationTransform.valueBuffer;return!r||t>=this.channelCount?null:(this.results[t]?.buffer!==r&&(this.results[t]={buffer:r,type:"float32",size:1,stride:this.channelCount*4,offset:t*4}),this.results[t])}getResultDomain(t){return this.aggregationTransform.domains[t]}getBin(t){if(t<0||t>=this.binCount)return null;let{binIdRange:r}=this.props,n;if(this.dimensions===1)n=[t+r[0][0]];else{let[[a,c],[l]]=r,f=c-a;n=[t%f+a,Math.floor(t/f)+l]}let s=this.binSorter.getBinValues(t);if(!s)return null;let i=s[3],o=[];for(let a=0;a<this.channelCount;a++){let c=this.props.operations[a];c==="COUNT"?o[a]=i:i===0?o[a]=NaN:o[a]=c==="MEAN"?s[a]/i:s[a]}return{id:n,value:o,count:i}}destroy(){this.binSorter.destroy(),this.aggregationTransform.destroy()}setProps(t){let r=this.props;if("binIdRange"in t&&!it(t.binIdRange,r.binIdRange,2)){let n=t.binIdRange;if(W.assert(n.length===this.dimensions),this.dimensions===1){let[[s,i]]=n;this.binCount=i-s}else{let[[s,i],[o,a]]=n;this.binCount=(i-s)*(a-o)}this.binSorter.setDimensions(this.binCount,n),this.aggregationTransform.setDimensions(this.binCount,n),this.setNeedsUpdate()}if(t.operations)for(let n=0;n<this.channelCount;n++)t.operations[n]!==r.operations[n]&&this.setNeedsUpdate(n);if(t.pointCount!==void 0&&t.pointCount!==r.pointCount&&(this.binSorter.setModelProps({vertexCount:t.pointCount}),this.setNeedsUpdate()),t.binOptions&&(it(t.binOptions,r.binOptions,2)||this.setNeedsUpdate(),this.binSorter.model.shaderInputs.setProps({binOptions:t.binOptions})),t.attributes){let n={},s={};for(let i of Object.values(t.attributes))for(let[o,a]of Object.entries(i.getValue()))ArrayBuffer.isView(a)?s[o]=a:a&&(n[o]=a);this.binSorter.setModelProps({attributes:n,constantAttributes:s})}t.shaderModuleProps&&this.binSorter.setModelProps({shaderModuleProps:t.shaderModuleProps}),Object.assign(this.props,t)}setNeedsUpdate(t){t===void 0?this.needsUpdate.fill(!0):this.needsUpdate[t]=!0}update(){}preDraw(){if(!this.needsUpdate.some(Boolean))return;let{operations:t}=this.props,r=this.needsUpdate.map((n,s)=>n?t[s]:null);this.binSorter.update(r),this.aggregationTransform.update(this.binSorter.texture,t);for(let n=0;n<this.channelCount;n++)this.needsUpdate[n]&&(this.needsUpdate[n]=!1,this.props.onUpdate?.({channel:n}))}};var Xx=class extends qt{get isDrawable(){return!0}initializeState(){this.getAttributeManager().remove(["instancePickingColors"])}updateState(t){super.updateState(t);let r=this.getAggregatorType();if(t.changeFlags.extensionsChanged||this.state.aggregatorType!==r){this.state.aggregator?.destroy();let n=this.createAggregator(r);return n.setProps({attributes:this.getAttributeManager()?.attributes}),this.setState({aggregator:n,aggregatorType:r}),!0}return!1}finalizeState(t){super.finalizeState(t),this.state.aggregator.destroy()}updateAttributes(t){let{aggregator:r}=this.state;r.setProps({attributes:t});for(let n in t)this.onAttributeChange(n);r.update()}draw({shaderModuleProps:t}){let{aggregator:r}=this.state;r.setProps({shaderModuleProps:t}),r.preDraw()}_getAttributeManager(){return new Or(this.context.device,{id:this.props.id,stats:this.context.stats})}};Xx.layerName="AggregationLayer";var ss=Xx;var Yi=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]];function Jv(e,t=!1,r=Float32Array){let n;if(Number.isFinite(e[0]))n=new r(e);else{n=new r(e.length*4);let s=0;for(let i=0;i<e.length;i++){let o=e[i];n[s++]=o[0],n[s++]=o[1],n[s++]=o[2],n[s++]=Number.isFinite(o[3])?o[3]:255}}if(t)for(let s=0;s<n.length;s++)n[s]/=255;return n}var Yx={linear:"linear",quantile:"nearest",quantize:"nearest",ordinal:"nearest"};function Pl(e,t){e.setSampler({minFilter:Yx[t],magFilter:Yx[t]})}function Il(e,t,r="linear"){let n=Jv(t,!1,Uint8Array);return e.createTexture({format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:Yx[r],magFilter:Yx[r],addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},data:n,width:n.length/4,height:1})}var V8=`#version 300 es
#define SHADER_NAME screen-grid-layer-vertex-shader
#define RANGE_COUNT 6
in vec2 positions;
in vec2 instancePositions;
in float instanceWeights;
in vec3 instancePickingColors;
uniform sampler2D colorRange;
out vec4 vColor;
vec4 interp(float value, vec2 domain, sampler2D range) {
float r = (value - domain.x) / (domain.y - domain.x);
return texture(range, vec2(r, 0.5));
}
void main(void) {
if (isnan(instanceWeights)) {
gl_Position = vec4(0.);
return;
}
vec2 pos = instancePositions * screenGrid.gridSizeClipspace + positions * screenGrid.cellSizeClipspace;
pos.x = pos.x - 1.0;
pos.y = 1.0 - pos.y;
gl_Position = vec4(pos, 0., 1.);
vColor = interp(instanceWeights, screenGrid.colorDomain, colorRange);
vColor.a *= layer.opacity;
picking_setPickingColor(instancePickingColors);
}
`;var W8=`#version 300 es
#define SHADER_NAME screen-grid-layer-fragment-shader
precision highp float;
in vec4 vColor;
out vec4 fragColor;
void main(void) {
fragColor = vColor;
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var Ght=`uniform screenGridUniforms {
  vec2 cellSizeClipspace;
  vec2 gridSizeClipspace;
  vec2 colorDomain;
} screenGrid;
`,H8={name:"screenGrid",vs:Ght,uniformTypes:{cellSizeClipspace:"vec2<f32>",gridSizeClipspace:"vec2<f32>",colorDomain:"vec2<f32>"}};var $x=class extends _t{getShaders(){return super.getShaders({vs:V8,fs:W8,modules:[Pt,H8]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceWeights:{size:1,type:"float32",accessor:"getWeight"}}),this.state.model=this._getModel()}updateState(t){super.updateState(t);let{props:r,oldProps:n,changeFlags:s}=t,i=this.state.model;if(n.colorRange!==r.colorRange){this.state.colorTexture?.destroy(),this.state.colorTexture=Il(this.context.device,r.colorRange,r.colorScaleType);let o={colorRange:this.state.colorTexture};i.shaderInputs.setProps({screenGrid:o})}else n.colorScaleType!==r.colorScaleType&&Pl(this.state.colorTexture,r.colorScaleType);if(n.cellMarginPixels!==r.cellMarginPixels||n.cellSizePixels!==r.cellSizePixels||s.viewportChanged){let{width:o,height:a}=this.context.viewport,{cellSizePixels:c,cellMarginPixels:l}=this.props,f=Math.max(c-l,0),h={gridSizeClipspace:[c/o*2,c/a*2],cellSizeClipspace:[f/o*2,f/a*2]};i.shaderInputs.setProps({screenGrid:h})}}finalizeState(t){super.finalizeState(t),this.state.colorTexture?.destroy()}draw({uniforms:t}){let r=this.props.colorDomain(),n=this.state.model,s={colorDomain:r};n.shaderInputs.setProps({screenGrid:s}),n.draw(this.context.renderPass)}_getModel(){return new tt(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new ht({topology:"triangle-strip",attributes:{positions:{value:new Float32Array([0,0,1,0,0,1,1,1]),size:2}}}),isInstanced:!0})}};$x.layerName="ScreenGridCellLayer";var G8=$x;var jht=`uniform binOptionsUniforms {
  float cellSizePixels;
} binOptions;
`,j8={name:"binOptions",vs:jht,uniformTypes:{cellSizePixels:"f32"}};var qht={cellSizePixels:{type:"number",value:100,min:1},cellMarginPixels:{type:"number",value:2,min:0},colorRange:Yi,colorScaleType:"linear",getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM"},kd=class extends ss{getAggregatorType(){return this.props.gpuAggregation&&pe.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(t){return t==="cpu"||!pe.isSupported(this.context.device)?new lr({dimensions:2,getBin:{sources:["positions"],getValue:({positions:r},n,s)=>{let i=this.context.viewport,o=i.project(r),a=s.cellSizePixels;return o[0]<0||o[0]>=i.width||o[1]<0||o[1]>=i.height?null:[Math.floor(o[0]/a),Math.floor(o[1]/a)]}},getValue:[{sources:["counts"],getValue:({counts:r})=>r}]}):new pe(this.context.device,{dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1}),...super.getShaders({modules:[ft,j8],vs:`
  in vec3 positions;
  in vec3 positions64Low;
  in float counts;
  
  void getBin(out ivec2 binId) {
    vec4 pos = project_position_to_clipspace(positions, positions64Low, vec3(0.0));
    vec2 screenCoords = vec2(pos.x / pos.w + 1.0, 1.0 - pos.y / pos.w) / 2.0 * project.viewportSize / project.devicePixelRatio;
    vec2 gridCoords = floor(screenCoords / binOptions.cellSizePixels);
    binId = ivec2(gridCoords);
  }
  void getValue(out float weight) {
    weight = counts;
  }
  `})})}initializeState(){super.initializeState(),this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState(t){let r=super.updateState(t),{props:n,oldProps:s,changeFlags:i}=t,{cellSizePixels:o,aggregation:a}=n;if(r||i.dataChanged||i.updateTriggersChanged||i.viewportChanged||a!==s.aggregation||o!==s.cellSizePixels){let{width:c,height:l}=this.context.viewport,{aggregator:f}=this.state;f instanceof pe&&f.setProps({binIdRange:[[0,Math.ceil(c/o)],[0,Math.ceil(l/o)]]}),f.setProps({pointCount:this.getNumInstances(),operations:[a],binOptions:{cellSizePixels:o}})}return i.viewportChanged&&this.state.aggregator.setNeedsUpdate(),r}onAttributeChange(t){let{aggregator:r}=this.state;switch(t){case"positions":r.setNeedsUpdate();break;case"counts":r.setNeedsUpdate(0);break;default:}}renderLayers(){let{aggregator:t}=this.state,r=this.getSubLayerClass("cells",G8),n=t.getBins(),s=t.getResult(0);return new r(this.props,this.getSubLayerProps({id:"cell-layer"}),{data:{length:t.binCount,attributes:{getBin:n,getWeight:s}},dataComparator:(i,o)=>i.length===o.length,updateTriggers:{getBin:[n],getWeight:[s]},parameters:{depthWriteEnabled:!1,...this.props.parameters},colorDomain:()=>this.props.colorDomain||t.getResultDomain(0),extensions:[]})}getPickingInfo(t){let r=t.info,{index:n}=r;if(n>=0){let s=this.state.aggregator.getBin(n),i;s&&(i={col:s.id[0],row:s.id[1],value:s.value[0],count:s.count},s.pointIndices&&(i.pointIndices=s.pointIndices,i.points=Array.isArray(this.props.data)?s.pointIndices.map(o=>this.props.data[o]):[])),r.object=i}return r}};kd.layerName="ScreenGridLayer";kd.defaultProps=qht;var q8=kd;var $i=class{constructor(t,r){this.props={scaleType:"linear",lowerPercentile:0,upperPercentile:100},this.domain=null,this.cutoff=null,this.input=t,this.inputLength=r,this.attribute=t}getScalePercentile(){if(!this._percentile){let t=X8(this.input,this.inputLength);this._percentile=Yht(t)}return this._percentile}getScaleOrdinal(){if(!this._ordinal){let t=X8(this.input,this.inputLength);this._ordinal=Xht(t)}return this._ordinal}getCutoff({scaleType:t,lowerPercentile:r,upperPercentile:n}){if(t==="quantile")return[r,n-1];if(r>0||n<100){let{domain:s}=this.getScalePercentile(),i=s[Math.floor(r)-1]??-1/0,o=s[Math.floor(n)-1]??1/0;if(t==="ordinal"){let{domain:a}=this.getScaleOrdinal();i=a.findIndex(c=>c>=i),o=a.findIndex(c=>c>o)-1,o===-2&&(o=a.length-1)}return[i,o]}return null}update(t){let r=this.props;if(t.scaleType!==r.scaleType)switch(t.scaleType){case"quantile":{let{attribute:n}=this.getScalePercentile();this.attribute=n,this.domain=[0,99];break}case"ordinal":{let{attribute:n,domain:s}=this.getScaleOrdinal();this.attribute=n,this.domain=[0,s.length-1];break}default:this.attribute=this.input,this.domain=null}return(t.scaleType!==r.scaleType||t.lowerPercentile!==r.lowerPercentile||t.upperPercentile!==r.upperPercentile)&&(this.cutoff=this.getCutoff(t)),this.props=t,this}};function Xht(e){let t=new Set;for(let s of e)Number.isFinite(s)&&t.add(s);let r=Array.from(t).sort(),n=new Map;for(let s=0;s<r.length;s++)n.set(r[s],s);return{attribute:{value:e.map(s=>Number.isFinite(s)?n.get(s):NaN),type:"float32",size:1},domain:r}}function Yht(e,t=100){let r=Array.from(e).filter(Number.isFinite).sort($ht),n=0,s=Math.max(1,t),i=new Array(s-1);for(;++n<s;)i[n-1]=Kht(r,n/s);return{attribute:{value:e.map(o=>Number.isFinite(o)?Zht(i,o):NaN),type:"float32",size:1},domain:i}}function X8(e,t){let r=(e.stride??4)/4,n=(e.offset??0)/4,s=e.value;if(!s){let o=e.buffer?.readSyncWebGL(0,r*4*t);o&&(s=new Float32Array(o.buffer),e.value=s)}if(r===1)return s.subarray(0,t);let i=new Float32Array(t);for(let o=0;o<t;o++)i[o]=s[o*r+n];return i}function $ht(e,t){return e-t}function Kht(e,t){let r=e.length;if(t<=0||r<2)return e[0];if(t>=1)return e[r-1];let n=(r-1)*t,s=Math.floor(n),i=e[s],o=e[s+1];return i+(o-i)*(n-s)}function Zht(e,t){let r=0,n=e.length;for(;r<n;){let s=r+n>>>1;e[s]>t?n=s:r=s+1}return r}function Rl({dataBounds:e,getBinId:t,padding:r=0}){let n=[e[0],e[1],[e[0][0],e[1][1]],[e[1][0],e[0][1]]].map(c=>t(c)),s=Math.min(...n.map(c=>c[0]))-r,i=Math.min(...n.map(c=>c[1]))-r,o=Math.max(...n.map(c=>c[0]))+r+1,a=Math.max(...n.map(c=>c[1]))+r+1;return[[s,o],[i,a]]}var Y8=Math.PI/3,Kx=2*Math.sin(Y8),Zx=1.5,$8=Array.from({length:6},(e,t)=>{let r=t*Y8;return[Math.sin(r),-Math.cos(r)]});function Jx([e,t],r){let n=Math.round(t=t/r/Zx),s=Math.round(e=e/r/Kx-(n&1)/2),i=t-n;if(Math.abs(i)*3>1){let o=e-s,a=s+(e<s?-1:1)/2,c=n+(t<n?-1:1),l=e-a,f=t-c;o*o+i*i>l*l+f*f&&(s=a+(n&1?1:-1)/2,n=c)}return[s,n]}var K8=`
const vec2 DIST = vec2(${Kx}, ${Zx});

ivec2 pointToHexbin(vec2 p, float radius) {
  p /= radius * DIST;
  float pj = round(p.y);
  float pjm2 = mod(pj, 2.0);
  p.x -= pjm2 * 0.5;
  float pi = round(p.x);
  vec2 d1 = p - vec2(pi, pj);

  if (abs(d1.y) * 3. > 1.) {
    vec2 v2 = step(0.0, d1) - 0.5;
    v2.y *= 2.0;
    vec2 d2 = d1 - v2;
    if (dot(d1, d1) > dot(d2, d2)) {
      pi += v2.x + pjm2 - 0.5;
      pj += v2.y;
    }
  }
  return ivec2(pi, pj);
}
`;function Qv([e,t],r){return[(e+(t&1)/2)*r*Kx,t*r*Zx]}var Z8=`
const vec2 DIST = vec2(${Kx}, ${Zx});

vec2 hexbinCentroid(vec2 binId, float radius) {
  binId.x += fract(binId.y * 0.5);
  return binId * DIST * radius;
}
`;var J8=`#version 300 es
#define SHADER_NAME hexagon-cell-layer-vertex-shader
in vec3 positions;
in vec3 normals;
in vec2 instancePositions;
in float instanceElevationValues;
in float instanceColorValues;
in vec3 instancePickingColors;
uniform sampler2D colorRange;
out vec4 vColor;
${Z8}
float interp(float value, vec2 domain, vec2 range) {
float r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);
return mix(range.x, range.y, r);
}
vec4 interp(float value, vec2 domain, sampler2D range) {
float r = (value - domain.x) / (domain.y - domain.x);
return texture(range, vec2(r, 0.5));
}
void main(void) {
geometry.pickingColor = instancePickingColors;
if (isnan(instanceColorValues) ||
instanceColorValues < hexagon.colorDomain.z ||
instanceColorValues > hexagon.colorDomain.w ||
instanceElevationValues < hexagon.elevationDomain.z ||
instanceElevationValues > hexagon.elevationDomain.w
) {
gl_Position = vec4(0.);
return;
}
vec2 commonPosition = hexbinCentroid(instancePositions, column.radius) + (hexagon.originCommon - project.commonOrigin.xy);
commonPosition += positions.xy * column.radius * column.coverage;
geometry.position = vec4(commonPosition, 0.0, 1.0);
geometry.normal = project_normal(normals);
float elevation = 0.0;
if (column.extruded) {
elevation = interp(instanceElevationValues, hexagon.elevationDomain.xy, hexagon.elevationRange);
elevation = project_size(elevation);
geometry.position.z = (positions.z + 1.0) / 2.0 * elevation;
}
gl_Position = project_common_position_to_clipspace(geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vColor = interp(instanceColorValues, hexagon.colorDomain.xy, colorRange);
vColor.a *= layer.opacity;
if (column.extruded) {
vColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);
}
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var Jht=`uniform hexagonUniforms {
  vec4 colorDomain;
  vec4 elevationDomain;
  vec2 elevationRange;
  vec2 originCommon;
} hexagon;
`,Q8={name:"hexagon",vs:Jht,uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>"}};var Qx=class extends qn{getShaders(){let t=super.getShaders();return t.modules.push(Q8),{...t,vs:J8}}initializeState(){super.initializeState();let t=this.getAttributeManager();t.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),t.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(t){super.updateState(t);let{props:r,oldProps:n}=t,s=this.state.fillModel;if(n.colorRange!==r.colorRange){this.state.colorTexture?.destroy(),this.state.colorTexture=Il(this.context.device,r.colorRange,r.colorScaleType);let i={colorRange:this.state.colorTexture};s.shaderInputs.setProps({hexagon:i})}else n.colorScaleType!==r.colorScaleType&&Pl(this.state.colorTexture,r.colorScaleType)}finalizeState(t){super.finalizeState(t),this.state.colorTexture?.destroy()}draw({uniforms:t}){let{radius:r,hexOriginCommon:n,elevationRange:s,elevationScale:i,extruded:o,coverage:a,colorDomain:c,elevationDomain:l}=this.props,f=this.props.colorCutoff||[-1/0,1/0],h=this.props.elevationCutoff||[-1/0,1/0],u=this.state.fillModel;u.vertexArray.indexBuffer&&u.setIndexBuffer(null),u.setVertexCount(this.state.fillVertexCount);let d={colorDomain:[Math.max(c[0],f[0]),Math.min(c[1],f[1]),Math.max(c[0]-1,f[0]),Math.min(c[1]+1,f[1])],elevationDomain:[Math.max(l[0],h[0]),Math.min(l[1],h[1]),Math.max(l[0]-1,h[0]),Math.min(l[1]+1,h[1])],elevationRange:[s[0]*i,s[1]*i],originCommon:n};u.shaderInputs.setProps({column:{extruded:o,coverage:a,radius:r},hexagon:d}),u.draw(this.context.renderPass)}};Qx.layerName="HexagonCellLayer";var t5=Qx;var Qht=`uniform binOptionsUniforms {
  vec2 hexOriginCommon;
  float radiusCommon;
} binOptions;
`,e5={name:"binOptions",vs:Qht,uniformTypes:{hexOriginCommon:"vec2<f32>",radiusCommon:"f32"}};function r5(){}var tut={gpuAggregation:!0,colorDomain:null,colorRange:Yi,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:r5,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:r5,radius:{type:"number",min:1,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},hexagonAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0},Ud=class extends ss{getAggregatorType(){let{gpuAggregation:t,hexagonAggregator:r,getColorValue:n,getElevationValue:s}=this.props;return t&&(r||n||s)?(W.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):t&&pe.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(t){if(t==="cpu"){let{hexagonAggregator:r,radius:n}=this.props;return new lr({dimensions:2,getBin:{sources:["positions"],getValue:({positions:s},i,o)=>{if(r)return r(s,n);let c=this.state.aggregatorViewport.projectPosition(s),{radiusCommon:l,hexOriginCommon:f}=o;return Jx([c[0]-f[0],c[1]-f[1]],l)}},getValue:[{sources:["colorWeights"],getValue:({colorWeights:s})=>s},{sources:["elevationWeights"],getValue:({elevationWeights:s})=>s}]})}return new pe(this.context.device,{dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1}),...super.getShaders({modules:[ft,e5],vs:`
  in vec3 positions;
  in vec3 positions64Low;
  in float colorWeights;
  in float elevationWeights;
  
  ${K8}

  void getBin(out ivec2 binId) {
    vec3 positionCommon = project_position(positions, positions64Low);
    binId = pointToHexbin(positionCommon.xy, binOptions.radiusCommon);
  }
  void getValue(out vec2 value) {
    value = vec2(colorWeights, elevationWeights);
  }
  `})})}initializeState(){super.initializeState(),this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(t){let r=super.updateState(t),{props:n,oldProps:s,changeFlags:i}=t,{aggregator:o}=this.state;if((i.dataChanged||!this.state.dataAsArray)&&(n.getColorValue||n.getElevationValue)&&(this.state.dataAsArray=Array.from(ie(n.data).iterable)),r||i.dataChanged||n.radius!==s.radius||n.getColorValue!==s.getColorValue||n.getElevationValue!==s.getElevationValue||n.colorAggregation!==s.colorAggregation||n.elevationAggregation!==s.elevationAggregation){this._updateBinOptions();let{radiusCommon:a,hexOriginCommon:c,binIdRange:l,dataAsArray:f}=this.state;if(o.setProps({binIdRange:l,pointCount:this.getNumInstances(),operations:[n.colorAggregation,n.elevationAggregation],binOptions:{radiusCommon:a,hexOriginCommon:c},onUpdate:this._onAggregationUpdate.bind(this)}),f){let{getColorValue:h,getElevationValue:u}=this.props;o.setProps({customOperations:[h&&(d=>h(d.map(p=>f[p]),{indices:d,data:n.data})),u&&(d=>u(d.map(p=>f[p]),{indices:d,data:n.data}))]})}}return i.updateTriggersChanged&&i.updateTriggersChanged.getColorValue&&o.setNeedsUpdate(0),i.updateTriggersChanged&&i.updateTriggersChanged.getElevationValue&&o.setNeedsUpdate(1),r}_updateBinOptions(){let t=this.getBounds(),r=1,n=[0,0],s=[[0,1],[0,1]],i=this.context.viewport;if(t&&Number.isFinite(t[0][0])){let o=[(t[0][0]+t[1][0])/2,(t[0][1]+t[1][1])/2],{radius:a}=this.props,{unitsPerMeter:c}=i.getDistanceScales(o);r=c[0]*a;let l=Jx(i.projectFlat(o),r);o=i.unprojectFlat(Qv(l,r));let f=i.constructor;i=i.isGeospatial?new f({longitude:o[0],latitude:o[1],zoom:12}):new xe({position:[o[0],o[1],0],zoom:12}),n=[Math.fround(i.center[0]),Math.fround(i.center[1])],s=Rl({dataBounds:t,getBinId:h=>{let u=i.projectFlat(h);return u[0]-=n[0],u[1]-=n[1],Jx(u,r)},padding:1})}this.setState({radiusCommon:r,hexOriginCommon:n,binIdRange:s,aggregatorViewport:i})}draw(t){t.shaderModuleProps.project&&(t.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(t)}_onAggregationUpdate({channel:t}){let r=this.getCurrentLayer().props,{aggregator:n}=this.state;if(t===0){let s=n.getResult(0);this.setState({colors:new $i(s,n.binCount)}),r.onSetColorDomain(n.getResultDomain(0))}else if(t===1){let s=n.getResult(1);this.setState({elevations:new $i(s,n.binCount)}),r.onSetElevationDomain(n.getResultDomain(1))}}onAttributeChange(t){let{aggregator:r}=this.state;switch(t){case"positions":r.setNeedsUpdate(),this._updateBinOptions();let{radiusCommon:n,hexOriginCommon:s,binIdRange:i}=this.state;r.setProps({binIdRange:i,binOptions:{radiusCommon:n,hexOriginCommon:s}});break;case"colorWeights":r.setNeedsUpdate(0);break;case"elevationWeights":r.setNeedsUpdate(1);break;default:}}renderLayers(){let{aggregator:t,radiusCommon:r,hexOriginCommon:n}=this.state,{elevationScale:s,colorRange:i,elevationRange:o,extruded:a,coverage:c,material:l,transitions:f,colorScaleType:h,lowerPercentile:u,upperPercentile:d,colorDomain:p,elevationScaleType:m,elevationLowerPercentile:g,elevationUpperPercentile:x,elevationDomain:A}=this.props,_=this.getSubLayerClass("cells",t5),y=t.getBins(),T=this.state.colors?.update({scaleType:h,lowerPercentile:u,upperPercentile:d}),v=this.state.elevations?.update({scaleType:m,lowerPercentile:g,upperPercentile:x});return!T||!v?null:new _(this.getSubLayerProps({id:"cells"}),{data:{length:t.binCount,attributes:{getBin:y,getColorValue:T.attribute,getElevationValue:v.attribute}},dataComparator:(C,w)=>C.length===w.length,updateTriggers:{getBin:[y],getColorValue:[T.attribute],getElevationValue:[v.attribute]},diskResolution:6,vertices:$8,radius:r,hexOriginCommon:n,elevationScale:s,colorRange:i,colorScaleType:h,elevationRange:o,extruded:a,coverage:c,material:l,colorDomain:T.domain||p||t.getResultDomain(0),elevationDomain:v.domain||A||t.getResultDomain(1),colorCutoff:T.cutoff,elevationCutoff:v.cutoff,transitions:f&&{getFillColor:f.getColorValue||f.getColorWeight,getElevation:f.getElevationValue||f.getElevationWeight},extensions:[]})}getPickingInfo(t){let r=t.info,{index:n}=r;if(n>=0){let s=this.state.aggregator.getBin(n),i;if(s){let o=Qv(s.id,this.state.radiusCommon),a=this.context.viewport.unprojectFlat(o);i={col:s.id[0],row:s.id[1],position:a,colorValue:s.value[0],elevationValue:s.value[1],count:s.count},s.pointIndices&&(i.pointIndices=s.pointIndices,i.points=Array.isArray(this.props.data)?s.pointIndices.map(c=>this.props.data[c]):[])}r.object=i}return r}};Ud.layerName="HexagonLayer";Ud.defaultProps=tut;var n5=Ud;var $=.16666666666666666,F={N:[0,.5],E:[.5,0],S:[0,-.5],W:[-.5,0],NE:[.5,.5],NW:[-.5,.5],SE:[.5,-.5],SW:[-.5,-.5]},Ol=[F.W,F.SW,F.S],Ll=[F.S,F.SE,F.E],Bl=[F.E,F.NE,F.N],Nl=[F.NW,F.W,F.N],Fl=[[-.5,$],[-.5,-$],[-$,-.5],[$,-.5]],Dl=[[-$,-.5],[$,-.5],[.5,-$],[.5,$]],kl=[[.5,-$],[.5,$],[$,.5],[-$,.5]],Ul=[[-.5,$],[-.5,-$],[$,.5],[-$,.5]],s5=[F.W,F.SW,F.SE,F.E],i5=[F.S,F.SE,F.NE,F.N],o5=[F.NW,F.W,F.E,F.NE],a5=[F.NW,F.SW,F.S,F.N],c5=[[-.5,$],[-.5,-$],[.5,-$],[.5,$]],l5=[[-$,-.5],[$,-.5],[$,.5],[-$,.5]],eut=[F.NW,F.SW,F.SE,F.NE],f5=[F.NW,F.SW,F.SE,F.E,F.N],h5=[F.W,F.SW,F.SE,F.NE,F.N],u5=[F.NW,F.W,F.S,F.SE,F.NE],d5=[F.NW,F.SW,F.S,F.E,F.NE],p5=[F.NW,F.W,[.5,-$],[.5,$],F.N],m5=[[-$,-.5],[$,-.5],F.E,F.NE,F.N],g5=[[-.5,$],[-.5,-$],F.S,F.SE,F.E],x5=[F.W,F.SW,F.S,[$,.5],[-$,.5]],_5=[F.NW,F.W,[-$,-.5],[$,-.5],F.N],y5=[[-.5,$],[-.5,-$],F.E,F.NE,F.N],A5=[F.S,F.SE,F.E,[$,.5],[-$,.5]],b5=[F.W,F.SW,F.S,[.5,-$],[.5,$]],T5=[F.W,F.SW,F.SE,F.E,[$,.5],[-$,.5]],v5=[[-.5,$],[-.5,-$],F.S,F.SE,F.NE,F.N],E5=[F.NW,F.W,[-$,-.5],[$,-.5],F.E,F.NE],M5=[F.NW,F.SW,F.S,[.5,-$],[.5,$],F.N],zl=[F.W,F.SW,F.S,F.E,F.NE,F.N],Vl=[F.NW,F.W,F.S,F.SE,F.E,F.N],t_=[[-.5,$],[-.5,-$],[-$,-.5],[$,-.5],F.E,F.NE,F.N],e_=[F.W,F.SW,F.S,[.5,-$],[.5,$],[$,.5],[-$,.5]],r_=[F.NW,F.W,[-$,-.5],[$,-.5],[.5,-$],[.5,$],F.N],n_=[[-.5,$],[-.5,-$],F.S,F.SE,F.E,[$,.5],[-$,.5]],S5=[[-.5,$],[-.5,-$],[-$,-.5],[$,-.5],[.5,-$],[.5,$],[$,.5],[-$,.5]],w5={0:[],1:[[F.W,F.S]],2:[[F.S,F.E]],3:[[F.W,F.E]],4:[[F.N,F.E]],5:{0:[[F.W,F.S],[F.N,F.E]],1:[[F.W,F.N],[F.S,F.E]]},6:[[F.N,F.S]],7:[[F.W,F.N]],8:[[F.W,F.N]],9:[[F.N,F.S]],10:{0:[[F.W,F.N],[F.S,F.E]],1:[[F.W,F.S],[F.N,F.E]]},11:[[F.N,F.E]],12:[[F.W,F.E]],13:[[F.S,F.E]],14:[[F.W,F.S]],15:[]};function G(e){return parseInt(e,4)}var C5={[G("0000")]:[],[G("2222")]:[],[G("2221")]:[Ol],[G("2212")]:[Ll],[G("2122")]:[Bl],[G("1222")]:[Nl],[G("0001")]:[Ol],[G("0010")]:[Ll],[G("0100")]:[Bl],[G("1000")]:[Nl],[G("2220")]:[Fl],[G("2202")]:[Dl],[G("2022")]:[kl],[G("0222")]:[Ul],[G("0002")]:[Fl],[G("0020")]:[Dl],[G("0200")]:[kl],[G("2000")]:[Ul],[G("0011")]:[s5],[G("0110")]:[i5],[G("1100")]:[o5],[G("1001")]:[a5],[G("2211")]:[s5],[G("2112")]:[i5],[G("1122")]:[o5],[G("1221")]:[a5],[G("2200")]:[c5],[G("2002")]:[l5],[G("0022")]:[c5],[G("0220")]:[l5],[G("1111")]:[eut],[G("1211")]:[f5],[G("2111")]:[h5],[G("1112")]:[u5],[G("1121")]:[d5],[G("1011")]:[f5],[G("0111")]:[h5],[G("1110")]:[u5],[G("1101")]:[d5],[G("1200")]:[p5],[G("0120")]:[m5],[G("0012")]:[g5],[G("2001")]:[x5],[G("1022")]:[p5],[G("2102")]:[m5],[G("2210")]:[g5],[G("0221")]:[x5],[G("1002")]:[_5],[G("2100")]:[y5],[G("0210")]:[A5],[G("0021")]:[b5],[G("1220")]:[_5],[G("0122")]:[y5],[G("2012")]:[A5],[G("2201")]:[b5],[G("0211")]:[T5],[G("2110")]:[v5],[G("1102")]:[E5],[G("1021")]:[M5],[G("2011")]:[T5],[G("0112")]:[v5],[G("1120")]:[E5],[G("1201")]:[M5],[G("2101")]:[zl],[G("0121")]:[zl],[G("1012")]:[Vl],[G("1210")]:[Vl],[G("0101")]:{0:[Ol,Bl],1:[zl],2:[zl]},[G("1010")]:{0:[Nl,Ll],1:[Vl],2:[Vl]},[G("2121")]:{0:[zl],1:[zl],2:[Ol,Bl]},[G("1212")]:{0:[Vl],1:[Vl],2:[Nl,Ll]},[G("2120")]:{0:[t_],1:[t_],2:[Fl,Bl]},[G("2021")]:{0:[e_],1:[e_],2:[Ol,kl]},[G("1202")]:{0:[r_],1:[r_],2:[Nl,Dl]},[G("0212")]:{0:[n_],1:[n_],2:[Ll,Ul]},[G("0102")]:{0:[Fl,Bl],1:[t_],2:[t_]},[G("0201")]:{0:[Ol,kl],1:[e_],2:[e_]},[G("1020")]:{0:[Nl,Dl],1:[r_],2:[r_]},[G("2010")]:{0:[Ll,Ul],1:[n_],2:[n_]},[G("2020")]:{0:[Ul,Dl],1:[S5],2:[Fl,kl]},[G("0202")]:{0:[kl,Fl],1:[S5],2:[Ul,Dl]}};function zd(e,t){return Number.isNaN(e)?0:Array.isArray(t)?e<t[0]?0:e<t[1]?1:2:e>=t?1:0}function P5(e){let{x:t,y:r,xRange:n,yRange:s,getValue:i,threshold:o}=e,a=t<n[0],c=t>=n[1]-1,l=r<s[0],f=r>=s[1]-1,h=a||c||l||f,u=0,d,p,m,g;if(a||f)m=0;else{let _=i(t,r+1);m=zd(_,o),u+=_}if(c||f)g=0;else{let _=i(t+1,r+1);g=zd(_,o),u+=_}if(c||l)p=0;else{let _=i(t+1,r);p=zd(_,o),u+=_}if(a||l)d=0;else{let _=i(t,r);d=zd(_,o),u+=_}let x=-1;Number.isFinite(o)&&(x=m<<3|g<<2|p<<1|d),Array.isArray(o)&&(x=m<<6|g<<4|p<<2|d);let A=0;return h||(A=zd(u/4,o)),{code:x,meanCode:A}}function I5(e){let{x:t,y:r,z:n,code:s,meanCode:i}=e,o=C5[s];Array.isArray(o)||(o=o[i]);let a=t+1,c=r+1,l=[];return o.forEach(f=>{let h=[];f.forEach(u=>{let d=a+u[0],p=c+u[1];h.push([d,p,n])}),l.push(h)}),l}function R5(e){let{x:t,y:r,z:n,code:s,meanCode:i}=e,o=w5[s];Array.isArray(o)||(o=o[i]);let a=t+1,c=r+1,l=[];return o.forEach(f=>{f.forEach(h=>{let u=a+h[0],d=c+h[1];l.push([u,d,n])})}),l}function O5({contours:e,getValue:t,xRange:r,yRange:n}){let s=[],i=[],o=0,a=0;for(let c=0;c<e.length;c++){let l=e[c],f=l.zIndex??c,{threshold:h}=l;for(let u=r[0]-1;u<r[1];u++)for(let d=n[0]-1;d<n[1];d++){let{code:p,meanCode:m}=P5({getValue:t,threshold:h,x:u,y:d,xRange:r,yRange:n}),g={x:u,y:d,z:f,code:p,meanCode:m};if(Array.isArray(h)){let x=I5(g);for(let A of x)i[a++]={vertices:A,contour:l}}else{let x=R5(g);x.length>0&&(s[o++]={vertices:x,contour:l})}}}return{lines:s,polygons:i}}function L5(e){let{aggregator:t,binIdRange:r,channel:n}=e;if(t instanceof pe){let s=t.getResult(n)?.buffer;if(s){let i=new Float32Array(s.readSyncWebGL().buffer);return rut(i,r)}}if(t instanceof lr){let s=t.getResult(n)?.value,i=t.getBins()?.value;if(i&&s)return nut(s,i,t.binCount)}return null}function rut(e,t){let[[r,n],[s,i]]=t,o=n-r,a=i-s;return(c,l)=>(c-=r,l-=s,c<0||c>=o||l<0||l>=a?NaN:e[l*o+c])}function nut(e,t,r){let n={};for(let s=0;s<r;s++){let i=t[s*2],o=t[s*2+1];n[i]=n[i]||{},n[i][o]=e[s]}return(s,i)=>n[s]?.[i]??NaN}var sut=`uniform binOptionsUniforms {
  vec2 cellOriginCommon;
  vec2 cellSizeCommon;
} binOptions;
`,B5={name:"binOptions",vs:sut,uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}};var N5=[255,255,255,255],iut=1,out={cellSize:{type:"number",min:1,value:1e3},gridOrigin:{type:"array",compare:!0,value:[0,0]},getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM",contours:{type:"object",value:[{threshold:1}],optional:!0,compare:3},zOffset:.005},Vd=class extends ss{getAggregatorType(){return this.props.gpuAggregation&&pe.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(t){return t==="cpu"?new lr({dimensions:2,getBin:{sources:["positions"],getValue:({positions:r},n,s)=>{let o=this.state.aggregatorViewport.projectPosition(r),{cellSizeCommon:a,cellOriginCommon:c}=s;return[Math.floor((o[0]-c[0])/a[0]),Math.floor((o[1]-c[1])/a[1])]}},getValue:[{sources:["counts"],getValue:({counts:r})=>r}],onUpdate:this._onAggregationUpdate.bind(this)}):new pe(this.context.device,{dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1}),...super.getShaders({modules:[ft,B5],vs:`
  in vec3 positions;
  in vec3 positions64Low;
  in float counts;

  void getBin(out ivec2 binId) {
    vec3 positionCommon = project_position(positions, positions64Low);
    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);
    binId = ivec2(gridCoords);
  }
  void getValue(out float value) {
    value = counts;
  }
  `}),onUpdate:this._onAggregationUpdate.bind(this)})}initializeState(){super.initializeState(),this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}updateState(t){let r=super.updateState(t),{props:n,oldProps:s,changeFlags:i}=t,{aggregator:o}=this.state;if(r||i.dataChanged||n.cellSize!==s.cellSize||!it(n.gridOrigin,s.gridOrigin,1)||n.aggregation!==s.aggregation){this._updateBinOptions();let{cellSizeCommon:a,cellOriginCommon:c,binIdRange:l}=this.state;o.setProps({binIdRange:l,pointCount:this.getNumInstances(),operations:[n.aggregation],binOptions:{cellSizeCommon:a,cellOriginCommon:c}})}return it(s.contours,n.contours,2)||this.setState({contourData:null}),r}_updateBinOptions(){let t=this.getBounds(),r=[1,1],n=[0,0],s=[[0,1],[0,1]],i=this.context.viewport;if(t&&Number.isFinite(t[0][0])){let o=[(t[0][0]+t[1][0])/2,(t[0][1]+t[1][1])/2],{cellSize:a,gridOrigin:c}=this.props,{unitsPerMeter:l}=i.getDistanceScales(o);r[0]=l[0]*a,r[1]=l[1]*a;let f=i.projectFlat(o);n=[Math.floor((f[0]-c[0])/r[0])*r[0]+c[0],Math.floor((f[1]-c[1])/r[1])*r[1]+c[1]],o=i.unprojectFlat(n);let h=i.constructor;i=i.isGeospatial?new h({longitude:o[0],latitude:o[1],zoom:12}):new xe({position:[o[0],o[1],0],zoom:12}),n=[Math.fround(i.center[0]),Math.fround(i.center[1])],s=Rl({dataBounds:t,getBinId:u=>{let d=i.projectFlat(u);return[Math.floor((d[0]-n[0])/r[0]),Math.floor((d[1]-n[1])/r[1])]}})}this.setState({cellSizeCommon:r,cellOriginCommon:n,binIdRange:s,aggregatorViewport:i})}draw(t){t.shaderModuleProps.project&&(t.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(t)}_onAggregationUpdate(){let{aggregator:t,binIdRange:r}=this.state;this.setState({aggregatedValueReader:L5({aggregator:t,binIdRange:r,channel:0}),contourData:null})}_getContours(){let{aggregatedValueReader:t}=this.state;if(!t)return null;if(!this.state.contourData){let{binIdRange:r}=this.state,{contours:n}=this.props,s=O5({contours:n,getValue:t,xRange:r[0],yRange:r[1]});this.state.contourData=s}return this.state.contourData}onAttributeChange(t){let{aggregator:r}=this.state;switch(t){case"positions":r.setNeedsUpdate(),this._updateBinOptions();let{cellSizeCommon:n,cellOriginCommon:s,binIdRange:i}=this.state;r.setProps({binIdRange:i,binOptions:{cellSizeCommon:n,cellOriginCommon:s}});break;case"counts":r.setNeedsUpdate(0);break;default:}}renderLayers(){let t=this._getContours();if(!t)return null;let{lines:r,polygons:n}=t,{zOffset:s}=this.props,{cellOriginCommon:i,cellSizeCommon:o}=this.state,a=this.getSubLayerClass("lines",Xn),c=this.getSubLayerClass("bands",Ei),l=new rt().translate([i[0],i[1],0]).scale([o[0],o[1],s]),f=r&&r.length>0&&new a(this.getSubLayerProps({id:"lines"}),{data:r,coordinateSystem:q.CARTESIAN,modelMatrix:l,getPath:u=>u.vertices,getColor:u=>u.contour.color??N5,getWidth:u=>u.contour.strokeWidth??iut,widthUnits:"pixels"}),h=n&&n.length>0&&new c(this.getSubLayerProps({id:"bands"}),{data:n,coordinateSystem:q.CARTESIAN,modelMatrix:l,getPolygon:u=>u.vertices,getFillColor:u=>u.contour.color??N5});return[f,h]}getPickingInfo(t){let r=t.info,{object:n}=r;return n&&(r.object={contour:n.contour}),r}};Vd.layerName="ContourLayer";Vd.defaultProps=out;var F5=Vd;var D5=`#version 300 es
#define SHADER_NAME grid-cell-layer-vertex-shader
in vec3 positions;
in vec3 normals;
in vec2 instancePositions;
in float instanceElevationValues;
in float instanceColorValues;
in vec3 instancePickingColors;
uniform sampler2D colorRange;
out vec4 vColor;
float interp(float value, vec2 domain, vec2 range) {
float r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);
return mix(range.x, range.y, r);
}
vec4 interp(float value, vec2 domain, sampler2D range) {
float r = (value - domain.x) / (domain.y - domain.x);
return texture(range, vec2(r, 0.5));
}
void main(void) {
geometry.pickingColor = instancePickingColors;
if (isnan(instanceColorValues) ||
instanceColorValues < grid.colorDomain.z ||
instanceColorValues > grid.colorDomain.w ||
instanceElevationValues < grid.elevationDomain.z ||
instanceElevationValues > grid.elevationDomain.w
) {
gl_Position = vec4(0.);
return;
}
vec2 commonPosition = (instancePositions + (positions.xy + 1.0) / 2.0 * column.coverage) * grid.sizeCommon + grid.originCommon - project.commonOrigin.xy;
geometry.position = vec4(commonPosition, 0.0, 1.0);
geometry.normal = project_normal(normals);
float elevation = 0.0;
if (column.extruded) {
elevation = interp(instanceElevationValues, grid.elevationDomain.xy, grid.elevationRange);
elevation = project_size(elevation);
geometry.position.z = (positions.z + 1.0) / 2.0 * elevation;
}
gl_Position = project_common_position_to_clipspace(geometry.position);
DECKGL_FILTER_GL_POSITION(gl_Position, geometry);
vColor = interp(instanceColorValues, grid.colorDomain.xy, colorRange);
vColor.a *= layer.opacity;
if (column.extruded) {
vColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);
}
DECKGL_FILTER_COLOR(vColor, geometry);
}
`;var aut=`uniform gridUniforms {
  vec4 colorDomain;
  vec4 elevationDomain;
  vec2 elevationRange;
  vec2 originCommon;
  vec2 sizeCommon;
} grid;
`,k5={name:"grid",vs:aut,uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>",sizeCommon:"vec2<f32>"}};var Wd=class extends qn{getShaders(){let t=super.getShaders();return t.modules.push(k5),{...t,vs:D5}}initializeState(){super.initializeState();let t=this.getAttributeManager();t.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),t.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(t){super.updateState(t);let{props:r,oldProps:n}=t,s=this.state.fillModel;if(n.colorRange!==r.colorRange){this.state.colorTexture?.destroy(),this.state.colorTexture=Il(this.context.device,r.colorRange,r.colorScaleType);let i={colorRange:this.state.colorTexture};s.shaderInputs.setProps({grid:i})}else n.colorScaleType!==r.colorScaleType&&Pl(this.state.colorTexture,r.colorScaleType)}finalizeState(t){super.finalizeState(t),this.state.colorTexture?.destroy()}_updateGeometry(){let t=new ys;this.state.fillModel.setGeometry(t)}draw({uniforms:t}){let{cellOriginCommon:r,cellSizeCommon:n,elevationRange:s,elevationScale:i,extruded:o,coverage:a,colorDomain:c,elevationDomain:l}=this.props,f=this.props.colorCutoff||[-1/0,1/0],h=this.props.elevationCutoff||[-1/0,1/0],u=this.state.fillModel,d={colorDomain:[Math.max(c[0],f[0]),Math.min(c[1],f[1]),Math.max(c[0]-1,f[0]),Math.min(c[1]+1,f[1])],elevationDomain:[Math.max(l[0],h[0]),Math.min(l[1],h[1]),Math.max(l[0]-1,h[0]),Math.min(l[1]+1,h[1])],elevationRange:[s[0]*i,s[1]*i],originCommon:r,sizeCommon:n};u.shaderInputs.setProps({column:{extruded:o,coverage:a},grid:d}),u.draw(this.context.renderPass)}};Wd.layerName="GridCellLayer";var cut=`uniform binOptionsUniforms {
  vec2 cellOriginCommon;
  vec2 cellSizeCommon;
} binOptions;
`,U5={name:"binOptions",vs:cut,uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}};function z5(){}var lut={gpuAggregation:!0,colorDomain:null,colorRange:Yi,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:z5,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:z5,cellSize:{type:"number",min:0,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},gridAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0},Hd=class extends ss{getAggregatorType(){let{gpuAggregation:t,gridAggregator:r,getColorValue:n,getElevationValue:s}=this.props;return t&&(r||n||s)?(W.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):t&&pe.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(t){if(t==="cpu"){let{gridAggregator:r,cellSize:n}=this.props;return new lr({dimensions:2,getBin:{sources:["positions"],getValue:({positions:s},i,o)=>{if(r)return r(s,n);let c=this.state.aggregatorViewport.projectPosition(s),{cellSizeCommon:l,cellOriginCommon:f}=o;return[Math.floor((c[0]-f[0])/l[0]),Math.floor((c[1]-f[1])/l[1])]}},getValue:[{sources:["colorWeights"],getValue:({colorWeights:s})=>s},{sources:["elevationWeights"],getValue:({elevationWeights:s})=>s}]})}return new pe(this.context.device,{dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1}),...super.getShaders({modules:[ft,U5],vs:`
  in vec3 positions;
  in vec3 positions64Low;
  in float colorWeights;
  in float elevationWeights;

  void getBin(out ivec2 binId) {
    vec3 positionCommon = project_position(positions, positions64Low);
    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);
    binId = ivec2(gridCoords);
  }
  void getValue(out vec2 value) {
    value = vec2(colorWeights, elevationWeights);
  }
  `})})}initializeState(){super.initializeState(),this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(t){let r=super.updateState(t),{props:n,oldProps:s,changeFlags:i}=t,{aggregator:o}=this.state;if((i.dataChanged||!this.state.dataAsArray)&&(n.getColorValue||n.getElevationValue)&&(this.state.dataAsArray=Array.from(ie(n.data).iterable)),r||i.dataChanged||n.cellSize!==s.cellSize||n.getColorValue!==s.getColorValue||n.getElevationValue!==s.getElevationValue||n.colorAggregation!==s.colorAggregation||n.elevationAggregation!==s.elevationAggregation){this._updateBinOptions();let{cellSizeCommon:a,cellOriginCommon:c,binIdRange:l,dataAsArray:f}=this.state;if(o.setProps({binIdRange:l,pointCount:this.getNumInstances(),operations:[n.colorAggregation,n.elevationAggregation],binOptions:{cellSizeCommon:a,cellOriginCommon:c},onUpdate:this._onAggregationUpdate.bind(this)}),f){let{getColorValue:h,getElevationValue:u}=this.props;o.setProps({customOperations:[h&&(d=>h(d.map(p=>f[p]),{indices:d,data:n.data})),u&&(d=>u(d.map(p=>f[p]),{indices:d,data:n.data}))]})}}return i.updateTriggersChanged&&i.updateTriggersChanged.getColorValue&&o.setNeedsUpdate(0),i.updateTriggersChanged&&i.updateTriggersChanged.getElevationValue&&o.setNeedsUpdate(1),r}_updateBinOptions(){let t=this.getBounds(),r=[1,1],n=[0,0],s=[[0,1],[0,1]],i=this.context.viewport;if(t&&Number.isFinite(t[0][0])){let o=[(t[0][0]+t[1][0])/2,(t[0][1]+t[1][1])/2],{cellSize:a}=this.props,{unitsPerMeter:c}=i.getDistanceScales(o);r[0]=c[0]*a,r[1]=c[1]*a;let l=i.projectFlat(o);n=[Math.floor(l[0]/r[0])*r[0],Math.floor(l[1]/r[1])*r[1]],o=i.unprojectFlat(n);let f=i.constructor;i=i.isGeospatial?new f({longitude:o[0],latitude:o[1],zoom:12}):new xe({position:[o[0],o[1],0],zoom:12}),n=[Math.fround(i.center[0]),Math.fround(i.center[1])],s=Rl({dataBounds:t,getBinId:h=>{let u=i.projectFlat(h);return[Math.floor((u[0]-n[0])/r[0]),Math.floor((u[1]-n[1])/r[1])]}})}this.setState({cellSizeCommon:r,cellOriginCommon:n,binIdRange:s,aggregatorViewport:i})}draw(t){t.shaderModuleProps.project&&(t.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(t)}_onAggregationUpdate({channel:t}){let r=this.getCurrentLayer().props,{aggregator:n}=this.state;if(t===0){let s=n.getResult(0);this.setState({colors:new $i(s,n.binCount)}),r.onSetColorDomain(n.getResultDomain(0))}else if(t===1){let s=n.getResult(1);this.setState({elevations:new $i(s,n.binCount)}),r.onSetElevationDomain(n.getResultDomain(1))}}onAttributeChange(t){let{aggregator:r}=this.state;switch(t){case"positions":r.setNeedsUpdate(),this._updateBinOptions();let{cellSizeCommon:n,cellOriginCommon:s,binIdRange:i}=this.state;r.setProps({binIdRange:i,binOptions:{cellSizeCommon:n,cellOriginCommon:s}});break;case"colorWeights":r.setNeedsUpdate(0);break;case"elevationWeights":r.setNeedsUpdate(1);break;default:}}renderLayers(){let{aggregator:t,cellOriginCommon:r,cellSizeCommon:n}=this.state,{elevationScale:s,colorRange:i,elevationRange:o,extruded:a,coverage:c,material:l,transitions:f,colorScaleType:h,lowerPercentile:u,upperPercentile:d,colorDomain:p,elevationScaleType:m,elevationLowerPercentile:g,elevationUpperPercentile:x,elevationDomain:A}=this.props,_=this.getSubLayerClass("cells",Wd),y=t.getBins(),T=this.state.colors?.update({scaleType:h,lowerPercentile:u,upperPercentile:d}),v=this.state.elevations?.update({scaleType:m,lowerPercentile:g,upperPercentile:x});return!T||!v?null:new _(this.getSubLayerProps({id:"cells"}),{data:{length:t.binCount,attributes:{getBin:y,getColorValue:T.attribute,getElevationValue:v.attribute}},dataComparator:(C,w)=>C.length===w.length,updateTriggers:{getBin:[y],getColorValue:[T.attribute],getElevationValue:[v.attribute]},cellOriginCommon:r,cellSizeCommon:n,elevationScale:s,colorRange:i,colorScaleType:h,elevationRange:o,extruded:a,coverage:c,material:l,colorDomain:T.domain||p||t.getResultDomain(0),elevationDomain:v.domain||A||t.getResultDomain(1),colorCutoff:T.cutoff,elevationCutoff:v.cutoff,transitions:f&&{getFillColor:f.getColorValue||f.getColorWeight,getElevation:f.getElevationValue||f.getElevationWeight},extensions:[]})}getPickingInfo(t){let r=t.info,{index:n}=r;if(n>=0){let s=this.state.aggregator.getBin(n),i;s&&(i={col:s.id[0],row:s.id[1],colorValue:s.value[0],elevationValue:s.value[1],count:s.count},s.pointIndices&&(i.pointIndices=s.pointIndices,i.points=Array.isArray(this.props.data)?s.pointIndices.map(o=>this.props.data[o]):[])),r.object=i}return r}};Hd.layerName="GridLayer";Hd.defaultProps=lut;var V5=Hd;function H5(e){let t=e.map(a=>a[0]),r=e.map(a=>a[1]),n=Math.min.apply(null,t),s=Math.max.apply(null,t),i=Math.min.apply(null,r),o=Math.max.apply(null,r);return[n,i,s,o]}function G5(e,t){return t[0]>=e[0]&&t[2]<=e[2]&&t[1]>=e[1]&&t[3]<=e[3]}var W5=new Float32Array(12);function tE(e,t=2){let r=0;for(let n of e)for(let s=0;s<t;s++)W5[r++]=n[s]||0;return W5}function j5(e,t,r){let[n,s,i,o]=e,a=i-n,c=o-s,l=a,f=c;a/c<t/r?l=t/r*c:f=r/t*a,l<t&&(l=t,f=r);let h=(i+n)/2,u=(o+s)/2;return[h-l/2,u-f/2,h+l/2,u+f/2]}function q5(e,t){let[r,n,s,i]=t;return[(e[0]-r)/(s-r),(e[1]-n)/(i-n)]}var X5=`#version 300 es
#define SHADER_NAME heatp-map-layer-vertex-shader
uniform sampler2D maxTexture;
in vec3 positions;
in vec2 texCoords;
out vec2 vTexCoords;
out float vIntensityMin;
out float vIntensityMax;
void main(void) {
gl_Position = project_position_to_clipspace(positions, vec3(0.0), vec3(0.0));
vTexCoords = texCoords;
vec4 maxTexture = texture(maxTexture, vec2(0.5));
float maxValue = triangle.aggregationMode < 0.5 ? maxTexture.r : maxTexture.g;
float minValue = maxValue * triangle.threshold;
if (triangle.colorDomain[1] > 0.) {
maxValue = triangle.colorDomain[1];
minValue = triangle.colorDomain[0];
}
vIntensityMax = triangle.intensity / maxValue;
vIntensityMin = triangle.intensity / minValue;
}
`;var Y5=`#version 300 es
#define SHADER_NAME triangle-layer-fragment-shader
precision highp float;
uniform sampler2D weightsTexture;
uniform sampler2D colorTexture;
in vec2 vTexCoords;
in float vIntensityMin;
in float vIntensityMax;
out vec4 fragColor;
vec4 getLinearColor(float value) {
float factor = clamp(value * vIntensityMax, 0., 1.);
vec4 color = texture(colorTexture, vec2(factor, 0.5));
color.a *= min(value * vIntensityMin, 1.0);
return color;
}
void main(void) {
vec4 weights = texture(weightsTexture, vTexCoords);
float weight = weights.r;
if (triangle.aggregationMode > 0.5) {
weight /= max(1.0, weights.a);
}
if (weight <= 0.) {
discard;
}
vec4 linearColor = getLinearColor(weight);
linearColor.a *= layer.opacity;
fragColor = linearColor;
}
`;var $5=`uniform triangleUniforms {
  float aggregationMode;
  vec2 colorDomain;
  float intensity;
  float threshold;
} triangle;
`,K5={name:"triangle",vs:$5,fs:$5,uniformTypes:{aggregationMode:"f32",colorDomain:"vec2<f32>",intensity:"f32",threshold:"f32"}};var s_=class extends _t{getShaders(){return super.getShaders({vs:X5,fs:Y5,modules:[ft,K5]})}initializeState({device:t}){this.setState({model:this._getModel(t)})}_getModel(t){let{vertexCount:r,data:n}=this.props;return new tt(t,{...this.getShaders(),id:this.props.id,attributes:n.attributes,bufferLayout:[{name:"positions",format:"float32x3"},{name:"texCoords",format:"float32x2"}],topology:"triangle-strip",vertexCount:r})}draw(){let{model:t}=this.state,{aggregationMode:r,colorDomain:n,intensity:s,threshold:i,colorTexture:o,maxTexture:a,weightsTexture:c}=this.props,l={aggregationMode:r,colorDomain:n,intensity:s,threshold:i,colorTexture:o,maxTexture:a,weightsTexture:c};t.shaderInputs.setProps({triangle:l}),t.draw(this.context.renderPass)}};s_.layerName="TriangleLayer";var Z5=s_;function J5(e,t){let r={};for(let n in e)t.includes(n)||(r[n]=e[n]);return r}var i_=class extends qt{initializeAggregationLayer(t){super.initializeState(this.context),this.setState({ignoreProps:J5(this.constructor._propTypes,t.data.props),dimensions:t})}updateState(t){super.updateState(t);let{changeFlags:r}=t;if(r.extensionsChanged){let n=this.getShaders({});n&&n.defines&&(n.defines.NON_INSTANCED_MODEL=1),this.updateShaders(n)}this._updateAttributes()}updateAttributes(t){this.setState({changedAttributes:t})}getAttributes(){return this.getAttributeManager().getAttributes()}getModuleSettings(){let{viewport:t,mousePosition:r,device:n}=this.context;return Object.assign(Object.create(this.props),{viewport:t,mousePosition:r,picking:{isActive:0},devicePixelRatio:n.canvasContext.cssToDeviceRatio()})}updateShaders(t){}isAggregationDirty(t,r={}){let{props:n,oldProps:s,changeFlags:i}=t,{compareAll:o=!1,dimension:a}=r,{ignoreProps:c}=this.state,{props:l,accessors:f=[]}=a,{updateTriggersChanged:h}=i;if(i.dataChanged)return!0;if(h){if(h.all)return!0;for(let u of f)if(h[u])return!0}if(o)return i.extensionsChanged?!0:bc({oldProps:s,newProps:n,ignoreProps:c,propTypes:this.constructor._propTypes});for(let u of l)if(n[u]!==s[u])return!0;return!1}isAttributeChanged(t){let{changedAttributes:r}=this.state;return t?r&&r[t]!==void 0:!fut(r)}_getAttributeManager(){return new Or(this.context.device,{id:this.props.id,stats:this.context.stats})}};i_.layerName="AggregationLayer";var Q5=i_;function fut(e){let t=!0;for(let r in e){t=!1;break}return t}var eE=`#version 300 es
in vec3 positions;
in vec3 positions64Low;
in float weights;
out vec4 weightsTexture;
void main()
{
weightsTexture = vec4(weights * weight.weightsScale, 0., 0., 1.);
float radiusTexels = project_pixel_size(weight.radiusPixels) * weight.textureWidth / (weight.commonBounds.z - weight.commonBounds.x);
gl_PointSize = radiusTexels * 2.;
vec3 commonPosition = project_position(positions, positions64Low);
gl_Position.xy = (commonPosition.xy - weight.commonBounds.xy) / (weight.commonBounds.zw - weight.commonBounds.xy) ;
gl_Position.xy = (gl_Position.xy * 2.) - (1.);
gl_Position.w = 1.0;
}
`;var rE=`#version 300 es
in vec4 weightsTexture;
out vec4 fragColor;
float gaussianKDE(float u){
return pow(2.71828, -u*u/0.05555)/(1.77245385*0.166666);
}
void main()
{
float dist = length(gl_PointCoord - vec2(0.5, 0.5));
if (dist > 0.5) {
discard;
}
fragColor = weightsTexture * gaussianKDE(2. * dist);
DECKGL_FILTER_COLOR(fragColor, geometry);
}
`;var tz=`#version 300 es
uniform sampler2D inTexture;
out vec4 outTexture;
void main()
{
int yIndex = gl_VertexID / int(maxWeight.textureSize);
int xIndex = gl_VertexID - (yIndex * int(maxWeight.textureSize));
vec2 uv = (0.5 + vec2(float(xIndex), float(yIndex))) / maxWeight.textureSize;
outTexture = texture(inTexture, uv);
gl_Position = vec4(0.0, 0.0, 0.0, 1.0);
gl_PointSize = 1.0;
}
`;var ez=`#version 300 es
in vec4 outTexture;
out vec4 fragColor;
void main() {
fragColor = outTexture;
fragColor.g = outTexture.r / max(1.0, outTexture.a);
}
`;var hut=`uniform weightUniforms {
  vec4 commonBounds;
  float radiusPixels;
  float textureWidth;
  float weightsScale;
} weight;
`,rz={name:"weight",vs:hut,uniformTypes:{commonBounds:"vec4<f32>",radiusPixels:"f32",textureWidth:"f32",weightsScale:"f32"}},nz={name:"maxWeight",vs:`uniform maxWeightUniforms {
  float textureSize;
} maxWeight;
`,uniformTypes:{textureSize:"f32"}};var uut=2,nE={format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}},sz=[0,0],dut={SUM:0,MEAN:1},put={getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},intensity:{type:"number",min:0,value:1},radiusPixels:{type:"number",min:1,max:100,value:50},colorRange:Yi,threshold:{type:"number",min:0,max:1,value:.05},colorDomain:{type:"array",value:null,optional:!0},aggregation:"SUM",weightsTextureSize:{type:"number",min:128,max:2048,value:2048},debounceTimeout:{type:"number",min:0,max:1e3,value:500}},mut=["float32-renderable-webgl","texture-blend-float-webgl"],gut={data:{props:["radiusPixels"]}},Gd=class extends Q5{getShaders(t){let r=[ft];return t.modules&&(r=[...r,...t.modules]),super.getShaders({...t,modules:r})}initializeState(){super.initializeAggregationLayer(gut),this.setState({colorDomain:sz}),this._setupTextureParams(),this._setupAttributes(),this._setupResources()}shouldUpdateState({changeFlags:t}){return t.somethingChanged}updateState(t){super.updateState(t),this._updateHeatmapState(t)}_updateHeatmapState(t){let{props:r,oldProps:n}=t,s=this._getChangeFlags(t);(s.dataChanged||s.viewportChanged)&&(s.boundsChanged=this._updateBounds(s.dataChanged),this._updateTextureRenderingBounds()),s.dataChanged||s.boundsChanged?(clearTimeout(this.state.updateTimer),this.setState({isWeightMapDirty:!0})):s.viewportZoomChanged&&this._debouncedUpdateWeightmap(),r.colorRange!==n.colorRange&&this._updateColorTexture(t),this.state.isWeightMapDirty&&this._updateWeightmap(),this.setState({zoom:t.context.viewport.zoom})}renderLayers(){let{weightsTexture:t,triPositionBuffer:r,triTexCoordBuffer:n,maxWeightsTexture:s,colorTexture:i,colorDomain:o}=this.state,{updateTriggers:a,intensity:c,threshold:l,aggregation:f}=this.props,h=this.getSubLayerClass("triangle",Z5);return new h(this.getSubLayerProps({id:"triangle-layer",updateTriggers:a}),{coordinateSystem:q.DEFAULT,data:{attributes:{positions:r,texCoords:n}},vertexCount:4,maxTexture:s,colorTexture:i,aggregationMode:dut[f]||0,weightsTexture:t,intensity:c,threshold:l,colorDomain:o})}finalizeState(t){super.finalizeState(t);let{weightsTransform:r,weightsTexture:n,maxWeightTransform:s,maxWeightsTexture:i,triPositionBuffer:o,triTexCoordBuffer:a,colorTexture:c,updateTimer:l}=this.state;r?.destroy(),n?.destroy(),s?.destroy(),i?.destroy(),o?.destroy(),a?.destroy(),c?.destroy(),l&&clearTimeout(l)}_getAttributeManager(){return new Or(this.context.device,{id:this.props.id,stats:this.context.stats})}_getChangeFlags(t){let r={},{dimensions:n}=this.state;r.dataChanged=this.isAttributeChanged()&&"attribute changed"||this.isAggregationDirty(t,{compareAll:!0,dimension:n.data})&&"aggregation is dirty",r.viewportChanged=t.changeFlags.viewportChanged;let{zoom:s}=this.state;return(!t.context.viewport||t.context.viewport.zoom!==s)&&(r.viewportZoomChanged=!0),r}_createTextures(){let{textureSize:t,format:r}=this.state;this.setState({weightsTexture:this.context.device.createTexture({...nE,width:t,height:t,format:r}),maxWeightsTexture:this.context.device.createTexture({...nE,width:1,height:1,format:r})})}_setupAttributes(){this.getAttributeManager().add({positions:{size:3,type:"float64",accessor:"getPosition"},weights:{size:1,accessor:"getWeight"}}),this.setState({positionAttributeName:"positions"})}_setupTextureParams(){let{device:t}=this.context,{weightsTextureSize:r}=this.props,n=Math.min(r,t.limits.maxTextureDimension2D),s=mut.every(a=>t.features.has(a)),i=s?"rgba32float":"rgba8unorm",o=s?1:1/255;this.setState({textureSize:n,format:i,weightsScale:o}),s||W.warn(`HeatmapLayer: ${this.id} rendering to float texture not supported, falling back to low precision format`)()}_createWeightsTransform(t){let{weightsTransform:r}=this.state,{weightsTexture:n}=this.state,s=this.getAttributeManager();r?.destroy(),r=new pi(this.context.device,{id:`${this.id}-weights-transform`,bufferLayout:s.getBufferLayouts(),vertexCount:1,targetTexture:n,parameters:{depthWriteEnabled:!1,blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"},topology:"point-list",...t,modules:[...t.modules,rz]}),this.setState({weightsTransform:r})}_setupResources(){this._createTextures();let{device:t}=this.context,{textureSize:r,weightsTexture:n,maxWeightsTexture:s}=this.state,i=this.getShaders({vs:eE,fs:rE});this._createWeightsTransform(i);let o=this.getShaders({vs:tz,fs:ez,modules:[nz]}),a=new pi(t,{id:`${this.id}-max-weights-transform`,targetTexture:s,...o,vertexCount:r*r,topology:"point-list",parameters:{depthWriteEnabled:!1,blendColorOperation:"max",blendAlphaOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}}),c={inTexture:n,textureSize:r};a.model.shaderInputs.setProps({maxWeight:c}),this.setState({weightsTexture:n,maxWeightsTexture:s,maxWeightTransform:a,zoom:null,triPositionBuffer:t.createBuffer({byteLength:48}),triTexCoordBuffer:t.createBuffer({byteLength:48})})}updateShaders(t){this._createWeightsTransform({vs:eE,fs:rE,...t})}_updateMaxWeightValue(){let{maxWeightTransform:t}=this.state;t.run({parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]})}_updateBounds(t=!1){let{viewport:r}=this.context,n=[r.unproject([0,0]),r.unproject([r.width,0]),r.unproject([0,r.height]),r.unproject([r.width,r.height])].map(a=>a.map(Math.fround)),s=H5(n),i={visibleWorldBounds:s,viewportCorners:n},o=!1;if(t||!this.state.worldBounds||!G5(this.state.worldBounds,s)){let a=this._worldToCommonBounds(s),c=this._commonToWorldBounds(a);this.props.coordinateSystem===q.LNGLAT&&(c[1]=Math.max(c[1],-85.051129),c[3]=Math.min(c[3],85.051129),c[0]=Math.max(c[0],-360),c[2]=Math.min(c[2],360));let l=this._worldToCommonBounds(c);i.worldBounds=c,i.normalizedCommonBounds=l,o=!0}return this.setState(i),o}_updateTextureRenderingBounds(){let{triPositionBuffer:t,triTexCoordBuffer:r,normalizedCommonBounds:n,viewportCorners:s}=this.state,{viewport:i}=this.context;t.write(tE(s,3));let o=s.map(a=>q5(i.projectPosition(a),n));r.write(tE(o,2))}_updateColorTexture(t){let{colorRange:r}=t.props,{colorTexture:n}=this.state,s=Jv(r,!1,Uint8Array);n&&n?.width===r.length?n.setTexture2DData({data:s}):(n?.destroy(),n=this.context.device.createTexture({...nE,data:s,width:r.length,height:1})),this.setState({colorTexture:n})}_updateWeightmap(){let{radiusPixels:t,colorDomain:r,aggregation:n}=this.props,{worldBounds:s,textureSize:i,weightsScale:o,weightsTexture:a}=this.state,c=this.state.weightsTransform;this.state.isWeightMapDirty=!1;let l=this._worldToCommonBounds(s,{useLayerCoordinateSystem:!0});if(r&&n==="SUM"){let{viewport:_}=this.context,y=_.distanceScales.metersPerUnit[2]*(l[2]-l[0])/i;this.state.colorDomain=r.map(T=>T*y*o)}else this.state.colorDomain=r||sz;let h=this.getAttributeManager().getAttributes(),u=this.getModuleSettings();this._setModelAttributes(c.model,h),c.model.setVertexCount(this.getNumInstances());let d={radiusPixels:t,commonBounds:l,textureWidth:i,weightsScale:o,weightsTexture:a},{viewport:p,devicePixelRatio:m,coordinateSystem:g,coordinateOrigin:x}=u,{modelMatrix:A}=this.props;c.model.shaderInputs.setProps({project:{viewport:p,devicePixelRatio:m,modelMatrix:A,coordinateSystem:g,coordinateOrigin:x},weight:d}),c.run({parameters:{viewport:[0,0,i,i]},clearColor:[0,0,0,0]}),this._updateMaxWeightValue()}_debouncedUpdateWeightmap(t=!1){let{updateTimer:r}=this.state,{debounceTimeout:n}=this.props;t?(r=null,this._updateBounds(!0),this._updateTextureRenderingBounds(),this.setState({isWeightMapDirty:!0})):(this.setState({isWeightMapDirty:!1}),clearTimeout(r),r=setTimeout(this._debouncedUpdateWeightmap.bind(this,!0),n)),this.setState({updateTimer:r})}_worldToCommonBounds(t,r={}){let{useLayerCoordinateSystem:n=!1}=r,[s,i,o,a]=t,{viewport:c}=this.context,{textureSize:l}=this.state,{coordinateSystem:f}=this.props,h=n&&(f===q.LNGLAT_OFFSETS||f===q.METER_OFFSETS),u=h?c.projectPosition(this.props.coordinateOrigin):[0,0],d=l*uut/c.scale,p,m;return n&&!h?(p=this.projectPosition([s,i,0]),m=this.projectPosition([o,a,0])):(p=c.projectPosition([s,i,0]),m=c.projectPosition([o,a,0])),j5([p[0]-u[0],p[1]-u[1],m[0]-u[0],m[1]-u[1]],d,d)}_commonToWorldBounds(t){let[r,n,s,i]=t,{viewport:o}=this.context,a=o.unprojectPosition([r,n]),c=o.unprojectPosition([s,i]);return a.slice(0,2).concat(c.slice(0,2))}};Gd.layerName="HeatmapLayer";Gd.defaultProps=put;var iz=Gd;var sE=85.05113;function oE(e,t,r,n){if(r){if(r.userData._googleMap===e)return r;o_(r)}let s={click:null,rightclick:null,dblclick:null,mousemove:null,mouseout:null},i=new pn({...n,useDevicePixels:n.interleaved?!0:n.useDevicePixels,style:n.interleaved?null:{pointerEvents:"none"},parent:xut(t,n.style),views:new xi({repeat:!0}),initialViewState:{longitude:0,latitude:0,zoom:1},controller:!1});for(let o in s)s[o]=e.addListener(o,a=>yut(i,o,a));return i.userData._googleMap=e,i.userData._eventListeners=s,i}function xut(e,t){let r=document.createElement("div");return r.style.position="absolute",Object.assign(r.style,t),"getPanes"in e?e.getPanes()?.overlayLayer.appendChild(r):e.getMap()?.getDiv().appendChild(r),r}function o_(e){let{_eventListeners:t}=e.userData;for(let r in t)t[r]&&t[r].remove();e.finalize()}function oz(e,t){let{width:r,height:n}=az(e),s=t.getProjection(),i=e.getBounds();if(!i)return{width:r,height:n,left:0,top:0};let o=i.getNorthEast(),a=i.getSouthWest(),c=s.fromLatLngToDivPixel(o),l=s.fromLatLngToDivPixel(a),f=iE(s,r/2,n/2),h=new google.maps.LatLng(0,f[0]),u=s.fromLatLngToContainerPixel(h),d=s.fromLatLngToDivPixel(h);if(!c||!l||!d||!u)return{width:r,height:n,left:0,top:0};let p=Math.round(d.x-u.x),m=d.y-u.y,g=iE(s,r/2,0),x=iE(s,r/2,n),A=f[1],_=f[0];if(Math.abs(A)>sE){A=A>0?sE:-sE;let E=new google.maps.LatLng(A,_),b=s.fromLatLngToContainerPixel(E);m+=b.y-n/2}m=Math.round(m);let T=180*new uo(g).sub(x).verticalAngle()/Math.PI;T<0&&(T+=360);let v=e.getHeading()||0,C=e.getZoom()-1,w;if(T===0)w=n?(l.y-c.y)/n:1;else if(T===v){let E=new uo([c.x,c.y]).sub([l.x,l.y]).len(),b=new uo([r,-n]).len();w=b?E/b:1}return C+=Math.log2(w||1),{width:r,height:n,left:p,top:m,zoom:C,bearing:T,pitch:e.getTilt(),latitude:A,longitude:_}}function aE(e,t){let{width:r,height:n}=az(e),{center:s,heading:i,tilt:o,zoom:a}=t.getCameraParams(),c=25,l=n?r/n:1,f=.75,h=3e14,u=new rt().perspective({fovy:c*Math.PI/180,aspect:l,near:f,far:h}),d=.5*u[5];return{width:r,height:n,viewState:{altitude:d,bearing:i,latitude:s.lat(),longitude:s.lng(),pitch:o,projectionMatrix:u,repeat:!0,zoom:a-1}}}function az(e){let t=e.getDiv().firstChild;return{width:t.offsetWidth,height:t.offsetHeight}}function iE(e,t,r){let n=new google.maps.Point(t,r),s=e.fromContainerPixelToLatLng(n);return[s.lng(),s.lat()]}function _ut(e,t){if(e.pixel)return e.pixel;let r=t.getViewports()[0].project([e.latLng.lng(),e.latLng.lat()]);return{x:r[0],y:r[1]}}function yut(e,t,r){if(!e.isInitialized)return;let n={type:t,offsetCenter:_ut(r,e),srcEvent:r};switch(t){case"click":case"rightclick":n.type="click",n.tapCount=1,e._onPointerDown(n),e._onEvent(n);break;case"dblclick":n.type="click",n.tapCount=2,e._onEvent(n);break;case"mousemove":n.type="pointermove",e._onPointerMove(n);break;case"mouseout":n.type="pointerleave",e._onPointerMove(n);break;default:return}}var Aut=()=>!1,but={depthMask:!0,depthTest:!0,blend:!0,blendFunc:[770,771,1,771],blendEquation:32774};function cz(){}var Tut={interleaved:!0},jd=class{constructor(t){this.props={},this._map=null,this._deck=null,this._overlay=null,this.setProps({...Tut,...t})}setMap(t){if(t===this._map)return;let{VECTOR:r,UNINITIALIZED:n}=google.maps.RenderingType;this._map&&(!t&&this._map.getRenderingType()===r&&this.props.interleaved&&this._overlay.requestRedraw(),this._overlay?.setMap(null),this._map=null),t&&(this._map=t,t.getRenderingType()!==n?this._createOverlay(t):t.addListener("renderingtype_changed",()=>{this._createOverlay(t)}))}setProps(t){if(Object.assign(this.props,t),this._deck){let r=this._deck.getCanvas();if(t.style&&r?.parentElement){let n=r.parentElement.style;Object.assign(n,t.style),t.style=null}this._deck.setProps(t)}}pickObject(t){return this._deck&&this._deck.pickObject(t)}pickMultipleObjects(t){return this._deck&&this._deck.pickMultipleObjects(t)}pickObjects(t){return this._deck&&this._deck.pickObjects(t)}finalize(){this.setMap(null),this._deck&&(o_(this._deck),this._deck=null)}_createOverlay(t){let{interleaved:r}=this.props,{VECTOR:n,UNINITIALIZED:s}=google.maps.RenderingType,i=t.getRenderingType();if(i===s)return;let a=i===n&&google.maps.WebGLOverlayView?google.maps.WebGLOverlayView:google.maps.OverlayView,c=new a;c instanceof google.maps.WebGLOverlayView?(r?(c.onAdd=cz,c.onContextRestored=this._onContextRestored.bind(this),c.onDraw=this._onDrawVectorInterleaved.bind(this)):(c.onAdd=this._onAdd.bind(this),c.onContextRestored=cz,c.onDraw=this._onDrawVectorOverlay.bind(this)),c.onContextLost=this._onContextLost.bind(this)):(c.onAdd=this._onAdd.bind(this),c.draw=this._onDrawRaster.bind(this)),c.onRemove=this._onRemove.bind(this),this._overlay=c,this._overlay.setMap(t)}_onAdd(){this._deck=oE(this._map,this._overlay,this._deck,this.props)}_onContextRestored({gl:t}){if(!this._map||!this._overlay)return;let r=()=>{this._overlay&&this._overlay.requestRedraw()},n=oE(this._map,this._overlay,this._deck,{gl:t,_customRender:r,...this.props});this._deck=n;let s=n.animationLoop;s._renderFrame=()=>{let i=t.getParameter(34964);n.device.withParametersWebGL({},()=>{s.props.onRender(s.animationProps)}),t.bindBuffer(34962,i)}}_onContextLost(){this._deck&&(o_(this._deck),this._deck=null)}_onRemove(){this._deck?.setProps({layerFilter:Aut})}_onDrawRaster(){if(!this._deck||!this._map)return;let t=this._deck,{width:r,height:n,left:s,top:i,...o}=oz(this._map,this._overlay),c=t.getCanvas()?.parentElement||t.props.parent;if(c){let f=c.style;f.left=`${s}px`,f.top=`${i}px`}let l=1e4;t.setProps({width:r,height:n,viewState:{altitude:l,...o}}),t.redraw()}_onDrawVectorInterleaved({gl:t,transformer:r}){if(!this._deck||!this._map)return;let n=this._deck;if(n.setProps({...aE(this._map,r),width:null,height:null}),n.isInitialized){let s=n.device;if(s instanceof gr){let i=s.getParametersWebGL(36006);n.setProps({_framebuffer:i})}n.needsRedraw({clearRedrawFlags:!0}),s instanceof gr&&(s.setParametersWebGL({viewport:[0,0,t.canvas.width,t.canvas.height],scissor:[0,0,t.canvas.width,t.canvas.height],stencilFunc:[519,0,255,519,0,255]}),s.withParametersWebGL(but,()=>{n._drawLayers("google-vector",{clearCanvas:!1})}))}}_onDrawVectorOverlay({transformer:t}){if(!this._deck||!this._map)return;let r=this._deck;r.setProps({...aE(this._map,t)}),r.redraw()}};var cE=512,vut=Math.PI/180;function a_({map:e,gl:t,deck:r}){if(e.__deck)return e.__deck;let n=r?.props._customRender,s=r?.props.onLoad,i={...r?.props,_customRender:()=>{e.triggerRepaint(),n?.("")}};i.parameters={...c_(e,!0),...i.parameters},i.views||(i.views=qd(e));let o;return(!r||r.props.gl===t)&&(Object.assign(i,{gl:t,width:null,height:null,touchAction:"unset",viewState:Wl(e)}),r?.isInitialized?lz(r,e):i.onLoad=()=>{s?.(),lz(o,e)}),r?(o=r,r.setProps(i),r.userData.isExternal=!0):(o=new pn(i),e.on("remove",()=>{lE(e)})),o.userData.mapboxLayers=new Set,e.__deck=o,e.on("render",()=>{o.isInitialized&&Mut(o,e)}),o}function lz(e,t){let r=()=>{e.isInitialized?Sut(e,t):t.off("move",r)};t.on("move",r)}function lE(e){e.__deck?.finalize(),e.__deck=null}function c_(e,t){let r=t?{depthWriteEnabled:!0,depthCompare:"less-equal",depthBias:0,blend:!0,blendColorSrcFactor:"src-alpha",blendColorDstFactor:"one-minus-src-alpha",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one-minus-src-alpha",blendColorOperation:"add",blendAlphaOperation:"add"}:{};return pz(e)==="globe"&&(r.cullMode="back"),r}function fz(e,t){e.userData.mapboxLayers.add(t),fE(e)}function hz(e,t){e.userData.mapboxLayers.delete(t),fE(e)}function uz(e,t){fE(e)}function dz(e,t,r,n){let{currentViewport:s}=e.userData,i=!1;s||(s=mz(e,t,n),e.userData.currentViewport=s,i=!0),e.isInitialized&&e._drawLayers("mapbox-repaint",{viewports:[s],layerFilter:o=>(!e.props.layerFilter||e.props.layerFilter(o))&&(r.id===o.layer.id||o.layer.props.operation.includes("terrain")),clearStack:i,clearCanvas:!1})}function pz(e){let t=e.getProjection?.(),r=t?.type||t?.name;if(r==="globe")return"globe";if(r&&r!=="mercator")throw new Error("Unsupported projection");return"mercator"}function qd(e){return pz(e)==="globe"?new Hg({id:"mapbox"}):new xi({id:"mapbox"})}function Wl(e){let{lng:t,lat:r}=e.getCenter(),n={longitude:(t+540)%360-180,latitude:r,zoom:e.getZoom(),bearing:e.getBearing(),pitch:e.getPitch(),padding:e.getPadding(),repeat:e.getRenderWorldCopies()};return e.getTerrain?.()&&Eut(e,n),n}function Eut(e,t){if(e.getFreeCameraOptions){let{position:r}=e.getFreeCameraOptions();if(!r||r.z===void 0)return;let n=e.transform.height,{longitude:s,latitude:i,pitch:o}=t,a=r.x*cE,c=(1-r.y)*cE,l=r.z*cE,f=ae([s,i]),h=a-f[0],u=c-f[1],d=Math.sqrt(h*h+u*u),p=o*vut,m=1.5*n,g=p<.001?m*Math.cos(p)/l:m*Math.sin(p)/d;t.zoom=Math.log2(g);let x=m*Math.cos(p)/g,A=l-x;t.position=[0,0,A/yo(i)]}else typeof e.transform.elevation=="number"&&(t.position=[0,0,e.transform.elevation])}function mz(e,t,r){let n=Wl(t),s=qd(t);r&&(s.props.nearZMultiplier=.2);let i=r?.nearZ??t.transform._nearZ,o=r?.farZ??t.transform._farZ;return Number.isFinite(i)&&(n.nearZ=i/t.transform.height,n.farZ=o/t.transform.height),s.makeViewport({width:e.width,height:e.height,viewState:n})}function Mut(e,t){let{mapboxLayers:r,isExternal:n}=e.userData;if(n){let s=Array.from(r,f=>f.id),o=sr(e.props.layers,Boolean).some(f=>f&&!s.includes(f.id)),a=e.getViewports(),c=a.findIndex(f=>f.id==="mapbox"),l=a.length>1||c<0;(o||l)&&(c>=0&&(a=a.slice(),a[c]=mz(e,t)),e._drawLayers("mapbox-repaint",{viewports:a,layerFilter:f=>(!e.props.layerFilter||e.props.layerFilter(f))&&(f.viewport.id!=="mapbox"||!s.includes(f.layer.id)),clearCanvas:!1}))}e.userData.currentViewport=null}function Sut(e,t){e.setProps({viewState:Wl(t)}),e.needsRedraw({clearRedrawFlags:!0})}function fE(e){if(e.userData.isExternal)return;let t=[];e.userData.mapboxLayers.forEach(r=>{let n=r.props.type,s=new n(r.props);t.push(s)}),e.setProps({layers:t})}var Xd=class{constructor(t){if(!t.id)throw new Error("Layer must have an unique id");this.id=t.id,this.type="custom",this.renderingMode=t.renderingMode||"3d",this.slot=t.slot,this.map=null,this.deck=null,this.props=t}onAdd(t,r){this.map=t,this.deck=a_({map:t,gl:r,deck:this.props.deck}),fz(this.deck,this)}onRemove(){this.deck&&hz(this.deck,this)}setProps(t){Object.assign(this.props,t,{id:this.id}),this.deck&&uz(this.deck,this)}render(t,r){dz(this.deck,this.map,this,r)}};var hE="__UNDEFINED__";function Yd(e,t,r,n){if(!e||!t||!e.style||!e.style._loaded)return;let s=sr(n,Boolean);if(r!==n){let a=sr(r,Boolean),c=new Set(a.map(l=>l.id));for(let l of s)c.delete(l.id);for(let l of c)e.getLayer(l)&&e.removeLayer(l)}for(let a of s){let c=e.getLayer(a.id);c?(c.implementation||c).setProps(a.props):e.addLayer(new Xd({id:a.id,deck:t,slot:a.props.slot}),a.props.beforeId)}let i=e.style._order,o={};for(let a of s){let{beforeId:c}=a.props;(!c||!i.includes(c))&&(c=hE),o[c]=o[c]||[],o[c].push(a.id)}for(let a in o){let c=o[a],l=a===hE?i.length:i.indexOf(a),f=a===hE?void 0:a;for(let h=c.length-1;h>=0;h--){let u=c[h],d=i.indexOf(u);d!==l-1&&(e.moveLayer(u,f),d>l&&l++),l--,f=u}}}var $d=class{constructor(t){this._handleStyleChange=()=>{Yd(this._map,this._deck,this._props.layers,this._props.layers)},this._updateContainerSize=()=>{if(this._map&&this._container){let{clientWidth:s,clientHeight:i}=this._map.getContainer();Object.assign(this._container.style,{width:`${s}px`,height:`${i}px`})}},this._updateViewState=()=>{let s=this._deck,i=this._map;s&&i&&(s.setProps({views:this._props.views||qd(i),viewState:Wl(i)}),s.isInitialized&&s.redraw())},this._handleMouseEvent=s=>{let i=this._deck;if(!i||!i.isInitialized)return;let o={type:s.type,offsetCenter:s.point,srcEvent:s},a=this._lastMouseDownPoint;switch(!s.point&&a&&(o.deltaX=s.originalEvent.clientX-a.clientX,o.deltaY=s.originalEvent.clientY-a.clientY,o.offsetCenter={x:a.x+o.deltaX,y:a.y+o.deltaY}),o.type){case"mousedown":i._onPointerDown(o),this._lastMouseDownPoint={...s.point,clientX:s.originalEvent.clientX,clientY:s.originalEvent.clientY};break;case"dragstart":o.type="panstart",i._onEvent(o);break;case"drag":o.type="panmove",i._onEvent(o);break;case"dragend":o.type="panend",i._onEvent(o);break;case"click":o.tapCount=1,i._onEvent(o);break;case"dblclick":o.type="click",o.tapCount=2,i._onEvent(o);break;case"mousemove":o.type="pointermove",i._onPointerMove(o);break;case"mouseout":o.type="pointerleave",i._onPointerMove(o);break;default:return}};let{interleaved:r=!1,...n}=t;this._interleaved=r,this._props=n}setProps(t){this._interleaved&&t.layers&&Yd(this._map,this._deck,this._props.layers,t.layers),Object.assign(this._props,t),this._deck&&this._map&&this._deck.setProps({...this._props,parameters:{...c_(this._map,this._interleaved),...this._props.parameters}})}onAdd(t){return this._map=t,this._interleaved?this._onAddInterleaved(t):this._onAddOverlaid(t)}_onAddOverlaid(t){let r=document.createElement("div");return Object.assign(r.style,{position:"absolute",left:0,top:0,textAlign:"initial",pointerEvents:"none"}),this._container=r,this._deck=new pn({...this._props,parent:r,parameters:{...c_(t,!1),...this._props.parameters},views:this._props.views||qd(t),viewState:Wl(t)}),t.on("resize",this._updateContainerSize),t.on("render",this._updateViewState),t.on("mousedown",this._handleMouseEvent),t.on("dragstart",this._handleMouseEvent),t.on("drag",this._handleMouseEvent),t.on("dragend",this._handleMouseEvent),t.on("mousemove",this._handleMouseEvent),t.on("mouseout",this._handleMouseEvent),t.on("click",this._handleMouseEvent),t.on("dblclick",this._handleMouseEvent),this._updateContainerSize(),r}_onAddInterleaved(t){let r=t.painter.context.gl;return r instanceof WebGLRenderingContext&&W.warn("Incompatible basemap library. See: https://deck.gl/docs/api-reference/mapbox/overview#compatibility")(),this._deck=a_({map:t,gl:r,deck:new pn({...this._props,gl:r})}),t.on("styledata",this._handleStyleChange),Yd(t,this._deck,[],this._props.layers),document.createElement("div")}onRemove(){let t=this._map;t&&(this._interleaved?this._onRemoveInterleaved(t):this._onRemoveOverlaid(t)),this._deck=void 0,this._map=void 0,this._container=void 0}_onRemoveOverlaid(t){t.off("resize",this._updateContainerSize),t.off("render",this._updateViewState),t.off("mousedown",this._handleMouseEvent),t.off("dragstart",this._handleMouseEvent),t.off("drag",this._handleMouseEvent),t.off("dragend",this._handleMouseEvent),t.off("mousemove",this._handleMouseEvent),t.off("mouseout",this._handleMouseEvent),t.off("click",this._handleMouseEvent),t.off("dblclick",this._handleMouseEvent),this._deck?.finalize()}_onRemoveInterleaved(t){t.off("styledata",this._handleStyleChange),Yd(t,this._deck,this._props.layers,[]),lE(t)}getDefaultPosition(){return"top-left"}pickObject(t){return wt(this._deck),this._deck.pickObject(t)}pickMultipleObjects(t){return wt(this._deck),this._deck.pickMultipleObjects(t)}pickObjects(t){return wt(this._deck),this._deck.pickObjects(t)}finalize(){this._map&&this._map.removeControl(this)}getCanvas(){return this._map?this._interleaved?this._map.getCanvas():this._deck.getCanvas():null}};var d_,Gt,Az,wut,ya,gz,bz,uE,gE,dE,pE,Cut,Kd={},Tz=[],Put=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,xE=Array.isArray;function Ki(e,t){for(var r in t)e[r]=t[r];return e}function vz(e){var t=e.parentNode;t&&t.removeChild(e)}function Iut(e,t,r){var n,s,i,o={};for(i in t)i=="key"?n=t[i]:i=="ref"?s=t[i]:o[i]=t[i];if(arguments.length>2&&(o.children=arguments.length>3?d_.call(arguments,2):r),typeof e=="function"&&e.defaultProps!=null)for(i in e.defaultProps)o[i]===void 0&&(o[i]=e.defaultProps[i]);return f_(e,o,n,s,null)}function f_(e,t,r,n,s){var i={type:e,props:t,key:r,ref:n,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:s??++Az,__i:-1,__u:0};return s==null&&Gt.vnode!=null&&Gt.vnode(i),i}function Hl(e){return e.children}function h_(e,t){this.props=e,this.context=t}function Aa(e,t){if(t==null)return e.__?Aa(e.__,e.__i+1):null;for(var r;t<e.__k.length;t++)if((r=e.__k[t])!=null&&r.__e!=null)return r.__e;return typeof e.type=="function"?Aa(e):null}function Ez(e){var t,r;if((e=e.__)!=null&&e.__c!=null){for(e.__e=e.__c.base=null,t=0;t<e.__k.length;t++)if((r=e.__k[t])!=null&&r.__e!=null){e.__e=e.__c.base=r.__e;break}return Ez(e)}}function xz(e){(!e.__d&&(e.__d=!0)&&ya.push(e)&&!u_.__r++||gz!==Gt.debounceRendering)&&((gz=Gt.debounceRendering)||bz)(u_)}function u_(){var e,t,r,n,s,i,o,a;for(ya.sort(uE);e=ya.shift();)e.__d&&(t=ya.length,n=void 0,i=(s=(r=e).__v).__e,o=[],a=[],r.__P&&((n=Ki({},s)).__v=s.__v+1,Gt.vnode&&Gt.vnode(n),_E(r.__P,n,s,r.__n,r.__P.namespaceURI,32&s.__u?[i]:null,o,i??Aa(s),!!(32&s.__u),a),n.__v=s.__v,n.__.__k[n.__i]=n,wz(o,n,a),n.__e!=i&&Ez(n)),ya.length>t&&ya.sort(uE));u_.__r=0}function Mz(e,t,r,n,s,i,o,a,c,l,f){var h,u,d,p,m,g=n&&n.__k||Tz,x=t.length;for(r.__d=c,Rut(r,t,g),c=r.__d,h=0;h<x;h++)(d=r.__k[h])!=null&&typeof d!="boolean"&&typeof d!="function"&&(u=d.__i===-1?Kd:g[d.__i]||Kd,d.__i=h,_E(e,d,u,s,i,o,a,c,l,f),p=d.__e,d.ref&&u.ref!=d.ref&&(u.ref&&yE(u.ref,null,d),f.push(d.ref,d.__c||p,d)),m==null&&p!=null&&(m=p),65536&d.__u||u.__k===d.__k?c=Sz(d,c,e):typeof d.type=="function"&&d.__d!==void 0?c=d.__d:p&&(c=p.nextSibling),d.__d=void 0,d.__u&=-196609);r.__d=c,r.__e=m}function Rut(e,t,r){var n,s,i,o,a,c=t.length,l=r.length,f=l,h=0;for(e.__k=[],n=0;n<c;n++)o=n+h,(s=e.__k[n]=(s=t[n])==null||typeof s=="boolean"||typeof s=="function"?null:typeof s=="string"||typeof s=="number"||typeof s=="bigint"||s.constructor==String?f_(null,s,null,null,null):xE(s)?f_(Hl,{children:s},null,null,null):s.constructor===void 0&&s.__b>0?f_(s.type,s.props,s.key,s.ref?s.ref:null,s.__v):s)!=null?(s.__=e,s.__b=e.__b+1,a=Out(s,r,o,f),s.__i=a,i=null,a!==-1&&(f--,(i=r[a])&&(i.__u|=131072)),i==null||i.__v===null?(a==-1&&h--,typeof s.type!="function"&&(s.__u|=65536)):a!==o&&(a==o-1?h--:a==o+1?h++:a>o?f>c-o?h+=a-o:h--:a<o&&(a==o-h?h-=a-o:h++),a!==n+h&&(s.__u|=65536))):(i=r[o])&&i.key==null&&i.__e&&!(131072&i.__u)&&(i.__e==e.__d&&(e.__d=Aa(i)),mE(i,i,!1),r[o]=null,f--);if(f)for(n=0;n<l;n++)(i=r[n])!=null&&!(131072&i.__u)&&(i.__e==e.__d&&(e.__d=Aa(i)),mE(i,i))}function Sz(e,t,r){var n,s;if(typeof e.type=="function"){for(n=e.__k,s=0;n&&s<n.length;s++)n[s]&&(n[s].__=e,t=Sz(n[s],t,r));return t}e.__e!=t&&(t&&e.type&&!r.contains(t)&&(t=Aa(e)),r.insertBefore(e.__e,t||null),t=e.__e);do t=t&&t.nextSibling;while(t!=null&&t.nodeType===8);return t}function Out(e,t,r,n){var s=e.key,i=e.type,o=r-1,a=r+1,c=t[r];if(c===null||c&&s==c.key&&i===c.type&&!(131072&c.__u))return r;if(n>(c!=null&&!(131072&c.__u)?1:0))for(;o>=0||a<t.length;){if(o>=0){if((c=t[o])&&!(131072&c.__u)&&s==c.key&&i===c.type)return o;o--}if(a<t.length){if((c=t[a])&&!(131072&c.__u)&&s==c.key&&i===c.type)return a;a++}}return-1}function _z(e,t,r){t[0]==="-"?e.setProperty(t,r??""):e[t]=r==null?"":typeof r!="number"||Put.test(t)?r:r+"px"}function l_(e,t,r,n,s){var i;t:if(t==="style")if(typeof r=="string")e.style.cssText=r;else{if(typeof n=="string"&&(e.style.cssText=n=""),n)for(t in n)r&&t in r||_z(e.style,t,"");if(r)for(t in r)n&&r[t]===n[t]||_z(e.style,t,r[t])}else if(t[0]==="o"&&t[1]==="n")i=t!==(t=t.replace(/(PointerCapture)$|Capture$/i,"$1")),t=t.toLowerCase()in e||t==="onFocusOut"||t==="onFocusIn"?t.toLowerCase().slice(2):t.slice(2),e.l||(e.l={}),e.l[t+i]=r,r?n?r.u=n.u:(r.u=gE,e.addEventListener(t,i?pE:dE,i)):e.removeEventListener(t,i?pE:dE,i);else{if(s=="http://www.w3.org/2000/svg")t=t.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(t!="width"&&t!="height"&&t!="href"&&t!="list"&&t!="form"&&t!="tabIndex"&&t!="download"&&t!="rowSpan"&&t!="colSpan"&&t!="role"&&t!="popover"&&t in e)try{e[t]=r??"";break t}catch{}typeof r=="function"||(r==null||r===!1&&t[4]!=="-"?e.removeAttribute(t):e.setAttribute(t,t=="popover"&&r==1?"":r))}}function yz(e){return function(t){if(this.l){var r=this.l[t.type+e];if(t.t==null)t.t=gE++;else if(t.t<r.u)return;return r(Gt.event?Gt.event(t):t)}}}function _E(e,t,r,n,s,i,o,a,c,l){var f,h,u,d,p,m,g,x,A,_,y,T,v,C,w,E,b=t.type;if(t.constructor!==void 0)return null;128&r.__u&&(c=!!(32&r.__u),i=[a=t.__e=r.__e]),(f=Gt.__b)&&f(t);t:if(typeof b=="function")try{if(x=t.props,A="prototype"in b&&b.prototype.render,_=(f=b.contextType)&&n[f.__c],y=f?_?_.props.value:f.__:n,r.__c?g=(h=t.__c=r.__c).__=h.__E:(A?t.__c=h=new b(x,y):(t.__c=h=new h_(x,y),h.constructor=b,h.render=But),_&&_.sub(h),h.props=x,h.state||(h.state={}),h.context=y,h.__n=n,u=h.__d=!0,h.__h=[],h._sb=[]),A&&h.__s==null&&(h.__s=h.state),A&&b.getDerivedStateFromProps!=null&&(h.__s==h.state&&(h.__s=Ki({},h.__s)),Ki(h.__s,b.getDerivedStateFromProps(x,h.__s))),d=h.props,p=h.state,h.__v=t,u)A&&b.getDerivedStateFromProps==null&&h.componentWillMount!=null&&h.componentWillMount(),A&&h.componentDidMount!=null&&h.__h.push(h.componentDidMount);else{if(A&&b.getDerivedStateFromProps==null&&x!==d&&h.componentWillReceiveProps!=null&&h.componentWillReceiveProps(x,y),!h.__e&&(h.shouldComponentUpdate!=null&&h.shouldComponentUpdate(x,h.__s,y)===!1||t.__v===r.__v)){for(t.__v!==r.__v&&(h.props=x,h.state=h.__s,h.__d=!1),t.__e=r.__e,t.__k=r.__k,t.__k.forEach(function(R){R&&(R.__=t)}),T=0;T<h._sb.length;T++)h.__h.push(h._sb[T]);h._sb=[],h.__h.length&&o.push(h);break t}h.componentWillUpdate!=null&&h.componentWillUpdate(x,h.__s,y),A&&h.componentDidUpdate!=null&&h.__h.push(function(){h.componentDidUpdate(d,p,m)})}if(h.context=y,h.props=x,h.__P=e,h.__e=!1,v=Gt.__r,C=0,A){for(h.state=h.__s,h.__d=!1,v&&v(t),f=h.render(h.props,h.state,h.context),w=0;w<h._sb.length;w++)h.__h.push(h._sb[w]);h._sb=[]}else do h.__d=!1,v&&v(t),f=h.render(h.props,h.state,h.context),h.state=h.__s;while(h.__d&&++C<25);h.state=h.__s,h.getChildContext!=null&&(n=Ki(Ki({},n),h.getChildContext())),A&&!u&&h.getSnapshotBeforeUpdate!=null&&(m=h.getSnapshotBeforeUpdate(d,p)),Mz(e,xE(E=f!=null&&f.type===Hl&&f.key==null?f.props.children:f)?E:[E],t,r,n,s,i,o,a,c,l),h.base=t.__e,t.__u&=-161,h.__h.length&&o.push(h),g&&(h.__E=h.__=null)}catch(R){if(t.__v=null,c||i!=null){for(t.__u|=c?160:32;a&&a.nodeType===8&&a.nextSibling;)a=a.nextSibling;i[i.indexOf(a)]=null,t.__e=a}else t.__e=r.__e,t.__k=r.__k;Gt.__e(R,t,r)}else i==null&&t.__v===r.__v?(t.__k=r.__k,t.__e=r.__e):t.__e=Lut(r.__e,t,r,n,s,i,o,c,l);(f=Gt.diffed)&&f(t)}function wz(e,t,r){t.__d=void 0;for(var n=0;n<r.length;n++)yE(r[n],r[++n],r[++n]);Gt.__c&&Gt.__c(t,e),e.some(function(s){try{e=s.__h,s.__h=[],e.some(function(i){i.call(s)})}catch(i){Gt.__e(i,s.__v)}})}function Lut(e,t,r,n,s,i,o,a,c){var l,f,h,u,d,p,m,g=r.props,x=t.props,A=t.type;if(A==="svg"?s="http://www.w3.org/2000/svg":A==="math"?s="http://www.w3.org/1998/Math/MathML":s||(s="http://www.w3.org/1999/xhtml"),i!=null){for(l=0;l<i.length;l++)if((d=i[l])&&"setAttribute"in d==!!A&&(A?d.localName===A:d.nodeType===3)){e=d,i[l]=null;break}}if(e==null){if(A===null)return document.createTextNode(x);e=document.createElementNS(s,A,x.is&&x),i=null,a=!1}if(A===null)g===x||a&&e.data===x||(e.data=x);else{if(i=i&&d_.call(e.childNodes),g=r.props||Kd,!a&&i!=null)for(g={},l=0;l<e.attributes.length;l++)g[(d=e.attributes[l]).name]=d.value;for(l in g)if(d=g[l],l!="children"){if(l=="dangerouslySetInnerHTML")h=d;else if(l!=="key"&&!(l in x)){if(l=="value"&&"defaultValue"in x||l=="checked"&&"defaultChecked"in x)continue;l_(e,l,null,d,s)}}for(l in x)d=x[l],l=="children"?u=d:l=="dangerouslySetInnerHTML"?f=d:l=="value"?p=d:l=="checked"?m=d:l==="key"||a&&typeof d!="function"||g[l]===d||l_(e,l,d,g[l],s);if(f)a||h&&(f.__html===h.__html||f.__html===e.innerHTML)||(e.innerHTML=f.__html),t.__k=[];else if(h&&(e.innerHTML=""),Mz(e,xE(u)?u:[u],t,r,n,A==="foreignObject"?"http://www.w3.org/1999/xhtml":s,i,o,i?i[0]:r.__k&&Aa(r,0),a,c),i!=null)for(l=i.length;l--;)i[l]!=null&&vz(i[l]);a||(l="value",p!==void 0&&(p!==e[l]||A==="progress"&&!p||A==="option"&&p!==g[l])&&l_(e,l,p,g[l],s),l="checked",m!==void 0&&m!==e[l]&&l_(e,l,m,g[l],s))}return e}function yE(e,t,r){try{if(typeof e=="function"){var n=typeof e.__u=="function";n&&e.__u(),n&&t==null||(e.__u=e(t))}else e.current=t}catch(s){Gt.__e(s,r)}}function mE(e,t,r){var n,s;if(Gt.unmount&&Gt.unmount(e),(n=e.ref)&&(n.current&&n.current!==e.__e||yE(n,null,t)),(n=e.__c)!=null){if(n.componentWillUnmount)try{n.componentWillUnmount()}catch(i){Gt.__e(i,t)}n.base=n.__P=null}if(n=e.__k)for(s=0;s<n.length;s++)n[s]&&mE(n[s],t,r||typeof e.type!="function");r||e.__e==null||vz(e.__e),e.__c=e.__=e.__e=e.__d=void 0}function But(e,t,r){return this.constructor(e,r)}function is(e,t,r){var n,s,i,o;Gt.__&&Gt.__(e,t),s=(n=typeof r=="function")?null:r&&r.__k||t.__k,i=[],o=[],_E(t,e=(!n&&r||t).__k=Iut(Hl,null,[e]),s||Kd,Kd,t.namespaceURI,!n&&r?[r]:s?null:t.firstChild?d_.call(t.childNodes):null,i,!n&&r?r:s?s.__e:t.firstChild,n,o),wz(i,e,o)}d_=Tz.slice,Gt={__e:function(e,t,r,n){for(var s,i,o;t=t.__;)if((s=t.__c)&&!s.__)try{if((i=s.constructor)&&i.getDerivedStateFromError!=null&&(s.setState(i.getDerivedStateFromError(e)),o=s.__d),s.componentDidCatch!=null&&(s.componentDidCatch(e,n||{}),o=s.__d),o)return s.__E=s}catch(a){e=a}throw e}},Az=0,wut=function(e){return e!=null&&e.constructor==null},h_.prototype.setState=function(e,t){var r;r=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=Ki({},this.state),typeof e=="function"&&(e=e(Ki({},r),this.props)),e&&Ki(r,e),e!=null&&this.__v&&(t&&this._sb.push(t),xz(this))},h_.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),xz(this))},h_.prototype.render=Hl,ya=[],bz=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,uE=function(e,t){return e.__v.__b-t.__v.__b},u_.__r=0,gE=0,dE=yz(!1),pE=yz(!0),Cut=0;var Nut=0,koe=Array.isArray;function Vt(e,t,r,n,s,i){t||(t={});var o,a,c=t;if("ref"in c)for(a in c={},t)a=="ref"?o=t[a]:c[a]=t[a];var l={type:e,props:c,key:r,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--Nut,__i:-1,__u:0,__source:s,__self:i};if(typeof e=="function"&&(o=e.defaultProps))for(a in o)c[a]===void 0&&(c[a]=o[a]);return Gt.vnode&&Gt.vnode(l),l}var bE={};Wt(bE,{ButtonGroup:()=>AE,GroupedIconButton:()=>p_,IconButton:()=>ba});var ba=e=>{let{className:t,label:r,onClick:n}=e;return Vt("div",{className:"deck-widget-button",children:Vt("button",{className:`deck-widget-icon-button ${t}`,type:"button",onClick:n,title:r,children:Vt("div",{className:"deck-widget-icon"})})})},AE=e=>{let{children:t,orientation:r}=e;return Vt("div",{className:`deck-widget-button-group ${r}`,children:t})},p_=e=>{let{className:t,label:r,onClick:n}=e;return Vt("button",{className:`deck-widget-icon-button ${t}`,type:"button",onClick:n,title:r,children:Vt("div",{className:"deck-widget-icon"})})};var m_=class{constructor(t){this.id="fullscreen",this.placement="top-left",this.fullscreen=!1,this.id=t.id??this.id,this.placement=t.placement??this.placement,this.props={...t,enterLabel:t.enterLabel??"Enter Fullscreen",exitLabel:t.exitLabel??"Exit Fullscreen",style:t.style??{}}}onAdd({deck:t}){let{style:r,className:n}=this.props,s=document.createElement("div");return s.classList.add("deck-widget","deck-widget-fullscreen"),n&&s.classList.add(n),xr(s,r),this.deck=t,this.element=s,this.update(),document.addEventListener("fullscreenchange",this.onFullscreenChange.bind(this)),s}onRemove(){this.deck=void 0,this.element=void 0,document.removeEventListener("fullscreenchange",this.onFullscreenChange.bind(this))}update(){let{enterLabel:t,exitLabel:r}=this.props,n=this.element;if(!n)return;let s=Vt(ba,{onClick:this.handleClick.bind(this),label:this.fullscreen?r:t,className:this.fullscreen?"deck-widget-fullscreen-exit":"deck-widget-fullscreen-enter"});is(s,n)}setProps(t){this.placement=t.placement??this.placement;let r=this.props,n=this.element;n&&(r.className!==t.className&&(r.className&&n.classList.remove(r.className),t.className&&n.classList.add(t.className)),it(r.style,t.style,1)||(jn(n,r.style),xr(n,t.style))),Object.assign(this.props,t),this.update()}getContainer(){return this.props.container||this.deck?.getCanvas()?.parentElement}onFullscreenChange(){let t=this.fullscreen,r=document.fullscreenElement===this.getContainer();t!==r&&(this.fullscreen=!this.fullscreen),this.update()}async handleClick(){this.fullscreen?await this.exitFullscreen():await this.requestFullscreen(),this.update()}async requestFullscreen(){let t=this.getContainer();t?.requestFullscreen?await t.requestFullscreen({navigationUI:"hide"}):this.togglePseudoFullscreen()}async exitFullscreen(){document.exitFullscreen?await document.exitFullscreen():this.togglePseudoFullscreen()}togglePseudoFullscreen(){this.getContainer()?.classList.toggle("deck-pseudo-fullscreen")}};var g_=class{constructor(t){this.id="compass",this.placement="top-left",this.viewId=null,this.viewports={},this.id=t.id??this.id,this.viewId=t.viewId??this.viewId,this.placement=t.placement??this.placement,this.props={...t,transitionDuration:t.transitionDuration??200,label:t.label??"Reset Compass",style:t.style??{}}}setProps(t){this.placement=t.placement??this.placement,this.viewId=t.viewId??this.viewId;let r=this.props,n=this.element;n&&(r.className!==t.className&&(r.className&&n.classList.remove(r.className),t.className&&n.classList.add(t.className)),it(r.style,t.style,1)||(jn(n,r.style),xr(n,t.style))),Object.assign(this.props,t),this.update()}onViewportChange(t){t.equals(this.viewports[t.id])||(this.viewports[t.id]=t,this.update())}onAdd({deck:t}){let{style:r,className:n}=this.props,s=document.createElement("div");return s.classList.add("deck-widget","deck-widget-compass"),n&&s.classList.add(n),xr(s,r),this.deck=t,this.element=s,this.update(),s}getRotation(t){return t instanceof We?[-t.bearing,t.pitch]:t instanceof gn?[0,Math.max(-80,Math.min(80,t.latitude))]:[0,0]}update(){let t=this.viewId||Object.values(this.viewports)[0]?.id||"default-view",r=this.viewports[t],[n,s]=this.getRotation(r),i=this.element;if(!i)return;let o=Vt("div",{className:"deck-widget-button",style:{perspective:100},children:Vt("button",{type:"button",onClick:()=>{for(let a of Object.values(this.viewports))this.handleCompassReset(a)},title:this.props.label,style:{transform:`rotateX(${s}deg)`},children:Vt("svg",{fill:"none",width:"100%",height:"100%",viewBox:"0 0 26 26",children:Vt("g",{transform:`rotate(${n},13,13)`,children:[Vt("path",{d:"M10 13.0001L12.9999 5L15.9997 13.0001H10Z",fill:"var(--icon-compass-north-color, #F05C44)"}),Vt("path",{d:"M16.0002 12.9999L13.0004 21L10.0005 12.9999H16.0002Z",fill:"var(--icon-compass-south-color, #C2C2CC)"})]})})})});is(o,i)}onRemove(){this.deck=void 0,this.element=void 0}handleCompassReset(t){let r=this.viewId||t.id||"default-view";if(t instanceof We){let n={...t,bearing:0,...this.getRotation(t)[0]===0?{pitch:0}:{},transitionDuration:this.props.transitionDuration,transitionInterpolator:new ws};this.deck._onViewStateChange({viewId:r,viewState:n,interactionState:{}})}}};var Ta=class{constructor(t={}){this.id="zoom",this.placement="top-left",this.viewId=null,this.viewports={},this.id=t.id??this.id,this.viewId=t.viewId??this.viewId,this.placement=t.placement??this.placement,this.props={...Ta.defaultProps,...t}}onAdd({deck:t}){let{style:r,className:n}=this.props,s=document.createElement("div");return s.classList.add("deck-widget","deck-widget-zoom"),n&&s.classList.add(n),xr(s,r),this.deck=t,this.element=s,this.update(),s}onRemove(){this.deck=void 0,this.element=void 0}setProps(t){this.placement=t.placement??this.placement,this.viewId=t.viewId??this.viewId;let r=this.props,n=this.element;n&&(r.className!==t.className&&(r.className&&n.classList.remove(r.className),t.className&&n.classList.add(t.className)),it(r.style,t.style,1)||(jn(n,r.style),xr(n,t.style))),Object.assign(this.props,t),this.update()}onViewportChange(t){this.viewports[t.id]=t}handleZoom(t,r){let n=this.viewId||t?.id||"default-view",s={...t,zoom:r};this.props.transitionDuration>0&&(s.transitionDuration=this.props.transitionDuration,s.transitionInterpolator="latitude"in s?new ws:new ve),this.setViewState(n,s)}handleZoomIn(){for(let t of Object.values(this.viewports))this.handleZoom(t,t.zoom+1)}handleZoomOut(){for(let t of Object.values(this.viewports))this.handleZoom(t,t.zoom-1)}setViewState(t,r){this.deck._onViewStateChange({viewId:t,viewState:r,interactionState:{}})}update(){let t=this.element;if(!t)return;let r=Vt(AE,{orientation:this.props.orientation,children:[Vt(p_,{onClick:()=>this.handleZoomIn(),label:this.props.zoomInLabel,className:"deck-widget-zoom-in"}),Vt(p_,{onClick:()=>this.handleZoomOut(),label:this.props.zoomOutLabel,className:"deck-widget-zoom-out"})]});is(r,t)}};Ta.defaultProps={id:"zoom-widget",style:{},placement:"top-left",className:void 0,orientation:"vertical",transitionDuration:200,zoomInLabel:"Zoom In",zoomOutLabel:"Zoom Out",viewId:void 0};var Mn=class{constructor(t){this.id=t.id||"widget",this.props=t}onAdd({deck:t}){this.deck=t;let{style:r,className:n}=this.props,s=this._createRootElement({widgetClassName:this.className,className:n,style:r});return this.element=s,this.onRenderHTML(),this.element}onRemove(){this.deck=void 0,this.element=void 0}setProps(t){let r=this.props,n=this.element;n&&(r.className!==t.className&&(r.className&&n.classList.remove(r.className),t.className&&n.classList.add(t.className)),it(r.style,t.style,1)||(jn(n,r.style),xr(n,t.style))),Object.assign(this.props,t),this.onRenderHTML()}_createRootElement(t){let{widgetClassName:r,className:n,style:s}=t,i=document.createElement("div");return["deck-widget",r,n].filter(o=>typeof o=="string"&&o.length>0).forEach(o=>i.classList.add(o)),xr(i,s),i}};Mn.defaultProps={id:"widget",style:{},className:""};var va=class extends Mn{constructor(t={}){super({...va.defaultProps,...t}),this.className="deck-widget-screenshot",this.placement="top-left",this.placement=t.placement??this.placement}setProps(t){this.placement=t.placement??this.placement,super.setProps(t)}onRenderHTML(){let t=this.element;t&&is(Vt(ba,{className:"deck-widget-camera",label:this.props.label,onClick:this.handleClick.bind(this)}),t)}handleClick(){if(this.props.onCapture){this.props.onCapture(this);return}let t=this.captureScreenToDataURL(this.props.imageFormat);t&&this.downloadDataURL(t,this.props.filename)}captureScreenToDataURL(t){return this.deck?.getCanvas()?.toDataURL(t)}downloadDataURL(t,r){let n=document.createElement("a");n.href=t,n.download=r,n.click()}};va.defaultProps={...Mn.defaultProps,id:"screenshot",placement:"top-left",label:"Screenshot",filename:"screenshot.png",imageFormat:"image/png",onCapture:void 0};var Ea=class extends Mn{constructor(t={}){super({...Ea.defaultProps,...t}),this.className="deck-widget-reset-view",this.placement="top-left",this.placement=t.placement??this.placement}setProps(t){this.placement=t.placement??this.placement,super.setProps(t)}onRenderHTML(){let t=this.element;t&&is(Vt(ba,{className:"deck-widget-reset-focus",label:this.props.label,onClick:this.handleClick.bind(this)}),t)}handleClick(){let t=this.props.initialViewState||this.deck?.props.initialViewState;this.setViewState(t)}setViewState(t){let r=this.props.viewId||t?.id||"default-view",n={...t};this.deck._onViewStateChange({viewId:r,viewState:n,interactionState:{}})}};Ea.defaultProps={...Mn.defaultProps,id:"reset-view",placement:"top-left",label:"Reset View",initialViewState:void 0,viewId:void 0};var Fut={"--button-background":"#fff","--button-stroke":"rgba(255, 255, 255, 0.3)","--button-inner-stroke":"unset","--button-shadow":"0px 0px 8px 0px rgba(0, 0, 0, 0.25)","--button-backdrop-filter":"unset","--button-icon-idle":"rgba(97, 97, 102, 1)","--button-icon-hover":"rgba(24, 24, 26, 1)","--icon-compass-north-color":"#F05C44","--icon-compass-south-color":"#C2C2CC"},Dut={"--button-background":"rgba(18, 18, 20, 1)","--button-stroke":"rgba(18, 18, 20, 0.30)","--button-inner-stroke":"unset","--button-shadow":"0px 0px 8px 0px rgba(0, 0, 0, 0.25)","--button-backdrop-filter":"unset","--button-icon-idle":"rgba(158, 157, 168, 1)","--button-icon-hover":"rgba(215, 214, 229, 1)","--icon-compass-north-color":"#F05C44","--icon-compass-south-color":"#C2C2CC"},kut={"--button-background":"rgba(255, 255, 255, 0.6)","--button-stroke":"rgba(255, 255, 255, 0.3)","--button-inner-stroke":"1px solid rgba(255, 255, 255, 0.6)","--button-shadow":"0px 0px 8px 0px rgba(0, 0, 0, 0.25), 0px 0px 8px 0px rgba(0, 0, 0, 0.1) inset","--button-backdrop-filter":"blur(4px)","--button-icon-idle":"rgba(97, 97, 102, 1)","--button-icon-hover":"rgba(24, 24, 26, 1)","--icon-compass-north-color":"#F05C44","--icon-compass-south-color":"#C2C2CC"},Uut={"--button-background":"rgba(18, 18, 20, 0.75)","--button-stroke":"rgba(18, 18, 20, 0.30)","--button-inner-stroke":"1px solid rgba(18, 18, 20, 0.75)","--button-shadow":"0px 0px 8px 0px rgba(0, 0, 0, 0.25), 0px 0px 8px 0px rgba(0, 0, 0, 0.1) inset","--button-backdrop-filter":"blur(4px)","--button-icon-idle":"rgba(158, 157, 168, 1)","--button-icon-hover":"rgba(215, 214, 229, 1)","--icon-compass-north-color":"#F05C44","--icon-compass-south-color":"#C2C2CC"};var Zd=os(Bu(),1);Bc._checkH3Lib=()=>{let e='include the <script src="https://unpkg.com/h3-js@^4.0.0"><\/script> tag before the deck.gl script tag. https://deck.gl/docs/api-reference/geo-layers/h3-hexagon-layer';if(Zd){if(Zd.polyfill&&!Zd.polygonToCells)throw new Error(`Incompatible h3-js version. ${e}`)}else throw new Error(`To use H3 functionality, ${e}`)};return Fz(zut);})();
/*! Bundled license information:

long/dist/long.js:
  (**
   * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
   * Released under the Apache License, Version 2.0
   * see: https://github.com/dcodeIO/long.js for details
   *)

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
      return __exports__;
      });
", "name": "unpkg_com_dist_min_js"}, "https://unpkg.com/apache-arrow@latest/Arrow.es2015.min.js": {"encoded_content": "// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define(['exports'], factory) :
    (factory(global.Arrow = global.Arrow || {}));
}(this, (function (exports) {var h;function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ba=typeof Object.defineProperties=="function"?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
function ca(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var da=ca(this);function ea(a,b){if(b)a:{var c=da;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&b!=null&&ba(c,a,{configurable:!0,writable:!0,value:b})}}
ea("Symbol",function(a){function b(f){if(this instanceof b)throw new TypeError("Symbol is not a constructor");return new c(d+(f||"")+"_"+e++,f)}function c(f,g){this.Ib=f;ba(this,"description",{configurable:!0,writable:!0,value:g})}if(a)return a;c.prototype.toString=function(){return this.Ib};var d="jscomp_symbol_"+(Math.random()*1E9>>>0)+"_",e=0;return b});
ea("Symbol.iterator",function(a){if(a)return a;a=Symbol("Symbol.iterator");for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),c=0;c<b.length;c++){var d=da[b[c]];typeof d==="function"&&typeof d.prototype[a]!="function"&&ba(d.prototype,a,{configurable:!0,writable:!0,value:function(){return fa(aa(this))}})}return a});ea("Symbol.asyncIterator",function(a){return a?a:Symbol("Symbol.asyncIterator")});
ea("Symbol.toStringTag",function(a){return a?a:Symbol("Symbol.toStringTag")});function fa(a){a={next:a};a[Symbol.iterator]=function(){return this};return a}function ha(a){function b(d){return a.next(d)}function c(d){return a.throw(d)}return new Promise(function(d,e){function f(g){g.done?d(g.value):Promise.resolve(g.value).then(b,c).then(f,e)}f(a.next())})}function l(a){return ha(a())}
function ia(a){var b=a[Symbol.asyncIterator];if(b!==void 0)a=b.call(a);else{b=ja;var c=typeof Symbol!="undefined"&&Symbol.iterator&&a[Symbol.iterator];if(c)a=c.call(a);else if(typeof a.length=="number")a={next:aa(a)};else throw Error(String(a)+" is not an iterable or ArrayLike");a=new b(a)}return a}
function ja(a){this[Symbol.asyncIterator]=function(){return this};this[Symbol.iterator]=function(){return a};this.next=function(b){return Promise.resolve(a.next(b))};this["throw"]=function(b){return new Promise(function(c,d){var e=a["throw"];e!==void 0?c(e.call(a,b)):(c=a["return"],c!==void 0&&c.call(a),d(new TypeError("no `throw` method")))})};a["return"]!==void 0&&(this["return"]=function(b){return Promise.resolve(a["return"](b))})}function n(a,b){this.action=a;this.value=b}
function ka(a,b,c,d){this.method=a;this.ea=b;this.resolve=c;this.reject=d}function la(a){this.frame=a;this.next=null}function ma(){this.Ma=this.V=null}ma.prototype.first=function(){if(this.V)return this.V.frame;throw Error("no frames in executionQueue");};function na(a){a.V&&(a.V=a.V.next,a.V||(a.Ma=null))}ma.prototype.enqueue=function(a){a=new la(a);this.Ma?this.Ma.next=a:this.V=a;this.Ma=a};
function oa(a){this.Cb=a;this.S=null;this.L=new ma;this[Symbol.asyncIterator]=function(){return this};var b=this;this.Wb=function(c){var d=b.L.first();c.done===!0?(b.S=null,d.method="next",d.ea=c.value):(d.resolve({value:c.value,done:!1}),na(b.L));pa(b)};this.Vb=function(c){qa(b,c)};this.$a=function(c){ra(b,c)}}function ta(a,b,c){return new Promise(function(d,e){var f=a.L.V===null;a.L.enqueue(new ka(b,c,d,e));f&&pa(a)})}oa.prototype.next=function(a){return ta(this,"next",a)};
oa.prototype.return=function(a){return ta(this,"return",new n(0,a))};oa.prototype.throw=function(a){return ta(this,"throw",a)};function pa(a){if(a.L.V!==null)try{if(a.S){if(!a.S)throw Error("no delegate to perform execution");var b=a.L.first();if(b.method in a.S)try{a.S[b.method](b.ea).then(a.Wb,a.Vb).catch(a.$a)}catch(c){qa(a,c)}else a.S=null,pa(a)}else ua(a)}catch(c){ra(a,c)}}
function ua(a){var b=a.L.first();try{var c=a.Cb[b.method](b.ea);if(c.value instanceof n)switch(c.value.action){case 0:Promise.resolve(c.value.value).then(function(d){b.resolve({value:d,done:c.done});na(a.L);pa(a)},function(d){b.reject(d);na(a.L);pa(a)}).catch(a.$a);break;case 1:a.S=ia(c.value.value);b.method="next";b.ea=void 0;pa(a);break;case 2:Promise.resolve(c.value.value).then(function(d){b.method="next";b.ea=d;pa(a)},function(d){b.method="throw";b.ea=d;pa(a)}).catch(a.$a);break;default:throw Error("Unrecognized AsyncGeneratorWrapper$ActionEnum");
}else b.resolve(c),na(a.L),pa(a)}catch(d){b.reject(d),na(a.L),pa(a)}}function qa(a,b){var c=a.L.first();a.S=null;c.method="throw";c.ea=b;pa(a)}function ra(a,b){a.L.V!==null&&(a.L.first().reject(b),na(a.L));a.S&&"return"in a.S&&(a.S["return"](void 0),a.S=null);a.Cb["return"](void 0);pa(a)}const va=new TextDecoder("utf-8"),wa=a=>va.decode(a),xa=new TextEncoder;const q=a=>typeof a==="function",t=a=>a!=null&&Object(a)===a,ya=a=>"_getDOMStream"in a&&"_getNodeStream"in a,za=a=>t(a)&&q(a.cancel)&&q(a.getReader)&&!ya(a),Aa=a=>t(a)&&q(a.read)&&q(a.pipe)&&typeof a.readable==="boolean"&&!ya(a);const Ba=typeof SharedArrayBuffer!=="undefined"?SharedArrayBuffer:ArrayBuffer;function Ca(a){const b=a[0]?[a[0]]:[];let c,d,e,f;for(let g,k,m=0,p=0,r=a.length;++m<r;)g=b[p],k=a[m],!g||!k||g.buffer!==k.buffer||k.byteOffset<g.byteOffset?k&&(b[++p]=k):({byteOffset:c,byteLength:e}=g,{byteOffset:d,byteLength:f}=k,c+e<d||d+f<c?k&&(b[++p]=k):b[p]=new Uint8Array(g.buffer,c,d-c+f));return b}
function Da(a,b,c=0,d=b.byteLength){const e=a.byteLength,f=new Uint8Array(a.buffer,a.byteOffset,e);b=new Uint8Array(b.buffer,b.byteOffset,Math.min(d,e));f.set(b,c);return a}
function Ea(a,b){a=Ca(a);const c=a.reduce((m,p)=>m+p.byteLength,0);let d,e,f=0,g=-1;const k=Math.min(b||Number.POSITIVE_INFINITY,c);for(const m=a.length;++g<m;){b=a[g];d=b.subarray(0,Math.min(b.length,k-f));if(k<=f+d.length){d.length<b.length?a[g]=b.subarray(d.length):d.length===b.length&&g++;e?Da(e,d,f):e=d;break}Da(e||(e=new Uint8Array(k)),d,f);f+=d.length}return[e||new Uint8Array(0),a.slice(g),c-(e?e.byteLength:0)]}
function u(a,b){b=t(b)&&"done"in b&&"value"in b?b.value:b;if(b instanceof a)return a===Uint8Array?new a(b.buffer,b.byteOffset,b.byteLength):b;if(!b)return new a(0);typeof b==="string"&&(b=xa.encode(b));return b instanceof ArrayBuffer||b instanceof Ba?new a(b):t(b)&&q(b.clear)&&q(b.bytes)&&q(b.position)&&q(b.setPosition)&&q(b.capacity)&&q(b.getBufferIdentifier)&&q(b.createLong)?u(a,b.bytes()):ArrayBuffer.isView(b)?b.byteLength<=0?new a(0):new a(b.buffer,b.byteOffset,b.byteLength/a.BYTES_PER_ELEMENT):
a.from(b)}const Fa=a=>u(Uint8Array,a),Ga=a=>{a.next();return a};function*Ha(a,b){function*c(d){yield d}b=typeof b==="string"?c(b):ArrayBuffer.isView(b)?c(b):b instanceof ArrayBuffer?c(b):b instanceof Ba?c(b):t(b)&&q(b[Symbol.iterator])?b:c(b);yield*Ga(function*(d){let e=null;do e=d.next(yield u(a,e));while(!e.done)}(b[Symbol.iterator]()));return new a}
function Ja(a,b){return new oa(function*(){function c(f){return new oa(function*(){yield new n(1,Ga(function*(g){let k=null;do{let m;k=g.next(yield(m=k)==null?void 0:m.value)}while(!k.done)}(f[Symbol.iterator]())))}())}function d(f){return new oa(function*(){yield new n(0,yield new n(2,f))}())}if(t(b)&&q(b.then))return new n(0,yield new n(1,Ja(a,yield new n(2,b))));const e=typeof b==="string"?d(b):ArrayBuffer.isView(b)?d(b):b instanceof ArrayBuffer?d(b):b instanceof Ba?d(b):t(b)&&q(b[Symbol.iterator])?
c(b):t(b)&&q(b[Symbol.asyncIterator])?b:d(b);yield new n(1,Ga(function(f){return new oa(function*(){let g=null;do g=yield new n(2,f.next(yield new n(0,u(a,g))));while(!g.done)}())}(e[Symbol.asyncIterator]())));return new n(0,new a)}())}function Ka(a,b,c){if(a!==0){c=c.slice(0,b);for(let d=-1,e=c.length;++d<e;)c[d]+=a}return c.subarray(0,b)}function La(a,b){let c=0;const d=a.length;if(d!==b.length)return!1;if(d>0){do if(a[c]!==b[c])return!1;while(++c<d)}return!0}var v={};v.compareArrayLike=La;
v.joinUint8Arrays=Ea;v.memcpy=Da;v.rebaseValueOffsets=Ka;v.toArrayBufferView=u;v.toArrayBufferViewAsyncIterator=Ja;v.toArrayBufferViewIterator=Ha;v.toBigInt64Array=a=>u(BigInt64Array,a);v.toBigUint64Array=a=>u(BigUint64Array,a);v.toFloat32Array=a=>u(Float32Array,a);v.toFloat32ArrayAsyncIterator=a=>Ja(Float32Array,a);v.toFloat32ArrayIterator=a=>Ha(Float32Array,a);v.toFloat64Array=a=>u(Float64Array,a);v.toFloat64ArrayAsyncIterator=a=>Ja(Float64Array,a);v.toFloat64ArrayIterator=a=>Ha(Float64Array,a);
v.toInt16Array=a=>u(Int16Array,a);v.toInt16ArrayAsyncIterator=a=>Ja(Int16Array,a);v.toInt16ArrayIterator=a=>Ha(Int16Array,a);v.toInt32Array=a=>u(Int32Array,a);v.toInt32ArrayAsyncIterator=a=>Ja(Int32Array,a);v.toInt32ArrayIterator=a=>Ha(Int32Array,a);v.toInt8Array=a=>u(Int8Array,a);v.toInt8ArrayAsyncIterator=a=>Ja(Int8Array,a);v.toInt8ArrayIterator=a=>Ha(Int8Array,a);v.toUint16Array=a=>u(Uint16Array,a);v.toUint16ArrayAsyncIterator=a=>Ja(Uint16Array,a);v.toUint16ArrayIterator=a=>Ha(Uint16Array,a);
v.toUint32Array=a=>u(Uint32Array,a);v.toUint32ArrayAsyncIterator=a=>Ja(Uint32Array,a);v.toUint32ArrayIterator=a=>Ha(Uint32Array,a);v.toUint8Array=Fa;v.toUint8ArrayAsyncIterator=a=>Ja(Uint8Array,a);v.toUint8ArrayIterator=a=>Ha(Uint8Array,a);v.toUint8ClampedArray=a=>u(Uint8ClampedArray,a);v.toUint8ClampedArrayAsyncIterator=a=>Ja(Uint8ClampedArray,a);v.toUint8ClampedArrayIterator=a=>Ha(Uint8ClampedArray,a);function Ma(){throw Error('"toDOMStream" not available in this environment');}function Na(){throw Error('"toNodeStream" not available in this environment');}const Oa=a=>{a.next();return a};
function*Pa(a){let b,c=!1,d=[],e,f,g,k=0;({O:f,size:g}=(yield null)||{O:"read",size:0});a=Ha(Uint8Array,a)[Symbol.iterator]();try{do if({done:b,value:e}=Number.isNaN(g-k)?a.next():a.next(g-k),!b&&e.byteLength>0&&(d.push(e),k+=e.byteLength),b||g<=k){do{if(f==="peek")var m=Ea(d,g)[0];else[e,d,k]=Ea(d,g),m=e;({O:f,size:g}=yield m)}while(g<k)}while(!b)}catch(p){c=!0,typeof a.throw==="function"&&a.throw(p)}finally{c===!1&&typeof a.return==="function"&&a.return(null)}return null}
function Qa(a){return new oa(function*(){let b,c=!1,d=[],e,f,g,k=0;({O:f,size:g}=(yield new n(0,null))||{O:"read",size:0});const m=Ja(Uint8Array,a)[Symbol.asyncIterator]();try{do if({done:b,value:e}=Number.isNaN(g-k)?yield new n(2,m.next()):yield new n(2,m.next(g-k)),!b&&e.byteLength>0&&(d.push(e),k+=e.byteLength),b||g<=k){do{if(f==="peek")var p=Ea(d,g)[0];else[e,d,k]=Ea(d,g),p=e;({O:f,size:g}=yield new n(0,p))}while(g<k)}while(!b)}catch(r){c=!0,typeof m.throw==="function"&&(yield new n(2,m.throw(r)))}finally{c===
!1&&typeof m.return==="function"&&(yield new n(2,m.return(new Uint8Array(0))))}return new n(0,null)}())}
function Ra(a){return new oa(function*(){let b=!1,c=!1,d=[],e,f,g,k=0;({O:f,size:g}=(yield new n(0,null))||{O:"read",size:0});const m=new Sa(a);try{do if({done:b,value:e}=Number.isNaN(g-k)?yield new n(2,m.read()):yield new n(2,m.read(g-k)),!b&&e.byteLength>0&&(d.push(u(Uint8Array,e)),k+=e.byteLength),b||g<=k){do{if(f==="peek")var p=Ea(d,g)[0];else[e,d,k]=Ea(d,g),p=e;({O:f,size:g}=yield new n(0,p))}while(g<k)}while(!b)}catch(r){c=!0,yield new n(2,m.cancel(r))}finally{c===!1?yield new n(2,m.cancel()):
a.locked&&m.releaseLock()}return new n(0,null)}())}
class Sa{constructor(a){this.source=a;this.W=null;this.W=this.source.getReader();this.W.closed.catch(()=>{})}get closed(){return this.W?this.W.closed.catch(()=>{}):Promise.resolve()}releaseLock(){this.W&&this.W.releaseLock();this.W=null}cancel(a){const b=this;return l(function*(){const c=b.W,d=b.source;c&&(yield c.cancel(a).catch(()=>{}));d&&d.locked&&b.releaseLock()})}read(a){const b=this;return l(function*(){if(a===0)return{done:b.W==null,value:new Uint8Array(0)};const c=yield b.W.read();!c.done&&
(c.value=u(Uint8Array,c));return c})}}const Ta=(a,b)=>{const c=e=>d([b,e]);let d;return[b,c,new Promise(e=>(d=e)&&a.once(b,c))]};
function Ua(a){return new oa(function*(){function b(sa,Ia){r=p=null;return new Promise((Nc,rj)=>{for(const [Db,sj]of sa)a.off(Db,sj);try{const Db=a.destroy;Db&&Db.call(a,Ia);Ia=void 0}catch(Db){Ia=Db||Ia}finally{Ia!=null?rj(Ia):Nc()}})}const c=[];let d="error",e=!1,f=null,g,k,m=0,p=[],r;({O:g,size:k}=(yield new n(0,null))||{O:"read",size:0});if(a.isTTY)return yield new n(0,new Uint8Array(0)),new n(0,null);try{c[0]=Ta(a,"end");c[1]=Ta(a,"error");do{c[2]=Ta(a,"readable");[d,f]=yield new n(2,Promise.race(c.map(sa=>
sa[2])));if(d==="error")break;(e=d==="end")||(Number.isFinite(k-m)?(r=Fa(a.read(k-m)),r.byteLength<k-m&&(r=Fa(a.read()))):r=Fa(a.read()),r.byteLength>0&&(p.push(r),m+=r.byteLength));if(e||k<=m){do{if(g==="peek")var U=Ea(p,k)[0];else[r,p,m]=Ea(p,k),U=r;({O:g,size:k}=yield new n(0,U))}while(k<m)}}while(!e)}finally{yield new n(2,b(c,d==="error"?f:null))}return new n(0,null)}())};var w,Va=w||(w={});Va[Va.V1=0]="V1";Va[Va.V2=1]="V2";Va[Va.V3=2]="V3";Va[Va.V4=3]="V4";Va[Va.V5=4]="V5";var x,Wa=x||(x={});Wa[Wa.Sparse=0]="Sparse";Wa[Wa.Dense=1]="Dense";var y,Xa=y||(y={});Xa[Xa.HALF=0]="HALF";Xa[Xa.SINGLE=1]="SINGLE";Xa[Xa.DOUBLE=2]="DOUBLE";var Ya,Za=Ya||(Ya={});Za[Za.DAY=0]="DAY";Za[Za.MILLISECOND=1]="MILLISECOND";var z,$a=z||(z={});$a[$a.SECOND=0]="SECOND";$a[$a.MILLISECOND=1]="MILLISECOND";$a[$a.MICROSECOND=2]="MICROSECOND";$a[$a.NANOSECOND=3]="NANOSECOND";var A,ab=A||(A={});ab[ab.YEAR_MONTH=0]="YEAR_MONTH";ab[ab.DAY_TIME=1]="DAY_TIME";ab[ab.MONTH_DAY_NANO=2]="MONTH_DAY_NANO";const bb=new Int32Array(2);new Float32Array(bb.buffer);new Float64Array(bb.buffer);new Uint16Array((new Uint8Array([1,0])).buffer);var cb,db=cb||(cb={});db[db.UTF8_BYTES=1]="UTF8_BYTES";db[db.UTF16_STRING=2]="UTF16_STRING";function eb(a,b){return(a.l[b]|a.l[b+1]<<8)<<16>>16}function fb(a,b){return BigInt.asIntN(64,BigInt(a.v(b)>>>0)+(BigInt(a.v(b+4)>>>0)<<BigInt(32)))}function B(a,b,c){b-=a.v(b);return c<eb(a,b)?eb(a,b+c):0}function gb(a,b,c){b.h=c+a.v(c);b.g=a;return b}function hb(a,b,c){b+=a.v(b);const d=a.v(b);b+=4;b=a.l.subarray(b,b+d);return c===cb.UTF8_BYTES?b:a.ac.decode(b)}function ib(a,b){return b+a.v(b)}function jb(a,b){return b+a.v(b)+4}function kb(a,b){return a.v(b+a.v(b))}
class lb{constructor(a){this.l=a;this.gb=0;this.ac=new TextDecoder}clear(){this.gb=0}bytes(){return this.l}position(){return this.gb}setPosition(a){this.gb=a}v(a){return this.l[a]|this.l[a+1]<<8|this.l[a+2]<<16|this.l[a+3]<<24}ja(a,b){this.l[a]=b}lb(a,b){this.l[a]=b;this.l[a+1]=b>>8}Y(a,b){this.l[a]=b;this.l[a+1]=b>>8;this.l[a+2]=b>>16;this.l[a+3]=b>>24}aa(a,b){this.Y(a,Number(BigInt.asIntN(32,b)));this.Y(a+4,Number(BigInt.asIntN(32,b>>BigInt(32))))}};function mb(a){return a.g.bytes().subarray(a.g.position(),a.g.position()+a.offset())}function nb(a,b,c){b>a.ua&&(a.ua=b);const d=~(a.g.l.length-a.C+c)+1&b-1;for(;a.C<d+b+c;){const g=a.g.l.length;var e=a,f=a.g;const k=f.l.length;if(k&3221225472)throw Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");const m=k<<1,p=new lb(new Uint8Array(m));p.setPosition(m-k);p.bytes().set(f.bytes(),m-k);e.g=p;a.C+=a.g.l.length-g}a.pad(d)}function ob(a,b){nb(a,2,0);a.lb(b)}
function pb(a,b){nb(a,4,0);a.Y(b)}function qb(a,b,c,d){if(a.fa||c!=d)nb(a,1,0),a.ja(c),a.slot(b)}function rb(a,b,c){if(a.fa||b!=c)ob(a,b),a.slot(0)}function sb(a,b,c,d){if(a.fa||c!=d)pb(a,c),a.slot(b)}function tb(a,b,c){var d=BigInt("0");if(a.fa||c!==d)nb(a,8,0),a.aa(c),a.slot(b)}function ub(a,b){nb(a,4,0);a.Y(a.offset()-b+4)}function C(a,b,c){if(a.fa||c!=0)ub(a,c),a.slot(b)}function vb(a){if(a.ta)throw new TypeError("FlatBuffers: object serialization must not be nested.");}
function D(a,b){vb(a);a.X==null&&(a.X=[]);a.kb=b;for(let c=0;c<b;c++)a.X[c]=0;a.ta=!0;a.fb=a.offset()}
function E(a){if(a.X==null||!a.ta)throw Error("FlatBuffers: endObject called without startObject");pb(a,0);const b=a.offset();let c=a.kb-1;for(;c>=0&&a.X[c]==0;c--);for(var d=c+1;c>=0;c--)ob(a,a.X[c]!=0?b-a.X[c]:0);ob(a,b-a.fb);d=(d+2)*2;ob(a,d);let e=0;const f=a.C;c=0;a:for(;c<a.va.length;c++){const g=a.g.l.length-a.va[c];if(d==eb(a.g,g)){for(let k=2;k<d;k+=2)if(eb(a.g,f+k)!=eb(a.g,g+k))continue a;e=a.va[c];break}}e?(a.C=a.g.l.length-b,a.g.Y(a.C,e-b)):(a.va.push(a.offset()),a.g.Y(a.g.l.length-b,
a.offset()-b));a.ta=!1;return b}function wb(a,b,c,d){vb(a);a.jb=c;nb(a,4,b*c);nb(a,d,b*c)}function xb(a){a.Y(a.jb);return a.offset()}function yb(a,b){if(b===null||b===void 0)return 0;b=b instanceof Uint8Array?b:a.bc.encode(b);nb(a,1,0);a.ja(0);wb(a,1,b.length,1);a.g.setPosition(a.C-=b.length);a.g.bytes().set(b,a.C);return xb(a)}
class zb{constructor(){this.ua=1;this.X=null;this.kb=0;this.ta=!1;this.fb=0;this.va=[];this.jb=0;this.fa=!1;this.bc=new TextEncoder;this.g=new lb(new Uint8Array(1024));this.C=1024}clear(){this.g.clear();this.C=this.g.l.length;this.ua=1;this.X=null;this.kb=0;this.ta=!1;this.fb=0;this.va=[];this.jb=0;this.fa=!1}pad(a){for(let b=0;b<a;b++)this.g.ja(--this.C,0)}ja(a){this.g.ja(--this.C,a)}lb(a){this.g.lb(this.C-=2,a)}Y(a){this.g.Y(this.C-=4,a)}aa(a){this.g.aa(this.C-=8,a)}slot(a){this.X!==null&&(this.X[a]=
this.offset())}offset(){return this.g.l.length-this.C}finish(a,b,c){c=c?4:0;if(b){nb(this,this.ua,8+c);if(b.length!=4)throw new TypeError("FlatBuffers: file identifier must be length 4");for(let d=3;d>=0;d--)this.ja(b.charCodeAt(d))}nb(this,this.ua,4+c);ub(this,a);c&&pb(this,this.g.l.length-this.C);this.g.setPosition(this.C)}};var Ab,Bb=Ab||(Ab={});Bb[Bb.BUFFER=0]="BUFFER";var Cb,Eb=Cb||(Cb={});Eb[Eb.LZ4_FRAME=0]="LZ4_FRAME";Eb[Eb.ZSTD=1]="ZSTD";class Fb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}codec(){const a=B(this.g,this.h,4);return a?this.g.l[this.h+a]<<24>>24:Cb.fc}method(){const a=B(this.g,this.h,6);return a?this.g.l[this.h+a]<<24>>24:Ab.dc}};class Gb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}offset(){return fb(this.g,this.h)}length(){return fb(this.g,this.h+8)}};class Hb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}length(){return fb(this.g,this.h)}nullCount(){return fb(this.g,this.h+8)}};function Ib(a){const b=B(a.g,a.h,6);return b?kb(a.g,a.h+b):0}function Jb(a){const b=B(a.g,a.h,8);return b?kb(a.g,a.h+b):0}class Kb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}length(){const a=B(this.g,this.h,4);return a?fb(this.g,this.h+a):BigInt("0")}N(a,b){const c=B(this.g,this.h,6);return c?(b||new Hb).i(jb(this.g,this.h+c)+a*16,this.g):null}buffers(a,b){const c=B(this.g,this.h,8);return c?(b||new Gb).i(jb(this.g,this.h+c)+a*16,this.g):null}};class Lb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}id(){const a=B(this.g,this.h,4);return a?fb(this.g,this.h+a):BigInt("0")}data(a){const b=B(this.g,this.h,6);return b?(a||new Kb).i(ib(this.g,this.h+b),this.g):null}Ja(){const a=B(this.g,this.h,8);return a?!!(this.g.l[this.h+a]<<24>>24):!1}};var Mb,Nb=Mb||(Mb={});Nb[Nb.Little=0]="Little";Nb[Nb.Big=1]="Big";var Ob,Pb=Ob||(Ob={});Pb[Pb.DenseArray=0]="DenseArray";class Qb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}bitWidth(){const a=B(this.g,this.h,4);return a?this.g.v(this.h+a):0}isSigned(){const a=B(this.g,this.h,6);return a?!!(this.g.l[this.h+a]<<24>>24):!1}};function Rb(a){const b=B(a.g,a.h,6);return b?(new Qb).i(ib(a.g,a.h+b),a.g):null}class Sb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}id(){const a=B(this.g,this.h,4);return a?fb(this.g,this.h+a):BigInt("0")}isOrdered(){const a=B(this.g,this.h,8);return a?!!(this.g.l[this.h+a]<<24>>24):!1}};class Tb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}key(a){const b=B(this.g,this.h,4);return b?hb(this.g,this.h+b,a):null}value(a){const b=B(this.g,this.h,6);return b?hb(this.g,this.h+b,a):null}};class Ub{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}unit(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):Ya.MILLISECOND}};class Vb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}precision(){const a=B(this.g,this.h,4);return a?this.g.v(this.h+a):0}scale(){const a=B(this.g,this.h,6);return a?this.g.v(this.h+a):0}bitWidth(){const a=B(this.g,this.h,8);return a?this.g.v(this.h+a):128}};class Wb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}unit(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):z.MILLISECOND}};class Xb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}byteWidth(){const a=B(this.g,this.h,4);return a?this.g.v(this.h+a):0}};class Yb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}listSize(){const a=B(this.g,this.h,4);return a?this.g.v(this.h+a):0}};class Zb{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}precision(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):y.HALF}};class $b{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}unit(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):A.YEAR_MONTH}};class ac{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}keysSorted(){const a=B(this.g,this.h,4);return a?!!(this.g.l[this.h+a]<<24>>24):!1}};class bc{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}unit(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):z.MILLISECOND}bitWidth(){const a=B(this.g,this.h,6);return a?this.g.v(this.h+a):32}};class cc{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}unit(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):z.SECOND}timezone(a){const b=B(this.g,this.h,6);return b?hb(this.g,this.h+b,a):null}};class dc{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}mode(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):x.Sparse}typeIds(a){const b=B(this.g,this.h,6);return b?this.g.v(jb(this.g,this.h+b)+a*4):0}};var F,G=F||(F={});G[G.NONE=0]="NONE";G[G.Null=1]="Null";G[G.Int=2]="Int";G[G.FloatingPoint=3]="FloatingPoint";G[G.Binary=4]="Binary";G[G.Utf8=5]="Utf8";G[G.Bool=6]="Bool";G[G.Decimal=7]="Decimal";G[G.Date=8]="Date";G[G.Time=9]="Time";G[G.Timestamp=10]="Timestamp";G[G.Interval=11]="Interval";G[G.List=12]="List";G[G.Struct_=13]="Struct_";G[G.Union=14]="Union";G[G.FixedSizeBinary=15]="FixedSizeBinary";G[G.FixedSizeList=16]="FixedSizeList";G[G.Map=17]="Map";G[G.Duration=18]="Duration";
G[G.LargeBinary=19]="LargeBinary";G[G.LargeUtf8=20]="LargeUtf8";G[G.LargeList=21]="LargeList";G[G.RunEndEncoded=22]="RunEndEncoded";function ec(a,b){wb(a,4,b.length,4);for(let c=b.length-1;c>=0;c--)ub(a,b[c]);return xb(a)}function fc(a,b){wb(a,4,b.length,4);for(let c=b.length-1;c>=0;c--)ub(a,b[c]);return xb(a)}function hc(a){const b=B(a.g,a.h,14);return b?kb(a.g,a.h+b):0}
class ic{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}name(a){const b=B(this.g,this.h,4);return b?hb(this.g,this.h+b,a):null}nullable(){const a=B(this.g,this.h,6);return a?!!(this.g.l[this.h+a]<<24>>24):!1}type(a){const b=B(this.g,this.h,10);return b?gb(this.g,a,this.h+b):null}dictionary(a){const b=B(this.g,this.h,12);return b?(a||new Sb).i(ib(this.g,this.h+b),this.g):null}children(a,b){const c=B(this.g,this.h,14);return c?(b||new ic).i(ib(this.g,jb(this.g,this.h+c)+a*4),
this.g):null}Ga(a){const b=B(this.g,this.h,16);return b?(new Tb).i(ib(this.g,jb(this.g,this.h+b)+a*4),this.g):null}Ha(){const a=B(this.g,this.h,16);return a?kb(this.g,this.h+a):0}};function jc(a,b){wb(a,4,b.length,4);for(let c=b.length-1;c>=0;c--)ub(a,b[c]);return xb(a)}function kc(a,b){wb(a,4,b.length,4);for(let c=b.length-1;c>=0;c--)ub(a,b[c]);return xb(a)}function lc(a){const b=B(a.g,a.h,6);return b?kb(a.g,a.h+b):0}
class mc{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}fields(a,b){const c=B(this.g,this.h,6);return c?(b||new ic).i(ib(this.g,jb(this.g,this.h+c)+a*4),this.g):null}Ga(a){const b=B(this.g,this.h,8);return b?(new Tb).i(ib(this.g,jb(this.g,this.h+b)+a*4),this.g):null}Ha(){const a=B(this.g,this.h,8);return a?kb(this.g,this.h+a):0}features(a){const b=B(this.g,this.h,10);return b?fb(this.g,jb(this.g,this.h+b)+a*8):BigInt(0)}};var nc,oc=nc||(nc={});oc[oc.Row=0]="Row";oc[oc.Column=1]="Column";var pc,qc=pc||(pc={});qc[qc.NONE=0]="NONE";qc[qc.SparseTensorIndexCOO=1]="SparseTensorIndexCOO";qc[qc.SparseMatrixIndexCSX=2]="SparseMatrixIndexCSX";qc[qc.SparseTensorIndexCSF=3]="SparseTensorIndexCSF";var H,rc=H||(H={});rc[rc.NONE=0]="NONE";rc[rc.Schema=1]="Schema";rc[rc.DictionaryBatch=2]="DictionaryBatch";rc[rc.RecordBatch=3]="RecordBatch";rc[rc.Tensor=4]="Tensor";rc[rc.SparseTensor=5]="SparseTensor";var I,J=I||(I={});J[J.NONE=0]="NONE";J[J.Null=1]="Null";J[J.Int=2]="Int";J[J.Float=3]="Float";J[J.Binary=4]="Binary";J[J.Utf8=5]="Utf8";J[J.Bool=6]="Bool";J[J.Decimal=7]="Decimal";J[J.Date=8]="Date";J[J.Time=9]="Time";J[J.Timestamp=10]="Timestamp";J[J.Interval=11]="Interval";J[J.List=12]="List";J[J.Struct=13]="Struct";J[J.Union=14]="Union";J[J.FixedSizeBinary=15]="FixedSizeBinary";J[J.FixedSizeList=16]="FixedSizeList";J[J.Map=17]="Map";J[J.Duration=18]="Duration";J[J.LargeBinary=19]="LargeBinary";
J[J.LargeUtf8=20]="LargeUtf8";J[J.Dictionary=-1]="Dictionary";J[J.Int8=-2]="Int8";J[J.Int16=-3]="Int16";J[J.Int32=-4]="Int32";J[J.Int64=-5]="Int64";J[J.Uint8=-6]="Uint8";J[J.Uint16=-7]="Uint16";J[J.Uint32=-8]="Uint32";J[J.Uint64=-9]="Uint64";J[J.Float16=-10]="Float16";J[J.Float32=-11]="Float32";J[J.Float64=-12]="Float64";J[J.DateDay=-13]="DateDay";J[J.DateMillisecond=-14]="DateMillisecond";J[J.TimestampSecond=-15]="TimestampSecond";J[J.TimestampMillisecond=-16]="TimestampMillisecond";
J[J.TimestampMicrosecond=-17]="TimestampMicrosecond";J[J.TimestampNanosecond=-18]="TimestampNanosecond";J[J.TimeSecond=-19]="TimeSecond";J[J.TimeMillisecond=-20]="TimeMillisecond";J[J.TimeMicrosecond=-21]="TimeMicrosecond";J[J.TimeNanosecond=-22]="TimeNanosecond";J[J.DenseUnion=-23]="DenseUnion";J[J.SparseUnion=-24]="SparseUnion";J[J.IntervalDayTime=-25]="IntervalDayTime";J[J.IntervalYearMonth=-26]="IntervalYearMonth";J[J.DurationSecond=-27]="DurationSecond";J[J.DurationMillisecond=-28]="DurationMillisecond";
J[J.DurationMicrosecond=-29]="DurationMicrosecond";J[J.DurationNanosecond=-30]="DurationNanosecond";J[J.IntervalMonthDayNano=-31]="IntervalMonthDayNano";var sc,tc=sc||(sc={});tc[tc.OFFSET=0]="OFFSET";tc[tc.DATA=1]="DATA";tc[tc.VALIDITY=2]="VALIDITY";tc[tc.TYPE=3]="TYPE";function uc(a){if(a===null)return"null";if(a===void 0)return"undefined";switch(typeof a){case "number":return`${a}`;case "bigint":return`${a}`;case "string":return`"${a}"`}return typeof a[Symbol.toPrimitive]==="function"?a[Symbol.toPrimitive]("string"):ArrayBuffer.isView(a)?a instanceof BigInt64Array||a instanceof BigUint64Array?`[${[...a].map(b=>uc(b))}]`:`[${a}]`:ArrayBuffer.isView(a)?`[${a}]`:JSON.stringify(a,(b,c)=>typeof c==="bigint"?`${c}`:c)}var vc={};vc.valueToString=uc;function K(a){if(typeof a==="bigint"&&(a<Number.MIN_SAFE_INTEGER||a>Number.MAX_SAFE_INTEGER))throw new TypeError(`${a} is not safe to convert to a number.`);return Number(a)}function wc(a,b){return K(a/b)+K(a%b)/K(b)};const xc=Symbol.for("isArrowBigNum");function yc(a,...b){return b.length===0?Object.setPrototypeOf(u(this.TypedArray,a),this.constructor.prototype):Object.setPrototypeOf(new this.TypedArray(a,...b),this.constructor.prototype)}yc.prototype[xc]=!0;yc.prototype.toJSON=function(){return`"${zc(this)}"`};yc.prototype.valueOf=function(a){return Ac(this,a)};yc.prototype.toString=function(){return zc(this)};yc.prototype[Symbol.toPrimitive]=function(a="default"){switch(a){case "number":return Ac(this);case "default":return Bc(this)}return zc(this)};
function Cc(...a){return yc.apply(this,a)}function Dc(...a){return yc.apply(this,a)}function Ec(...a){return yc.apply(this,a)}Object.setPrototypeOf(Cc.prototype,Object.create(Int32Array.prototype));Object.setPrototypeOf(Dc.prototype,Object.create(Uint32Array.prototype));Object.setPrototypeOf(Ec.prototype,Object.create(Uint32Array.prototype));Object.assign(Cc.prototype,yc.prototype,{constructor:Cc,signed:!0,TypedArray:Int32Array,BigIntArray:BigInt64Array});
Object.assign(Dc.prototype,yc.prototype,{constructor:Dc,signed:!1,TypedArray:Uint32Array,BigIntArray:BigUint64Array});Object.assign(Ec.prototype,yc.prototype,{constructor:Ec,signed:!0,TypedArray:Uint32Array,BigIntArray:BigUint64Array});const Fc=BigInt(4294967296)*BigInt(4294967296)-BigInt(1);
function Ac(a,b){const {buffer:c,byteOffset:d,byteLength:e,signed:f}=a,g=new BigUint64Array(c,d,e/8);a=f&&g.at(-1)&BigInt(1)<<BigInt(63);var k=BigInt(0);let m=0;if(a){for(var p of g)k|=(p^Fc)*(BigInt(1)<<BigInt(64*m++));k*=BigInt(-1);k-=BigInt(1)}else for(var r of g)k|=r*(BigInt(1)<<BigInt(64*m++));return typeof b==="number"&&b>0?(r=BigInt("1".padEnd(b+1,"0")),p=a?-(k%r):k%r,k=K(k/r),+`${a&&k===0?"-":""}${k}.${`${p}`.padStart(b,"0")}`):K(k)}
function zc(a){if(a.byteLength===8)return`${(new a.BigIntArray(a.buffer,a.byteOffset,1))[0]}`;if(!a.signed)return Gc(a);let b=new Uint16Array(a.buffer,a.byteOffset,a.byteLength/2);if((new Int16Array([b.at(-1)]))[0]>=0)return Gc(a);b=b.slice();a=1;for(let c=0;c<b.length;c++){const d=b[c];b[c]=~d+a;a&=d===0?1:0}return`-${Gc(b)}`}function Bc(a){return a.byteLength===8?(new a.BigIntArray(a.buffer,a.byteOffset,1))[0]:zc(a)}
function Gc(a){let b="";const c=new Uint32Array(2);a=new Uint16Array(a.buffer,a.byteOffset,a.byteLength/2);const d=new Uint32Array((a=(new Uint16Array(a)).reverse()).buffer);let e;const f=a.length-1;do{for(c[0]=a[e=0];e<f;)a[e++]=c[1]=c[0]/10,c[0]=(c[0]-c[1]*10<<16)+a[e];a[e]=c[1]=c[0]/10;c[0]-=c[1]*10;b=`${c[0]}${b}`}while(d[0]||d[1]||d[2]||d[3]);let g;return(g=b)!=null?g:"0"}
class Hc{static new(a,b){switch(b){case !0:return new Cc(a);case !1:return new Dc(a)}switch(a.constructor){case Int8Array:case Int16Array:case Int32Array:case BigInt64Array:return new Cc(a)}return a.byteLength===16?new Ec(a):new Dc(a)}static kc(a){return new Cc(a)}constructor(a,b){return Hc.new(a,b)}}var Ic={};Ic.BN=Hc;Ic.bigNumToBigInt=Bc;Ic.bigNumToNumber=Ac;Ic.bigNumToString=zc;Ic.isArrowBigNumSymbol=xc;class L{static isNull(a){return(a==null?void 0:a.typeId)===I.Null}static isInt(a){return(a==null?void 0:a.typeId)===I.Int}static isFloat(a){return(a==null?void 0:a.typeId)===I.Float}static isBinary(a){return(a==null?void 0:a.typeId)===I.Binary}static isLargeBinary(a){return(a==null?void 0:a.typeId)===I.LargeBinary}static isUtf8(a){return(a==null?void 0:a.typeId)===I.Utf8}static isLargeUtf8(a){return(a==null?void 0:a.typeId)===I.LargeUtf8}static isBool(a){return(a==null?void 0:a.typeId)===I.Bool}static isDecimal(a){return(a==
null?void 0:a.typeId)===I.Decimal}static isDate(a){return(a==null?void 0:a.typeId)===I.Date}static isTime(a){return(a==null?void 0:a.typeId)===I.Time}static isTimestamp(a){return(a==null?void 0:a.typeId)===I.Timestamp}static isInterval(a){return(a==null?void 0:a.typeId)===I.Interval}static isDuration(a){return(a==null?void 0:a.typeId)===I.Duration}static isList(a){return(a==null?void 0:a.typeId)===I.List}static isStruct(a){return(a==null?void 0:a.typeId)===I.Struct}static isUnion(a){return(a==null?
void 0:a.typeId)===I.Union}static isFixedSizeBinary(a){return(a==null?void 0:a.typeId)===I.FixedSizeBinary}static isFixedSizeList(a){return(a==null?void 0:a.typeId)===I.FixedSizeList}static isMap(a){return(a==null?void 0:a.typeId)===I.Map}static isDictionary(a){return(a==null?void 0:a.typeId)===I.Dictionary}static isDenseUnion(a){return L.isUnion(a)&&a.mode===x.Dense}static isSparseUnion(a){return L.isUnion(a)&&a.mode===x.Sparse}constructor(a){this.typeId=a}}var Jc=Symbol.toStringTag,Kc,Lc=L.prototype;
Lc.children=null;Lc.ArrayType=Array;Lc.OffsetArrayType=Int32Array;Kc=Lc[Symbol.toStringTag]="DataType";L[Jc]=Kc;class Mc extends L{constructor(){super(I.Null)}toString(){return"Null"}}Mc[Symbol.toStringTag]=Mc.prototype[Symbol.toStringTag]="Null";
class Oc extends L{constructor(a,b){super(I.Int);this.isSigned=a;this.bitWidth=b}get ArrayType(){switch(this.bitWidth){case 8:return this.isSigned?Int8Array:Uint8Array;case 16:return this.isSigned?Int16Array:Uint16Array;case 32:return this.isSigned?Int32Array:Uint32Array;case 64:return this.isSigned?BigInt64Array:BigUint64Array}throw Error(`Unrecognized ${this[Symbol.toStringTag]} type`);}toString(){return`${this.isSigned?"I":"Ui"}nt${this.bitWidth}`}}var Pc=Symbol.toStringTag,Qc,Rc=Oc.prototype;
Rc.isSigned=null;Rc.bitWidth=null;Qc=Rc[Symbol.toStringTag]="Int";Oc[Pc]=Qc;class Sc extends Oc{constructor(){super(!0,8)}get ArrayType(){return Int8Array}}class Tc extends Oc{constructor(){super(!0,16)}get ArrayType(){return Int16Array}}class Uc extends Oc{constructor(){super(!0,32)}get ArrayType(){return Int32Array}}class Vc extends Oc{constructor(){super(!0,64)}get ArrayType(){return BigInt64Array}}class Wc extends Oc{constructor(){super(!1,8)}get ArrayType(){return Uint8Array}}
class Xc extends Oc{constructor(){super(!1,16)}get ArrayType(){return Uint16Array}}class Yc extends Oc{constructor(){super(!1,32)}get ArrayType(){return Uint32Array}}class Zc extends Oc{constructor(){super(!1,64)}get ArrayType(){return BigUint64Array}}Object.defineProperty(Sc.prototype,"ArrayType",{value:Int8Array});Object.defineProperty(Tc.prototype,"ArrayType",{value:Int16Array});Object.defineProperty(Uc.prototype,"ArrayType",{value:Int32Array});Object.defineProperty(Vc.prototype,"ArrayType",{value:BigInt64Array});
Object.defineProperty(Wc.prototype,"ArrayType",{value:Uint8Array});Object.defineProperty(Xc.prototype,"ArrayType",{value:Uint16Array});Object.defineProperty(Yc.prototype,"ArrayType",{value:Uint32Array});Object.defineProperty(Zc.prototype,"ArrayType",{value:BigUint64Array});
class $c extends L{constructor(a){super(I.Float);this.precision=a}get ArrayType(){switch(this.precision){case y.HALF:return Uint16Array;case y.SINGLE:return Float32Array;case y.DOUBLE:return Float64Array}throw Error(`Unrecognized ${this[Symbol.toStringTag]} type`);}toString(){return`Float${this.precision<<5||16}`}}var ad=Symbol.toStringTag,bd,cd=$c.prototype;cd.precision=null;bd=cd[Symbol.toStringTag]="Float";$c[ad]=bd;class dd extends $c{constructor(){super(y.HALF)}}
class ed extends $c{constructor(){super(y.SINGLE)}}class fd extends $c{constructor(){super(y.DOUBLE)}}Object.defineProperty(dd.prototype,"ArrayType",{value:Uint16Array});Object.defineProperty(ed.prototype,"ArrayType",{value:Float32Array});Object.defineProperty(fd.prototype,"ArrayType",{value:Float64Array});class gd extends L{constructor(){super(I.Binary)}toString(){return"Binary"}}var hd=Symbol.toStringTag,id,jd=gd.prototype;jd.ArrayType=Uint8Array;id=jd[Symbol.toStringTag]="Binary";gd[hd]=id;
class kd extends L{constructor(){super(I.LargeBinary)}toString(){return"LargeBinary"}}var ld=Symbol.toStringTag,md,nd=kd.prototype;nd.ArrayType=Uint8Array;nd.OffsetArrayType=BigInt64Array;md=nd[Symbol.toStringTag]="LargeBinary";kd[ld]=md;class od extends L{constructor(){super(I.Utf8)}toString(){return"Utf8"}}var pd=Symbol.toStringTag,qd,rd=od.prototype;rd.ArrayType=Uint8Array;qd=rd[Symbol.toStringTag]="Utf8";od[pd]=qd;
class sd extends L{constructor(){super(I.LargeUtf8)}toString(){return"LargeUtf8"}}var td=Symbol.toStringTag,ud,vd=sd.prototype;vd.ArrayType=Uint8Array;vd.OffsetArrayType=BigInt64Array;ud=vd[Symbol.toStringTag]="LargeUtf8";sd[td]=ud;class wd extends L{constructor(){super(I.Bool)}toString(){return"Bool"}}var xd=Symbol.toStringTag,yd,zd=wd.prototype;zd.ArrayType=Uint8Array;yd=zd[Symbol.toStringTag]="Bool";wd[xd]=yd;
class Ad extends L{constructor(a,b,c=128){super(I.Decimal);this.scale=a;this.precision=b;this.bitWidth=c}toString(){return`Decimal[${this.precision}e${this.scale>0?"+":""}${this.scale}]`}}var Bd=Symbol.toStringTag,Cd,Dd=Ad.prototype;Dd.scale=null;Dd.precision=null;Dd.ArrayType=Uint32Array;Cd=Dd[Symbol.toStringTag]="Decimal";Ad[Bd]=Cd;
class Ed extends L{constructor(a){super(I.Date);this.unit=a}toString(){return`Date${(this.unit+1)*32}<${Ya[this.unit]}>`}get ArrayType(){return this.unit===Ya.DAY?Int32Array:BigInt64Array}}var Fd=Symbol.toStringTag,Gd,Hd=Ed.prototype;Hd.unit=null;Gd=Hd[Symbol.toStringTag]="Date";Ed[Fd]=Gd;class Id extends Ed{constructor(){super(Ya.DAY)}}class Jd extends Ed{constructor(){super(Ya.MILLISECOND)}}
class Kd extends L{constructor(a,b){super(I.Time);this.unit=a;this.bitWidth=b}toString(){return`Time${this.bitWidth}<${z[this.unit]}>`}get ArrayType(){switch(this.bitWidth){case 32:return Int32Array;case 64:return BigInt64Array}throw Error(`Unrecognized ${this[Symbol.toStringTag]} type`);}}var Ld=Symbol.toStringTag,Md,Nd=Kd.prototype;Nd.unit=null;Nd.bitWidth=null;Md=Nd[Symbol.toStringTag]="Time";Kd[Ld]=Md;class Od extends Kd{constructor(){super(z.SECOND,32)}}
class Pd extends Kd{constructor(){super(z.MILLISECOND,32)}}class Qd extends Kd{constructor(){super(z.MICROSECOND,64)}}class Rd extends Kd{constructor(){super(z.NANOSECOND,64)}}class Sd extends L{constructor(a,b){super(I.Timestamp);this.unit=a;this.timezone=b}toString(){return`Timestamp<${z[this.unit]}${this.timezone?`, ${this.timezone}`:""}>`}}var Td=Symbol.toStringTag,Ud,Vd=Sd.prototype;Vd.unit=null;Vd.timezone=null;Vd.ArrayType=BigInt64Array;Ud=Vd[Symbol.toStringTag]="Timestamp";Sd[Td]=Ud;
class Wd extends Sd{constructor(a){super(z.SECOND,a)}}class Xd extends Sd{constructor(a){super(z.MILLISECOND,a)}}class Yd extends Sd{constructor(a){super(z.MICROSECOND,a)}}class Zd extends Sd{constructor(a){super(z.NANOSECOND,a)}}class $d extends L{constructor(a){super(I.Interval);this.unit=a}toString(){return`Interval<${A[this.unit]}>`}}var ae=Symbol.toStringTag,be,ce=$d.prototype;ce.unit=null;ce.ArrayType=Int32Array;be=ce[Symbol.toStringTag]="Interval";$d[ae]=be;
class de extends $d{constructor(){super(A.DAY_TIME)}}class ee extends $d{constructor(){super(A.YEAR_MONTH)}}class fe extends $d{constructor(){super(A.MONTH_DAY_NANO)}}class ge extends L{constructor(a){super(I.Duration);this.unit=a}toString(){return`Duration<${z[this.unit]}>`}}var he=Symbol.toStringTag,ie,je=ge.prototype;je.unit=null;je.ArrayType=BigInt64Array;ie=je[Symbol.toStringTag]="Duration";ge[he]=ie;class ke extends ge{constructor(){super(z.SECOND)}}
class le extends ge{constructor(){super(z.MILLISECOND)}}class me extends ge{constructor(){super(z.MICROSECOND)}}class ne extends ge{constructor(){super(z.NANOSECOND)}}class oe extends L{constructor(a){super(I.List);this.children=[a]}toString(){return`List<${this.valueType}>`}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}}var pe=Symbol.toStringTag,qe,re=oe.prototype;re.children=null;qe=re[Symbol.toStringTag]="List";
oe[pe]=qe;class se extends L{constructor(a){super(I.Struct);this.children=a}toString(){return`Struct<{${this.children.map(a=>`${a.name}:${a.type}`).join(", ")}}>`}}var te=Symbol.toStringTag,ue,ve=se.prototype;ve.children=null;ue=ve[Symbol.toStringTag]="Struct";se[te]=ue;
class we extends L{constructor(a,b,c){super(I.Union);this.mode=a;this.children=c;this.typeIds=b=Int32Array.from(b);this.typeIdToChildIndex=b.reduce((d,e,f)=>(d[e]=f)&&d||d,Object.create(null))}toString(){return`${this[Symbol.toStringTag]}<${this.children.map(a=>`${a.type}`).join(" | ")}>`}}var xe=Symbol.toStringTag,ye,ze=we.prototype;ze.mode=null;ze.typeIds=null;ze.children=null;ze.typeIdToChildIndex=null;ze.ArrayType=Int8Array;ye=ze[Symbol.toStringTag]="Union";we[xe]=ye;
class Ae extends we{constructor(a,b){super(x.Dense,a,b)}}class Be extends we{constructor(a,b){super(x.Sparse,a,b)}}class Ce extends L{constructor(a){super(I.FixedSizeBinary);this.byteWidth=a}toString(){return`FixedSizeBinary[${this.byteWidth}]`}}var De=Symbol.toStringTag,Ee,Fe=Ce.prototype;Fe.byteWidth=null;Fe.ArrayType=Uint8Array;Ee=Fe[Symbol.toStringTag]="FixedSizeBinary";Ce[De]=Ee;
class Ge extends L{constructor(a,b){super(I.FixedSizeList);this.listSize=a;this.children=[b]}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get ArrayType(){return this.valueType.ArrayType}toString(){return`FixedSizeList[${this.listSize}]<${this.valueType}>`}}var He=Symbol.toStringTag,Ie,Je=Ge.prototype;Je.children=null;Je.listSize=null;Ie=Je[Symbol.toStringTag]="FixedSizeList";Ge[He]=Ie;
class Ke extends L{constructor(a,b=!1){super(I.Map);this.children=[a];this.keysSorted=b;if(a){a.name="entries";let c;if(a==null?0:(c=a.type)==null?0:c.children){let d;(b=a==null?void 0:(d=a.type)==null?void 0:d.children[0])&&(b.name="key");let e;(a=a==null?void 0:(e=a.type)==null?void 0:e.children[1])&&(a.name="value")}}}get keyType(){return this.children[0].type.children[0].type}get valueType(){return this.children[0].type.children[1].type}get childType(){return this.children[0].type}toString(){return`Map<{${this.children[0].type.children.map(a=>
`${a.name}:${a.type}`).join(", ")}}>`}}var Le=Symbol.toStringTag,Me,Ne=Ke.prototype;Ne.children=null;Ne.keysSorted=null;Me=Ne[Symbol.toStringTag]="Map_";Ke[Le]=Me;const Oe=(a=>()=>++a)(-1);
class Pe extends L{constructor(a,b,c,d){super(I.Dictionary);this.indices=b;this.dictionary=a;this.isOrdered=d||!1;this.id=c==null?Oe():K(c)}get children(){return this.dictionary.children}get valueType(){return this.dictionary}get ArrayType(){return this.dictionary.ArrayType}toString(){return`Dictionary<${this.indices}, ${this.dictionary}>`}}var Qe=Symbol.toStringTag,Re,Se=Pe.prototype;Se.id=null;Se.indices=null;Se.isOrdered=null;Se.dictionary=null;Re=Se[Symbol.toStringTag]="Dictionary";Pe[Qe]=Re;
function Te(a){switch(a.typeId){case I.Decimal:return a.bitWidth/32;case I.Interval:return a.unit===A.MONTH_DAY_NANO?4:1+a.unit;case I.FixedSizeList:return a.listSize;case I.FixedSizeBinary:return a.byteWidth;default:return 1}};class Ue{visitMany(a,...b){return a.map((c,d)=>this.visit(c,...b.map(e=>e[d])))}visit(...a){return this.getVisitFn(a[0],!1).apply(this,a)}getVisitFn(a,b=!0){return Ve(this,a,b)}getVisitFnByTypeId(a,b=!0){return We(this,a,b)}visitNull(){return null}visitBool(){return null}visitInt(){return null}visitFloat(){return null}visitUtf8(){return null}visitLargeUtf8(){return null}visitBinary(){return null}visitLargeBinary(){return null}visitFixedSizeBinary(){return null}visitDate(){return null}visitTimestamp(){return null}visitTime(){return null}visitDecimal(){return null}visitList(){return null}visitStruct(){return null}visitUnion(){return null}visitDictionary(){return null}visitInterval(){return null}visitDuration(){return null}visitFixedSizeList(){return null}visitMap(){return null}}
function Ve(a,b,c=!0){return typeof b==="number"?We(a,b,c):typeof b==="string"&&b in I?We(a,I[b],c):b&&b instanceof L?We(a,Xe(b),c):(b==null?0:b.type)&&b.type instanceof L?We(a,Xe(b.type),c):We(a,I.NONE,c)}
function We(a,b,c=!0){let d=null;switch(b){case I.Null:d=a.visitNull;break;case I.Bool:d=a.visitBool;break;case I.Int:d=a.visitInt;break;case I.Int8:d=a.visitInt8||a.visitInt;break;case I.Int16:d=a.visitInt16||a.visitInt;break;case I.Int32:d=a.visitInt32||a.visitInt;break;case I.Int64:d=a.visitInt64||a.visitInt;break;case I.Uint8:d=a.visitUint8||a.visitInt;break;case I.Uint16:d=a.visitUint16||a.visitInt;break;case I.Uint32:d=a.visitUint32||a.visitInt;break;case I.Uint64:d=a.visitUint64||a.visitInt;
break;case I.Float:d=a.visitFloat;break;case I.Float16:d=a.visitFloat16||a.visitFloat;break;case I.Float32:d=a.visitFloat32||a.visitFloat;break;case I.Float64:d=a.visitFloat64||a.visitFloat;break;case I.Utf8:d=a.visitUtf8;break;case I.LargeUtf8:d=a.visitLargeUtf8;break;case I.Binary:d=a.visitBinary;break;case I.LargeBinary:d=a.visitLargeBinary;break;case I.FixedSizeBinary:d=a.visitFixedSizeBinary;break;case I.Date:d=a.visitDate;break;case I.DateDay:d=a.visitDateDay||a.visitDate;break;case I.DateMillisecond:d=
a.visitDateMillisecond||a.visitDate;break;case I.Timestamp:d=a.visitTimestamp;break;case I.TimestampSecond:d=a.visitTimestampSecond||a.visitTimestamp;break;case I.TimestampMillisecond:d=a.visitTimestampMillisecond||a.visitTimestamp;break;case I.TimestampMicrosecond:d=a.visitTimestampMicrosecond||a.visitTimestamp;break;case I.TimestampNanosecond:d=a.visitTimestampNanosecond||a.visitTimestamp;break;case I.Time:d=a.visitTime;break;case I.TimeSecond:d=a.visitTimeSecond||a.visitTime;break;case I.TimeMillisecond:d=
a.visitTimeMillisecond||a.visitTime;break;case I.TimeMicrosecond:d=a.visitTimeMicrosecond||a.visitTime;break;case I.TimeNanosecond:d=a.visitTimeNanosecond||a.visitTime;break;case I.Decimal:d=a.visitDecimal;break;case I.List:d=a.visitList;break;case I.Struct:d=a.visitStruct;break;case I.Union:d=a.visitUnion;break;case I.DenseUnion:d=a.visitDenseUnion||a.visitUnion;break;case I.SparseUnion:d=a.visitSparseUnion||a.visitUnion;break;case I.Dictionary:d=a.visitDictionary;break;case I.Interval:d=a.visitInterval;
break;case I.IntervalDayTime:d=a.visitIntervalDayTime||a.visitInterval;break;case I.IntervalYearMonth:d=a.visitIntervalYearMonth||a.visitInterval;break;case I.IntervalMonthDayNano:d=a.visitIntervalMonthDayNano||a.visitInterval;break;case I.Duration:d=a.visitDuration;break;case I.DurationSecond:d=a.visitDurationSecond||a.visitDuration;break;case I.DurationMillisecond:d=a.visitDurationMillisecond||a.visitDuration;break;case I.DurationMicrosecond:d=a.visitDurationMicrosecond||a.visitDuration;break;case I.DurationNanosecond:d=
a.visitDurationNanosecond||a.visitDuration;break;case I.FixedSizeList:d=a.visitFixedSizeList;break;case I.Map:d=a.visitMap}if(typeof d==="function")return d;if(!c)return()=>null;throw Error(`Unrecognized type '${I[b]}'`);}
function Xe(a){switch(a.typeId){case I.Null:return I.Null;case I.Int:const b=a.isSigned;switch(a.bitWidth){case 8:return b?I.Int8:I.Uint8;case 16:return b?I.Int16:I.Uint16;case 32:return b?I.Int32:I.Uint32;case 64:return b?I.Int64:I.Uint64}return I.Int;case I.Float:switch(a.precision){case y.HALF:return I.Float16;case y.SINGLE:return I.Float32;case y.DOUBLE:return I.Float64}return I.Float;case I.Binary:return I.Binary;case I.LargeBinary:return I.LargeBinary;case I.Utf8:return I.Utf8;case I.LargeUtf8:return I.LargeUtf8;
case I.Bool:return I.Bool;case I.Decimal:return I.Decimal;case I.Time:switch(a.unit){case z.SECOND:return I.TimeSecond;case z.MILLISECOND:return I.TimeMillisecond;case z.MICROSECOND:return I.TimeMicrosecond;case z.NANOSECOND:return I.TimeNanosecond}return I.Time;case I.Timestamp:switch(a.unit){case z.SECOND:return I.TimestampSecond;case z.MILLISECOND:return I.TimestampMillisecond;case z.MICROSECOND:return I.TimestampMicrosecond;case z.NANOSECOND:return I.TimestampNanosecond}return I.Timestamp;case I.Date:switch(a.unit){case Ya.DAY:return I.DateDay;
case Ya.MILLISECOND:return I.DateMillisecond}return I.Date;case I.Interval:switch(a.unit){case A.DAY_TIME:return I.IntervalDayTime;case A.YEAR_MONTH:return I.IntervalYearMonth;case A.MONTH_DAY_NANO:return I.IntervalMonthDayNano}return I.Interval;case I.Duration:switch(a.unit){case z.SECOND:return I.DurationSecond;case z.MILLISECOND:return I.DurationMillisecond;case z.MICROSECOND:return I.DurationMicrosecond;case z.NANOSECOND:return I.DurationNanosecond}return I.Duration;case I.Map:return I.Map;case I.List:return I.List;
case I.Struct:return I.Struct;case I.Union:switch(a.mode){case x.Dense:return I.DenseUnion;case x.Sparse:return I.SparseUnion}return I.Union;case I.FixedSizeBinary:return I.FixedSizeBinary;case I.FixedSizeList:return I.FixedSizeList;case I.Dictionary:return I.Dictionary}throw Error(`Unrecognized type '${I[a.typeId]}'`);}h=Ue.prototype;h.visitInt8=null;h.visitInt16=null;h.visitInt32=null;h.visitInt64=null;h.visitUint8=null;h.visitUint16=null;h.visitUint32=null;h.visitUint64=null;h.visitFloat16=null;
h.visitFloat32=null;h.visitFloat64=null;h.visitDateDay=null;h.visitDateMillisecond=null;h.visitTimestampSecond=null;h.visitTimestampMillisecond=null;h.visitTimestampMicrosecond=null;h.visitTimestampNanosecond=null;h.visitTimeSecond=null;h.visitTimeMillisecond=null;h.visitTimeMicrosecond=null;h.visitTimeNanosecond=null;h.visitDenseUnion=null;h.visitSparseUnion=null;h.visitIntervalDayTime=null;h.visitIntervalYearMonth=null;h.visitIntervalMonthDayNano=null;h.visitDuration=null;
h.visitDurationSecond=null;h.visitDurationMillisecond=null;h.visitDurationMicrosecond=null;h.visitDurationNanosecond=null;const Ye=new Float64Array(1),Ze=new Uint32Array(Ye.buffer);function $e(a){const b=(a&31744)>>10,c=(a&1023)/1024;a=Math.pow(-1,(a&32768)>>15);switch(b){case 31:return a*(c?Number.NaN:1/0);case 0:return a*(c?6.103515625E-5*c:0)}return a*Math.pow(2,b-15)*(1+c)}
function af(a){if(a!==a)return 32256;Ye[0]=a;a=(Ze[1]&2147483648)>>16&65535;let b=Ze[1]&2146435072,c=0;b>=1089470464?Ze[0]>0?b=31744:(b=(b&2080374784)>>16,c=(Ze[1]&1048575)>>10):b<=1056964608?(c=1048576+(Ze[1]&1048575),c=1048576+(c<<(b>>20)-998)>>21,b=0):(b=b-1056964608>>10,c=(Ze[1]&1048575)+512>>10);return a|b|c&65535}var bf={};bf.float64ToUint16=af;bf.uint16ToFloat64=$e;class cf extends Ue{}function M(a){return(b,c,d)=>{if(b.setValid(c,d!=null))return a(b,c,d)}}
const df=(a,b,c,d)=>{if(c+1<b.length){const e=K(b[c]);b=K(b[c+1]);a.set(d.subarray(0,b-e),e)}},ef=({values:a},b,c)=>{a[b]=c},ff=({values:a},b,c)=>{a[b]=c},gf=({values:a},b,c)=>{a[b]=af(c)},hf=({values:a},b,c)=>{a[b]=Math.floor(c.valueOf()/864E5)},jf=({values:a},b,c)=>{a[b]=BigInt(c)},kf=({stride:a,values:b},c,d)=>{b.set(d.subarray(0,a),a*c)},lf=({values:a,valueOffsets:b},c,d)=>df(a,b,c,d),mf=({values:a,valueOffsets:b},c,d)=>df(a,b,c,xa.encode(d)),nf=(a,b,c)=>{a.type.unit===Ya.DAY?hf(a,b,c):jf(a,b,
c)},of=({values:a},b,c)=>{a[b]=BigInt(c/1E3)},pf=({values:a},b,c)=>{a[b]=BigInt(c)},qf=({values:a},b,c)=>{a[b]=BigInt(c*1E3)},rf=({values:a},b,c)=>{a[b]=BigInt(c*1E6)},sf=(a,b,c)=>{switch(a.type.unit){case z.SECOND:return of(a,b,c);case z.MILLISECOND:return pf(a,b,c);case z.MICROSECOND:return qf(a,b,c);case z.NANOSECOND:return rf(a,b,c)}},tf=({values:a},b,c)=>{a[b]=c},uf=({values:a},b,c)=>{a[b]=c},vf=({values:a},b,c)=>{a[b]=c},wf=({values:a},b,c)=>{a[b]=c},xf=(a,b,c)=>{switch(a.type.unit){case z.SECOND:return tf(a,
b,c);case z.MILLISECOND:return uf(a,b,c);case z.MICROSECOND:return vf(a,b,c);case z.NANOSECOND:return wf(a,b,c)}},yf=({values:a,stride:b},c,d)=>{a.set(d.subarray(0,b),b*c)},zf=(a,b)=>(c,d,e,f)=>d&&c(d,a,b[f]),Af=(a,b)=>(c,d,e,f)=>d&&c(d,a,b.get(f)),Bf=(a,b)=>(c,d,e)=>d&&c(d,a,b.get(e.name)),Cf=(a,b)=>(c,d,e)=>d&&c(d,a,b[e.name]),Ef=(a,b,c)=>{Df.visit(a.children[a.type.typeIdToChildIndex[a.typeIds[b]]],a.valueOffsets[b],c)},Ff=(a,b,c)=>{Df.visit(a.children[a.type.typeIdToChildIndex[a.typeIds[b]]],
b,c)},Jf=(a,b,c)=>{switch(a.type.unit){case A.YEAR_MONTH:return Gf(a,b,c);case A.DAY_TIME:return Hf(a,b,c);case A.MONTH_DAY_NANO:return If(a,b,c)}},Hf=({values:a},b,c)=>{a.set(c.subarray(0,2),2*b)},Gf=({values:a},b,c)=>{a[b]=c[0]*12+c[1]%12},If=({values:a,stride:b},c,d)=>{a.set(d.subarray(0,b),b*c)},Kf=({values:a},b,c)=>{a[b]=c},Lf=({values:a},b,c)=>{a[b]=c},Mf=({values:a},b,c)=>{a[b]=c},Nf=({values:a},b,c)=>{a[b]=c},Of=(a,b,c)=>{switch(a.type.unit){case z.SECOND:return Kf(a,b,c);case z.MILLISECOND:return Lf(a,
b,c);case z.MICROSECOND:return Mf(a,b,c);case z.NANOSECOND:return Nf(a,b,c)}};h=cf.prototype;h.visitBool=M(({offset:a,values:b},c,d)=>{a+=c;d?b[a>>3]|=1<<a%8:b[a>>3]&=~(1<<a%8)});h.visitInt=M(ef);h.visitInt8=M(ef);h.visitInt16=M(ef);h.visitInt32=M(ef);h.visitInt64=M(ef);h.visitUint8=M(ef);h.visitUint16=M(ef);h.visitUint32=M(ef);h.visitUint64=M(ef);h.visitFloat=M((a,b,c)=>{switch(a.type.precision){case y.HALF:return gf(a,b,c);case y.SINGLE:case y.DOUBLE:return ff(a,b,c)}});h.visitFloat16=M(gf);
h.visitFloat32=M(ff);h.visitFloat64=M(ff);h.visitUtf8=M(mf);h.visitLargeUtf8=M(mf);h.visitBinary=M(lf);h.visitLargeBinary=M(lf);h.visitFixedSizeBinary=M(kf);h.visitDate=M(nf);h.visitDateDay=M(hf);h.visitDateMillisecond=M(jf);h.visitTimestamp=M(sf);h.visitTimestampSecond=M(of);h.visitTimestampMillisecond=M(pf);h.visitTimestampMicrosecond=M(qf);h.visitTimestampNanosecond=M(rf);h.visitTime=M(xf);h.visitTimeSecond=M(tf);h.visitTimeMillisecond=M(uf);h.visitTimeMicrosecond=M(vf);h.visitTimeNanosecond=M(wf);
h.visitDecimal=M(yf);h.visitList=M((a,b,c)=>{const d=a.children[0];a=a.valueOffsets;const e=Df.getVisitFn(d);if(Array.isArray(c))for(let f=-1,g=a[b],k=a[b+1];g<k;)e(d,g++,c[++f]);else for(let f=-1,g=a[b],k=a[b+1];g<k;)e(d,g++,c.get(++f))});h.visitStruct=M((a,b,c)=>{const d=a.type.children.map(f=>Df.getVisitFn(f.type)),e=c instanceof Map?Bf(b,c):c instanceof N?Af(b,c):Array.isArray(c)?zf(b,c):Cf(b,c);a.type.children.forEach((f,g)=>e(d[g],a.children[g],f,g))});
h.visitUnion=M((a,b,c)=>{a.type.mode===x.Dense?Ef(a,b,c):Ff(a,b,c)});h.visitDenseUnion=M(Ef);h.visitSparseUnion=M(Ff);h.visitDictionary=M((a,b,c)=>{let d;(d=a.dictionary)==null||d.set(a.values[b],c)});h.visitInterval=M(Jf);h.visitIntervalDayTime=M(Hf);h.visitIntervalYearMonth=M(Gf);h.visitIntervalMonthDayNano=M(If);h.visitDuration=M(Of);h.visitDurationSecond=M(Kf);h.visitDurationMillisecond=M(Lf);h.visitDurationMicrosecond=M(Mf);h.visitDurationNanosecond=M(Nf);
h.visitFixedSizeList=M((a,b,c)=>{const d=a.stride;a=a.children[0];const e=Df.getVisitFn(a);if(Array.isArray(c))for(let f=-1,g=b*d;++f<d;)e(a,g+f,c[f]);else for(let f=-1,g=b*d;++f<d;)e(a,g+f,c.get(f))});h.visitMap=M((a,b,c)=>{const d=a.children[0],e=a.valueOffsets;a=Df.getVisitFn(d);let {[b]:f,[b+1]:g}=e;b=c instanceof Map?c.entries():Object.entries(c);for(const k of b)if(a(d,f,k),++f>=g)break});const Df=new cf;const Pf=Symbol.for("parent"),Qf=Symbol.for("rowIndex");
class Rf{constructor(a,b){this[Pf]=a;this[Qf]=b;return new Proxy(this,Sf)}toArray(){return Object.values(this.toJSON())}toJSON(){const a=this[Qf],b=this[Pf],c=b.type.children,d={};for(let e=-1,f=c.length;++e<f;)d[c[e].name]=Tf.visit(b.children[e],a);return d}toString(){return`{${[...this].map(([a,b])=>`${uc(a)}: ${uc(b)}`).join(", ")}}`}[Symbol.for("nodejs.util.inspect.custom")](){return this.toString()}[Symbol.iterator](){return new Uf(this[Pf],this[Qf])}}
class Uf{constructor(a,b){this.Ab=0;this.children=a.children;this.rowIndex=b;this.zb=a.type.children;this.numChildren=this.zb.length}[Symbol.iterator](){return this}next(){const a=this.Ab;return a<this.numChildren?(this.Ab=a+1,{done:!1,value:[this.zb[a].name,Tf.visit(this.children[a],this.rowIndex)]}):{done:!0,value:null}}}
Object.defineProperties(Rf.prototype,{[Symbol.toStringTag]:{enumerable:!1,configurable:!1,value:"Row"},[Pf]:{writable:!0,enumerable:!1,configurable:!1,value:null},[Qf]:{writable:!0,enumerable:!1,configurable:!1,value:-1}});
class Vf{isExtensible(){return!1}deleteProperty(){return!1}preventExtensions(){return!0}ownKeys(a){return a[Pf].type.children.map(b=>b.name)}has(a,b){return a[Pf].type.children.some(c=>c.name===b)}getOwnPropertyDescriptor(a,b){if(a[Pf].type.children.some(c=>c.name===b))return{writable:!0,enumerable:!0,configurable:!0}}get(a,b){if(Reflect.has(a,b))return a[b];var c=a[Pf].type.children.findIndex(d=>d.name===b);if(c!==-1)return c=Tf.visit(a[Pf].children[c],a[Qf]),Reflect.set(a,b,c),c}set(a,b,c){const d=
a[Pf].type.children.findIndex(e=>e.name===b);return d!==-1?(Df.visit(a[Pf].children[d],a[Qf],c),Reflect.set(a,b,c)):Reflect.has(a,b)||typeof b==="symbol"?Reflect.set(a,b,c):!1}}const Sf=new Vf;class Wf extends Ue{}function O(a){return(b,c)=>b.getValid(c)?a(b,c):null}
const Xf=(a,b,c)=>{if(c+1>=b.length)return null;const d=K(b[c]);b=K(b[c+1]);return a.subarray(d,b)},Yf=({values:a},b)=>864E5*a[b],Zf=({values:a},b)=>K(a[b]),$f=({stride:a,values:b},c)=>b[a*c],ag=({values:a},b)=>a[b],bg=({values:a,valueOffsets:b},c)=>Xf(a,b,c),cg=({values:a,valueOffsets:b},c)=>{a=Xf(a,b,c);return a!==null?va.decode(a):null},dg=({values:a},b)=>1E3*K(a[b]),eg=({values:a},b)=>K(a[b]),fg=({values:a},b)=>wc(a[b],BigInt(1E3)),gg=({values:a},b)=>wc(a[b],BigInt(1E6)),hg=({values:a},b)=>a[b],
ig=({values:a},b)=>a[b],jg=({values:a},b)=>a[b],kg=({values:a},b)=>a[b],lg=(a,b)=>Tf.visit(a.children[a.type.typeIdToChildIndex[a.typeIds[b]]],a.valueOffsets[b]),mg=(a,b)=>Tf.visit(a.children[a.type.typeIdToChildIndex[a.typeIds[b]]],b),ng=({values:a},b)=>a.subarray(2*b,2*(b+1)),og=({values:a},b)=>{a=a[b];b=new Int32Array(2);b[0]=Math.trunc(a/12);b[1]=Math.trunc(a%12);return b},pg=({values:a},b)=>a.subarray(4*b,4*(b+1)),qg=({values:a},b)=>a[b],rg=({values:a},b)=>a[b],sg=({values:a},b)=>a[b],tg=({values:a},
b)=>a[b];h=Wf.prototype;h.visitNull=O(()=>null);h.visitBool=O(({offset:a,values:b},c)=>{a+=c;return(b[a>>3]&1<<a%8)!==0});h.visitInt=O(({values:a},b)=>a[b]);h.visitInt8=O($f);h.visitInt16=O($f);h.visitInt32=O($f);h.visitInt64=O(ag);h.visitUint8=O($f);h.visitUint16=O($f);h.visitUint32=O($f);h.visitUint64=O(ag);h.visitFloat=O(({type:a,values:b},c)=>a.precision!==y.HALF?b[c]:$e(b[c]));h.visitFloat16=O(({stride:a,values:b},c)=>$e(b[a*c]));h.visitFloat32=O($f);h.visitFloat64=O($f);h.visitUtf8=O(cg);
h.visitLargeUtf8=O(cg);h.visitBinary=O(bg);h.visitLargeBinary=O(bg);h.visitFixedSizeBinary=O(({stride:a,values:b},c)=>b.subarray(a*c,a*(c+1)));h.visitDate=O((a,b)=>a.type.unit===Ya.DAY?Yf(a,b):Zf(a,b));h.visitDateDay=O(Yf);h.visitDateMillisecond=O(Zf);h.visitTimestamp=O((a,b)=>{switch(a.type.unit){case z.SECOND:return dg(a,b);case z.MILLISECOND:return eg(a,b);case z.MICROSECOND:return fg(a,b);case z.NANOSECOND:return gg(a,b)}});h.visitTimestampSecond=O(dg);h.visitTimestampMillisecond=O(eg);
h.visitTimestampMicrosecond=O(fg);h.visitTimestampNanosecond=O(gg);h.visitTime=O((a,b)=>{switch(a.type.unit){case z.SECOND:return hg(a,b);case z.MILLISECOND:return ig(a,b);case z.MICROSECOND:return jg(a,b);case z.NANOSECOND:return kg(a,b)}});h.visitTimeSecond=O(hg);h.visitTimeMillisecond=O(ig);h.visitTimeMicrosecond=O(jg);h.visitTimeNanosecond=O(kg);h.visitDecimal=O(({values:a,stride:b},c)=>new Ec(a.subarray(b*c,b*(c+1))));
h.visitList=O((a,b)=>{const c=a.stride,d=a.children,{[b*c]:e,[b*c+1]:f}=a.valueOffsets;a=d[0].slice(e,f-e);return new N([a])});h.visitStruct=O((a,b)=>new Rf(a,b));h.visitUnion=O((a,b)=>a.type.mode===x.Dense?lg(a,b):mg(a,b));h.visitDenseUnion=O(lg);h.visitSparseUnion=O(mg);h.visitDictionary=O((a,b)=>{let c;return(c=a.dictionary)==null?void 0:c.get(a.values[b])});h.visitInterval=O((a,b)=>a.type.unit===A.MONTH_DAY_NANO?pg(a,b):a.type.unit===A.DAY_TIME?ng(a,b):og(a,b));h.visitIntervalDayTime=O(ng);
h.visitIntervalYearMonth=O(og);h.visitIntervalMonthDayNano=O(pg);h.visitDuration=O((a,b)=>{switch(a.type.unit){case z.SECOND:return qg(a,b);case z.MILLISECOND:return rg(a,b);case z.MICROSECOND:return sg(a,b);case z.NANOSECOND:return tg(a,b)}});h.visitDurationSecond=O(qg);h.visitDurationMillisecond=O(rg);h.visitDurationMicrosecond=O(sg);h.visitDurationNanosecond=O(tg);h.visitFixedSizeList=O((a,b)=>{const c=a.stride;a=a.children[0].slice(b*c,c);return new N([a])});
h.visitMap=O((a,b)=>{const c=a.children,{[b]:d,[b+1]:e}=a.valueOffsets;return new ug(c[0].slice(d,e-d))});const Tf=new Wf;const vg=Symbol.for("keys"),wg=Symbol.for("vals"),xg=Symbol.for("kKeysAsStrings"),yg=Symbol.for("_kKeysAsStrings");
class ug{constructor(a){this[vg]=(new N([a.children[0]])).memoize();this[wg]=a.children[1];return new Proxy(this,new zg)}get [xg](){return this[yg]||(this[yg]=Array.from(this[vg].toArray(),String))}[Symbol.iterator](){return new Ag(this[vg],this[wg])}get size(){return this[vg].length}toArray(){return Object.values(this.toJSON())}toJSON(){const a=this[vg],b=this[wg],c={};for(let d=-1,e=a.length;++d<e;)c[a.get(d)]=Tf.visit(b,d);return c}toString(){return`{${[...this].map(([a,b])=>`${uc(a)}: ${uc(b)}`).join(", ")}}`}[Symbol.for("nodejs.util.inspect.custom")](){return this.toString()}}
class Ag{constructor(a,b){this.keys=a;this.cc=b;this.Eb=0;this.$b=a.length}[Symbol.iterator](){return this}next(){const a=this.Eb;if(a===this.$b)return{done:!0,value:null};this.Eb++;return{done:!1,value:[this.keys.get(a),Tf.visit(this.cc,a)]}}}
class zg{isExtensible(){return!1}deleteProperty(){return!1}preventExtensions(){return!0}ownKeys(a){return a[xg]}has(a,b){return a[xg].includes(b)}getOwnPropertyDescriptor(a,b){if(a[xg].indexOf(b)!==-1)return{writable:!0,enumerable:!0,configurable:!0}}get(a,b){if(Reflect.has(a,b))return a[b];var c=a[xg].indexOf(b);if(c!==-1)return c=Tf.visit(Reflect.get(a,wg),c),Reflect.set(a,b,c),c}set(a,b,c){const d=a[xg].indexOf(b);return d!==-1?(Df.visit(Reflect.get(a,wg),d,c),Reflect.set(a,b,c)):Reflect.has(a,
b)?Reflect.set(a,b,c):!1}}Object.defineProperties(ug.prototype,{[Symbol.toStringTag]:{enumerable:!1,configurable:!1,value:"Row"},[vg]:{writable:!0,enumerable:!1,configurable:!1,value:null},[wg]:{writable:!0,enumerable:!1,configurable:!1,value:null},[yg]:{writable:!0,enumerable:!1,configurable:!1,value:null}});let Bg;function Cg(a,b,c,d){const {length:e=0}=a;b=typeof b!=="number"?0:b;c=typeof c!=="number"?e:c;b<0&&(b=(b%e+e)%e);c<0&&(c=(c%e+e)%e);c<b&&(Bg=b,b=c,c=Bg);c>e&&(c=e);return d?d(a,b,c):[b,c]}const Dg=a=>a!==a;function Eg(a){if(typeof a!=="object"||a===null)return a!==a?Dg:b=>b===a;if(a instanceof Date){const b=a.valueOf();return c=>c instanceof Date?c.valueOf()===b:!1}return ArrayBuffer.isView(a)?b=>b?La(a,b):!1:a instanceof Map?Fg(a):Array.isArray(a)?Gg(a):a instanceof N?Hg(a):Ig(a)}
function Gg(a){const b=[];for(let c=-1,d=a.length;++c<d;)b[c]=Eg(a[c]);return Jg(b)}function Fg(a){let b=-1;const c=[];for(const d of a.values())c[++b]=Eg(d);return Jg(c)}function Hg(a){const b=[];for(let c=-1,d=a.length;++c<d;)b[c]=Eg(a.get(c));return Jg(b)}function Ig(a){const b=Object.keys(a),c=[];for(let d=-1,e=b.length;++d<e;)c[d]=Eg(a[b[d]]);return Jg(c,b)}
function Jg(a,b){return c=>{if(!c||typeof c!=="object")return!1;switch(c.constructor){case Array:a:{var d=a.length;if(c.length!==d)c=!1;else{for(var e=-1;++e<d;)if(!a[e](c[e])){c=!1;break a}c=!0}}return c;case Map:return Kg(a,c,c.keys());case ug:case Rf:case Object:case void 0:return Kg(a,c,b||Object.keys(c))}if(c instanceof N)a:if(d=a.length,c.length!==d)c=!1;else{for(e=-1;++e<d;)if(!a[e](c.get(e))){c=!1;break a}c=!0}else c=!1;return c}}
function Kg(a,b,c){c=c[Symbol.iterator]();const d=b instanceof Map?b.keys():Object.keys(b)[Symbol.iterator]();b=b instanceof Map?b.values():Object.values(b)[Symbol.iterator]();let e=0;const f=a.length;let g=b.next(),k=c.next(),m=d.next();for(;e<f&&!k.done&&!m.done&&!g.done&&k.value===m.value&&a[e](g.value);++e,k=c.next(),m=d.next(),g=b.next());if(e===f&&k.done&&m.done&&g.done)return!0;c.return&&c.return();d.return&&d.return();b.return&&b.return();return!1}var Lg={};Lg.clampRange=Cg;
Lg.createElementComparator=Eg;Lg.wrapIndex=(a,b)=>a<0?b+a:a;function Mg(a,b,c,d){return(c&1<<d)!==0}function Ng(a,b,c,d){return(c&1<<d)>>d}function Og(a,b,c){const d=c.byteLength+7&-8;if(a>0||c.byteLength<d){const e=new Uint8Array(d);e.set(a%8===0?c.subarray(a>>3):Pg(new Qg(c,a,b,null,Mg)).subarray(0,d));return e}return c}function Pg(a){const b=[];let c=0,d=0,e=0;for(const f of a)f&&(e|=1<<d),++d===8&&(b[c++]=e,e=d=0);if(c===0||d>0)b[c++]=e;a=new Uint8Array(b.length+7&-8);a.set(b);return a}
class Qg{constructor(a,b,c,d,e){this.bytes=a;this.length=c;this.context=d;this.get=e;this.Za=b%8;this.yb=b>>3;this.xb=a[this.yb++];this.index=0}next(){return this.index<this.length?(this.Za===8&&(this.Za=0,this.xb=this.bytes[this.yb++]),{value:this.get(this.context,this.index++,this.xb,this.Za++)}):{done:!0,value:null}}[Symbol.iterator](){return this}}
function Rg(a,b,c){if(c-b<=0)return 0;if(c-b<8){var d=0;for(var e of new Qg(a,b,c-b,a,Ng))d+=e;return d}d=c>>3<<3;e=b+(b%8===0?0:8-b%8);return Rg(a,b,e)+Rg(a,d,c)+Sg(a,e>>3,d-e>>3)}function Sg(a,b,c){let d=0;b=Math.trunc(b);const e=new DataView(a.buffer,a.byteOffset,a.byteLength);for(a=c===void 0?a.byteLength:b+c;a-b>=4;)d+=Tg(e.getUint32(b)),b+=4;for(;a-b>=2;)d+=Tg(e.getUint16(b)),b+=2;for(;a-b>=1;)d+=Tg(e.getUint8(b)),b+=1;return d}
function Tg(a){a=Math.trunc(a);a-=a>>>1&1431655765;a=(a&858993459)+(a>>>2&858993459);return(a+(a>>>4)&252645135)*16843009>>>24}var Ug={};Ug.BitIterator=Qg;Ug.getBit=Ng;Ug.getBool=Mg;Ug.packBools=Pg;Ug.popcnt_array=Sg;Ug.popcnt_bit_range=Rg;Ug.popcnt_uint32=Tg;Ug.setBool=function(a,b,c){return c?!!(a[b>>3]|=1<<b%8)||!0:!(a[b>>3]&=~(1<<b%8))&&!1};Ug.truncateBitmap=Og;function Vg(a,b,c){return a.map(d=>d.slice(b,c))}function Wg(a,b){if(a.typeId===I.Null)return a.clone(a.type,0,b,0);const c=a.length,d=a.nullCount,e=(new Uint8Array((b+63&-64)>>3)).fill(255,0,c>>3);e[c>>3]=(1<<c-(c&-8))-1;d>0&&e.set(Og(a.offset,c,a.nullBitmap),0);const f=a.buffers;f[sc.VALIDITY]=e;return a.clone(a.type,0,b,d+(b-c),f)}
class P{get typeId(){return this.type.typeId}get ArrayType(){return this.type.ArrayType}get buffers(){return[this.valueOffsets,this.values,this.nullBitmap,this.typeIds]}get nullable(){if(this.P!==0){const a=this.type;return L.isSparseUnion(a)?this.children.some(b=>b.nullable):L.isDenseUnion(a)?this.children.some(b=>b.nullable):this.nullBitmap&&this.nullBitmap.byteLength>0}return!0}get byteLength(){let a=0;const b=this.valueOffsets,c=this.values,d=this.nullBitmap,e=this.typeIds;b&&(a+=b.byteLength);
c&&(a+=c.byteLength);d&&(a+=d.byteLength);e&&(a+=e.byteLength);return this.children.reduce((f,g)=>f+g.byteLength,a)}get nullCount(){if(L.isUnion(this.type))return this.children.reduce((c,d)=>c+d.nullCount,0);let a=this.P,b;a<=-1&&(b=this.nullBitmap)&&(this.P=a=b.length===0?0:this.length-Rg(b,this.offset,this.offset+this.length));return a}constructor(a,b,c,d,e,f=[],g){this.type=a;this.children=f;this.dictionary=g;this.offset=Math.floor(Math.max(b||0,0));this.length=Math.floor(Math.max(c||0,0));this.P=
Math.floor(Math.max(d||0,-1));let k;e instanceof P?(this.stride=e.stride,this.values=e.values,this.typeIds=e.typeIds,this.nullBitmap=e.nullBitmap,this.valueOffsets=e.valueOffsets):(this.stride=Te(a),e&&((k=e[0])&&(this.valueOffsets=k),(k=e[1])&&(this.values=k),(k=e[2])&&(this.nullBitmap=k),(k=e[3])&&(this.typeIds=k)))}getValid(a){const b=this.type;return L.isUnion(b)?this.children[b.typeIdToChildIndex[this.typeIds[a]]].getValid(b.mode===x.Dense?this.valueOffsets[a]:a):this.nullable&&this.nullCount>
0?(a=this.offset+a,(this.nullBitmap[a>>3]&1<<a%8)!==0):!0}setValid(a,b){var c=this.type;if(L.isUnion(c)){var d=this.children[c.typeIdToChildIndex[this.typeIds[a]]];a=c.mode===x.Dense?this.valueOffsets[a]:a;c=d.getValid(a);d.setValid(a,b)}else{({nullBitmap:d}=this);c=this.offset;var e=this.length,f=c+a;a=1<<f%8;f>>=3;if(!d||d.byteLength<=f)d=(new Uint8Array((c+e+63&-64)>>3)).fill(255),this.nullCount>0?(d.set(Og(c,e,this.nullBitmap),0),Object.assign(this,{nullBitmap:d})):Object.assign(this,{nullBitmap:d,
P:0});e=d[f];c=(e&a)!==0;d[f]=b?e|a:e&~a}c!==!!b&&(this.P=this.nullCount+(b?-1:1));return b}clone(a=this.type,b=this.offset,c=this.length,d=this.P,e=this,f=this.children){return new P(a,b,c,d,e,f,this.dictionary)}slice(a,b){const c=this.stride,d=this.typeId,e=this.children,f=+(this.P===0)-1,g=d===16?c:1;let k;const m=this.buffers;(k=m[sc.TYPE])&&(m[sc.TYPE]=k.subarray(a,a+b));(k=m[sc.OFFSET])&&(m[sc.OFFSET]=k.subarray(a,a+b+1))||(k=m[sc.DATA])&&(m[sc.DATA]=d===6?k:k.subarray(c*a,c*(a+b)));return this.clone(this.type,
this.offset+a,b,f,m,e.length===0||this.valueOffsets?e:Vg(e,g*a,g*b))}}P.prototype.children=Object.freeze([]);
class Xg extends Ue{visit(a){return this.getVisitFn(a.type).call(this,a)}visitNull(a){const {type:b,offset:c=0,length:d=0}=a;return new P(b,c,d,d)}visitBool(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length>>3,nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitInt(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length,nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,
e,d])}visitFloat(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length,nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitUtf8(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.data),e=u(Uint8Array,a.nullBitmap),f=u(Int32Array,a.valueOffsets),{length:g=f.length-1,nullCount:k=a.nullBitmap?-1:0}=a;return new P(b,c,g,k,[f,d,e])}visitLargeUtf8(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.data),e=u(Uint8Array,a.nullBitmap),f=u(BigInt64Array,
a.valueOffsets),{length:g=f.length-1,nullCount:k=a.nullBitmap?-1:0}=a;return new P(b,c,g,k,[f,d,e])}visitBinary(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.data),e=u(Uint8Array,a.nullBitmap),f=u(Int32Array,a.valueOffsets),{length:g=f.length-1,nullCount:k=a.nullBitmap?-1:0}=a;return new P(b,c,g,k,[f,d,e])}visitLargeBinary(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.data),e=u(Uint8Array,a.nullBitmap),f=u(BigInt64Array,a.valueOffsets),{length:g=f.length-1,nullCount:k=a.nullBitmap?-1:0}=a;return new P(b,
c,g,k,[f,d,e])}visitFixedSizeBinary(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length/Te(b),nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitDate(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length/Te(b),nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitTimestamp(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=
e.length/Te(b),nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitTime(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length/Te(b),nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitDecimal(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length/Te(b),nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitList(a){const {type:b,offset:c=0,child:d}=
a,e=u(Uint8Array,a.nullBitmap),f=u(Int32Array,a.valueOffsets),{length:g=f.length-1,nullCount:k=a.nullBitmap?-1:0}=a;return new P(b,c,g,k,[f,void 0,e],[d])}visitStruct(a){const {type:b,offset:c=0,children:d=[]}=a,e=u(Uint8Array,a.nullBitmap),{length:f=d.reduce((k,{length:m})=>Math.max(k,m),0),nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,void 0,e],d)}visitUnion(a){const {type:b,offset:c=0,children:d=[]}=a,e=u(b.ArrayType,a.typeIds),{length:f=e.length,nullCount:g=-1}=a;if(L.isSparseUnion(b))return new P(b,
c,f,g,[void 0,void 0,void 0,e],d);a=u(Int32Array,a.valueOffsets);return new P(b,c,f,g,[a,void 0,void 0,e],d)}visitDictionary(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.indices.ArrayType,a.data),{dictionary:f=new N([(new Xg).visit({type:b.dictionary})])}=a,{length:g=e.length,nullCount:k=a.nullBitmap?-1:0}=a;return new P(b,c,g,k,[void 0,e,d],[],f)}visitInterval(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length/Te(b),nullCount:g=
a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitDuration(a){const {type:b,offset:c=0}=a,d=u(Uint8Array,a.nullBitmap),e=u(b.ArrayType,a.data),{length:f=e.length,nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,e,d])}visitFixedSizeList(a){const {type:b,offset:c=0,child:d=(new Xg).visit({type:b.valueType})}=a,e=u(Uint8Array,a.nullBitmap),{length:f=d.length/Te(b),nullCount:g=a.nullBitmap?-1:0}=a;return new P(b,c,f,g,[void 0,void 0,e],[d])}visitMap(a){const {type:b,offset:c=0,
child:d=(new Xg).visit({type:b.childType})}=a,e=u(Uint8Array,a.nullBitmap),f=u(Int32Array,a.valueOffsets),{length:g=f.length-1,nullCount:k=a.nullBitmap?-1:0}=a;return new P(b,c,g,k,[f,void 0,e],[d])}}const Yg=new Xg;function Q(a){return Yg.visit(a)};class Zg{constructor(a=0,b){this.Fb=a;this.Db=b;this.bb=0;this.Bb=this.Db(0)}next(){for(;this.bb<this.Fb;){const a=this.Bb.next();if(!a.done)return a;++this.bb<this.Fb&&(this.Bb=this.Db(this.bb))}return{done:!0,value:null}}[Symbol.iterator](){return this}}function $g(a){return a.some(b=>b.nullable)}function ah(a){return a.reduce((b,c)=>b+c.nullCount,0)}function bh(a){return a.reduce((b,c,d)=>{b[d+1]=b[d]+c.length;return b},new Uint32Array(a.length+1))}
function ch(a,b,c,d){const e=[];for(let f=-1,g=a.length;++f<g;){const k=a[f],m=b[f],p=k.length;if(m>=d)break;if(c>=m+p)continue;if(m>=c&&m+p<=d){e.push(k);continue}const r=Math.max(0,c-m);e.push(k.slice(r,Math.min(d-m,p)-r))}e.length===0&&e.push(a[0].slice(0,0));return e}function dh(a,b,c,d){let e=0,f,g=b.length-1;do{if(e>=g-1)return c<b[g]?d(a,e,c-b[e]):null;f=e+Math.trunc((g-e)*.5);c<b[f]?g=f:e=f}while(e<g)}function eh(a,b){return a.getValid(b)}
function fh(a){function b(c,d,e){return a(c[d],e)}return function(c){return dh(this.data,this.j,c,b)}}function gh(a){function b(d,e,f){return a(d[e],f,c)}let c;return function(d,e){const f=this.data;c=e;d=dh(f,this.j,d,b);c=void 0;return d}}function hh(a){function b(d,e,f){var g=f;f=0;for(let k=e-1,m=d.length;++k<m;){e=d[k];if(~(g=a(e,c,g)))return f+g;g=0;f+=e.length}return-1}let c;return function(d,e){c=d;d=this.data;e=typeof e!=="number"?b(d,0,0):dh(d,this.j,e,b);c=void 0;return e}};class ih extends Ue{}function R(a,b,c){if(b===void 0)return-1;if(b===null)switch(a.typeId){case I.Union:break;case I.Dictionary:break;default:a:{const e=a.nullBitmap;if(e&&!(a.nullCount<=0)){b=0;for(var d of new Qg(e,a.offset+(c||0),a.length,e,Mg)){if(!d){a=b;break a}++b}}a=-1}return a}d=Tf.getVisitFn(a);b=Eg(b);for(let e=(c||0)-1,f=a.length;++e<f;)if(b(d(a,e)))return e;return-1}
function jh(a,b,c){const d=Tf.getVisitFn(a);b=Eg(b);for(let e=(c||0)-1,f=a.length;++e<f;)if(b(d(a,e)))return e;return-1}h=ih.prototype;h.visitNull=function(a,b){return b===null&&a.length>0?0:-1};h.visitBool=R;h.visitInt=R;h.visitInt8=R;h.visitInt16=R;h.visitInt32=R;h.visitInt64=R;h.visitUint8=R;h.visitUint16=R;h.visitUint32=R;h.visitUint64=R;h.visitFloat=R;h.visitFloat16=R;h.visitFloat32=R;h.visitFloat64=R;h.visitUtf8=R;h.visitLargeUtf8=R;h.visitBinary=R;h.visitLargeBinary=R;
h.visitFixedSizeBinary=R;h.visitDate=R;h.visitDateDay=R;h.visitDateMillisecond=R;h.visitTimestamp=R;h.visitTimestampSecond=R;h.visitTimestampMillisecond=R;h.visitTimestampMicrosecond=R;h.visitTimestampNanosecond=R;h.visitTime=R;h.visitTimeSecond=R;h.visitTimeMillisecond=R;h.visitTimeMicrosecond=R;h.visitTimeNanosecond=R;h.visitDecimal=R;h.visitList=R;h.visitStruct=R;h.visitUnion=R;h.visitDenseUnion=jh;h.visitSparseUnion=jh;h.visitDictionary=R;h.visitInterval=R;h.visitIntervalDayTime=R;
h.visitIntervalYearMonth=R;h.visitIntervalMonthDayNano=R;h.visitDuration=R;h.visitDurationSecond=R;h.visitDurationMillisecond=R;h.visitDurationMicrosecond=R;h.visitDurationNanosecond=R;h.visitFixedSizeList=R;h.visitMap=R;const kh=new ih;class lh extends Ue{}function S(a){const b=a.type;if(a.nullCount===0&&a.stride===1&&(L.isInt(b)&&b.bitWidth!==64||L.isTime(b)&&b.bitWidth!==64||L.isFloat(b)&&b.precision!==y.HALF))return new Zg(a.data.length,d=>{d=a.data[d];return d.values.subarray(0,d.length)[Symbol.iterator]()});let c=0;return new Zg(a.data.length,d=>{d=a.data[d].length;const e=a.slice(c,c+d);c+=d;return new mh(e)})}
class mh{constructor(a){this.Gb=a;this.index=0}next(){return this.index<this.Gb.length?{value:this.Gb.get(this.index++)}:{done:!0,value:null}}[Symbol.iterator](){return this}}h=lh.prototype;h.visitNull=S;h.visitBool=S;h.visitInt=S;h.visitInt8=S;h.visitInt16=S;h.visitInt32=S;h.visitInt64=S;h.visitUint8=S;h.visitUint16=S;h.visitUint32=S;h.visitUint64=S;h.visitFloat=S;h.visitFloat16=S;h.visitFloat32=S;h.visitFloat64=S;h.visitUtf8=S;h.visitLargeUtf8=S;h.visitBinary=S;h.visitLargeBinary=S;
h.visitFixedSizeBinary=S;h.visitDate=S;h.visitDateDay=S;h.visitDateMillisecond=S;h.visitTimestamp=S;h.visitTimestampSecond=S;h.visitTimestampMillisecond=S;h.visitTimestampMicrosecond=S;h.visitTimestampNanosecond=S;h.visitTime=S;h.visitTimeSecond=S;h.visitTimeMillisecond=S;h.visitTimeMicrosecond=S;h.visitTimeNanosecond=S;h.visitDecimal=S;h.visitList=S;h.visitStruct=S;h.visitUnion=S;h.visitDenseUnion=S;h.visitSparseUnion=S;h.visitDictionary=S;h.visitInterval=S;h.visitIntervalDayTime=S;
h.visitIntervalYearMonth=S;h.visitIntervalMonthDayNano=S;h.visitDuration=S;h.visitDurationSecond=S;h.visitDurationMillisecond=S;h.visitDurationMicrosecond=S;h.visitDurationNanosecond=S;h.visitFixedSizeList=S;h.visitMap=S;const nh=new lh;const oh={},ph={};
class N{constructor(a){a=a[0]instanceof N?a.flatMap(f=>f.data):a;if(a.length===0||a.some(f=>!(f instanceof P)))throw new TypeError("Vector constructor expects an Array of Data instances.");let b;const c=(b=a[0])==null?void 0:b.type;switch(a.length){case 0:this.j=[0];break;case 1:const {get:f,set:g,indexOf:k}=oh[c.typeId],m=a[0];this.isValid=p=>m.getValid(p);this.get=p=>f(m,p);this.set=(p,r)=>g(m,p,r);this.indexOf=p=>k(m,p);this.j=[0,m.length];break;default:Object.setPrototypeOf(this,ph[c.typeId]),
this.j=bh(a)}this.data=a;this.type=c;this.stride=Te(c);let d,e;this.numChildren=(e=(d=c.children)==null?void 0:d.length)!=null?e:0;this.length=this.j.at(-1)}get byteLength(){return this.data.reduce((a,b)=>a+b.byteLength,0)}get nullable(){return $g(this.data)}get nullCount(){return ah(this.data)}get ArrayType(){return this.type.ArrayType}get [Symbol.toStringTag](){return`${this.VectorName}<${this.type[Symbol.toStringTag]}>`}get VectorName(){return`${I[this.type.typeId]}Vector`}isValid(){return!1}get(){return null}at(a){return this.get(a<
0?this.length+a:a)}set(){}indexOf(){return-1}includes(a,b){return this.indexOf(a,b)>-1}[Symbol.iterator](){return nh.visit(this)}concat(...a){return new N(this.data.concat(a.flatMap(b=>b.data).flat(Number.POSITIVE_INFINITY)))}slice(a,b){return new N(Cg(this,a,b,({data:c,j:d},e,f)=>ch(c,d,e,f)))}toJSON(){return[...this]}toArray(){const a=this.data,b=this.length,c=this.stride,d=this.ArrayType;switch(this.type.typeId){case I.Int:case I.Float:case I.Decimal:case I.Time:case I.Timestamp:switch(a.length){case 0:return new d;
case 1:return a[0].values.subarray(0,b*c);default:return a.reduce((e,{values:f,length:g})=>{e.wb.set(f.subarray(0,g*c),e.offset);e.offset+=g*c;return e},{wb:new d(b*c),offset:0}).wb}}return[...this]}toString(){return`[${[...this].join()}]`}getChild(a){let b;return this.getChildAt((b=this.type.children)==null?void 0:b.findIndex(c=>c.name===a))}getChildAt(a){return a>-1&&a<this.numChildren?new N(this.data.map(({children:b})=>b[a])):null}get isMemoized(){return L.isDictionary(this.type)?this.data[0].dictionary.isMemoized:
!1}memoize(){if(L.isDictionary(this.type)){const a=new qh(this.data[0].dictionary),b=this.data.map(c=>{c=c.clone();c.dictionary=a;return c});return new N(b)}return new qh(this)}unmemoize(){if(L.isDictionary(this.type)&&this.isMemoized){const a=this.data[0].dictionary.unmemoize(),b=this.data.map(c=>{c=c.clone();c.dictionary=a;return c});return new N(b)}return this}}
N[Symbol.toStringTag]=(a=>{a.type=L.prototype;a.data=[];a.length=0;a.stride=1;a.numChildren=0;a.j=new Uint32Array([0]);a[Symbol.isConcatSpreadable]=!0;var b=Object.keys(I).map(c=>I[c]).filter(c=>typeof c==="number"&&c!==I.NONE);for(const c of b){b=Tf.getVisitFnByTypeId(c);const d=Df.getVisitFnByTypeId(c),e=kh.getVisitFnByTypeId(c);oh[c]={get:b,set:d,indexOf:e};ph[c]=Object.create(a,{isValid:{value:fh(eh)},get:{value:fh(Tf.getVisitFnByTypeId(c))},set:{value:gh(Df.getVisitFnByTypeId(c))},indexOf:{value:hh(kh.getVisitFnByTypeId(c))}})}return"Vector"})(N.prototype);
class qh extends N{constructor(a){super(a.data);const b=this.get,c=this.set,d=this.slice,e=Array(this.length);Object.defineProperty(this,"get",{value(f){var g=e[f];if(g!==void 0)return g;g=b.call(this,f);return e[f]=g}});Object.defineProperty(this,"set",{value(f,g){c.call(this,f,g);e[f]=g}});Object.defineProperty(this,"slice",{value:(f,g)=>new qh(d.call(this,f,g))});Object.defineProperty(this,"isMemoized",{value:!0});Object.defineProperty(this,"unmemoize",{value:()=>new N(this.data)});Object.defineProperty(this,
"memoize",{value:()=>this})}}
function rh(a){if(a){if(a instanceof P)return new N([a]);if(a instanceof N)return new N(a.data);if(a.type instanceof L)return new N([Q(a)]);if(Array.isArray(a))return new N(a.flatMap(b=>b instanceof P?[b]:b instanceof N?b.data:rh(b).data));if(ArrayBuffer.isView(a)){a instanceof DataView&&(a=new Uint8Array(a.buffer));const b={offset:0,length:a.length,nullCount:-1,data:a};if(a instanceof Int8Array)return new N([Q(Object.assign({},b,{type:new Sc}))]);if(a instanceof Int16Array)return new N([Q(Object.assign({},b,
{type:new Tc}))]);if(a instanceof Int32Array)return new N([Q(Object.assign({},b,{type:new Uc}))]);if(a instanceof BigInt64Array)return new N([Q(Object.assign({},b,{type:new Vc}))]);if(a instanceof Uint8Array||a instanceof Uint8ClampedArray)return new N([Q(Object.assign({},b,{type:new Wc}))]);if(a instanceof Uint16Array)return new N([Q(Object.assign({},b,{type:new Xc}))]);if(a instanceof Uint32Array)return new N([Q(Object.assign({},b,{type:new Yc}))]);if(a instanceof BigUint64Array)return new N([Q(Object.assign({},
b,{type:new Zc}))]);if(a instanceof Float32Array)return new N([Q(Object.assign({},b,{type:new ed}))]);if(a instanceof Float64Array)return new N([Q(Object.assign({},b,{type:new fd}))])}}throw Error("Unrecognized input");};function sh(a){if(!a||a.length<=0)return function(){return!0};let b="";const c=a.filter(d=>d===d);c.length>0&&(b=`
    switch (x) {${c.map(d=>`
        case ${typeof d!=="bigint"?uc(d):`${uc(d)}n`}:`).join("")}
            return false;
    }`);a.length!==c.length&&(b=`if (x !== x) return false;\n${b}`);return new Function("x",`${b}\nreturn true;`)};function th(a,b){a=Math.ceil(a)*b-1;return(a-a%64+64||64)/b}function uh(a,b=0){return a.length>=b?a.subarray(0,b):Da(new a.constructor(b),a,0)}function vh(a,b){if(b>0){a.length+=b;b=a.length*a.stride;const c=a.buffer.length;b>=c&&(a.buffer=uh(a.buffer,c===0?th(b*1,a.BYTES_PER_ELEMENT):th(b*2,a.BYTES_PER_ELEMENT)))}return a}
class wh{constructor(a,b=0,c=1){this.length=Math.ceil(b/c);this.buffer=new a(this.length);this.stride=c;this.BYTES_PER_ELEMENT=a.BYTES_PER_ELEMENT;this.ArrayType=a}get byteLength(){return Math.ceil(this.length*this.stride)*this.BYTES_PER_ELEMENT}get reservedLength(){return this.buffer.length/this.stride}get reservedByteLength(){return this.buffer.byteLength}set(){return this}append(a){return this.set(this.length,a)}flush(a=this.length){a=th(a*this.stride,this.BYTES_PER_ELEMENT);a=uh(this.buffer,a);
this.clear();return a}clear(){this.length=0;this.buffer=new this.ArrayType;return this}}class xh extends wh{get(a){return this.buffer[a]}set(a,b){vh(this,a-this.length+1);this.buffer[a*this.stride]=b;return this}}
class yh extends xh{constructor(){super(Uint8Array,0,.125);this.La=0}get Zb(){return this.length-this.La}get(a){return this.buffer[a>>3]>>a%8&1}set(a,b){const {buffer:c}=vh(this,a-this.length+1),d=a>>3;a%=8;const e=c[d]>>a&1;b?e===0&&(c[d]|=1<<a,++this.La):e===1&&(c[d]&=~(1<<a),--this.La);return this}clear(){this.La=0;return super.clear()}}
class zh extends xh{constructor(a){super(a.OffsetArrayType,1,1)}append(a){return this.set(this.length-1,a)}set(a,b){const c=this.length-1,d=vh(this,a-c+1).buffer;c<a++&&c>=0&&d.fill(d[c],c,a);d[a]=d[a-1]+b;return this}flush(a=this.length-1){a>this.length&&this.set(a-1,this.BYTES_PER_ELEMENT>4?BigInt(0):0);return super.flush(a+1)}};class Ah{static throughNode(){throw Error('"throughNode" not available in this environment');}static throughDOM(){throw Error('"throughDOM" not available in this environment');}constructor({type:a,nullValues:b}){this.length=0;this.finished=!1;this.type=a;this.children=[];this.nullValues=b;this.stride=Te(a);this.F=new yh;b&&b.length>0&&(this.qb=sh(b))}toVector(){return new N([this.flush()])}get ArrayType(){return this.type.ArrayType}get nullCount(){return this.F.Zb}get numChildren(){return this.children.length}get byteLength(){let a=
0;const b=this.j,c=this.o,d=this.F,e=this.$,f=this.children;b&&(a+=b.byteLength);c&&(a+=c.byteLength);d&&(a+=d.byteLength);e&&(a+=e.byteLength);return f.reduce((g,k)=>g+k.byteLength,a)}get reservedLength(){return this.F.reservedLength}get reservedByteLength(){let a=0;this.j&&(a+=this.j.reservedByteLength);this.o&&(a+=this.o.reservedByteLength);this.F&&(a+=this.F.reservedByteLength);this.$&&(a+=this.$.reservedByteLength);return this.children.reduce((b,c)=>b+c.reservedByteLength,a)}get valueOffsets(){return this.j?
this.j.buffer:null}get values(){return this.o?this.o.buffer:null}get nullBitmap(){return this.F?this.F.buffer:null}get typeIds(){return this.$?this.$.buffer:null}append(a){return this.set(this.length,a)}isValid(a){return this.qb(a)}set(a,b){this.setValid(a,this.isValid(b))&&this.setValue(a,b);return this}setValue(a,b){this.B(this,a,b)}setValid(a,b){this.length=this.F.set(a,+b).length;return b}addChild(){throw Error(`Cannot append children to non-nested type "${this.type}"`);}getChildAt(a){return this.children[a]||
null}flush(){let a,b,c,d;const e=this.type,f=this.length,g=this.nullCount;var k=this.j;const m=this.o,p=this.F;let r;(b=(r=this.$)==null?void 0:r.flush(f))?d=k==null?void 0:k.flush(f):a=(d=k==null?void 0:k.flush(f))?m==null?void 0:m.flush(k.get(k.length-1)):m==null?void 0:m.flush(f);g>0&&(c=p==null?void 0:p.flush(f));k=this.children.map(U=>U.flush());this.clear();return Q({type:e,length:f,nullCount:g,children:k,child:k[0],data:a,typeIds:b,nullBitmap:c,valueOffsets:d})}finish(){this.finished=!0;for(const a of this.children)a.finish();
return this}clear(){this.length=0;let a;(a=this.F)==null||a.clear();let b;(b=this.o)==null||b.clear();let c;(c=this.j)==null||c.clear();let d;(d=this.$)==null||d.clear();for(const e of this.children)e.clear();return this}}h=Ah.prototype;h.length=1;h.stride=1;h.children=null;h.finished=!1;h.nullValues=null;h.qb=()=>!0;class Bh extends Ah{constructor(a){super(a);this.o=new xh(this.ArrayType,0,this.stride)}setValue(a,b){const c=this.o;vh(c,a-c.length+1);return super.setValue(a,b)}}
function Ch(a){const b=a.H,c=a.K;a.K=0;a.H=void 0;b&&b.size>0&&a.U(b,c)}
class Dh extends Ah{constructor(a){super(a);this.K=0;this.j=new zh(a.type)}setValue(a,b){const c=this.H||(this.H=new Map),d=c.get(a);d&&(this.K-=d.length);this.K+=b instanceof ug?b[vg].length:b.length;c.set(a,b)}setValid(a,b){return super.setValid(a,b)?!0:((this.H||(this.H=new Map)).set(a,void 0),!1)}clear(){this.K=0;this.H=void 0;return super.clear()}flush(){Ch(this);return super.flush()}finish(){Ch(this);return super.finish()}};class Eh{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}offset(){return fb(this.g,this.h)}cb(){return this.g.v(this.h+8)}bodyLength(){return fb(this.g,this.h+16)}};class Fh{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}version(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):w.V1}schema(a){const b=B(this.g,this.h,6);return b?(a||new mc).i(ib(this.g,this.h+b),this.g):null}dictionaries(a,b){const c=B(this.g,this.h,8);return c?(b||new Eh).i(jb(this.g,this.h+c)+a*24,this.g):null}ib(a){const b=B(this.g,this.h,10);return b?(new Eh).i(jb(this.g,this.h+b)+a*24,this.g):null}Ga(a){const b=B(this.g,this.h,12);return b?(new Tb).i(ib(this.g,
jb(this.g,this.h+b)+a*4),this.g):null}Ha(){const a=B(this.g,this.h,12);return a?kb(this.g,this.h+a):0}};class T{constructor(a=[],b,c,d=w.V5){this.fields=a||[];this.metadata=b||new Map;c||(c=Gh(this.fields));this.dictionaries=c;this.Ka=d}get [Symbol.toStringTag](){return"Schema"}get names(){return this.fields.map(a=>a.name)}toString(){return`Schema<{ ${this.fields.map((a,b)=>`${b}: ${a}`).join(", ")} }>`}select(a){const b=new Set(a);a=this.fields.filter(c=>b.has(c.name));return new T(a,this.metadata)}selectAt(a){a=a.map(b=>this.fields[b]).filter(Boolean);return new T(a,this.metadata)}assign(...a){var b=
a[0]instanceof T?a[0]:Array.isArray(a[0])?new T(a[0]):new T(a);const c=[...this.fields];a=Hh(Hh(new Map,this.metadata),b.metadata);b=b.fields.filter(e=>{const f=c.findIndex(g=>g.name===e.name);return~f?(c[f]=e.clone({metadata:Hh(Hh(new Map,c[f].metadata),e.metadata)}))&&!1:!0});const d=Gh(b,new Map);return new T([...c,...b],a,new Map([...this.dictionaries,...d]))}}T.prototype.fields=null;T.prototype.metadata=null;T.prototype.dictionaries=null;
class V{static new(...a){let [b,c,d,e]=a;a[0]&&typeof a[0]==="object"&&({name:b}=a[0],c===void 0&&(c=a[0].type),d===void 0&&(d=a[0].nullable),e===void 0&&(e=a[0].metadata));return new V(`${b}`,c,d,e)}constructor(a,b,c=!1,d){this.name=a;this.type=b;this.nullable=c;this.metadata=d||new Map}get typeId(){return this.type.typeId}get [Symbol.toStringTag](){return"Field"}toString(){return`${this.name}: ${this.type}`}clone(...a){let [b,c,d,e]=a;a[0]&&typeof a[0]==="object"?{name:b=this.name,type:c=this.type,
nullable:d=this.nullable,metadata:e=this.metadata}=a[0]:[b=this.name,c=this.type,d=this.nullable,e=this.metadata]=a;return V.new(b,c,d,e)}}V.prototype.type=null;V.prototype.name=null;V.prototype.nullable=null;V.prototype.metadata=null;function Hh(a,b){return new Map([...(a||new Map),...(b||new Map)])}
function Gh(a,b=new Map){for(let c=-1,d=a.length;++c<d;){const e=a[c].type;if(L.isDictionary(e))if(!b.has(e.id))b.set(e.id,e.dictionary);else if(b.get(e.id)!==e.dictionary)throw Error("Cannot create Schema containing two different dictionaries with the same Id");e.children&&e.children.length>0&&Gh(e.children,b)}return b};function*Ih(a){for(let b,c=-1,d=a.numDictionaries;++c<d;)if(b=a.Ia(c))yield b}
class Jh{static decode(a){a=new lb(u(Uint8Array,a));a=(new Fh).i(a.v(a.position())+a.position(),a);const b=T.decode(a.schema(),new Map,a.version());return new Kh(b,a)}static encode(a){const b=new zb;var c=T.encode(b,a.schema);wb(b,24,a.numRecordBatches,8);for(var d of[...a.ib()].slice().reverse())Lh.encode(b,d);d=xb(b);wb(b,24,a.numDictionaries,8);for(const e of[...Ih(a)].slice().reverse())Lh.encode(b,e);a=xb(b);D(b,5);C(b,1,c);rb(b,w.V5,w.V1);C(b,3,d);C(b,2,a);c=E(b);b.finish(c);return mb(b)}get numRecordBatches(){return this.ba.length}get numDictionaries(){return this.ob.length}constructor(a,
b=w.V5,c,d){this.schema=a;this.version=b;c&&(this.ba=c);d&&(this.ob=d)}*ib(){for(let a,b=-1,c=this.numRecordBatches;++b<c;)if(a=this.ga(b))yield a}ga(a){return a>=0&&a<this.numRecordBatches&&this.ba[a]||null}Ia(a){return a>=0&&a<this.numDictionaries&&this.ob[a]||null}}
class Kh extends Jh{get numRecordBatches(){var a=this.m;const b=B(a.g,a.h,10);return b?kb(a.g,a.h+b):0}get numDictionaries(){var a=this.m;const b=B(a.g,a.h,8);return b?kb(a.g,a.h+b):0}constructor(a,b){super(a,b.version());this.m=b}ga(a){return a>=0&&a<this.numRecordBatches&&(a=this.m.ib(a))?Lh.decode(a):null}Ia(a){return a>=0&&a<this.numDictionaries&&(a=this.m.dictionaries(a))?Lh.decode(a):null}}
class Lh{static decode(a){return new Lh(a.cb(),a.bodyLength(),a.offset())}static encode(a,b){var c=BigInt(b.offset),d=b.cb;b=BigInt(b.bodyLength);nb(a,8,24);a.aa(BigInt(b!=null?b:0));a.pad(4);a.Y(d);a.aa(BigInt(c!=null?c:0));return a.offset()}constructor(a,b,c){this.cb=a;this.offset=K(c);this.bodyLength=K(b)}};const Mh=Object.freeze({done:!0,value:void 0});class Nh{constructor(a){this.na=a}get schema(){return this.na.schema}get batches(){return this.na.batches||[]}get dictionaries(){return this.na.dictionaries||[]}}function Oh(a){return a.mb||(a.mb=a.toDOMStream())}function Ph(a,b,c){return Ph(a.sb||(a.sb=a.toNodeStream()),b,c)}class Qh{tee(){return Oh(this).tee()}pipeTo(a,b){return Oh(this).pipeTo(a,b)}pipeThrough(a,b){return Oh(this).pipeThrough(a,b)}}
class Rh extends Qh{constructor(){super();this.o=[];this.ia=[];this.Oa=new Promise(a=>this.M=a)}get closed(){return this.Oa}cancel(a){const b=this;return l(function*(){yield b.return(a)})}write(a){if(!this.M)throw Error("AsyncQueue is closed");this.ia.length<=0?this.o.push(a):this.ia.shift().resolve({done:!1,value:a})}abort(a){this.M&&(this.ia.length<=0?this.Ra={error:a}:this.ia.shift().reject({done:!0,value:a}))}close(){if(this.M){const a=this.ia;for(;a.length>0;)a.shift().resolve(Mh);this.M();this.M=
void 0}}[Symbol.asyncIterator](){return this}toDOMStream(a){return Ma(this.M||this.Ra?this:this.o,a)}toNodeStream(){return Na()}throw(a){const b=this;return l(function*(){yield b.abort(a);return Mh})}return(){const a=this;return l(function*(){yield a.close();return Mh})}read(a){const b=this;return l(function*(){return(yield b.next(a,"read")).value})}peek(a){const b=this;return l(function*(){return(yield b.next(a,"peek")).value})}next(){return this.o.length>0?Promise.resolve({done:!1,value:this.o.shift()}):
this.Ra?Promise.reject({done:!0,value:this.Ra.error}):this.M?new Promise((a,b)=>{this.ia.push({resolve:a,reject:b})}):Promise.resolve(Mh)}};class Sh extends Rh{write(a){if((a=u(Uint8Array,a)).byteLength>0)return super.write(a)}toString(a=!1){a?(a=this.toUint8Array(!0),a=va.decode(a)):a=this.toUint8Array(!1).then(wa);return a}toUint8Array(a=!1){return a?Ea(this.o)[0]:(()=>{const b=this;return l(function*(){const c=[];let d=0;var e;try{for(var f=ia(b);;){var g=yield f.next();if(g.done)break;const m=g.value;c.push(m);d+=m.byteLength}}catch(m){var k={error:m}}finally{try{g&&!g.done&&(e=f.return)&&(yield e.call(f))}finally{if(k)throw k.error;
}}return Ea(c,d)[0]})})()}}class Th{constructor(a){a&&(this.source=new Uh(Oa(Pa(a))))}[Symbol.iterator](){return this}next(a){return this.source.next(a)}throw(a){return this.source.throw(a)}return(a){return this.source.return(a)}peek(a){return this.source.peek(a)}read(a){return this.source.read(a)}}
class Vh{constructor(a){a instanceof Vh?this.source=a.source:a instanceof Sh?this.source=new Wh(Oa(Qa(a))):Aa(a)?this.source=new Wh(Oa(Ua(a))):za(a)?this.source=new Wh(Oa(Ra(a))):t(a)&&za(a.body)?this.source=new Wh(Oa(Ra(a.body))):t(a)&&q(a[Symbol.iterator])?this.source=new Wh(Oa(Pa(a))):t(a)&&q(a.then)?this.source=new Wh(Oa(Qa(a))):t(a)&&q(a[Symbol.asyncIterator])&&(this.source=new Wh(Oa(Qa(a))))}[Symbol.asyncIterator](){return this}next(a){return this.source.next(a)}throw(a){return this.source.throw(a)}return(a){return this.source.return(a)}get closed(){return this.source.closed}cancel(a){return this.source.cancel(a)}peek(a){return this.source.peek(a)}read(a){return this.source.read(a)}}
class Uh{constructor(a){this.source=a}cancel(a){this.return(a)}peek(a){return this.next(a,"peek").value}read(a){return this.next(a,"read").value}next(a,b="read"){return this.source.next({O:b,size:a})}throw(a){return Object.create(this.source.throw&&this.source.throw(a)||Mh)}return(a){return Object.create(this.source.return&&this.source.return(a)||Mh)}}
class Wh{constructor(a){this.source=a;this.Oa=new Promise(b=>this.M=b)}cancel(a){const b=this;return l(function*(){yield b.return(a)})}get closed(){return this.Oa}read(a){const b=this;return l(function*(){return(yield b.next(a,"read")).value})}peek(a){const b=this;return l(function*(){return(yield b.next(a,"peek")).value})}next(a,b="read"){const c=this;return l(function*(){return yield c.source.next({O:b,size:a})})}throw(a){const b=this;return l(function*(){const c=b.source.throw&&(yield b.source.throw(a))||
Mh;b.M&&b.M();b.M=void 0;return Object.create(c)})}return(a){const b=this;return l(function*(){const c=b.source.return&&(yield b.source.return(a))||Mh;b.M&&b.M();b.M=void 0;return Object.create(c)})}};class Xh extends Th{constructor(a){super();this.position=0;this.buffer=u(Uint8Array,a);this.size=this.buffer.byteLength}v(a){const {buffer:b,byteOffset:c}=this.ha(a,4);return(new DataView(b,c)).getInt32(0,!0)}seek(a){this.position=Math.min(a,this.size);return a<this.size}read(a){const b=this.buffer,c=this.size,d=this.position;return b&&d<c?(typeof a!=="number"&&(a=Number.POSITIVE_INFINITY),this.position=Math.min(c,d+Math.min(c-d,a)),b.subarray(d,this.position)):null}ha(a,b){const c=this.buffer,d=
Math.min(this.size,a+b);return c?c.subarray(a,d):new Uint8Array(b)}close(){this.buffer&&(this.buffer=null)}throw(a){this.close();return{done:!0,value:a}}return(a){this.close();return{done:!0,value:a}}}
class Yh extends Vh{constructor(a,b){super();this.position=0;this.J=a;typeof b==="number"?this.size=b:this.H=(()=>{const c=this;return l(function*(){c.size=(yield a.stat()).size;delete c.H})})()}v(a){const b=this;return l(function*(){const {buffer:c,byteOffset:d}=yield b.ha(a,4);return(new DataView(c,d)).getInt32(0,!0)})}seek(a){const b=this;return l(function*(){b.H&&(yield b.H);b.position=Math.min(a,b.size);return a<b.size})}read(a){const b=this;return l(function*(){b.H&&(yield b.H);const c=b.J;
var d=b.size,e=b.position;if(c&&e<d){typeof a!=="number"&&(a=Number.POSITIVE_INFINITY);let f=0,g=0;d=Math.min(d,e+Math.min(d-e,a));const k=new Uint8Array(Math.max(0,(b.position=d)-e));for(;(e+=g)<d&&(f+=g)<k.byteLength;)({hc:g}=yield c.read(k,f,k.byteLength-f,e));return k}return null})}ha(a,b){const c=this;return l(function*(){c.H&&(yield c.H);const d=c.J;var e=c.size;return d&&a+b<e?(e=new Uint8Array(Math.min(e,a+b)-a),(yield d.read(e,0,b,a)).buffer):new Uint8Array(b)})}close(){const a=this;return l(function*(){const b=
a.J;a.J=null;b&&(yield b.close())})}throw(a){const b=this;return l(function*(){yield b.close();return{done:!0,value:a}})}return(a){const b=this;return l(function*(){yield b.close();return{done:!0,value:a}})}};function Zh(a){a<0&&(a=4294967295+a+1);return`0x${a.toString(16)}`}const $h=[1,10,100,1E3,1E4,1E5,1E6,1E7,1E8];
function ai(a,b){const c=new Uint32Array([a.buffer[1]>>>16,a.buffer[1]&65535,a.buffer[0]>>>16,a.buffer[0]&65535]);b=new Uint32Array([b.buffer[1]>>>16,b.buffer[1]&65535,b.buffer[0]>>>16,b.buffer[0]&65535]);let d=c[3]*b[3];a.buffer[0]=d&65535;let e=d>>>16;d=c[2]*b[3];e+=d;d=c[3]*b[2]>>>0;e+=d;a.buffer[0]+=e<<16;a.buffer[1]=e>>>0<d?65536:0;a.buffer[1]+=e>>>16;a.buffer[1]+=c[1]*b[3]+c[2]*b[2]+c[3]*b[1];a.buffer[1]+=c[0]*b[3]+c[1]*b[2]+c[2]*b[1]+c[3]*b[0]<<16}
function bi(a,b){const c=a.buffer[0]+b.buffer[0]>>>0;a.buffer[1]+=b.buffer[1];c<a.buffer[0]>>>0&&++a.buffer[1];a.buffer[0]=c}class ci{constructor(a){this.buffer=a}high(){return this.buffer[1]}low(){return this.buffer[0]}lessThan(a){return this.buffer[1]<a.buffer[1]||this.buffer[1]===a.buffer[1]&&this.buffer[0]<a.buffer[0]}equals(a){return this.buffer[1]===a.buffer[1]&&this.buffer[0]==a.buffer[0]}greaterThan(a){return a.lessThan(this)}hex(){return`${Zh(this.buffer[1])} ${Zh(this.buffer[0])}`}}
class W extends ci{times(a){ai(this,a);return this}plus(a){bi(this,a);return this}static from(a,b=new Uint32Array(2)){return W.fromString(typeof a==="string"?a:a.toString(),b)}static fromNumber(a,b=new Uint32Array(2)){return W.fromString(a.toString(),b)}static fromString(a,b=new Uint32Array(2)){const c=a.length;b=new W(b);for(let d=0;d<c;){const e=8<c-d?8:c-d,f=new W(new Uint32Array([Number.parseInt(a.slice(d,d+e),10),0])),g=new W(new Uint32Array([$h[e],0]));b.times(g);b.plus(f);d+=e}return b}static convertArray(a){const b=
new Uint32Array(a.length*2);for(let c=-1,d=a.length;++c<d;)W.from(a[c],new Uint32Array(b.buffer,b.byteOffset+2*c*4,2));return b}static multiply(a,b){return(new W(new Uint32Array(a.buffer))).times(b)}static add(a,b){return(new W(new Uint32Array(a.buffer))).plus(b)}}
class di extends ci{negate(){this.buffer[0]=~this.buffer[0]+1;this.buffer[1]=~this.buffer[1];this.buffer[0]==0&&++this.buffer[1];return this}times(a){ai(this,a);return this}plus(a){bi(this,a);return this}lessThan(a){const b=this.buffer[1]<<0,c=a.buffer[1]<<0;return b<c||b===c&&this.buffer[0]<a.buffer[0]}static from(a,b=new Uint32Array(2)){return di.fromString(typeof a==="string"?a:a.toString(),b)}static fromNumber(a,b=new Uint32Array(2)){return di.fromString(a.toString(),b)}static fromString(a,b=
new Uint32Array(2)){const c=a.startsWith("-"),d=a.length;b=new di(b);for(let e=c?1:0;e<d;){const f=8<d-e?8:d-e,g=new di(new Uint32Array([Number.parseInt(a.slice(e,e+f),10),0])),k=new di(new Uint32Array([$h[f],0]));b.times(k);b.plus(g);e+=f}return c?b.negate():b}static convertArray(a){const b=new Uint32Array(a.length*2);for(let c=-1,d=a.length;++c<d;)di.from(a[c],new Uint32Array(b.buffer,b.byteOffset+2*c*4,2));return b}static multiply(a,b){return(new di(new Uint32Array(a.buffer))).times(b)}static add(a,
b){return(new di(new Uint32Array(a.buffer))).plus(b)}}
class ei{constructor(a){this.buffer=a}high(){return new di(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2))}low(){return new di(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset,2))}negate(){this.buffer[0]=~this.buffer[0]+1;this.buffer[1]=~this.buffer[1];this.buffer[2]=~this.buffer[2];this.buffer[3]=~this.buffer[3];this.buffer[0]==0&&++this.buffer[1];this.buffer[1]==0&&++this.buffer[2];this.buffer[2]==0&&++this.buffer[3];return this}times(a){const b=new W(new Uint32Array([this.buffer[3],
0])),c=new W(new Uint32Array([this.buffer[2],0])),d=new W(new Uint32Array([this.buffer[1],0])),e=new W(new Uint32Array([this.buffer[0],0])),f=new W(new Uint32Array([a.buffer[3],0])),g=new W(new Uint32Array([a.buffer[2],0])),k=new W(new Uint32Array([a.buffer[1],0]));a=new W(new Uint32Array([a.buffer[0],0]));let m=W.multiply(e,a);this.buffer[0]=m.low();const p=new W(new Uint32Array([m.high(),0]));m=W.multiply(d,a);p.plus(m);m=W.multiply(e,k);p.plus(m);this.buffer[1]=p.low();this.buffer[3]=p.lessThan(m)?
1:0;this.buffer[2]=p.high();(new W(new Uint32Array(this.buffer.buffer,this.buffer.byteOffset+8,2))).plus(W.multiply(c,a)).plus(W.multiply(d,k)).plus(W.multiply(e,g));this.buffer[3]+=W.multiply(b,a).plus(W.multiply(c,k)).plus(W.multiply(d,g)).plus(W.multiply(e,f)).low();return this}plus(a){const b=new Uint32Array(4);b[3]=this.buffer[3]+a.buffer[3]>>>0;b[2]=this.buffer[2]+a.buffer[2]>>>0;b[1]=this.buffer[1]+a.buffer[1]>>>0;b[0]=this.buffer[0]+a.buffer[0]>>>0;b[0]<this.buffer[0]>>>0&&++b[1];b[1]<this.buffer[1]>>>
0&&++b[2];b[2]<this.buffer[2]>>>0&&++b[3];this.buffer[3]=b[3];this.buffer[2]=b[2];this.buffer[1]=b[1];this.buffer[0]=b[0];return this}hex(){return`${Zh(this.buffer[3])} ${Zh(this.buffer[2])} ${Zh(this.buffer[1])} ${Zh(this.buffer[0])}`}static multiply(a,b){return(new ei(new Uint32Array(a.buffer))).times(b)}static add(a,b){return(new ei(new Uint32Array(a.buffer))).plus(b)}static from(a,b=new Uint32Array(4)){return ei.fromString(typeof a==="string"?a:a.toString(),b)}static fromNumber(a,b=new Uint32Array(4)){return ei.fromString(a.toString(),
b)}static fromString(a,b=new Uint32Array(4)){const c=a.startsWith("-"),d=a.length;b=new ei(b);for(let e=c?1:0;e<d;){const f=8<d-e?8:d-e,g=new ei(new Uint32Array([Number.parseInt(a.slice(e,e+f),10),0,0,0])),k=new ei(new Uint32Array([$h[f],0,0,0]));b.times(k);b.plus(g);e+=f}return c?b.negate():b}static convertArray(a){const b=new Uint32Array(a.length*4);for(let c=-1,d=a.length;++c<d;)ei.from(a[c],new Uint32Array(b.buffer,b.byteOffset+16*c,4));return b}}var fi={};fi.BaseInt64=ci;fi.Int128=ei;
fi.Int64=di;fi.Uint64=W;function gi(a){const b=a.length,c=new Int32Array(b*2);for(let d=0,e=0;d<b;d++){const f=a[d];let g;c[e++]=(g=f.days)!=null?g:0;let k;c[e++]=(k=f.milliseconds)!=null?k:0}return c}function hi(a){const b=a.length,c=new Int32Array(b*4);for(let e=0,f=0;e<b;e++){var d=a[e];let g;c[f++]=(g=d.months)!=null?g:0;let k;c[f++]=(k=d.days)!=null?k:0;(d=d.nanoseconds)?(c[f++]=Number(BigInt(d)&BigInt(4294967295)),c[f++]=Number(BigInt(d)>>BigInt(32))):f+=2}return c}
function ii(a){const b=a.length,c=Array(b/2);for(let d=0,e=0;d<b;d+=2)c[e++]={days:a[d],milliseconds:a[d+1]};return c}function ji(a,b){const c=a.length,d=Array(c/4);for(let e=0,f=0;e<c;e+=4){const g=BigInt(a[e+3])<<BigInt(32)|BigInt(a[e+2]>>>0);d[f++]={months:a[e],days:a[e+1],nanoseconds:b?`${g}`:g}}return d}var ki={};ki.toIntervalDayTimeInt32Array=gi;ki.toIntervalDayTimeObjects=ii;ki.toIntervalMonthDayNanoInt32Array=hi;ki.toIntervalMonthDayNanoObjects=ji;function X(a){return a.N[++a.Yb]}function li(a){return a.buffers[++a.Xb]}
class mi extends Ue{constructor(a,b,c,d,e=w.V5){super();this.Xb=this.Yb=-1;this.bytes=a;this.N=b;this.buffers=c;this.dictionaries=d;this.Ka=e}visit(a){return super.visit(a instanceof V?a.type:a)}visitNull(a,{length:b}=X(this)){return Q({type:a,length:b})}visitBool(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitInt(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitFloat(a,
{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitUtf8(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),valueOffsets:this.ca(a),data:this.G(a)})}visitLargeUtf8(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),valueOffsets:this.ca(a),data:this.G(a)})}visitBinary(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,
c),valueOffsets:this.ca(a),data:this.G(a)})}visitLargeBinary(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),valueOffsets:this.ca(a),data:this.G(a)})}visitFixedSizeBinary(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitDate(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitTimestamp(a,{length:b,nullCount:c}=X(this)){return Q({type:a,
length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitTime(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitDecimal(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitList(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),valueOffsets:this.ca(a),child:this.visit(a.children[0])})}visitStruct(a,{length:b,nullCount:c}=
X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),children:this.visitMany(a.children)})}visitUnion(a,{length:b,nullCount:c}=X(this)){this.Ka<w.V5&&this.D(a,c);return a.mode===x.Sparse?this.visitSparseUnion(a,{length:b,nullCount:c}):this.visitDenseUnion(a,{length:b,nullCount:c})}visitDenseUnion(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,typeIds:this.hb(a),valueOffsets:this.ca(a),children:this.visitMany(a.children)})}visitSparseUnion(a,{length:b,nullCount:c}=
X(this)){return Q({type:a,length:b,nullCount:c,typeIds:this.hb(a),children:this.visitMany(a.children)})}visitDictionary(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a.indices),dictionary:this.dictionaries.get(a.id)})}visitInterval(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),data:this.G(a)})}visitDuration(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,
c),data:this.G(a)})}visitFixedSizeList(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),child:this.visit(a.children[0])})}visitMap(a,{length:b,nullCount:c}=X(this)){return Q({type:a,length:b,nullCount:c,nullBitmap:this.D(a,c),valueOffsets:this.ca(a),child:this.visit(a.children[0])})}D(a,b){var c=li(this);return b>0&&this.G(a,c)||new Uint8Array(0)}ca(a){return this.G(a)}hb(a){return this.G(a)}G(a,{length:b,offset:c}=li(this)){return this.bytes.subarray(c,
c+b)}}
class ni extends mi{constructor(a,b,c,d,e){super(new Uint8Array(0),b,c,d,e);this.sources=a}D(a,b){({offset:a}=li(this));return b<=0?new Uint8Array(0):Pg(this.sources[a])}ca(a){({offset:b}=li(this));var b;return u(Uint8Array,u(a.OffsetArrayType,this.sources[b]))}hb(a){({offset:b}=li(this));var b;return u(Uint8Array,u(a.ArrayType,this.sources[b]))}G(a,{offset:b}=li(this)){const c=this.sources;if(L.isTimestamp(a)||(L.isInt(a)||L.isTime(a))&&a.bitWidth===64||L.isDuration(a)||L.isDate(a)&&a.unit===Ya.MILLISECOND)return u(Uint8Array,
di.convertArray(c[b]));if(L.isDecimal(a))return u(Uint8Array,ei.convertArray(c[b]));if(L.isBinary(a)||L.isLargeBinary(a)||L.isFixedSizeBinary(a))return oi(c[b]);if(L.isBool(a))return Pg(c[b]);if(L.isUtf8(a)||L.isLargeUtf8(a))return xa.encode(c[b].join(""));if(L.isInterval(a))switch(a.unit){case A.DAY_TIME:return gi(c[b]);case A.MONTH_DAY_NANO:return hi(c[b])}return u(Uint8Array,u(a.ArrayType,c[b].map(d=>+d)))}}
function oi(a){a=a.join("");const b=new Uint8Array(a.length/2);for(let c=0;c<a.length;c+=2)b[c>>1]=Number.parseInt(a.slice(c,c+2),16);return b};class pi extends Dh{constructor(a){super(a);this.o=new wh(Uint8Array)}get byteLength(){let a=this.K+this.length*4;this.j&&(a+=this.j.byteLength);this.o&&(a+=this.o.byteLength);this.F&&(a+=this.F.byteLength);return a}setValue(a,b){return super.setValue(a,u(Uint8Array,b))}U(a,b){const c=this.j;b=vh(this.o,b).buffer;let d=0;for(const [e,f]of a)f===void 0?c.set(e,0):(a=f.length,b.set(f,d),c.set(e,a),d+=a)}};class qi extends Dh{constructor(a){super(a);this.o=new wh(Uint8Array)}get byteLength(){let a=this.K+this.length*4;this.j&&(a+=this.j.byteLength);this.o&&(a+=this.o.byteLength);this.F&&(a+=this.F.byteLength);return a}setValue(a,b){return super.setValue(a,u(Uint8Array,b))}U(a,b){const c=this.j;b=vh(this.o,b).buffer;let d=0;for(const [e,f]of a)f===void 0?c.set(e,BigInt(0)):(a=f.length,b.set(f,d),c.set(e,BigInt(a)),d+=a)}};class ri extends Ah{constructor(a){super(a);this.o=new yh}setValue(a,b){this.o.set(a,+b)}};class si extends Bh{}si.prototype.B=nf;class ti extends si{}ti.prototype.B=hf;class ui extends si{}ui.prototype.B=jf;class vi extends Bh{}vi.prototype.B=yf;class wi extends Ah{constructor({type:a,nullValues:b,dictionaryHashFunction:c}){super({type:new Pe(a.dictionary,a.indices,a.id,a.isOrdered)});this.F=null;this.za=0;this.rb=Object.create(null);this.indices=xi({type:this.type.indices,nullValues:b});this.dictionary=xi({type:this.type.dictionary,nullValues:null});typeof c==="function"&&(this.valueToKey=c)}get values(){return this.indices.values}get nullCount(){return this.indices.nullCount}get nullBitmap(){return this.indices.nullBitmap}get byteLength(){return this.indices.byteLength+
this.dictionary.byteLength}get reservedLength(){return this.indices.reservedLength+this.dictionary.reservedLength}get reservedByteLength(){return this.indices.reservedByteLength+this.dictionary.reservedByteLength}isValid(a){return this.indices.isValid(a)}setValid(a,b){const c=this.indices;b=c.setValid(a,b);this.length=c.length;return b}setValue(a,b){const c=this.rb,d=this.valueToKey(b);let e=c[d];e===void 0&&(c[d]=e=this.za+this.dictionary.append(b).length-1);return this.indices.setValue(a,e)}flush(){var a=
this.type;const b=this.Ob,c=this.dictionary.toVector();a=this.indices.flush().clone(a);a.dictionary=b?b.concat(c):c;this.finished||(this.za+=c.length);this.Ob=a.dictionary;this.clear();return a}finish(){this.indices.finish();this.dictionary.finish();this.za=0;this.rb=Object.create(null);return super.finish()}clear(){this.indices.clear();this.dictionary.clear();return super.clear()}valueToKey(a){return typeof a==="string"?a:`${a}`}};class yi extends Bh{}yi.prototype.B=kf;class zi extends Ah{setValue(a,b){const [c]=this.children;a*=this.stride;for(let d=-1,e=this.stride;++d<e;)c.set(a+d,b[d])}setValid(a,b){super.setValid(a,b)||this.children[0].setValid((a+1)*this.stride-1,!1);return b}addChild(a,b="0"){if(this.numChildren>0)throw Error("FixedSizeListBuilder can only have one child.");const c=this.children.push(a);this.type=new Ge(this.type.listSize,new V(b,a.type,!0));return c}};class Ai extends Bh{setValue(a,b){this.o.set(a,b)}}class Bi extends Ai{setValue(a,b){super.setValue(a,af(b))}}class Ci extends Ai{}class Di extends Ai{};class Ei extends Bh{}Ei.prototype.B=Jf;class Fi extends Ei{}Fi.prototype.B=Hf;class Gi extends Ei{}Gi.prototype.B=Gf;class Hi extends Ei{}Hi.prototype.B=If;class Ii extends Bh{}Ii.prototype.B=Of;class Ji extends Ii{}Ji.prototype.B=Kf;class Ki extends Ii{}Ki.prototype.B=Lf;class Li extends Ii{}Li.prototype.B=Mf;class Mi extends Ii{}Mi.prototype.B=Nf;class Ni extends Bh{setValue(a,b){this.o.set(a,b)}}class Oi extends Ni{}class Pi extends Ni{}class Qi extends Ni{}class Ri extends Ni{}class Si extends Ni{}class Ti extends Ni{}class Ui extends Ni{}class Vi extends Ni{};class Wi extends Dh{constructor(a){super(a);this.j=new zh(a.type)}addChild(a,b="0"){if(this.numChildren>0)throw Error("ListBuilder can only have one child.");this.children[this.numChildren]=a;this.type=new oe(new V(b,a.type,!0));return this.numChildren-1}U(a){const b=this.j,[c]=this.children;for(const [d,e]of a)if(typeof e==="undefined")b.set(d,0);else{a=e;const f=a.length,g=b.set(d,f).buffer[d];for(let k=-1;++k<f;)c.set(g+k,a[k])}}};class Xi extends Dh{set(a,b){return super.set(a,b)}setValue(a,b){b=b instanceof Map?b:new Map(Object.entries(b));const c=this.H||(this.H=new Map),d=c.get(a);d&&(this.K-=d.size);this.K+=b.size;c.set(a,b)}addChild(a,b=`${this.numChildren}`){if(this.numChildren>0)throw Error("ListBuilder can only have one child.");this.children[this.numChildren]=a;this.type=new Ke(new V(b,a.type,!0),this.type.keysSorted);return this.numChildren-1}U(a){const b=this.j,[c]=this.children;for(const [d,e]of a)if(e===void 0)b.set(d,
0);else{let {[d]:f,[d+1]:g}=b.set(d,e.size).buffer;for(const k of e.entries())if(c.set(f,k),++f>=g)break}}};class Yi extends Ah{setValue(){}setValid(a,b){this.length=Math.max(a+1,this.length);return b}};class Zi extends Ah{setValue(a,b){const c=this.children,d=this.type;switch(Array.isArray(b)||b.constructor){case !0:return d.children.forEach((e,f)=>c[f].set(a,b[f]));case Map:return d.children.forEach((e,f)=>c[f].set(a,b.get(e.name)));default:return d.children.forEach((e,f)=>c[f].set(a,b[e.name]))}}setValid(a,b){super.setValid(a,b)||this.children.forEach(c=>c.setValid(a,b));return b}addChild(a,b=`${this.numChildren}`){const c=this.children.push(a);this.type=new se([...this.type.children,new V(b,
a.type,!0)]);return c}};class $i extends Bh{}$i.prototype.B=sf;class aj extends $i{}aj.prototype.B=of;class bj extends $i{}bj.prototype.B=pf;class cj extends $i{}cj.prototype.B=qf;class dj extends $i{}dj.prototype.B=rf;class ej extends Bh{}ej.prototype.B=xf;class fj extends ej{}fj.prototype.B=tf;class gj extends ej{}gj.prototype.B=uf;class hj extends ej{}hj.prototype.B=vf;class ij extends ej{}ij.prototype.B=wf;class jj extends Ah{constructor(a){super(a);this.$=new xh(Int8Array,0,1);typeof a.valueToChildTypeId==="function"&&(this.tb=a.valueToChildTypeId)}get typeIdToChildIndex(){return this.type.typeIdToChildIndex}append(a,b){return this.set(this.length,a,b)}set(a,b,c){c===void 0&&(c=this.tb(this,b,a));this.setValue(a,b,c);return this}setValue(a,b,c){this.$.set(a,c);let d;(d=this.children[this.type.typeIdToChildIndex[c]])==null||d.set(a,b);this.length=Math.max(a+1,this.length)}addChild(a,b=`${this.children.length}`){const c=
this.children.push(a),d=this.type,e=d.mode,f=d.typeIds;a=[...d.children,new V(b,a.type)];this.type=new we(e,[...f,c],a);return c}tb(){throw Error("Cannot map UnionBuilder value to child typeId. Pass the `childTypeId` as the second argument to unionBuilder.append(), or supply a `valueToChildTypeId` function as part of the UnionBuilder constructor options.");}}class kj extends jj{}
class lj extends jj{constructor(a){super(a);this.j=new xh(Int32Array)}setValue(a,b,c){c=this.$.set(a,c).buffer[a];c=this.getChildAt(this.type.typeIdToChildIndex[c]);const d=this.j.set(a,c.length).buffer[a];c==null||c.set(d,b);this.length=Math.max(a+1,this.length)}};class mj extends Dh{constructor(a){super(a);this.o=new wh(Uint8Array)}get byteLength(){let a=this.K+this.length*4;this.j&&(a+=this.j.byteLength);this.o&&(a+=this.o.byteLength);this.F&&(a+=this.F.byteLength);return a}setValue(a,b){return super.setValue(a,xa.encode(b))}U(){}}mj.prototype.U=pi.prototype.U;class nj extends Dh{constructor(a){super(a);this.o=new wh(Uint8Array)}get byteLength(){let a=this.K+this.length*4;this.j&&(a+=this.j.byteLength);this.o&&(a+=this.o.byteLength);this.F&&(a+=this.F.byteLength);return a}setValue(a,b){return super.setValue(a,xa.encode(b))}U(){}}nj.prototype.U=qi.prototype.U;class oj extends Ue{visitNull(){return Yi}visitBool(){return ri}visitInt(){return Ni}visitInt8(){return Oi}visitInt16(){return Pi}visitInt32(){return Qi}visitInt64(){return Ri}visitUint8(){return Si}visitUint16(){return Ti}visitUint32(){return Ui}visitUint64(){return Vi}visitFloat(){return Ai}visitFloat16(){return Bi}visitFloat32(){return Ci}visitFloat64(){return Di}visitUtf8(){return mj}visitLargeUtf8(){return nj}visitBinary(){return pi}visitLargeBinary(){return qi}visitFixedSizeBinary(){return yi}visitDate(){return si}visitDateDay(){return ti}visitDateMillisecond(){return ui}visitTimestamp(){return $i}visitTimestampSecond(){return aj}visitTimestampMillisecond(){return bj}visitTimestampMicrosecond(){return cj}visitTimestampNanosecond(){return dj}visitTime(){return ej}visitTimeSecond(){return fj}visitTimeMillisecond(){return gj}visitTimeMicrosecond(){return hj}visitTimeNanosecond(){return ij}visitDecimal(){return vi}visitList(){return Wi}visitStruct(){return Zi}visitUnion(){return jj}visitDenseUnion(){return lj}visitSparseUnion(){return kj}visitDictionary(){return wi}visitInterval(){return Ei}visitIntervalDayTime(){return Fi}visitIntervalYearMonth(){return Gi}visitIntervalMonthDayNano(){return Hi}visitDuration(){return Ii}visitDurationSecond(){return Ji}visitDurationMillisecond(){return Ki}visitDurationMicrosecond(){return Li}visitDurationNanosecond(){return Mi}visitFixedSizeList(){return zi}visitMap(){return Xi}}
const pj=new oj;function qj(a,b,c){return b===c||Array.isArray(b)&&Array.isArray(c)&&b.length===c.length&&b.every((d,e)=>a.compareFields(d,c[e]))}class tj extends Ue{compareSchemas(a,b){return a===b||b instanceof a.constructor&&qj(this,a.fields,b.fields)}compareFields(a,b){return a===b||b instanceof a.constructor&&a.name===b.name&&a.nullable===b.nullable&&this.visit(a.type,b.type)}}function uj(a,b){return b instanceof a.constructor}function vj(a,b){return a===b||uj(a,b)}
function wj(a,b){return a===b||uj(a,b)&&a.bitWidth===b.bitWidth&&a.isSigned===b.isSigned}function xj(a,b){return a===b||uj(a,b)&&a.precision===b.precision}function yj(a,b){return a===b||uj(a,b)&&a.unit===b.unit}function zj(a,b){return a===b||uj(a,b)&&a.unit===b.unit&&a.timezone===b.timezone}function Aj(a,b){return a===b||uj(a,b)&&a.unit===b.unit&&a.bitWidth===b.bitWidth}
function Bj(a,b){return a===b||uj(a,b)&&a.mode===b.mode&&a.typeIds.every((c,d)=>c===b.typeIds[d])&&qj(Cj,a.children,b.children)}function Dj(a,b){return a===b||uj(a,b)&&a.unit===b.unit}function Ej(a,b){return a===b||uj(a,b)&&a.unit===b.unit}h=tj.prototype;h.visitNull=vj;h.visitBool=vj;h.visitInt=wj;h.visitInt8=wj;h.visitInt16=wj;h.visitInt32=wj;h.visitInt64=wj;h.visitUint8=wj;h.visitUint16=wj;h.visitUint32=wj;h.visitUint64=wj;h.visitFloat=xj;h.visitFloat16=xj;h.visitFloat32=xj;h.visitFloat64=xj;
h.visitUtf8=vj;h.visitLargeUtf8=vj;h.visitBinary=vj;h.visitLargeBinary=vj;h.visitFixedSizeBinary=function(a,b){return a===b||uj(a,b)&&a.byteWidth===b.byteWidth};h.visitDate=yj;h.visitDateDay=yj;h.visitDateMillisecond=yj;h.visitTimestamp=zj;h.visitTimestampSecond=zj;h.visitTimestampMillisecond=zj;h.visitTimestampMicrosecond=zj;h.visitTimestampNanosecond=zj;h.visitTime=Aj;h.visitTimeSecond=Aj;h.visitTimeMillisecond=Aj;h.visitTimeMicrosecond=Aj;h.visitTimeNanosecond=Aj;h.visitDecimal=vj;
h.visitList=function(a,b){return a===b||uj(a,b)&&a.children.length===b.children.length&&qj(Cj,a.children,b.children)};h.visitStruct=function(a,b){return a===b||uj(a,b)&&a.children.length===b.children.length&&qj(Cj,a.children,b.children)};h.visitUnion=Bj;h.visitDenseUnion=Bj;h.visitSparseUnion=Bj;h.visitDictionary=function(a,b){return a===b||uj(a,b)&&a.id===b.id&&a.isOrdered===b.isOrdered&&Cj.visit(a.indices,b.indices)&&Cj.visit(a.dictionary,b.dictionary)};h.visitInterval=Dj;
h.visitIntervalDayTime=Dj;h.visitIntervalYearMonth=Dj;h.visitIntervalMonthDayNano=Dj;h.visitDuration=Ej;h.visitDurationSecond=Ej;h.visitDurationMillisecond=Ej;h.visitDurationMicrosecond=Ej;h.visitDurationNanosecond=Ej;h.visitFixedSizeList=function(a,b){return a===b||uj(a,b)&&a.listSize===b.listSize&&a.children.length===b.children.length&&qj(Cj,a.children,b.children)};
h.visitMap=function(a,b){return a===b||uj(a,b)&&a.keysSorted===b.keysSorted&&a.children.length===b.children.length&&qj(Cj,a.children,b.children)};const Cj=new tj;function Fj(a,b){return Cj.compareSchemas(a,b)}function Gj(a,b){return Cj.visit(a,b)};function xi(a){var b=a.type;const c=new (pj.getVisitFn(b)())(a);if(b.children&&b.children.length>0){const d=a.children||[],e={nullValues:a.nullValues};a=Array.isArray(d)?(f,g)=>d[g]||e:({name:f})=>d[f]||e;for(const [f,g]of b.children.entries()){b=g.type;const k=a(g,f);c.children.push(xi(Object.assign({},k,{type:b})))}}return c}
function Hj(a,b){if(a instanceof P||a instanceof N||a.type instanceof L||ArrayBuffer.isView(a))return rh(a);b={type:b!=null?b:Ij(a),nullValues:[null]};a=[...Jj(b)(a)];a=a.length===1?a[0]:a.reduce((c,d)=>c.concat(d));return L.isDictionary(a.type)?a.memoize():a}
function Ij(a){if(a.length===0)return new Mc;var b=0;let c=0,d=0,e=0,f=0,g=0,k=0,m=0;for(const p of a)if(p==null)++b;else{switch(typeof p){case "bigint":++g;continue;case "boolean":++k;continue;case "number":++e;continue;case "string":++f;continue;case "object":Array.isArray(p)?++c:Object.prototype.toString.call(p)==="[object Date]"?++m:++d;continue}throw new TypeError("Unable to infer Vector type from input values, explicit type declaration expected.");}if(e+b===a.length)return new fd;if(f+b===a.length)return new Pe(new od,
new Uc);if(g+b===a.length)return new Vc;if(k+b===a.length)return new wd;if(m+b===a.length)return new Xd;if(c+b===a.length){const p=Ij(a[a.findIndex(r=>r!=null)]);if(a.every(r=>r==null||Gj(p,Ij(r))))return new oe(new V("",p,!0))}else if(d+b===a.length){b=new Map;for(const p of a)for(const r of Object.keys(p))b.has(r)||p[r]==null||b.set(r,new V(r,Ij([p[r]]),!0));return new se([...b.values()])}throw new TypeError("Unable to infer Vector type from input values, explicit type declaration expected.");}
function Jj(a){const {queueingStrategy:b="count"}=a,{highWaterMark:c=b!=="bytes"?Number.POSITIVE_INFINITY:16384}=a,d=b!=="bytes"?"length":"byteLength";return function*(e){let f=0;const g=xi(a);for(const k of e)g.append(k)[d]>=c&&++f&&(yield g.toVector());if(g.finish().length>0||f===0)yield g.toVector()}};function Kj(a,b){return Lj(a,b.map(c=>c.data.concat()))}function Lj(a,b){const c=[...a.fields],d=[],e={eb:b.reduce((U,sa)=>Math.max(U,sa.length),0)};let f=0,g=0,k=-1;const m=b.length;let p,r=[];for(;e.eb-- >0;){g=Number.POSITIVE_INFINITY;for(k=-1;++k<m;)r[k]=p=b[k].shift(),g=Math.min(g,p?p.length:g);Number.isFinite(g)&&(r=Mj(c,g,r,b,e),g>0&&(d[f++]=Q({type:new se(c),length:g,nullCount:0,children:r.slice()})))}return[a=a.assign(c),d.map(U=>new Y(a,U))]}
function Mj(a,b,c,d,e){const f=(b+63&-64)>>3;for(let k=-1,m=d.length;++k<m;){const p=c[k];let r;var g=(r=p)==null?void 0:r.length;if(g>=b)g===b?c[k]=p:(c[k]=p.slice(0,b),e.eb=Math.max(e.eb,d[k].unshift(p.slice(b,g-b))));else{g=a[k];a[k]=g.clone({nullable:!0});let U,sa;c[k]=(sa=(U=p)==null?void 0:Wg(U,b))!=null?sa:Q({type:g.type,length:b,nullCount:b,nullBitmap:new Uint8Array(f)})}}return c};class Nj{constructor(...a){if(a.length===0)return this.batches=[],this.schema=new T([]),this.j=[0],this;let b,c;a[0]instanceof T&&(b=a.shift());a.at(-1)instanceof Uint32Array&&(c=a.pop());const d=m=>{if(m){if(m instanceof Y)return[m];if(m instanceof Nj)return m.batches;if(m instanceof P){if(m.type instanceof se)return[new Y(new T(m.type.children),m)]}else{if(Array.isArray(m))return m.flatMap(r=>d(r));if(typeof m[Symbol.iterator]==="function")return[...m].flatMap(r=>d(r));if(typeof m==="object"){var p=
Object.keys(m);const r=p.map(Ia=>new N([m[Ia]]));let U;const sa=(U=b)!=null?U:new T(p.map((Ia,Nc)=>new V(String(Ia),r[Nc].type,r[Nc].nullable)));[,p]=Kj(sa,r);return p.length===0?[new Y(m)]:p}}}return[]};a=a.flatMap(m=>d(m));let e,f,g;b=(g=(f=b)!=null?f:(e=a[0])==null?void 0:e.schema)!=null?g:new T([]);if(!(b instanceof T))throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");for(const m of a){if(!(m instanceof Y))throw new TypeError("Table constructor expects a [Schema, RecordBatch[]] pair.");
if(!Fj(b,m.schema))throw new TypeError("Table and inner RecordBatch schemas must be equivalent.");}this.schema=b;this.batches=a;let k;this.j=(k=c)!=null?k:bh(this.data)}get data(){return this.batches.map(({data:a})=>a)}get numCols(){return this.schema.fields.length}get numRows(){return this.data.reduce((a,b)=>a+b.length,0)}get nullCount(){this.P===-1&&(this.P=ah(this.data));return this.P}isValid(){return!1}get(){return null}at(a){return this.get(a<0?this.numRows+a:a)}set(){}indexOf(){return-1}[Symbol.iterator](){return this.batches.length>
0?nh.visit(new N(this.data)):[][Symbol.iterator]()}toArray(){return[...this]}toString(){return`[\n  ${this.toArray().join(",\n  ")}\n]`}concat(...a){const b=this.schema;a=this.data.concat(a.flatMap(({data:c})=>c));return new Nj(b,a.map(c=>new Y(b,c)))}slice(a,b){const c=this.schema;[a,b]=Cg({length:this.numRows},a,b);a=ch(this.data,this.j,a,b);return new Nj(c,a.map(d=>new Y(c,d)))}getChild(a){return this.getChildAt(this.schema.fields.findIndex(b=>b.name===a))}getChildAt(a){if(a>-1&&a<this.schema.fields.length){const c=
this.data.map(d=>d.children[a]);if(c.length===0){var {type:b}=this.schema.fields[a];b=Q({type:b,length:0,nullCount:0});c.push(Wg(b,this.numRows))}return new N(c)}return null}setChild(a,b){let c;return this.setChildAt((c=this.schema.fields)==null?void 0:c.findIndex(d=>d.name===a),b)}setChildAt(a,b){let c=this.schema;var d=[...this.batches];if(a>-1&&a<this.numCols){b||(b=new N([Q({type:new Mc,length:this.numRows})]));d=c.fields.slice();const e=d[a].clone({type:b.type}),f=this.schema.fields.map((g,k)=>
this.getChildAt(k));[d[a],f[a]]=[e,b];[c,d]=Kj(c,f)}return new Nj(c,d)}select(a){const b=this.schema.fields.reduce((c,d,e)=>c.set(d.name,e),new Map);return this.selectAt(a.map(c=>b.get(c)).filter(c=>c>-1))}selectAt(a){const b=this.schema.selectAt(a),c=this.batches.map(d=>d.selectAt(a));return new Nj(b,c)}assign(a){const b=this.schema.fields,[c,d]=a.schema.fields.reduce((g,k,m)=>{const [p,r]=g,U=b.findIndex(sa=>sa.name===k.name);~U?r[U]=m:p.push(m);return g},[[],[]]),e=this.schema.assign(a.schema),
f=[...b.map((g,k)=>[k,d[k]]).map(([g,k])=>k===void 0?this.getChildAt(g):a.getChildAt(k)),...c.map(g=>a.getChildAt(g))].filter(Boolean);return new Nj(...Kj(e,f))}}var Oj=Symbol.toStringTag,Pj=Nj.prototype;Pj.schema=null;Pj.batches=[];Pj.j=new Uint32Array([0]);Pj.P=-1;Pj[Symbol.isConcatSpreadable]=!0;Pj.isValid=fh(eh);Pj.get=fh(Tf.getVisitFn(I.Struct));Pj.set=gh(Df.getVisitFn(I.Struct));Pj.indexOf=hh(kh.getVisitFn(I.Struct));Nj[Oj]="Table";class Y{constructor(...a){switch(a.length){case 2:[this.schema]=a;if(!(this.schema instanceof T))throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");[,this.data=Q({nullCount:0,type:new se(this.schema.fields),children:this.schema.fields.map(g=>Q({type:g.type,nullCount:0}))})]=a;if(!(this.data instanceof P))throw new TypeError("RecordBatch constructor expects a [Schema, Data] pair.");[this.schema,this.data]=Qj(this.schema,this.data.children);break;case 1:const [b]=a,{fields:c,
children:d,length:e}=Object.keys(b).reduce((g,k,m)=>{g.children[m]=b[k];g.length=Math.max(g.length,b[k].length);g.fields[m]=V.new({name:k,type:b[k].type,nullable:!0});return g},{length:0,fields:[],children:[]});a=new T(c);const f=Q({type:new se(c),length:e,children:d,nullCount:0});[this.schema,this.data]=Qj(a,f.children,e);break;default:throw new TypeError("RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.");}}get dictionaries(){return this.Nb||(this.Nb=
Rj(this.schema.fields,this.data.children))}get numCols(){return this.schema.fields.length}get numRows(){return this.data.length}get nullCount(){return this.data.nullCount}isValid(a){return this.data.getValid(a)}get(a){return Tf.visit(this.data,a)}at(a){return this.get(a<0?this.numRows+a:a)}set(a,b){return Df.visit(this.data,a,b)}indexOf(a,b){return kh.visit(this.data,a,b)}[Symbol.iterator](){return nh.visit(new N([this.data]))}toArray(){return[...this]}concat(...a){return new Nj(this.schema,[this,
...a])}slice(a,b){[a]=(new N([this.data])).slice(a,b).data;return new Y(this.schema,a)}getChild(a){let b;return this.getChildAt((b=this.schema.fields)==null?void 0:b.findIndex(c=>c.name===a))}getChildAt(a){return a>-1&&a<this.schema.fields.length?new N([this.data.children[a]]):null}setChild(a,b){let c;return this.setChildAt((c=this.schema.fields)==null?void 0:c.findIndex(d=>d.name===a),b)}setChildAt(a,b){var c=this.schema,d=this.data;if(a>-1&&a<this.numCols){b||(b=new N([Q({type:new Mc,length:this.numRows})]));
const e=c.fields.slice();d=d.children.slice();c=e[a].clone({type:b.type});[e[a],d[a]]=[c,b.data[0]];c=new T(e,new Map(this.schema.metadata));d=Q({type:new se(e),children:d})}return new Y(c,d)}select(a){const b=this.schema.select(a),c=new se(b.fields),d=[];for(const e of a)a=this.schema.fields.findIndex(f=>f.name===e),~a&&(d[a]=this.data.children[a]);return new Y(b,Q({type:c,length:this.numRows,children:d}))}selectAt(a){const b=this.schema.selectAt(a);a=a.map(c=>this.data.children[c]).filter(Boolean);
a=Q({type:new se(b.fields),length:this.numRows,children:a});return new Y(b,a)}}var Sj=Symbol.toStringTag,Tj=Y.prototype;Tj.P=-1;Tj[Symbol.isConcatSpreadable]=!0;Y[Sj]="RecordBatch";
function Qj(a,b,c=b.reduce((d,e)=>Math.max(d,e.length),0)){const d=[...a.fields],e=[...b],f=(c+63&-64)>>3;for(const [g,k]of a.fields.entries()){const m=b[g];if(!m||m.length!==c){d[g]=k.clone({nullable:!0});let p,r;e[g]=(r=(p=m)==null?void 0:Wg(p,c))!=null?r:Q({type:k.type,length:c,nullCount:c,nullBitmap:new Uint8Array(f)})}}return[a.assign(d),Q({type:new se(d),length:c,children:e})]}
function Rj(a,b,c=new Map){var d;if(((d=a==null?void 0:a.length)!=null?d:0)>0&&(a==null?void 0:a.length)===(b==null?void 0:b.length))for(let f=-1,g=a.length;++f<g;){var {type:e}=a[f];d=b[f];let k,m;for(const p of[d,...(((k=d)==null?void 0:(m=k.dictionary)==null?void 0:m.data)||[])]){let r;Rj(e.children,(r=p)==null?void 0:r.children,c)}if(L.isDictionary(e))if(e=e.id,!c.has(e)){let p;((p=d)==null?0:p.dictionary)&&c.set(e,d.dictionary)}else if(c.get(e)!==d.dictionary)throw Error("Cannot create Schema containing two different dictionaries with the same Id");
}return c}class Uj extends Y{constructor(a){var b=a.fields.map(c=>Q({type:c.type}));b=Q({type:new se(a.fields),nullCount:0,children:b});super(a,b)}};class Vj{constructor(){this.g=null;this.h=0}i(a,b){this.h=a;this.g=b;return this}version(){const a=B(this.g,this.h,4);return a?eb(this.g,this.h+a):w.V1}headerType(){const a=B(this.g,this.h,6);return a?this.g.l[this.h+a]:H.NONE}header(a){const b=B(this.g,this.h,8);return b?gb(this.g,a,this.h+b):null}bodyLength(){const a=B(this.g,this.h,10);return a?fb(this.g,this.h+a):BigInt("0")}Ga(a){const b=B(this.g,this.h,12);return b?(new Tb).i(ib(this.g,jb(this.g,this.h+b)+a*4),this.g):null}Ha(){const a=B(this.g,
this.h,12);return a?kb(this.g,this.h+a):0}};class Wj extends Ue{visit(a,b){return a==null||b==null?void 0:super.visit(a,b)}visitNull(a,b){D(b,0);return E(b)}visitInt(a,b){D(b,2);sb(b,0,a.bitWidth,0);qb(b,1,+a.isSigned,0);return E(b)}visitFloat(a,b){D(b,1);rb(b,a.precision,y.HALF);return E(b)}visitBinary(a,b){D(b,0);return E(b)}visitLargeBinary(a,b){D(b,0);return E(b)}visitBool(a,b){D(b,0);return E(b)}visitUtf8(a,b){D(b,0);return E(b)}visitLargeUtf8(a,b){D(b,0);return E(b)}visitDecimal(a,b){D(b,3);sb(b,1,a.scale,0);sb(b,0,a.precision,0);sb(b,
2,a.bitWidth,128);return E(b)}visitDate(a,b){D(b,1);rb(b,a.unit,Ya.MILLISECOND);return E(b)}visitTime(a,b){D(b,2);rb(b,a.unit,z.MILLISECOND);sb(b,1,a.bitWidth,32);return E(b)}visitTimestamp(a,b){const c=a.timezone&&yb(b,a.timezone)||void 0;D(b,2);rb(b,a.unit,z.SECOND);c!==void 0&&C(b,1,c);return E(b)}visitInterval(a,b){D(b,1);rb(b,a.unit,A.YEAR_MONTH);return E(b)}visitDuration(a,b){D(b,1);rb(b,a.unit,z.MILLISECOND);return E(b)}visitList(a,b){D(b,0);return E(b)}visitStruct(a,b){D(b,0);return E(b)}visitUnion(a,
b){wb(b,4,a.typeIds.length,4);var c=a.typeIds;wb(b,4,c.length,4);for(let d=c.length-1;d>=0;d--)pb(b,c[d]);c=xb(b);D(b,2);rb(b,a.mode,x.Sparse);C(b,1,c);return E(b)}visitDictionary(a,b){const c=this.visit(a.indices,b);D(b,4);tb(b,0,BigInt(a.id));qb(b,2,+a.isOrdered,0);c!==void 0&&C(b,1,c);return E(b)}visitFixedSizeBinary(a,b){D(b,1);sb(b,0,a.byteWidth,0);return E(b)}visitFixedSizeList(a,b){D(b,1);sb(b,0,a.listSize,0);return E(b)}visitMap(a,b){D(b,1);qb(b,0,+a.keysSorted,0);return E(b)}}const Xj=new Wj;function Yj(a){return new Zj(a.count,ak(a.columns),bk(a.columns))}function ck(a,b){return(a.fields||[]).filter(Boolean).map(c=>V.fromJSON(c,b))}function dk(a,b){return(a.children||[]).filter(Boolean).map(c=>V.fromJSON(c,b))}function ak(a){return(a||[]).reduce((b,c)=>[...b,new ek(c.count,fk(c.VALIDITY)),...ak(c.children)],[])}
function bk(a,b=[]){for(let c=-1,d=(a||[]).length;++c<d;){const e=a[c];e.VALIDITY&&b.push(new gk(b.length,e.VALIDITY.length));e.TYPE_ID&&b.push(new gk(b.length,e.TYPE_ID.length));e.OFFSET&&b.push(new gk(b.length,e.OFFSET.length));e.DATA&&b.push(new gk(b.length,e.DATA.length));b=bk(e.children,b)}return b}function fk(a){return(a||[]).reduce((b,c)=>b+ +(c===0),0)}function hk(a=[]){return new Map(a.map(({key:b,value:c})=>[b,c]))}function ik(a){return new Oc(a.isSigned,a.bitWidth)}
function jk(a,b){const c=a.type.name;switch(c){case "NONE":return new Mc;case "null":return new Mc;case "binary":return new gd;case "largebinary":return new kd;case "utf8":return new od;case "largeutf8":return new sd;case "bool":return new wd;case "list":return new oe((b||[])[0]);case "struct":return new se(b||[]);case "struct_":return new se(b||[])}switch(c){case "int":return b=a.type,new Oc(b.isSigned,b.bitWidth);case "floatingpoint":return new $c(y[a.type.precision]);case "decimal":return b=a.type,
new Ad(b.scale,b.precision,b.bitWidth);case "date":return new Ed(Ya[a.type.unit]);case "time":return b=a.type,new Kd(z[b.unit],b.bitWidth);case "timestamp":return b=a.type,new Sd(z[b.unit],b.timezone);case "interval":return new $d(A[a.type.unit]);case "duration":return new ge(z[a.type.unit]);case "union":a=a.type;const [d,...e]=(a.mode+"").toLowerCase();return new we(x[d.toUpperCase()+e.join("")],a.typeIds||[],b||[]);case "fixedsizebinary":return new Ce(a.type.byteWidth);case "fixedsizelist":return new Ge(a.type.listSize,
(b||[])[0]);case "map":return new Ke((b||[])[0],a.type.keysSorted)}throw Error(`Unrecognized type: "${c}"`);};class kk{static fromJSON(a,b){const c=new kk(0,w.V5,b);c.Pa=lk(a,b);return c}static decode(a){a=new lb(u(Uint8Array,a));a=(new Vj).i(a.v(a.position())+a.position(),a);var b=a.bodyLength();const c=a.version(),d=a.headerType();b=new kk(b,c,d);b.Pa=mk(a,d);return b}static encode(a){const b=new zb;let c=-1;a.isSchema()?c=T.encode(b,a.header()):a.isRecordBatch()?c=Zj.encode(b,a.header()):a.isDictionaryBatch()&&(c=nk.encode(b,a.header()));D(b,5);rb(b,w.V5,w.V1);C(b,2,c);qb(b,1,a.headerType,H.NONE);tb(b,
3,BigInt(a.bodyLength));a=E(b);b.finish(a);return mb(b)}static from(a,b=0){if(a instanceof T)return new kk(0,w.V5,H.Schema,a);if(a instanceof Zj)return new kk(b,w.V5,H.RecordBatch,a);if(a instanceof nk)return new kk(b,w.V5,H.DictionaryBatch,a);throw Error(`Unrecognized Message header: ${a}`);}get type(){return this.headerType}get version(){return this.Ub}get headerType(){return this.Qb}get bodyLength(){return this.Kb}header(){return this.Pa()}isSchema(){return this.headerType===H.Schema}isRecordBatch(){return this.headerType===
H.RecordBatch}isDictionaryBatch(){return this.headerType===H.DictionaryBatch}constructor(a,b,c,d){this.Ub=b;this.Qb=c;this.body=new Uint8Array(0);d&&(this.Pa=()=>d);this.Kb=K(a)}}class Zj{get N(){return this.Ta}get length(){return this.Tb}get buffers(){return this.Na}constructor(a,b,c){this.Ta=b;this.Na=c;this.Tb=K(a)}}
class nk{get id(){return this.Rb}get data(){return this.Mb}get Ja(){return this.Sb}get length(){return this.data.length}get N(){return this.data.N}get buffers(){return this.data.buffers}constructor(a,b,c=!1){this.Mb=a;this.Sb=c;this.Rb=K(b)}}class gk{constructor(a,b){this.offset=K(a);this.length=K(b)}}class ek{constructor(a,b){this.length=K(a);this.nullCount=K(b)}}
function lk(a,b){return()=>{switch(b){case H.Schema:return T.fromJSON(a);case H.RecordBatch:return Zj.fromJSON(a);case H.DictionaryBatch:return nk.fromJSON(a)}throw Error(`Unrecognized Message type: { name: ${H[b]}, type: ${b} }`);}}
function mk(a,b){return()=>{switch(b){case H.Schema:return T.decode(a.header(new mc),new Map,a.version());case H.RecordBatch:return Zj.decode(a.header(new Kb),a.version());case H.DictionaryBatch:return nk.decode(a.header(new Lb),a.version())}throw Error(`Unrecognized Message type: { name: ${H[b]}, type: ${b} }`);}}V.encode=ok;V.decode=pk;
V.fromJSON=function(a,b){var c;let d,e;b&&(e=a.dictionary)?(b.has(c=e.id)?(d=(d=e.indexType)?ik(d):new Uc,c=new Pe(b.get(c),d,c,e.isOrdered)):(d=(d=e.indexType)?ik(d):new Uc,b.set(c,b=jk(a,dk(a,b))),c=new Pe(b,d,c,e.isOrdered)),a=new V(a.name,c,a.nullable,hk(a.metadata))):(b=jk(a,dk(a,b)),a=new V(a.name,b,a.nullable,hk(a.metadata)));return a||null};T.encode=qk;T.decode=rk;T.fromJSON=function(a,b=new Map){return new T(ck(a,b),hk(a.metadata),b)};Zj.encode=sk;Zj.decode=tk;Zj.fromJSON=Yj;nk.encode=uk;
nk.decode=vk;nk.fromJSON=function(a){return new nk(Yj(a.data),a.id,a.isDelta)};ek.encode=wk;ek.decode=xk;gk.encode=yk;gk.decode=zk;function rk(a,b=new Map,c=w.V5){const d=[];for(let e,f=-1,g=-1,k=lc(a);++f<k;)if(e=a.fields(f))d[++g]=V.decode(e,b);return new T(d,Ak(a),b,c)}
function tk(a,b=w.V5){var c=B(a.g,a.h,10);if((c?(new Fb).i(ib(a.g,a.h+c),a.g):null)!==null)throw Error("Record batch compression not implemented");c=a.length();const d=[];for(let f,g=-1,k=-1,m=Ib(a);++g<m;)if(f=a.N(g))d[++k]=ek.decode(f);const e=[];for(let f,g=-1,k=-1,m=Jb(a);++g<m;)if(f=a.buffers(g))b<w.V4&&(f.h+=8*(g+1)),e[++k]=gk.decode(f);return new Zj(c,d,e)}function vk(a,b=w.V5){return new nk(Zj.decode(a.data(),b),a.id(),a.Ja())}function zk(a){return new gk(a.offset(),a.length())}
function xk(a){return new ek(a.length(),a.nullCount())}function Bk(a,b){const c=[];for(let d,e=-1,f=-1,g=hc(a);++e<g;)if(d=a.children(e))c[++f]=V.decode(d,b);return c}function pk(a,b){var c;let d,e;b&&(e=a.dictionary())?(b.has(c=K(e.id()))?(d=(d=Rb(e))?Ck(d):new Uc,c=new Pe(b.get(c),d,c,e.isOrdered())):(d=(d=Rb(e))?Ck(d):new Uc,b.set(c,b=Dk(a,Bk(a,b))),c=new Pe(b,d,c,e.isOrdered())),a=new V(a.name(),c,a.nullable(),Ak(a))):(b=Dk(a,Bk(a,b)),a=new V(a.name(),b,a.nullable(),Ak(a)));return a||null}
function Ak(a){const b=new Map;if(a)for(let c,d,e=-1,f=Math.trunc(a.Ha());++e<f;)(c=a.Ga(e))&&(d=c.key())!=null&&b.set(d,c.value());return b}function Ck(a){return new Oc(a.isSigned(),a.bitWidth())}
function Dk(a,b){var c=(c=B(a.g,a.h,8))?a.g.l[a.h+c]:F.NONE;switch(c){case F.NONE:return new Mc;case F.Null:return new Mc;case F.Binary:return new gd;case F.LargeBinary:return new kd;case F.Utf8:return new od;case F.LargeUtf8:return new sd;case F.Bool:return new wd;case F.List:return new oe((b||[])[0]);case F.Struct_:return new se(b||[])}switch(c){case F.Int:return b=a.type(new Qb),new Oc(b.isSigned(),b.bitWidth());case F.FloatingPoint:return b=a.type(new Zb),new $c(b.precision());case F.Decimal:return b=
a.type(new Vb),new Ad(b.scale(),b.precision(),b.bitWidth());case F.Date:return b=a.type(new Ub),new Ed(b.unit());case F.Time:return b=a.type(new bc),new Kd(b.unit(),b.bitWidth());case F.Timestamp:return b=a.type(new cc),new Sd(b.unit(),b.timezone());case F.Interval:return b=a.type(new $b),new $d(b.unit());case F.Duration:return b=a.type(new Wb),new ge(b.unit());case F.Union:c=a.type(new dc);a=c.mode();const d=B(c.g,c.h,6);c=d?new Int32Array(c.g.bytes().buffer,c.g.bytes().byteOffset+jb(c.g,c.h+d),
kb(c.g,c.h+d)):null;return new we(a,c||[],b||[]);case F.FixedSizeBinary:return b=a.type(new Xb),new Ce(b.byteWidth());case F.FixedSizeList:return a=a.type(new Yb),new Ge(a.listSize(),(b||[])[0]);case F.Map:return a=a.type(new ac),new Ke((b||[])[0],a.keysSorted())}throw Error(`Unrecognized type: "${F[c]}" (${c})`);}
function qk(a,b){var c=b.fields.map(d=>V.encode(a,d));wb(a,4,c.length,4);c=jc(a,c);b=b.metadata&&b.metadata.size>0?kc(a,[...b.metadata].map(([d,e])=>{d=yb(a,`${d}`);e=yb(a,`${e}`);D(a,2);C(a,0,d);C(a,1,e);return E(a)})):-1;D(a,4);C(a,1,c);rb(a,Ek?Mb.Jb:Mb.ec,Mb.Jb);b!==-1&&C(a,2,b);return E(a)}
function ok(a,b){let c=-1,d=-1,e=-1;var f=b.type;let g=b.typeId;L.isDictionary(f)?(g=f.dictionary.typeId,e=Xj.visit(f,a),d=Xj.visit(f.dictionary,a)):d=Xj.visit(f,a);f=(f.children||[]).map(m=>V.encode(a,m));f=ec(a,f);const k=b.metadata&&b.metadata.size>0?fc(a,[...b.metadata].map(([m,p])=>{m=yb(a,`${m}`);p=yb(a,`${p}`);D(a,2);C(a,0,m);C(a,1,p);return E(a)})):-1;b.name&&(c=yb(a,b.name));D(a,7);C(a,3,d);qb(a,2,g,F.NONE);C(a,5,f);qb(a,1,+!!b.nullable,0);c!==-1&&C(a,0,c);e!==-1&&C(a,4,e);k!==-1&&C(a,6,
k);return E(a)}function sk(a,b){var c=b.N||[],d=b.buffers||[];wb(a,16,c.length,8);for(const e of c.slice().reverse())ek.encode(a,e);c=xb(a);wb(a,16,d.length,8);for(const e of d.slice().reverse())gk.encode(a,e);d=xb(a);D(a,4);tb(a,0,BigInt(b.length));C(a,1,c);C(a,2,d);return E(a)}function uk(a,b){const c=Zj.encode(a,b.data);D(a,3);tb(a,0,BigInt(b.id));qb(a,2,+b.Ja,0);C(a,1,c);return E(a)}
function wk(a,b){var c=BigInt(b.length);b=BigInt(b.nullCount);nb(a,8,16);a.aa(BigInt(b!=null?b:0));a.aa(BigInt(c!=null?c:0));return a.offset()}function yk(a,b){var c=BigInt(b.offset);b=BigInt(b.length);nb(a,8,16);a.aa(BigInt(b!=null?b:0));a.aa(BigInt(c!=null?c:0));return a.offset()}const Fk=new ArrayBuffer(2);(new DataView(Fk)).setInt16(0,256,!0);const Ek=(new Int16Array(Fk))[0]===256;const Gk=a=>`Expected ${H[a]} Message in stream, but was null or length 0.`,Hk=a=>`Header pointer of flatbuffer-encoded ${H[a]} Message is null or length 0.`,Ik=(a,b)=>`Expected to read ${a} metadata bytes, but only read ${b}.`,Jk=(a,b)=>`Expected to read ${a} bytes for message body, but only read ${b}.`;
class Kk{constructor(a){this.source=a instanceof Th?a:new Th(a)}[Symbol.iterator](){return this}next(){let a;return(a=this.readMetadataLength()).done||a.value===-1&&(a=this.readMetadataLength()).done||(a=this.readMetadata(a.value)).done?Mh:a}throw(a){return this.source.throw(a)}return(a){return this.source.return(a)}readMessage(a){let b;if((b=this.next()).done)return null;if(a!=null&&b.value.headerType!==a)throw Error(Gk(a));return b.value}readMessageBody(a){if(a<=0)return new Uint8Array(0);var b=
this.source.read(a);b=u(Uint8Array,b);if(b.byteLength<a)throw Error(Jk(a,b.byteLength));return b.byteOffset%8===0&&b.byteOffset+b.byteLength<=b.buffer.byteLength?b:b.slice()}readSchema(a=!1){const b=H.Schema;let c;const d=(c=this.readMessage(b))==null?void 0:c.header();if(a&&!d)throw Error(Hk(b));return d}readMetadataLength(){var a=this.source.read(4);let b;a=((b=a&&new lb(a))==null?void 0:b.v(0))||0;return{done:a===0,value:a}}readMetadata(a){const b=this.source.read(a);if(!b)return Mh;if(b.byteLength<
a)throw Error(Ik(a,b.byteLength));return{done:!1,value:kk.decode(b)}}}
class Lk{constructor(a,b){this.source=a instanceof Vh?a:t(a)&&q(a.stat)&&typeof a.fd==="number"?new Yh(a,b):new Vh(a)}[Symbol.asyncIterator](){return this}next(){const a=this;return l(function*(){let b;return(b=yield a.readMetadataLength()).done||b.value===-1&&(b=yield a.readMetadataLength()).done||(b=yield a.readMetadata(b.value)).done?Mh:b})}throw(a){const b=this;return l(function*(){return yield b.source.throw(a)})}return(a){const b=this;return l(function*(){return yield b.source.return(a)})}readMessage(a){const b=
this;return l(function*(){let c;if((c=yield b.next()).done)return null;if(a!=null&&c.value.headerType!==a)throw Error(Gk(a));return c.value})}readMessageBody(a){const b=this;return l(function*(){if(a<=0)return new Uint8Array(0);var c=yield b.source.read(a);c=u(Uint8Array,c);if(c.byteLength<a)throw Error(Jk(a,c.byteLength));return c.byteOffset%8===0&&c.byteOffset+c.byteLength<=c.buffer.byteLength?c:c.slice()})}readSchema(a=!1){const b=this;return l(function*(){const c=H.Schema;let d;const e=(d=yield b.readMessage(c))==
null?void 0:d.header();if(a&&!e)throw Error(Hk(c));return e})}readMetadataLength(){const a=this;return l(function*(){var b=yield a.source.read(4);let c;b=((c=b&&new lb(b))==null?void 0:c.v(0))||0;return{done:b===0,value:b}})}readMetadata(a){const b=this;return l(function*(){const c=yield b.source.read(a);if(!c)return Mh;if(c.byteLength<a)throw Error(Ik(a,c.byteLength));return{done:!1,value:kk.decode(c)}})}}
class Mk extends Kk{constructor(a){super(new Uint8Array(0));this.T=!1;this.xa=[];this.Z=this.nb=0;this.na=a instanceof Nh?a:new Nh(a)}next(){var a=this.na;if(!this.T)return this.T=!0,{done:!1,value:kk.fromJSON(a.schema,H.Schema)};if(this.Z<a.dictionaries.length)return a=a.dictionaries[this.Z++],this.xa=a.data.columns,{done:!1,value:kk.fromJSON(a,H.DictionaryBatch)};if(this.nb<a.batches.length)return a=a.batches[this.nb++],this.xa=a.columns,{done:!1,value:kk.fromJSON(a,H.RecordBatch)};this.xa=[];return Mh}readMessageBody(){function a(b){return(b||
[]).reduce((c,d)=>[...c,...(d.VALIDITY&&[d.VALIDITY]||[]),...(d.TYPE_ID&&[d.TYPE_ID]||[]),...(d.OFFSET&&[d.OFFSET]||[]),...(d.DATA&&[d.DATA]||[]),...a(d.children)],[])}return a(this.xa)}readMessage(a){let b;if((b=this.next()).done)return null;if(a!=null&&b.value.headerType!==a)throw Error(Gk(a));return b.value}readSchema(){const a=H.Schema,b=this.readMessage(a),c=b==null?void 0:b.header();if(!b||!c)throw Error(Hk(a));return c}}const Nk=new Uint8Array(6);for(let a=0;a<6;a+=1)Nk[a]="ARROW1".codePointAt(a);
function Ok(a){for(let b=-1,c=Nk.length;++b<c;)if(Nk[b]!==a[0+b])return!1;return!0}const Pk=Nk.length,Qk=Pk+4,Rk=Pk*2+4;class Sk extends Qh{constructor(a){super();this.u=a}get closed(){return this.u.closed}get schema(){return this.u.schema}get autoDestroy(){return this.u.autoDestroy}get dictionaries(){return this.u.dictionaries}get numDictionaries(){return this.u.numDictionaries}get numRecordBatches(){return this.u.numRecordBatches}get footer(){return this.u.isFile()?this.u.footer:null}isSync(){return this.u.isSync()}isAsync(){return this.u.isAsync()}isFile(){return this.u.isFile()}isStream(){return this.u.isStream()}next(){return this.u.next()}throw(a){return this.u.throw(a)}return(a){return this.u.return(a)}cancel(){return this.u.cancel()}reset(a){this.u.reset(a);
this.sb=this.mb=void 0;return this}open(a){a=this.u.open(a);return t(a)&&q(a.then)?a.then(()=>this):this}readRecordBatch(a){return this.u.isFile()?this.u.readRecordBatch(a):null}[Symbol.iterator](){return this.u[Symbol.iterator]()}[Symbol.asyncIterator](){return this.u[Symbol.asyncIterator]()}toDOMStream(){return Ma(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this})}toNodeStream(){return Na(this.isSync()?{[Symbol.iterator]:()=>this}:{[Symbol.asyncIterator]:()=>this})}static throughNode(){throw Error('"throughNode" not available in this environment');
}static throughDOM(){throw Error('"throughDOM" not available in this environment');}static from(a){return a instanceof Sk?a:t(a)&&t(a.schema)?new Tk(new Uk(a)):t(a)&&q(a.stat)&&typeof a.fd==="number"?Vk(a):t(a)&&q(a.then)?(()=>l(function*(){return yield Sk.from(yield a)}))():t(a)&&za(a.body)||za(a)||Aa(a)||t(a)&&q(a[Symbol.asyncIterator])?Wk(new Vh(a)):Xk(new Th(a))}static readAll(a){return a instanceof Sk?a.isSync()?Yk(a):Zk(a):t(a)&&t(a.schema)||ArrayBuffer.isView(a)||t(a)&&q(a[Symbol.iterator])||
t(a)&&"done"in a&&"value"in a?Yk(a):Zk(a)}}class Tk extends Sk{constructor(a){super(a);this.u=a}readAll(){return[...this]}[Symbol.iterator](){return this.u[Symbol.iterator]()}[Symbol.asyncIterator](){const a=this;return new oa(function*(){yield new n(1,a[Symbol.iterator]())}())}}
class $k extends Sk{constructor(a){super(a);this.u=a}readAll(){const a=this;return l(function*(){const b=[];var c;try{for(var d=ia(a);;){var e=yield d.next();if(e.done)break;b.push(e.value)}}catch(g){var f={error:g}}finally{try{e&&!e.done&&(c=d.return)&&(yield c.call(d))}finally{if(f)throw f.error;}}return b})}[Symbol.iterator](){throw Error("AsyncRecordBatchStreamReader is not Iterable");}[Symbol.asyncIterator](){return this.u[Symbol.asyncIterator]()}}
class al extends Tk{constructor(a){super(a);this.u=a}}class bl extends $k{constructor(a){super(a);this.u=a}}function cl(a,b,c){c=a.Sa(b,c,a.schema.fields);b=Q({type:new se(a.schema.fields),length:b.length,children:c});return new Y(a.schema,b)}function dl(a,b,c){var d=b.id;const e=b.Ja,f=a.schema,g=a.dictionaries.get(d);d=f.dictionaries.get(d);a=a.Sa(b.data,c,[d]);return(g&&e?g.concat(new N(a)):new N(a)).memoize()}
class el{get numDictionaries(){return this.Z}get numRecordBatches(){return this.R}constructor(a=new Map){this.closed=!1;this.autoDestroy=!0;this.R=this.Z=0;this.dictionaries=a}isSync(){return!1}isAsync(){return!1}isFile(){return!1}isStream(){return!1}reset(a){this.R=this.Z=0;this.schema=a;this.dictionaries=new Map;return this}Sa(a,b,c){return(new mi(b,a.N,a.buffers,this.dictionaries,this.schema.Ka)).visitMany(c)}}
class fl extends el{constructor(a){super();this.A=t(a)&&t(a.schema)?new Mk(this.J=a):new Kk(this.J=a)}isSync(){return!0}isStream(){return!0}[Symbol.iterator](){return this}cancel(){!this.closed&&(this.closed=!0)&&(this.reset().A.return(),this.dictionaries=this.A=null)}open(a){this.closed||(this.autoDestroy=gl(this,a),this.schema||(this.schema=this.A.readSchema())||this.cancel());return this}throw(a){return!this.closed&&this.autoDestroy&&(this.closed=!0)?this.reset().A.throw(a):Mh}return(a){return!this.closed&&
this.autoDestroy&&(this.closed=!0)?this.reset().A.return(a):Mh}next(){if(this.closed)return Mh;for(var a,b=this.A;a=this.pa();)if(a.isSchema())this.reset(a.header());else{if(a.isRecordBatch()){this.R++;var c=a.header();b=b.readMessageBody(a.bodyLength);return{done:!1,value:cl(this,c,b)}}a.isDictionaryBatch()&&(this.Z++,c=a.header(),a=b.readMessageBody(a.bodyLength),a=dl(this,c,a),this.dictionaries.set(c.id,a))}return this.schema&&this.R===0?(this.R++,{done:!1,value:new Uj(this.schema)}):this.return()}pa(){return this.A.readMessage(void 0)}}
class hl extends el{constructor(a,b){super(b);this.A=new Lk(this.J=a)}isAsync(){return!0}isStream(){return!0}[Symbol.asyncIterator](){return this}cancel(){const a=this;return l(function*(){!a.closed&&(a.closed=!0)&&(yield a.reset().A.return(),a.A=null,a.dictionaries=null)})}open(a){const b=this;return l(function*(){b.closed||(b.autoDestroy=gl(b,a),b.schema||(b.schema=yield b.A.readSchema())||(yield b.cancel()));return b})}throw(a){const b=this;return l(function*(){return!b.closed&&b.autoDestroy&&
(b.closed=!0)?yield b.reset().A.throw(a):Mh})}return(a){const b=this;return l(function*(){return!b.closed&&b.autoDestroy&&(b.closed=!0)?yield b.reset().A.return(a):Mh})}next(){const a=this;return l(function*(){if(a.closed)return Mh;for(var b,c=a.A;b=yield a.pa();)if(b.isSchema())yield a.reset(b.header());else{if(b.isRecordBatch()){a.R++;var d=b.header();c=yield c.readMessageBody(b.bodyLength);return{done:!1,value:cl(a,d,c)}}b.isDictionaryBatch()&&(a.Z++,d=b.header(),b=yield c.readMessageBody(b.bodyLength),
b=dl(a,d,b),a.dictionaries.set(d.id,b))}return a.schema&&a.R===0?(a.R++,{done:!1,value:new Uj(a.schema)}):yield a.return()})}pa(){const a=this;return l(function*(){return yield a.A.readMessage(void 0)})}}
class il extends fl{get footer(){return this.m}get numDictionaries(){return this.m?this.m.numDictionaries:0}get numRecordBatches(){return this.m?this.m.numRecordBatches:0}constructor(a){super(a instanceof Xh?a:new Xh(a))}isSync(){return!0}isFile(){return!0}open(a){if(!this.closed&&!this.m){this.schema=(this.m=this.Wa()).schema;for(const b of Ih(this.m))b&&this.Va(this.Z++)}return super.open(a)}readRecordBatch(a){if(this.closed)return null;this.m||this.open();var b;const c=(b=this.m)==null?void 0:
b.ga(a);return c&&this.J.seek(c.offset)&&(b=this.A.readMessage(H.RecordBatch),b==null?0:b.isRecordBatch())?(a=b.header(),b=this.A.readMessageBody(b.bodyLength),cl(this,a,b)):null}Va(a){var b;const c=(b=this.m)==null?void 0:b.Ia(a);c&&this.J.seek(c.offset)&&(b=this.A.readMessage(H.DictionaryBatch),b==null?0:b.isDictionaryBatch())&&(a=b.header(),b=this.A.readMessageBody(b.bodyLength),b=dl(this,a,b),this.dictionaries.set(a.id,b))}Wa(){var a=this.J;const b=a.size-Qk,c=a.v(b);a=a.ha(b-c,c);return Jh.decode(a)}pa(){this.m||
this.open();if(this.m&&this.R<this.numRecordBatches){let a;const b=(a=this.m)==null?void 0:a.ga(this.R);if(b&&this.J.seek(b.offset))return this.A.readMessage(void 0)}return null}}
class jl extends hl{get footer(){return this.m}get numDictionaries(){return this.m?this.m.numDictionaries:0}get numRecordBatches(){return this.m?this.m.numRecordBatches:0}constructor(a){var b=[];const c=typeof b[0]!=="number"?b.shift():void 0;b=b[0]instanceof Map?b.shift():void 0;super(a instanceof Yh?a:new Yh(a,c),b)}isFile(){return!0}isAsync(){return!0}open(a){const b=this,c=()=>super.open;return l(function*(){if(!b.closed&&!b.m){b.schema=(b.m=yield b.Wa()).schema;for(const d of Ih(b.m))d&&(yield b.Va(b.Z++))}return yield c().call(b,
a)})}readRecordBatch(a){const b=this;return l(function*(){if(b.closed)return null;b.m||(yield b.open());var c,d=(c=b.m)==null?void 0:c.ga(a);return d&&(yield b.J.seek(d.offset))&&(d=yield b.A.readMessage(H.RecordBatch),d==null?0:d.isRecordBatch())?(c=d.header(),d=yield b.A.readMessageBody(d.bodyLength),cl(b,c,d)):null})}Va(a){const b=this;return l(function*(){var c,d=(c=b.m)==null?void 0:c.Ia(a);d&&(yield b.J.seek(d.offset))&&(d=yield b.A.readMessage(H.DictionaryBatch),d==null?0:d.isDictionaryBatch())&&
(c=d.header(),d=yield b.A.readMessageBody(d.bodyLength),d=dl(b,c,d),b.dictionaries.set(c.id,d))})}Wa(){const a=this;return l(function*(){var b=a.J;b.H&&(yield b.H);const c=b.size-Qk,d=yield b.v(c);b=yield b.ha(c-d,d);return Jh.decode(b)})}pa(){const a=this;return l(function*(){a.m||(yield a.open());if(a.m&&a.R<a.numRecordBatches){const b=a.m.ga(a.R);if(b&&(yield a.J.seek(b.offset)))return yield a.A.readMessage(void 0)}return null})}}
class Uk extends fl{Sa(a,b,c){return(new ni(b,a.N,a.buffers,this.dictionaries,this.schema.Ka)).visitMany(c)}}function gl(a,b){return b&&typeof b.autoDestroy==="boolean"?b.autoDestroy:a.autoDestroy}function*Yk(a){a=Sk.from(a);try{if(!a.open({autoDestroy:!1}).closed){do yield a;while(!a.reset().open().closed)}}finally{a.cancel()}}
function Zk(a){return new oa(function*(){const b=yield new n(2,Sk.from(a));try{if(!(yield new n(2,b.open({autoDestroy:!1}))).closed){do yield new n(0,b);while(!(yield new n(2,b.reset().open())).closed)}}finally{yield new n(2,b.cancel())}}())}function Xk(a){const b=a.peek(Pk+7&-8);return b&&b.byteLength>=4?Ok(b)?new al(new il(a.read())):new Tk(new fl(a)):new Tk(new fl(function*(){}()))}
function Wk(a){return l(function*(){const b=yield a.peek(Pk+7&-8);return b&&b.byteLength>=4?Ok(b)?new al(new il(yield a.read())):new $k(new hl(a)):new $k(new hl(function(){return new oa(function*(){}())}()))})}function Vk(a){return l(function*(){const {size:b}=yield a.stat(),c=new Yh(a,b);return b>=Rk&&Ok(yield c.ha(0,Pk+7&-8))?new bl(new jl(c)):new $k(new hl(c))})};class kl extends Ue{static sa(...a){const b=d=>d.flatMap(e=>Array.isArray(e)?b(e):e instanceof Y?e.data.children:e.data),c=new kl;c.visitMany(b(a));return c}constructor(){super();this.ya=0;this.Ta=[];this.Na=[];this.Lb=[]}visit(a){if(a instanceof N)return this.visitMany(a.data),this;const b=a.type;if(!L.isDictionary(b)){const c=a.length;if(c>2147483647)throw new RangeError("Cannot write arrays larger than 2^31 - 1 in length");if(L.isUnion(b))this.N.push(new ek(c,0));else{const d=a.nullCount;L.isNull(b)||
ll.call(this,d<=0?new Uint8Array(0):Og(a.offset,c,a.nullBitmap));this.N.push(new ek(c,d))}}return super.visit(a)}visitNull(){return this}visitDictionary(a){return this.visit(a.clone(a.type.indices))}get N(){return this.Ta}get buffers(){return this.Na}get byteLength(){return this.ya}get ab(){return this.Lb}}function ll(a){const b=a.byteLength+7&-8;this.buffers.push(a);this.ab.push(new gk(this.ya,b));this.ya+=b;return this}function ml(a){return ll.call(this,a.values.subarray(0,a.length*a.stride))}
function nl(a){const b=a.length,c=a.values;a=a.valueOffsets;const d=K(a[0]);var e=K(a[b]);e=Math.min(e-d,c.byteLength-d);ll.call(this,Ka(-d,b+1,a));ll.call(this,c.subarray(d,d+e));return this}function ol(a){const b=a.length,c=a.valueOffsets;if(c){const {[0]:d,[b]:e}=c;ll.call(this,Ka(-d,b+1,c));return this.visit(a.children[0].slice(d,e-d))}return this.visit(a.children[0])}function pl(a){return this.visitMany(a.type.children.map((b,c)=>a.children[c]).filter(Boolean))[0]}h=kl.prototype;
h.visitBool=function(a){let b;return a.nullCount>=a.length?ll.call(this,new Uint8Array(0)):(b=a.values)instanceof Uint8Array?ll.call(this,Og(a.offset,a.length,b)):ll.call(this,Pg(a.values))};h.visitInt=ml;h.visitFloat=ml;h.visitUtf8=nl;h.visitLargeUtf8=nl;h.visitBinary=nl;h.visitLargeBinary=nl;h.visitFixedSizeBinary=ml;h.visitDate=ml;h.visitTimestamp=ml;h.visitTime=ml;h.visitDecimal=ml;h.visitList=ol;h.visitStruct=pl;
h.visitUnion=function(a){const b=a.type,c=a.length,d=a.typeIds,e=a.valueOffsets;ll.call(this,d);if(b.mode===x.Sparse)return pl.call(this,a);if(b.mode===x.Dense){if(a.offset<=0)return ll.call(this,e),pl.call(this,a);const f=new Int32Array(c),g=Object.create(null),k=Object.create(null);for(let m,p,r=-1;++r<c;){if((m=d[r])===void 0)continue;(p=g[m])===void 0&&(p=g[m]=e[r]);f[r]=e[r]-p;let U;k[m]=((U=k[m])!=null?U:0)+1}ll.call(this,f);this.visitMany(a.children.map((m,p)=>{p=b.typeIds[p];return m.slice(g[p],
Math.min(c,k[p]))}))}return this};h.visitInterval=ml;h.visitDuration=ml;h.visitFixedSizeList=ol;h.visitMap=ol;class ql extends Ue{visit(a){return a==null?void 0:super.visit(a)}visitNull({typeId:a}){return{name:F[a].toLowerCase()}}visitInt({typeId:a,bitWidth:b,isSigned:c}){return{name:F[a].toLowerCase(),bitWidth:b,isSigned:c}}visitFloat({typeId:a,precision:b}){return{name:F[a].toLowerCase(),precision:y[b]}}visitBinary({typeId:a}){return{name:F[a].toLowerCase()}}visitLargeBinary({typeId:a}){return{name:F[a].toLowerCase()}}visitBool({typeId:a}){return{name:F[a].toLowerCase()}}visitUtf8({typeId:a}){return{name:F[a].toLowerCase()}}visitLargeUtf8({typeId:a}){return{name:F[a].toLowerCase()}}visitDecimal({typeId:a,
scale:b,precision:c,bitWidth:d}){return{name:F[a].toLowerCase(),scale:b,precision:c,bitWidth:d}}visitDate({typeId:a,unit:b}){return{name:F[a].toLowerCase(),unit:Ya[b]}}visitTime({typeId:a,unit:b,bitWidth:c}){return{name:F[a].toLowerCase(),unit:z[b],bitWidth:c}}visitTimestamp({typeId:a,timezone:b,unit:c}){return{name:F[a].toLowerCase(),unit:z[c],timezone:b}}visitInterval({typeId:a,unit:b}){return{name:F[a].toLowerCase(),unit:A[b]}}visitDuration({typeId:a,unit:b}){return{name:F[a].toLocaleLowerCase(),
unit:z[b]}}visitList({typeId:a}){return{name:F[a].toLowerCase()}}visitStruct({typeId:a}){return{name:F[a].toLowerCase()}}visitUnion({typeId:a,mode:b,typeIds:c}){return{name:F[a].toLowerCase(),mode:x[b].toUpperCase(),typeIds:[...c]}}visitDictionary(a){return this.visit(a.dictionary)}visitFixedSizeBinary({typeId:a,byteWidth:b}){return{name:F[a].toLowerCase(),byteWidth:b}}visitFixedSizeList({typeId:a,listSize:b}){return{name:F[a].toLowerCase(),listSize:b}}visitMap({typeId:a,keysSorted:b}){return{name:F[a].toLowerCase(),
keysSorted:b}}};class rl extends Ue{static sa(...a){const b=new rl;return a.map(({schema:c,data:d})=>b.visitMany(c.fields,d.children))}visit({name:a},b){const c=b.length,d=b.offset,e=b.nullCount,f=b.nullBitmap,g=L.isDictionary(b.type)?b.type.indices:b.type,k=Object.assign([],b.buffers,{[sc.VALIDITY]:void 0});return Object.assign({},{name:a,count:c,VALIDITY:L.isNull(g)||L.isUnion(g)?void 0:e<=0?Array.from({length:c},()=>1):[...(new Qg(f,d,c,null,Ng))]},super.visit(b.clone(g,d,c,0,k)))}visitNull(){return{}}visitBool({values:a,
offset:b,length:c}){return{DATA:[...(new Qg(a,b,c,null,Mg))]}}visitInt(a){return{DATA:a.type.bitWidth<64?[...a.values]:[...sl(a.values,2)]}}visitFloat(a){return{DATA:[...a.values]}}visitUtf8(a){return{DATA:[...(new N([a]))],OFFSET:[...a.valueOffsets]}}visitLargeUtf8(a){return{DATA:[...(new N([a]))],OFFSET:[...sl(a.valueOffsets,2)]}}visitBinary(a){return{DATA:[...tl(new N([a]))],OFFSET:[...a.valueOffsets]}}visitLargeBinary(a){return{DATA:[...tl(new N([a]))],OFFSET:[...sl(a.valueOffsets,2)]}}visitFixedSizeBinary(a){return{DATA:[...tl(new N([a]))]}}visitDate(a){return{DATA:a.type.unit===
Ya.DAY?[...a.values]:[...sl(a.values,2)]}}visitTimestamp(a){return{DATA:[...sl(a.values,2)]}}visitTime(a){return{DATA:a.type.unit<z.MICROSECOND?[...a.values]:[...sl(a.values,2)]}}visitDecimal(a){return{DATA:[...sl(a.values,4)]}}visitList(a){return{OFFSET:[...a.valueOffsets],children:this.visitMany(a.type.children,a.children)}}visitStruct(a){return{children:this.visitMany(a.type.children,a.children)}}visitUnion(a){return{TYPE_ID:[...a.typeIds],OFFSET:a.type.mode===x.Dense?[...a.valueOffsets]:void 0,
children:this.visitMany(a.type.children,a.children)}}visitInterval(a){switch(a.type.unit){case A.YEAR_MONTH:return{DATA:[...a.values]};case A.DAY_TIME:return{DATA:ii(a.values)};case A.MONTH_DAY_NANO:return{DATA:ji(a.values,!0)}}}visitDuration(a){return{DATA:[...sl(a.values,2)]}}visitFixedSizeList(a){return{children:this.visitMany(a.type.children,a.children)}}visitMap(a){return{OFFSET:[...a.valueOffsets],children:this.visitMany(a.type.children,a.children)}}}
function*tl(a){for(const b of a)yield b.reduce((c,d)=>`${c}${("0"+(d&255).toString(16)).slice(-2)}`,"").toUpperCase()}function*sl(a,b){a=new Uint32Array(a.buffer);for(let c=-1,d=a.length/b;++c<d;)yield`${Hc.new(a.subarray((c+0)*b,(c+1)*b),!1)}`};function ul(a,b){a.qa&&(b=u(Uint8Array,b))&&b.byteLength>0&&(a.I.write(b),a.oa+=b.byteLength);return a}function vl(a,b){return b>0?ul(a,new Uint8Array(b)):a}function wl(a,b){let c,d,e;for(let f=-1,g=b.length;++f<g;)(c=b[f])&&(d=c.byteLength)>0&&(ul(a,c),(e=(d+7&-8)-d)>0&&vl(a,e));return a}
class xl extends Qh{static throughNode(){throw Error('"throughNode" not available in this environment');}static throughDOM(){throw Error('"throughDOM" not available in this environment');}constructor(a){super();this.oa=0;this.qa=!1;this.I=new Sh;this.T=null;this.ma=[];this.Aa=[];this.Ca=new Map;this.Qa=new Map;t(a)||(a={autoDestroy:!0,Hb:!1});this.wa=typeof a.autoDestroy==="boolean"?a.autoDestroy:!0;this.Xa=typeof a.Hb==="boolean"?a.Hb:!1}toString(a=!1){return this.I.toString(a)}toUint8Array(a=!1){return this.I.toUint8Array(a)}writeAll(a){return t(a)&&
q(a.then)?a.then(b=>this.writeAll(b)):t(a)&&q(a[Symbol.asyncIterator])?yl(this,a):zl(this,a)}get closed(){return this.I.closed}[Symbol.asyncIterator](){return this.I[Symbol.asyncIterator]()}toDOMStream(a){return this.I.toDOMStream(a)}toNodeStream(a){return this.I.toNodeStream(a)}close(){return this.reset().I.close()}abort(a){return this.reset().I.abort(a)}finish(){this.wa?this.close():this.reset(this.I,this.T);return this}reset(a=this.I,b=null){a===this.I||a instanceof Sh?this.I=a:(this.I=new Sh,
a&&t(a)&&q(a.abort)&&q(a.getWriter)&&!ya(a)?this.toDOMStream({type:"bytes"}).pipeTo(a):a&&t(a)&&q(a.end)&&q(a.write)&&typeof a.writable==="boolean"&&!ya(a)&&Ph(this.toNodeStream({jc:!1}),a));this.qa&&this.T&&this.Ea(this.T);this.qa=!1;this.ma=[];this.Aa=[];this.Ca=new Map;this.Qa=new Map;b&&Fj(b,this.T)||(b==null?(this.oa=0,this.T=null):(this.qa=!0,this.T=b,this.Ya(b)));return this}write(a){let b=null;if(this.I){if(a==null||a instanceof Nj&&!(b=a.schema)||a instanceof Y&&!(b=a.schema))return this.finish()&&
void 0}else throw Error("RecordBatchWriter is closed");if(b&&!Fj(b,this.T)){if(this.qa&&this.wa)return this.close();this.reset(this.I,b)}a instanceof Y?a instanceof Uj||this.ub(a):a instanceof Nj?this.writeAll(a.batches):t(a)&&q(a[Symbol.iterator])&&this.writeAll(a)}Fa(a){const b=kk.encode(a),c=b.byteLength,d=this.Xa?4:8,e=c+d+7&-8,f=e-c-d;a.headerType===H.RecordBatch?this.Aa.push(new Lh(e,a.bodyLength,this.oa)):a.headerType===H.DictionaryBatch&&this.ma.push(new Lh(e,a.bodyLength,this.oa));this.Xa||
ul(this,Int32Array.of(-1));ul(this,Int32Array.of(e-d));c>0&&ul(this,b);return vl(this,f)}Ya(a){this.Fa(kk.from(a))}Ea(){return this.Xa?ul(this,Int32Array.of(0)):ul(this,Int32Array.of(-1,0))}ub(a){const {byteLength:b,N:c,ab:d,buffers:e}=kl.sa(a);var f=new Zj(a.numRows,c,d);f=kk.from(f,b);wl(this.Da(a).Fa(f),e)}ra(a,b,c=!1){const {byteLength:d,N:e,ab:f,buffers:g}=kl.sa(new N([a]));a=new Zj(a.length,e,f);b=new nk(a,b,c);b=kk.from(b,d);return wl(this.Fa(b),g)}Da(a){for(const [b,c]of a.dictionaries){let d,
e;a=(e=(d=c)==null?void 0:d.data)!=null?e:[];const f=this.Ca.get(b);let g;const k=(g=this.Qa.get(b))!=null?g:0;if(!f||f.data[0]!==a[0])for(const [m,p]of a.entries())this.ra(p,b,m>0);else if(k<a.length)for(const m of a.slice(k))this.ra(m,b,!0);this.Ca.set(b,c);this.Qa.set(b,a.length)}return this}}class Al extends xl{static writeAll(a,b){const c=new Al(b);return t(a)&&q(a.then)?a.then(d=>c.writeAll(d)):t(a)&&q(a[Symbol.asyncIterator])?yl(c,a):zl(c,a)}}
class Bl extends xl{static writeAll(a){const b=new Bl;return t(a)&&q(a.then)?a.then(c=>b.writeAll(c)):t(a)&&q(a[Symbol.asyncIterator])?yl(b,a):zl(b,a)}constructor(){super();this.wa=!0}Ya(){vl(ul(this,Nk),2)}ra(a,b,c=!1){if(!c&&this.Ca.has(b))throw Error("The Arrow File format does not support replacement dictionaries. ");return super.ra(a,b,c)}Ea(a){const b=Jh.encode(new Jh(a,w.V5,this.Aa,this.ma));a=ul(ul(super.Ea(a),b),Int32Array.of(b.byteLength));return ul(a,Nk)}}
class Cl extends xl{static writeAll(a){return(new Cl).writeAll(a)}constructor(){super();this.wa=!0;this.ba=[];this.Ba=[]}Fa(){return this}Ea(){return this}Ya(a){ul(this,`{\n  "schema": ${JSON.stringify({fields:a.fields.map(b=>Dl(b))},null,2)}`)}Da(a){a.dictionaries.size>0&&this.Ba.push(a);return this}ra(a,b,c=!1){ul(this,this.ma.length===0?"    ":",\n    ");ul(this,El(a,b,c));this.ma.push(new Lh(0,0,0));return this}ub(a){this.Da(a);this.ba.push(a)}close(){if(this.Ba.length>0){ul(this,',\n  "dictionaries": [\n');
for(var a of this.Ba)super.Da(a);ul(this,"\n  ]")}if(this.ba.length>0){for(let b=-1,c=this.ba.length;++b<c;){ul(this,b===0?',\n  "batches": [\n    ':",\n    ");a=this.ba[b];const [d]=rl.sa(a);a=JSON.stringify({count:a.numRows,columns:d},null,2);ul(this,a);this.Aa.push(new Lh(0,0,0))}ul(this,"\n  ]")}this.T&&ul(this,"\n}");this.Ba=[];this.ba=[];return super.close()}}function zl(a,b){let c=b;b instanceof Nj&&(c=b.batches,a.reset(void 0,b.schema));for(const d of c)a.write(d);return a.finish()}
function yl(a,b){return l(function*(){var c;try{for(var d=ia(b);;){var e=yield d.next();if(e.done)break;a.write(e.value)}}catch(g){var f={error:g}}finally{try{e&&!e.done&&(c=d.return)&&(yield c.call(d))}finally{if(f)throw f.error;}}return a.finish()})}function Dl({name:a,type:b,nullable:c}){const d=new ql;return{name:a,nullable:c,type:d.visit(b),children:(b.children||[]).map(e=>Dl(e)),dictionary:L.isDictionary(b)?{id:b.id,isOrdered:b.isOrdered,indexType:d.visit(b.indices)}:void 0}}
function El(a,b,c=!1){const [d]=rl.sa(new Y({[b]:a}));return JSON.stringify({id:b,isDelta:c,data:{count:a.length,columns:d}},null,2)};function Fl(a,b){function c(g,k){let m,p,r=g.desiredSize||null;for(;!(p=k.next(e?r:null)).done;)if(ArrayBuffer.isView(p.value)&&(m=u(Uint8Array,p.value))&&(r!=null&&e&&(r=r-m.byteLength+1),p.value=m),g.enqueue(p.value),r!=null&&--r<=0)return;g.close()}let d=null;const e=(b==null?void 0:b.type)==="bytes"||!1,f=(b==null?void 0:b.highWaterMark)||16777216;return new ReadableStream(Object.assign({},b,{start(g){c(g,d||(d=a[Symbol.iterator]()))},pull(g){d?c(g,d):g.close()},cancel(){let g;((g=d)==null?0:
g.return)&&d.return();d=null}}),Object.assign({},{highWaterMark:e?f:void 0},b))}
function Gl(a,b){function c(g,k){return l(function*(){let m,p,r=g.desiredSize||null;for(;!(p=yield k.next(e?r:null)).done;)if(ArrayBuffer.isView(p.value)&&(m=u(Uint8Array,p.value))&&(r!=null&&e&&(r=r-m.byteLength+1),p.value=m),g.enqueue(p.value),r!=null&&--r<=0)return;g.close()})}let d=null;const e=(b==null?void 0:b.type)==="bytes"||!1,f=(b==null?void 0:b.highWaterMark)||16777216;return new ReadableStream(Object.assign({},b,{start(g){return l(function*(){yield c(g,d||(d=a[Symbol.asyncIterator]()))})},
pull(g){return l(function*(){d?yield c(g,d):g.close()})},cancel(){return l(function*(){let g;((g=d)==null?0:g.return)&&(yield d.return());d=null})}}),Object.assign({},{highWaterMark:e?f:void 0},b))};function Hl(a,b,c){c!=null&&(a.ka>=c.desiredSize&&++a.Ua&&Il(a,c,b.toVector()),b.finished&&((b.length>0||a.Ua===0)&&++a.Ua&&Il(a,c,b.toVector()),!a.pb&&(a.pb=!0)&&Il(a,c,null)))}function Il(a,b,c){a.ka=0;a.la=null;c==null?b.close():b.enqueue(c)}
class Jl{constructor(a){this.Ua=0;this.pb=!1;this.ka=0;var b=Object.assign({},a),c=a.readableStrategy,d=a.writableStrategy;a=a.queueingStrategy;a=a===void 0?"count":a;b=(delete b.readableStrategy,delete b.writableStrategy,delete b.queueingStrategy,b);this.la=null;this.da=xi(b);this.Pb=a!=="bytes"?Kl:Ll;({highWaterMark:c=a==="bytes"?16384:1E3}=Object.assign({},c));({highWaterMark:d=a==="bytes"?16384:1E3}=Object.assign({},d));this.readable=new ReadableStream({cancel:()=>{this.da.clear()},pull:e=>{Hl(this,
this.da,this.la=e)},start:e=>{Hl(this,this.da,this.la=e)}},{highWaterMark:c,size:a!=="bytes"?Kl:Ll});this.writable=new WritableStream({abort:()=>{this.da.clear()},write:()=>{Hl(this,this.da,this.la)},close:()=>{Hl(this,this.da.finish(),this.la)}},{highWaterMark:d,size:e=>{const f=this.ka;this.ka=this.Pb(this.da.append(e));return this.ka-f}})}}const Kl=a=>{let b;return(b=a==null?void 0:a.length)!=null?b:0},Ll=a=>{let b;return(b=a==null?void 0:a.byteLength)!=null?b:0};function Ml(a,b){function c(){return l(function*(){return yield(yield Sk.from(e)).open(b)})}function d(k,m){return l(function*(){let p=k.desiredSize,r;for(;!(r=yield m.next()).done;)if(k.enqueue(r.value),p!=null&&--p<=0)return;k.close()})}const e=new Sh;let f=null;const g=new ReadableStream({cancel(){return l(function*(){yield e.close()})},start(k){return l(function*(){yield d(k,f||(f=yield c()))})},pull(k){return l(function*(){f?yield d(k,f):k.close()})}});return{writable:new WritableStream(e,Object.assign({},
{highWaterMark:16384},a)),readable:g}};function Nl(a,b){function c(f){return l(function*(){let g,k=f.desiredSize;for(;g=yield e.read(k||null);)if(f.enqueue(g),k!=null&&(k-=g.byteLength)<=0)return;f.close()})}const d=new this(a),e=new Vh(d);b=new ReadableStream({cancel(){return l(function*(){yield e.cancel()})},pull(f){return l(function*(){yield c(f)})},start(f){return l(function*(){yield c(f)})}},Object.assign({},{highWaterMark:16384},b));return{writable:new WritableStream(d,a),readable:b}};function Ol(a){a=Sk.from(a);return t(a)&&q(a.then)?a.then(b=>Ol(b)):a.isAsync()?a.readAll().then(b=>new Nj(b)):new Nj(a.readAll())};const Pl=Object.assign({},Ic,fi,Ug,bf,v,Lg,vc,ki,{compareSchemas:Fj,compareFields:function(a,b){return Cj.compareFields(a,b)},compareTypes:Gj});Ma=function(a,b){if(t(a)&&q(a[Symbol.asyncIterator]))return Gl(a,b);if(t(a)&&q(a[Symbol.iterator]))return Fl(a,b);throw Error("toDOMStream() must be called with an Iterable or AsyncIterable");};Ah.throughDOM=function(a){return new Jl(a)};Sk.throughDOM=Ml;al.throughDOM=Ml;Tk.throughDOM=Ml;xl.throughDOM=Nl;Bl.throughDOM=Nl;Al.throughDOM=Nl;var Z={};Z.AsyncByteQueue=Sh;Z.AsyncByteStream=Vh;Z.AsyncMessageReader=Lk;Z.AsyncRecordBatchFileReader=bl;Z.AsyncRecordBatchStreamReader=$k;Z.Binary=gd;
Z.BinaryBuilder=pi;Z.Bool=wd;Z.BoolBuilder=ri;Z.BufferType=sc;Z.Builder=Ah;Z.ByteStream=Th;Z.Data=P;Z.DataType=L;Z.DateBuilder=si;Z.DateDay=Id;Z.DateDayBuilder=ti;Z.DateMillisecond=Jd;Z.DateMillisecondBuilder=ui;Z.DateUnit=Ya;Z.Date_=Ed;Z.Decimal=Ad;Z.DecimalBuilder=vi;Z.DenseUnion=Ae;Z.DenseUnionBuilder=lj;Z.Dictionary=Pe;Z.DictionaryBuilder=wi;Z.Duration=ge;Z.DurationBuilder=Ii;Z.DurationMicrosecond=me;Z.DurationMicrosecondBuilder=Li;Z.DurationMillisecond=le;Z.DurationMillisecondBuilder=Ki;
Z.DurationNanosecond=ne;Z.DurationNanosecondBuilder=Mi;Z.DurationSecond=ke;Z.DurationSecondBuilder=Ji;Z.Field=V;Z.FixedSizeBinary=Ce;Z.FixedSizeBinaryBuilder=yi;Z.FixedSizeList=Ge;Z.FixedSizeListBuilder=zi;Z.Float=$c;Z.Float16=dd;Z.Float16Builder=Bi;Z.Float32=ed;Z.Float32Builder=Ci;Z.Float64=fd;Z.Float64Builder=Di;Z.FloatBuilder=Ai;Z.Int=Oc;Z.Int16=Tc;Z.Int16Builder=Pi;Z.Int32=Uc;Z.Int32Builder=Qi;Z.Int64=Vc;Z.Int64Builder=Ri;Z.Int8=Sc;Z.Int8Builder=Oi;Z.IntBuilder=Ni;Z.Interval=$d;
Z.IntervalBuilder=Ei;Z.IntervalDayTime=de;Z.IntervalDayTimeBuilder=Fi;Z.IntervalMonthDayNano=fe;Z.IntervalMonthDayNanoBuilder=Hi;Z.IntervalUnit=A;Z.IntervalYearMonth=ee;Z.IntervalYearMonthBuilder=Gi;Z.JSONMessageReader=Mk;Z.LargeBinary=kd;Z.LargeBinaryBuilder=qi;Z.LargeUtf8=sd;Z.LargeUtf8Builder=nj;Z.List=oe;Z.ListBuilder=Wi;Z.MapBuilder=Xi;Z.MapRow=ug;Z.Map_=Ke;Z.Message=kk;Z.MessageHeader=H;Z.MessageReader=Kk;Z.MetadataVersion=w;Z.Null=Mc;Z.NullBuilder=Yi;Z.Precision=y;Z.RecordBatch=Y;
Z.RecordBatchFileReader=al;Z.RecordBatchFileWriter=Bl;Z.RecordBatchJSONWriter=Cl;Z.RecordBatchReader=Sk;Z.RecordBatchStreamReader=Tk;Z.RecordBatchStreamWriter=Al;Z.RecordBatchWriter=xl;Z.Schema=T;Z.SparseUnion=Be;Z.SparseUnionBuilder=kj;Z.Struct=se;Z.StructBuilder=Zi;Z.StructRow=Rf;Z.Table=Nj;Z.Time=Kd;Z.TimeBuilder=ej;Z.TimeMicrosecond=Qd;Z.TimeMicrosecondBuilder=hj;Z.TimeMillisecond=Pd;Z.TimeMillisecondBuilder=gj;Z.TimeNanosecond=Rd;Z.TimeNanosecondBuilder=ij;Z.TimeSecond=Od;
Z.TimeSecondBuilder=fj;Z.TimeUnit=z;Z.Timestamp=Sd;Z.TimestampBuilder=$i;Z.TimestampMicrosecond=Yd;Z.TimestampMicrosecondBuilder=cj;Z.TimestampMillisecond=Xd;Z.TimestampMillisecondBuilder=bj;Z.TimestampNanosecond=Zd;Z.TimestampNanosecondBuilder=dj;Z.TimestampSecond=Wd;Z.TimestampSecondBuilder=aj;Z.Type=I;Z.Uint16=Xc;Z.Uint16Builder=Ti;Z.Uint32=Yc;Z.Uint32Builder=Ui;Z.Uint64=Zc;Z.Uint64Builder=Vi;Z.Uint8=Wc;Z.Uint8Builder=Si;Z.Union=we;Z.UnionBuilder=jj;Z.UnionMode=x;Z.Utf8=od;Z.Utf8Builder=mj;
Z.Vector=N;Z.Visitor=Ue;
Z.builderThroughAsyncIterable=function(a){const {queueingStrategy:b="count"}=a,{highWaterMark:c=b!=="bytes"?Number.POSITIVE_INFINITY:16384}=a,d=b!=="bytes"?"length":"byteLength";return function(e){return new oa(function*(){let f=0;const g=xi(a);var k;try{for(var m=ia(e);;){var p=yield new n(2,m.next());if(p.done)break;g.append(p.value)[d]>=c&&++f&&(yield new n(0,g.toVector()))}}catch(U){var r={error:U}}finally{try{p&&!p.done&&(k=m.return)&&(yield new n(2,k.call(m)))}finally{if(r)throw r.error;}}if(g.finish().length>
0||f===0)yield new n(0,g.toVector())}())}};Z.builderThroughIterable=Jj;Z.makeBuilder=xi;Z.makeData=Q;Z.makeTable=function(a){const b={};a=Object.entries(a);for(const [c,d]of a)b[c]=rh(d);return new Nj(b)};Z.makeVector=rh;Z.tableFromArrays=function(a){const b={};a=Object.entries(a);for(const [c,d]of a)b[c]=Hj(d);return new Nj(b)};Z.tableFromIPC=Ol;Z.tableFromJSON=function(a){a=Hj(a);a=new Y(new T(a.type.children),a.data[0]);return new Nj(a)};
Z.tableToIPC=function(a,b="stream"){return(b==="stream"?Al:Bl).writeAll(a).toUint8Array(!0)};Z.util=Pl;Z.vectorFromArray=Hj;Object.assign(arguments[0],Z);}.bind(this))));

//# sourceMappingURL=Arrow.es2015.min.js.map
", "name": "unpkg_com_Arrow_es2015_min_js"}, "https://unpkg.com/d3@latest/dist/d3.min.js": {"encoded_content": "// https://d3js.org v7.9.0 Copyright 2010-2023 Mike Bostock
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t="undefined"!=typeof globalThis?globalThis:t||self).d3=t.d3||{})}(this,(function(t){"use strict";function n(t,n){return null==t||null==n?NaN:t<n?-1:t>n?1:t>=n?0:NaN}function e(t,n){return null==t||null==n?NaN:n<t?-1:n>t?1:n>=t?0:NaN}function r(t){let r,o,a;function u(t,n,e=0,i=t.length){if(e<i){if(0!==r(n,n))return i;do{const r=e+i>>>1;o(t[r],n)<0?e=r+1:i=r}while(e<i)}return e}return 2!==t.length?(r=n,o=(e,r)=>n(t(e),r),a=(n,e)=>t(n)-e):(r=t===n||t===e?t:i,o=t,a=t),{left:u,center:function(t,n,e=0,r=t.length){const i=u(t,n,e,r-1);return i>e&&a(t[i-1],n)>-a(t[i],n)?i-1:i},right:function(t,n,e=0,i=t.length){if(e<i){if(0!==r(n,n))return i;do{const r=e+i>>>1;o(t[r],n)<=0?e=r+1:i=r}while(e<i)}return e}}}function i(){return 0}function o(t){return null===t?NaN:+t}const a=r(n),u=a.right,c=a.left,f=r(o).center;var s=u;const l=d(y),h=d((function(t){const n=y(t);return(t,e,r,i,o)=>{n(t,e,(r<<=2)+0,(i<<=2)+0,o<<=2),n(t,e,r+1,i+1,o),n(t,e,r+2,i+2,o),n(t,e,r+3,i+3,o)}}));function d(t){return function(n,e,r=e){if(!((e=+e)>=0))throw new RangeError("invalid rx");if(!((r=+r)>=0))throw new RangeError("invalid ry");let{data:i,width:o,height:a}=n;if(!((o=Math.floor(o))>=0))throw new RangeError("invalid width");if(!((a=Math.floor(void 0!==a?a:i.length/o))>=0))throw new RangeError("invalid height");if(!o||!a||!e&&!r)return n;const u=e&&t(e),c=r&&t(r),f=i.slice();return u&&c?(p(u,f,i,o,a),p(u,i,f,o,a),p(u,f,i,o,a),g(c,i,f,o,a),g(c,f,i,o,a),g(c,i,f,o,a)):u?(p(u,i,f,o,a),p(u,f,i,o,a),p(u,i,f,o,a)):c&&(g(c,i,f,o,a),g(c,f,i,o,a),g(c,i,f,o,a)),n}}function p(t,n,e,r,i){for(let o=0,a=r*i;o<a;)t(n,e,o,o+=r,1)}function g(t,n,e,r,i){for(let o=0,a=r*i;o<r;++o)t(n,e,o,o+a,r)}function y(t){const n=Math.floor(t);if(n===t)return function(t){const n=2*t+1;return(e,r,i,o,a)=>{if(!((o-=a)>=i))return;let u=t*r[i];const c=a*t;for(let t=i,n=i+c;t<n;t+=a)u+=r[Math.min(o,t)];for(let t=i,f=o;t<=f;t+=a)u+=r[Math.min(o,t+c)],e[t]=u/n,u-=r[Math.max(i,t-c)]}}(t);const e=t-n,r=2*t+1;return(t,i,o,a,u)=>{if(!((a-=u)>=o))return;let c=n*i[o];const f=u*n,s=f+u;for(let t=o,n=o+f;t<n;t+=u)c+=i[Math.min(a,t)];for(let n=o,l=a;n<=l;n+=u)c+=i[Math.min(a,n+f)],t[n]=(c+e*(i[Math.max(o,n-s)]+i[Math.min(a,n+s)]))/r,c-=i[Math.max(o,n-f)]}}function v(t,n){let e=0;if(void 0===n)for(let n of t)null!=n&&(n=+n)>=n&&++e;else{let r=-1;for(let i of t)null!=(i=n(i,++r,t))&&(i=+i)>=i&&++e}return e}function _(t){return 0|t.length}function b(t){return!(t>0)}function m(t){return"object"!=typeof t||"length"in t?t:Array.from(t)}function x(t,n){let e,r=0,i=0,o=0;if(void 0===n)for(let n of t)null!=n&&(n=+n)>=n&&(e=n-i,i+=e/++r,o+=e*(n-i));else{let a=-1;for(let u of t)null!=(u=n(u,++a,t))&&(u=+u)>=u&&(e=u-i,i+=e/++r,o+=e*(u-i))}if(r>1)return o/(r-1)}function w(t,n){const e=x(t,n);return e?Math.sqrt(e):e}function M(t,n){let e,r;if(void 0===n)for(const n of t)null!=n&&(void 0===e?n>=n&&(e=r=n):(e>n&&(e=n),r<n&&(r=n)));else{let i=-1;for(let o of t)null!=(o=n(o,++i,t))&&(void 0===e?o>=o&&(e=r=o):(e>o&&(e=o),r<o&&(r=o)))}return[e,r]}class T{constructor(){this._partials=new Float64Array(32),this._n=0}add(t){const n=this._partials;let e=0;for(let r=0;r<this._n&&r<32;r++){const i=n[r],o=t+i,a=Math.abs(t)<Math.abs(i)?t-(o-i):i-(o-t);a&&(n[e++]=a),t=o}return n[e]=t,this._n=e+1,this}valueOf(){const t=this._partials;let n,e,r,i=this._n,o=0;if(i>0){for(o=t[--i];i>0&&(n=o,e=t[--i],o=n+e,r=e-(o-n),!r););i>0&&(r<0&&t[i-1]<0||r>0&&t[i-1]>0)&&(e=2*r,n=o+e,e==n-o&&(o=n))}return o}}class InternMap extends Map{constructor(t,n=N){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),null!=t)for(const[n,e]of t)this.set(n,e)}get(t){return super.get(A(this,t))}has(t){return super.has(A(this,t))}set(t,n){return super.set(S(this,t),n)}delete(t){return super.delete(E(this,t))}}class InternSet extends Set{constructor(t,n=N){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),null!=t)for(const n of t)this.add(n)}has(t){return super.has(A(this,t))}add(t){return super.add(S(this,t))}delete(t){return super.delete(E(this,t))}}function A({_intern:t,_key:n},e){const r=n(e);return t.has(r)?t.get(r):e}function S({_intern:t,_key:n},e){const r=n(e);return t.has(r)?t.get(r):(t.set(r,e),e)}function E({_intern:t,_key:n},e){const r=n(e);return t.has(r)&&(e=t.get(r),t.delete(r)),e}function N(t){return null!==t&&"object"==typeof t?t.valueOf():t}function k(t){return t}function C(t,...n){return F(t,k,k,n)}function P(t,...n){return F(t,Array.from,k,n)}function z(t,n){for(let e=1,r=n.length;e<r;++e)t=t.flatMap((t=>t.pop().map((([n,e])=>[...t,n,e]))));return t}function $(t,n,...e){return F(t,k,n,e)}function D(t,n,...e){return F(t,Array.from,n,e)}function R(t){if(1!==t.length)throw new Error("duplicate key");return t[0]}function F(t,n,e,r){return function t(i,o){if(o>=r.length)return e(i);const a=new InternMap,u=r[o++];let c=-1;for(const t of i){const n=u(t,++c,i),e=a.get(n);e?e.push(t):a.set(n,[t])}for(const[n,e]of a)a.set(n,t(e,o));return n(a)}(t,0)}function q(t,n){return Array.from(n,(n=>t[n]))}function U(t,...n){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");t=Array.from(t);let[e]=n;if(e&&2!==e.length||n.length>1){const r=Uint32Array.from(t,((t,n)=>n));return n.length>1?(n=n.map((n=>t.map(n))),r.sort(((t,e)=>{for(const r of n){const n=O(r[t],r[e]);if(n)return n}}))):(e=t.map(e),r.sort(((t,n)=>O(e[t],e[n])))),q(t,r)}return t.sort(I(e))}function I(t=n){if(t===n)return O;if("function"!=typeof t)throw new TypeError("compare is not a function");return(n,e)=>{const r=t(n,e);return r||0===r?r:(0===t(e,e))-(0===t(n,n))}}function O(t,n){return(null==t||!(t>=t))-(null==n||!(n>=n))||(t<n?-1:t>n?1:0)}var B=Array.prototype.slice;function Y(t){return()=>t}const L=Math.sqrt(50),j=Math.sqrt(10),H=Math.sqrt(2);function X(t,n,e){const r=(n-t)/Math.max(0,e),i=Math.floor(Math.log10(r)),o=r/Math.pow(10,i),a=o>=L?10:o>=j?5:o>=H?2:1;let u,c,f;return i<0?(f=Math.pow(10,-i)/a,u=Math.round(t*f),c=Math.round(n*f),u/f<t&&++u,c/f>n&&--c,f=-f):(f=Math.pow(10,i)*a,u=Math.round(t/f),c=Math.round(n/f),u*f<t&&++u,c*f>n&&--c),c<u&&.5<=e&&e<2?X(t,n,2*e):[u,c,f]}function G(t,n,e){if(!((e=+e)>0))return[];if((t=+t)===(n=+n))return[t];const r=n<t,[i,o,a]=r?X(n,t,e):X(t,n,e);if(!(o>=i))return[];const u=o-i+1,c=new Array(u);if(r)if(a<0)for(let t=0;t<u;++t)c[t]=(o-t)/-a;else for(let t=0;t<u;++t)c[t]=(o-t)*a;else if(a<0)for(let t=0;t<u;++t)c[t]=(i+t)/-a;else for(let t=0;t<u;++t)c[t]=(i+t)*a;return c}function V(t,n,e){return X(t=+t,n=+n,e=+e)[2]}function W(t,n,e){e=+e;const r=(n=+n)<(t=+t),i=r?V(n,t,e):V(t,n,e);return(r?-1:1)*(i<0?1/-i:i)}function Z(t,n,e){let r;for(;;){const i=V(t,n,e);if(i===r||0===i||!isFinite(i))return[t,n];i>0?(t=Math.floor(t/i)*i,n=Math.ceil(n/i)*i):i<0&&(t=Math.ceil(t*i)/i,n=Math.floor(n*i)/i),r=i}}function K(t){return Math.max(1,Math.ceil(Math.log(v(t))/Math.LN2)+1)}function Q(){var t=k,n=M,e=K;function r(r){Array.isArray(r)||(r=Array.from(r));var i,o,a,u=r.length,c=new Array(u);for(i=0;i<u;++i)c[i]=t(r[i],i,r);var f=n(c),l=f[0],h=f[1],d=e(c,l,h);if(!Array.isArray(d)){const t=h,e=+d;if(n===M&&([l,h]=Z(l,h,e)),(d=G(l,h,e))[0]<=l&&(a=V(l,h,e)),d[d.length-1]>=h)if(t>=h&&n===M){const t=V(l,h,e);isFinite(t)&&(t>0?h=(Math.floor(h/t)+1)*t:t<0&&(h=(Math.ceil(h*-t)+1)/-t))}else d.pop()}for(var p=d.length,g=0,y=p;d[g]<=l;)++g;for(;d[y-1]>h;)--y;(g||y<p)&&(d=d.slice(g,y),p=y-g);var v,_=new Array(p+1);for(i=0;i<=p;++i)(v=_[i]=[]).x0=i>0?d[i-1]:l,v.x1=i<p?d[i]:h;if(isFinite(a)){if(a>0)for(i=0;i<u;++i)null!=(o=c[i])&&l<=o&&o<=h&&_[Math.min(p,Math.floor((o-l)/a))].push(r[i]);else if(a<0)for(i=0;i<u;++i)if(null!=(o=c[i])&&l<=o&&o<=h){const t=Math.floor((l-o)*a);_[Math.min(p,t+(d[t]<=o))].push(r[i])}}else for(i=0;i<u;++i)null!=(o=c[i])&&l<=o&&o<=h&&_[s(d,o,0,p)].push(r[i]);return _}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:Y(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:Y([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Y(Array.isArray(t)?B.call(t):t),r):e},r}function J(t,n){let e;if(void 0===n)for(const n of t)null!=n&&(e<n||void 0===e&&n>=n)&&(e=n);else{let r=-1;for(let i of t)null!=(i=n(i,++r,t))&&(e<i||void 0===e&&i>=i)&&(e=i)}return e}function tt(t,n){let e,r=-1,i=-1;if(void 0===n)for(const n of t)++i,null!=n&&(e<n||void 0===e&&n>=n)&&(e=n,r=i);else for(let o of t)null!=(o=n(o,++i,t))&&(e<o||void 0===e&&o>=o)&&(e=o,r=i);return r}function nt(t,n){let e;if(void 0===n)for(const n of t)null!=n&&(e>n||void 0===e&&n>=n)&&(e=n);else{let r=-1;for(let i of t)null!=(i=n(i,++r,t))&&(e>i||void 0===e&&i>=i)&&(e=i)}return e}function et(t,n){let e,r=-1,i=-1;if(void 0===n)for(const n of t)++i,null!=n&&(e>n||void 0===e&&n>=n)&&(e=n,r=i);else for(let o of t)null!=(o=n(o,++i,t))&&(e>o||void 0===e&&o>=o)&&(e=o,r=i);return r}function rt(t,n,e=0,r=1/0,i){if(n=Math.floor(n),e=Math.floor(Math.max(0,e)),r=Math.floor(Math.min(t.length-1,r)),!(e<=n&&n<=r))return t;for(i=void 0===i?O:I(i);r>e;){if(r-e>600){const o=r-e+1,a=n-e+1,u=Math.log(o),c=.5*Math.exp(2*u/3),f=.5*Math.sqrt(u*c*(o-c)/o)*(a-o/2<0?-1:1);rt(t,n,Math.max(e,Math.floor(n-a*c/o+f)),Math.min(r,Math.floor(n+(o-a)*c/o+f)),i)}const o=t[n];let a=e,u=r;for(it(t,e,n),i(t[r],o)>0&&it(t,e,r);a<u;){for(it(t,a,u),++a,--u;i(t[a],o)<0;)++a;for(;i(t[u],o)>0;)--u}0===i(t[e],o)?it(t,e,u):(++u,it(t,u,r)),u<=n&&(e=u+1),n<=u&&(r=u-1)}return t}function it(t,n,e){const r=t[n];t[n]=t[e],t[e]=r}function ot(t,e=n){let r,i=!1;if(1===e.length){let o;for(const a of t){const t=e(a);(i?n(t,o)>0:0===n(t,t))&&(r=a,o=t,i=!0)}}else for(const n of t)(i?e(n,r)>0:0===e(n,n))&&(r=n,i=!0);return r}function at(t,n,e){if(t=Float64Array.from(function*(t,n){if(void 0===n)for(let n of t)null!=n&&(n=+n)>=n&&(yield n);else{let e=-1;for(let r of t)null!=(r=n(r,++e,t))&&(r=+r)>=r&&(yield r)}}(t,e)),(r=t.length)&&!isNaN(n=+n)){if(n<=0||r<2)return nt(t);if(n>=1)return J(t);var r,i=(r-1)*n,o=Math.floor(i),a=J(rt(t,o).subarray(0,o+1));return a+(nt(t.subarray(o+1))-a)*(i-o)}}function ut(t,n,e=o){if((r=t.length)&&!isNaN(n=+n)){if(n<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,a=Math.floor(i),u=+e(t[a],a,t);return u+(+e(t[a+1],a+1,t)-u)*(i-a)}}function ct(t,n,e=o){if(!isNaN(n=+n)){if(r=Float64Array.from(t,((n,r)=>o(e(t[r],r,t)))),n<=0)return et(r);if(n>=1)return tt(r);var r,i=Uint32Array.from(t,((t,n)=>n)),a=r.length-1,u=Math.floor(a*n);return rt(i,u,0,a,((t,n)=>O(r[t],r[n]))),(u=ot(i.subarray(0,u+1),(t=>r[t])))>=0?u:-1}}function ft(t){return Array.from(function*(t){for(const n of t)yield*n}(t))}function st(t,n){return[t,n]}function lt(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o}function ht(t,e=n){if(1===e.length)return et(t,e);let r,i=-1,o=-1;for(const n of t)++o,(i<0?0===e(n,n):e(n,r)<0)&&(r=n,i=o);return i}var dt=pt(Math.random);function pt(t){return function(n,e=0,r=n.length){let i=r-(e=+e);for(;i;){const r=t()*i--|0,o=n[i+e];n[i+e]=n[r+e],n[r+e]=o}return n}}function gt(t){if(!(i=t.length))return[];for(var n=-1,e=nt(t,yt),r=new Array(e);++n<e;)for(var i,o=-1,a=r[n]=new Array(i);++o<i;)a[o]=t[o][n];return r}function yt(t){return t.length}function vt(t){return t instanceof InternSet?t:new InternSet(t)}function _t(t,n){const e=t[Symbol.iterator](),r=new Set;for(const t of n){const n=bt(t);if(r.has(n))continue;let i,o;for(;({value:i,done:o}=e.next());){if(o)return!1;const t=bt(i);if(r.add(t),Object.is(n,t))break}}return!0}function bt(t){return null!==t&&"object"==typeof t?t.valueOf():t}function mt(t){return t}var xt=1,wt=2,Mt=3,Tt=4,At=1e-6;function St(t){return"translate("+t+",0)"}function Et(t){return"translate(0,"+t+")"}function Nt(t){return n=>+t(n)}function kt(t,n){return n=Math.max(0,t.bandwidth()-2*n)/2,t.round()&&(n=Math.round(n)),e=>+t(e)+n}function Ct(){return!this.__axis}function Pt(t,n){var e=[],r=null,i=null,o=6,a=6,u=3,c="undefined"!=typeof window&&window.devicePixelRatio>1?0:.5,f=t===xt||t===Tt?-1:1,s=t===Tt||t===wt?"x":"y",l=t===xt||t===Mt?St:Et;function h(h){var d=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,p=null==i?n.tickFormat?n.tickFormat.apply(n,e):mt:i,g=Math.max(o,0)+u,y=n.range(),v=+y[0]+c,_=+y[y.length-1]+c,b=(n.bandwidth?kt:Nt)(n.copy(),c),m=h.selection?h.selection():h,x=m.selectAll(".domain").data([null]),w=m.selectAll(".tick").data(d,n).order(),M=w.exit(),T=w.enter().append("g").attr("class","tick"),A=w.select("line"),S=w.select("text");x=x.merge(x.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),w=w.merge(T),A=A.merge(T.append("line").attr("stroke","currentColor").attr(s+"2",f*o)),S=S.merge(T.append("text").attr("fill","currentColor").attr(s,f*g).attr("dy",t===xt?"0em":t===Mt?"0.71em":"0.32em")),h!==m&&(x=x.transition(h),w=w.transition(h),A=A.transition(h),S=S.transition(h),M=M.transition(h).attr("opacity",At).attr("transform",(function(t){return isFinite(t=b(t))?l(t+c):this.getAttribute("transform")})),T.attr("opacity",At).attr("transform",(function(t){var n=this.parentNode.__axis;return l((n&&isFinite(n=n(t))?n:b(t))+c)}))),M.remove(),x.attr("d",t===Tt||t===wt?a?"M"+f*a+","+v+"H"+c+"V"+_+"H"+f*a:"M"+c+","+v+"V"+_:a?"M"+v+","+f*a+"V"+c+"H"+_+"V"+f*a:"M"+v+","+c+"H"+_),w.attr("opacity",1).attr("transform",(function(t){return l(b(t)+c)})),A.attr(s+"2",f*o),S.attr(s,f*g).text(p),m.filter(Ct).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===wt?"start":t===Tt?"end":"middle"),m.each((function(){this.__axis=b}))}return h.scale=function(t){return arguments.length?(n=t,h):n},h.ticks=function(){return e=Array.from(arguments),h},h.tickArguments=function(t){return arguments.length?(e=null==t?[]:Array.from(t),h):e.slice()},h.tickValues=function(t){return arguments.length?(r=null==t?null:Array.from(t),h):r&&r.slice()},h.tickFormat=function(t){return arguments.length?(i=t,h):i},h.tickSize=function(t){return arguments.length?(o=a=+t,h):o},h.tickSizeInner=function(t){return arguments.length?(o=+t,h):o},h.tickSizeOuter=function(t){return arguments.length?(a=+t,h):a},h.tickPadding=function(t){return arguments.length?(u=+t,h):u},h.offset=function(t){return arguments.length?(c=+t,h):c},h}var zt={value:()=>{}};function $t(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new Dt(r)}function Dt(t){this._=t}function Rt(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function Ft(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=zt,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}Dt.prototype=$t.prototype={constructor:Dt,on:function(t,n){var e,r,i=this._,o=(r=i,(t+"").trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))),a=-1,u=o.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++a<u;)if(e=(t=o[a]).type)i[e]=Ft(i[e],t.name,n);else if(null==n)for(e in i)i[e]=Ft(i[e],t.name,null);return this}for(;++a<u;)if((e=(t=o[a]).type)&&(e=Rt(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new Dt(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var qt="http://www.w3.org/1999/xhtml",Ut={svg:"http://www.w3.org/2000/svg",xhtml:qt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function It(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),Ut.hasOwnProperty(n)?{space:Ut[n],local:t}:t}function Ot(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===qt&&n.documentElement.namespaceURI===qt?n.createElement(t):n.createElementNS(e,t)}}function Bt(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function Yt(t){var n=It(t);return(n.local?Bt:Ot)(n)}function Lt(){}function jt(t){return null==t?Lt:function(){return this.querySelector(t)}}function Ht(t){return null==t?[]:Array.isArray(t)?t:Array.from(t)}function Xt(){return[]}function Gt(t){return null==t?Xt:function(){return this.querySelectorAll(t)}}function Vt(t){return function(){return this.matches(t)}}function Wt(t){return function(n){return n.matches(t)}}var Zt=Array.prototype.find;function Kt(){return this.firstElementChild}var Qt=Array.prototype.filter;function Jt(){return Array.from(this.children)}function tn(t){return new Array(t.length)}function nn(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}function en(t,n,e,r,i,o){for(var a,u=0,c=n.length,f=o.length;u<f;++u)(a=n[u])?(a.__data__=o[u],r[u]=a):e[u]=new nn(t,o[u]);for(;u<c;++u)(a=n[u])&&(i[u]=a)}function rn(t,n,e,r,i,o,a){var u,c,f,s=new Map,l=n.length,h=o.length,d=new Array(l);for(u=0;u<l;++u)(c=n[u])&&(d[u]=f=a.call(c,c.__data__,u,n)+"",s.has(f)?i[u]=c:s.set(f,c));for(u=0;u<h;++u)f=a.call(t,o[u],u,o)+"",(c=s.get(f))?(r[u]=c,c.__data__=o[u],s.delete(f)):e[u]=new nn(t,o[u]);for(u=0;u<l;++u)(c=n[u])&&s.get(d[u])===c&&(i[u]=c)}function on(t){return t.__data__}function an(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}function un(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function cn(t){return function(){this.removeAttribute(t)}}function fn(t){return function(){this.removeAttributeNS(t.space,t.local)}}function sn(t,n){return function(){this.setAttribute(t,n)}}function ln(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function hn(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function dn(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}function pn(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function gn(t){return function(){this.style.removeProperty(t)}}function yn(t,n,e){return function(){this.style.setProperty(t,n,e)}}function vn(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function _n(t,n){return t.style.getPropertyValue(n)||pn(t).getComputedStyle(t,null).getPropertyValue(n)}function bn(t){return function(){delete this[t]}}function mn(t,n){return function(){this[t]=n}}function xn(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function wn(t){return t.trim().split(/^|\s+/)}function Mn(t){return t.classList||new Tn(t)}function Tn(t){this._node=t,this._names=wn(t.getAttribute("class")||"")}function An(t,n){for(var e=Mn(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function Sn(t,n){for(var e=Mn(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function En(t){return function(){An(this,t)}}function Nn(t){return function(){Sn(this,t)}}function kn(t,n){return function(){(n.apply(this,arguments)?An:Sn)(this,t)}}function Cn(){this.textContent=""}function Pn(t){return function(){this.textContent=t}}function zn(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function $n(){this.innerHTML=""}function Dn(t){return function(){this.innerHTML=t}}function Rn(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function Fn(){this.nextSibling&&this.parentNode.appendChild(this)}function qn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Un(){return null}function In(){var t=this.parentNode;t&&t.removeChild(this)}function On(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function Bn(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function Yn(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.options);++i?n.length=i:delete this.__on}}}function Ln(t,n,e){return function(){var r,i=this.__on,o=function(t){return function(n){t.call(this,n,this.__data__)}}(n);if(i)for(var a=0,u=i.length;a<u;++a)if((r=i[a]).type===t.type&&r.name===t.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=o,r.options=e),void(r.value=n);this.addEventListener(t.type,o,e),r={type:t.type,name:t.name,value:n,listener:o,options:e},i?i.push(r):this.__on=[r]}}function jn(t,n,e){var r=pn(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function Hn(t,n){return function(){return jn(this,t,n)}}function Xn(t,n){return function(){return jn(this,t,n.apply(this,arguments))}}nn.prototype={constructor:nn,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}},Tn.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var Gn=[null];function Vn(t,n){this._groups=t,this._parents=n}function Wn(){return new Vn([[document.documentElement]],Gn)}function Zn(t){return"string"==typeof t?new Vn([[document.querySelector(t)]],[document.documentElement]):new Vn([[t]],Gn)}Vn.prototype=Wn.prototype={constructor:Vn,select:function(t){"function"!=typeof t&&(t=jt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a,u=n[i],c=u.length,f=r[i]=new Array(c),s=0;s<c;++s)(o=u[s])&&(a=t.call(o,o.__data__,s,u))&&("__data__"in o&&(a.__data__=o.__data__),f[s]=a);return new Vn(r,this._parents)},selectAll:function(t){t="function"==typeof t?function(t){return function(){return Ht(t.apply(this,arguments))}}(t):Gt(t);for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var a,u=n[o],c=u.length,f=0;f<c;++f)(a=u[f])&&(r.push(t.call(a,a.__data__,f,u)),i.push(a));return new Vn(r,i)},selectChild:function(t){return this.select(null==t?Kt:function(t){return function(){return Zt.call(this.children,t)}}("function"==typeof t?t:Wt(t)))},selectChildren:function(t){return this.selectAll(null==t?Jt:function(t){return function(){return Qt.call(this.children,t)}}("function"==typeof t?t:Wt(t)))},filter:function(t){"function"!=typeof t&&(t=Vt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],f=0;f<u;++f)(o=a[f])&&t.call(o,o.__data__,f,a)&&c.push(o);return new Vn(r,this._parents)},data:function(t,n){if(!arguments.length)return Array.from(this,on);var e=n?rn:en,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,a=new Array(o),u=new Array(o),c=new Array(o),f=0;f<o;++f){var s=r[f],l=i[f],h=l.length,d=an(t.call(s,s&&s.__data__,f,r)),p=d.length,g=u[f]=new Array(p),y=a[f]=new Array(p);e(s,l,g,y,c[f]=new Array(h),d,n);for(var v,_,b=0,m=0;b<p;++b)if(v=g[b]){for(b>=m&&(m=b+1);!(_=y[m])&&++m<p;);v._next=_||null}}return(a=new Vn(a,r))._enter=u,a._exit=c,a},enter:function(){return new Vn(this._enter||this._groups.map(tn),this._parents)},exit:function(){return new Vn(this._exit||this._groups.map(tn),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,o=this.exit();return"function"==typeof t?(r=t(r))&&(r=r.selection()):r=r.append(t+""),null!=n&&(i=n(i))&&(i=i.selection()),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(t){for(var n=t.selection?t.selection():t,e=this._groups,r=n._groups,i=e.length,o=r.length,a=Math.min(i,o),u=new Array(i),c=0;c<a;++c)for(var f,s=e[c],l=r[c],h=s.length,d=u[c]=new Array(h),p=0;p<h;++p)(f=s[p]||l[p])&&(d[p]=f);for(;c<i;++c)u[c]=e[c];return new Vn(u,this._parents)},selection:function(){return this},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,a=i[o];--o>=0;)(r=i[o])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=un);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var a,u=e[o],c=u.length,f=i[o]=new Array(c),s=0;s<c;++s)(a=u[s])&&(f[s]=a);f.sort(n)}return new Vn(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var a=r[i];if(a)return a}return null},size:function(){let t=0;for(const n of this)++t;return t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],a=0,u=o.length;a<u;++a)(i=o[a])&&t.call(i,i.__data__,a,o);return this},attr:function(t,n){var e=It(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?fn:cn:"function"==typeof n?e.local?dn:hn:e.local?ln:sn)(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?gn:"function"==typeof n?vn:yn)(t,n,null==e?"":e)):_n(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?bn:"function"==typeof n?xn:mn)(t,n)):this.node()[t]},classed:function(t,n){var e=wn(t+"");if(arguments.length<2){for(var r=Mn(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?kn:n?En:Nn)(e,n))},text:function(t){return arguments.length?this.each(null==t?Cn:("function"==typeof t?zn:Pn)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?$n:("function"==typeof t?Rn:Dn)(t)):this.node().innerHTML},raise:function(){return this.each(Fn)},lower:function(){return this.each(qn)},append:function(t){var n="function"==typeof t?t:Yt(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))},insert:function(t,n){var e="function"==typeof t?t:Yt(t),r=null==n?Un:"function"==typeof n?n:jt(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(In)},clone:function(t){return this.select(t?Bn:On)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}(t+""),a=o.length;if(!(arguments.length<2)){for(u=n?Ln:Yn,r=0;r<a;++r)this.each(u(o[r],n,e));return this}var u=this.node().__on;if(u)for(var c,f=0,s=u.length;f<s;++f)for(r=0,c=u[f];r<a;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?Xn:Hn)(t,n))},[Symbol.iterator]:function*(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r,i=t[n],o=0,a=i.length;o<a;++o)(r=i[o])&&(yield r)}};var Kn=0;function Qn(){return new Jn}function Jn(){this._="@"+(++Kn).toString(36)}function te(t){let n;for(;n=t.sourceEvent;)t=n;return t}function ne(t,n){if(t=te(t),void 0===n&&(n=t.currentTarget),n){var e=n.ownerSVGElement||n;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=t.clientX,r.y=t.clientY,[(r=r.matrixTransform(n.getScreenCTM().inverse())).x,r.y]}if(n.getBoundingClientRect){var i=n.getBoundingClientRect();return[t.clientX-i.left-n.clientLeft,t.clientY-i.top-n.clientTop]}}return[t.pageX,t.pageY]}Jn.prototype=Qn.prototype={constructor:Jn,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};const ee={passive:!1},re={capture:!0,passive:!1};function ie(t){t.stopImmediatePropagation()}function oe(t){t.preventDefault(),t.stopImmediatePropagation()}function ae(t){var n=t.document.documentElement,e=Zn(t).on("dragstart.drag",oe,re);"onselectstart"in n?e.on("selectstart.drag",oe,re):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")}function ue(t,n){var e=t.document.documentElement,r=Zn(t).on("dragstart.drag",null);n&&(r.on("click.drag",oe,re),setTimeout((function(){r.on("click.drag",null)}),0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var ce=t=>()=>t;function fe(t,{sourceEvent:n,subject:e,target:r,identifier:i,active:o,x:a,y:u,dx:c,dy:f,dispatch:s}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:n,enumerable:!0,configurable:!0},subject:{value:e,enumerable:!0,configurable:!0},target:{value:r,enumerable:!0,configurable:!0},identifier:{value:i,enumerable:!0,configurable:!0},active:{value:o,enumerable:!0,configurable:!0},x:{value:a,enumerable:!0,configurable:!0},y:{value:u,enumerable:!0,configurable:!0},dx:{value:c,enumerable:!0,configurable:!0},dy:{value:f,enumerable:!0,configurable:!0},_:{value:s}})}function se(t){return!t.ctrlKey&&!t.button}function le(){return this.parentNode}function he(t,n){return null==n?{x:t.x,y:t.y}:n}function de(){return navigator.maxTouchPoints||"ontouchstart"in this}function pe(t,n,e){t.prototype=n.prototype=e,e.constructor=t}function ge(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function ye(){}fe.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var ve=.7,_e=1/ve,be="\\s*([+-]?\\d+)\\s*",me="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",xe="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",we=/^#([0-9a-f]{3,8})$/,Me=new RegExp(`^rgb\\(${be},${be},${be}\\)$`),Te=new RegExp(`^rgb\\(${xe},${xe},${xe}\\)$`),Ae=new RegExp(`^rgba\\(${be},${be},${be},${me}\\)$`),Se=new RegExp(`^rgba\\(${xe},${xe},${xe},${me}\\)$`),Ee=new RegExp(`^hsl\\(${me},${xe},${xe}\\)$`),Ne=new RegExp(`^hsla\\(${me},${xe},${xe},${me}\\)$`),ke={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Ce(){return this.rgb().formatHex()}function Pe(){return this.rgb().formatRgb()}function ze(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=we.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?$e(n):3===e?new qe(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?De(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?De(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=Me.exec(t))?new qe(n[1],n[2],n[3],1):(n=Te.exec(t))?new qe(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Ae.exec(t))?De(n[1],n[2],n[3],n[4]):(n=Se.exec(t))?De(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Ee.exec(t))?Le(n[1],n[2]/100,n[3]/100,1):(n=Ne.exec(t))?Le(n[1],n[2]/100,n[3]/100,n[4]):ke.hasOwnProperty(t)?$e(ke[t]):"transparent"===t?new qe(NaN,NaN,NaN,0):null}function $e(t){return new qe(t>>16&255,t>>8&255,255&t,1)}function De(t,n,e,r){return r<=0&&(t=n=e=NaN),new qe(t,n,e,r)}function Re(t){return t instanceof ye||(t=ze(t)),t?new qe((t=t.rgb()).r,t.g,t.b,t.opacity):new qe}function Fe(t,n,e,r){return 1===arguments.length?Re(t):new qe(t,n,e,null==r?1:r)}function qe(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Ue(){return`#${Ye(this.r)}${Ye(this.g)}${Ye(this.b)}`}function Ie(){const t=Oe(this.opacity);return`${1===t?"rgb(":"rgba("}${Be(this.r)}, ${Be(this.g)}, ${Be(this.b)}${1===t?")":`, ${t})`}`}function Oe(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function Be(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function Ye(t){return((t=Be(t))<16?"0":"")+t.toString(16)}function Le(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Xe(t,n,e,r)}function je(t){if(t instanceof Xe)return new Xe(t.h,t.s,t.l,t.opacity);if(t instanceof ye||(t=ze(t)),!t)return new Xe;if(t instanceof Xe)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),a=NaN,u=o-i,c=(o+i)/2;return u?(a=n===o?(e-r)/u+6*(e<r):e===o?(r-n)/u+2:(n-e)/u+4,u/=c<.5?o+i:2-o-i,a*=60):u=c>0&&c<1?0:a,new Xe(a,u,c,t.opacity)}function He(t,n,e,r){return 1===arguments.length?je(t):new Xe(t,n,e,null==r?1:r)}function Xe(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ge(t){return(t=(t||0)%360)<0?t+360:t}function Ve(t){return Math.max(0,Math.min(1,t||0))}function We(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}pe(ye,ze,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:Ce,formatHex:Ce,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return je(this).formatHsl()},formatRgb:Pe,toString:Pe}),pe(qe,Fe,ge(ye,{brighter(t){return t=null==t?_e:Math.pow(_e,t),new qe(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=null==t?ve:Math.pow(ve,t),new qe(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new qe(Be(this.r),Be(this.g),Be(this.b),Oe(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Ue,formatHex:Ue,formatHex8:function(){return`#${Ye(this.r)}${Ye(this.g)}${Ye(this.b)}${Ye(255*(isNaN(this.opacity)?1:this.opacity))}`},formatRgb:Ie,toString:Ie})),pe(Xe,He,ge(ye,{brighter(t){return t=null==t?_e:Math.pow(_e,t),new Xe(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=null==t?ve:Math.pow(ve,t),new Xe(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new qe(We(t>=240?t-240:t+120,i,r),We(t,i,r),We(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new Xe(Ge(this.h),Ve(this.s),Ve(this.l),Oe(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=Oe(this.opacity);return`${1===t?"hsl(":"hsla("}${Ge(this.h)}, ${100*Ve(this.s)}%, ${100*Ve(this.l)}%${1===t?")":`, ${t})`}`}}));const Ze=Math.PI/180,Ke=180/Math.PI,Qe=.96422,Je=1,tr=.82521,nr=4/29,er=6/29,rr=3*er*er,ir=er*er*er;function or(t){if(t instanceof ur)return new ur(t.l,t.a,t.b,t.opacity);if(t instanceof pr)return gr(t);t instanceof qe||(t=Re(t));var n,e,r=lr(t.r),i=lr(t.g),o=lr(t.b),a=cr((.2225045*r+.7168786*i+.0606169*o)/Je);return r===i&&i===o?n=e=a:(n=cr((.4360747*r+.3850649*i+.1430804*o)/Qe),e=cr((.0139322*r+.0971045*i+.7141733*o)/tr)),new ur(116*a-16,500*(n-a),200*(a-e),t.opacity)}function ar(t,n,e,r){return 1===arguments.length?or(t):new ur(t,n,e,null==r?1:r)}function ur(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function cr(t){return t>ir?Math.pow(t,1/3):t/rr+nr}function fr(t){return t>er?t*t*t:rr*(t-nr)}function sr(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function lr(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function hr(t){if(t instanceof pr)return new pr(t.h,t.c,t.l,t.opacity);if(t instanceof ur||(t=or(t)),0===t.a&&0===t.b)return new pr(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*Ke;return new pr(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function dr(t,n,e,r){return 1===arguments.length?hr(t):new pr(t,n,e,null==r?1:r)}function pr(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}function gr(t){if(isNaN(t.h))return new ur(t.l,0,0,t.opacity);var n=t.h*Ze;return new ur(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}pe(ur,ar,ge(ye,{brighter(t){return new ur(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker(t){return new ur(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new qe(sr(3.1338561*(n=Qe*fr(n))-1.6168667*(t=Je*fr(t))-.4906146*(e=tr*fr(e))),sr(-.9787684*n+1.9161415*t+.033454*e),sr(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),pe(pr,dr,ge(ye,{brighter(t){return new pr(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker(t){return new pr(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb(){return gr(this).rgb()}}));var yr=-.14861,vr=1.78277,_r=-.29227,br=-.90649,mr=1.97294,xr=mr*br,wr=mr*vr,Mr=vr*_r-br*yr;function Tr(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Ar)return new Ar(t.h,t.s,t.l,t.opacity);t instanceof qe||(t=Re(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Mr*r+xr*n-wr*e)/(Mr+xr-wr),o=r-i,a=(mr*(e-i)-_r*o)/br,u=Math.sqrt(a*a+o*o)/(mr*i*(1-i)),c=u?Math.atan2(a,o)*Ke-120:NaN;return new Ar(c<0?c+360:c,u,i,t.opacity)}(t):new Ar(t,n,e,null==r?1:r)}function Ar(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Sr(t,n,e,r,i){var o=t*t,a=o*t;return((1-3*t+3*o-a)*n+(4-6*o+3*a)*e+(1+3*t+3*o-3*a)*r+a*i)/6}function Er(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],a=r>0?t[r-1]:2*i-o,u=r<n-1?t[r+2]:2*o-i;return Sr((e-r/n)*n,a,i,o,u)}}function Nr(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],a=t[(r+1)%n],u=t[(r+2)%n];return Sr((e-r/n)*n,i,o,a,u)}}pe(Ar,Tr,ge(ye,{brighter(t){return t=null==t?_e:Math.pow(_e,t),new Ar(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=null==t?ve:Math.pow(ve,t),new Ar(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=isNaN(this.h)?0:(this.h+120)*Ze,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new qe(255*(n+e*(yr*r+vr*i)),255*(n+e*(_r*r+br*i)),255*(n+e*(mr*r)),this.opacity)}}));var kr=t=>()=>t;function Cr(t,n){return function(e){return t+e*n}}function Pr(t,n){var e=n-t;return e?Cr(t,e>180||e<-180?e-360*Math.round(e/360):e):kr(isNaN(t)?n:t)}function zr(t){return 1==(t=+t)?$r:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):kr(isNaN(n)?e:n)}}function $r(t,n){var e=n-t;return e?Cr(t,e):kr(isNaN(t)?n:t)}var Dr=function t(n){var e=zr(n);function r(t,n){var r=e((t=Fe(t)).r,(n=Fe(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),a=$r(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=a(n),t+""}}return r.gamma=t,r}(1);function Rr(t){return function(n){var e,r,i=n.length,o=new Array(i),a=new Array(i),u=new Array(i);for(e=0;e<i;++e)r=Fe(n[e]),o[e]=r.r||0,a[e]=r.g||0,u[e]=r.b||0;return o=t(o),a=t(a),u=t(u),r.opacity=1,function(t){return r.r=o(t),r.g=a(t),r.b=u(t),r+""}}}var Fr=Rr(Er),qr=Rr(Nr);function Ur(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(o){for(e=0;e<r;++e)i[e]=t[e]*(1-o)+n[e]*o;return i}}function Ir(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function Or(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),a=new Array(r);for(e=0;e<i;++e)o[e]=Gr(t[e],n[e]);for(;e<r;++e)a[e]=n[e];return function(t){for(e=0;e<i;++e)a[e]=o[e](t);return a}}function Br(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}}function Yr(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}function Lr(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Gr(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}var jr=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Hr=new RegExp(jr.source,"g");function Xr(t,n){var e,r,i,o=jr.lastIndex=Hr.lastIndex=0,a=-1,u=[],c=[];for(t+="",n+="";(e=jr.exec(t))&&(r=Hr.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),u[a]?u[a]+=i:u[++a]=i),(e=e[0])===(r=r[0])?u[a]?u[a]+=r:u[++a]=r:(u[++a]=null,c.push({i:a,x:Yr(e,r)})),o=Hr.lastIndex;return o<n.length&&(i=n.slice(o),u[a]?u[a]+=i:u[++a]=i),u.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)u[(e=c[r]).i]=e.x(t);return u.join("")})}function Gr(t,n){var e,r=typeof n;return null==n||"boolean"===r?kr(n):("number"===r?Yr:"string"===r?(e=ze(n))?(n=e,Dr):Xr:n instanceof ze?Dr:n instanceof Date?Br:Ir(n)?Ur:Array.isArray(n)?Or:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?Lr:Yr)(t,n)}function Vr(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}var Wr,Zr=180/Math.PI,Kr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Qr(t,n,e,r,i,o){var a,u,c;return(a=Math.sqrt(t*t+n*n))&&(t/=a,n/=a),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,c/=u),t*r<n*e&&(t=-t,n=-n,c=-c,a=-a),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*Zr,skewX:Math.atan(c)*Zr,scaleX:a,scaleY:u}}function Jr(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,a){var u=[],c=[];return o=t(o),a=t(a),function(t,r,i,o,a,u){if(t!==i||r!==o){var c=a.push("translate(",null,n,null,e);u.push({i:c-4,x:Yr(t,i)},{i:c-2,x:Yr(r,o)})}else(i||o)&&a.push("translate("+i+n+o+e)}(o.translateX,o.translateY,a.translateX,a.translateY,u,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Yr(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,a.rotate,u,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Yr(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,a.skewX,u,c),function(t,n,e,r,o,a){if(t!==e||n!==r){var u=o.push(i(o)+"scale(",null,",",null,")");a.push({i:u-4,x:Yr(t,e)},{i:u-2,x:Yr(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,a.scaleX,a.scaleY,u,c),o=a=null,function(t){for(var n,e=-1,r=c.length;++e<r;)u[(n=c[e]).i]=n.x(t);return u.join("")}}}var ti=Jr((function(t){const n=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(t+"");return n.isIdentity?Kr:Qr(n.a,n.b,n.c,n.d,n.e,n.f)}),"px, ","px)","deg)"),ni=Jr((function(t){return null==t?Kr:(Wr||(Wr=document.createElementNS("http://www.w3.org/2000/svg","g")),Wr.setAttribute("transform",t),(t=Wr.transform.baseVal.consolidate())?Qr((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):Kr)}),", ",")",")");function ei(t){return((t=Math.exp(t))+1/t)/2}var ri=function t(n,e,r){function i(t,i){var o,a,u=t[0],c=t[1],f=t[2],s=i[0],l=i[1],h=i[2],d=s-u,p=l-c,g=d*d+p*p;if(g<1e-12)a=Math.log(h/f)/n,o=function(t){return[u+t*d,c+t*p,f*Math.exp(n*t*a)]};else{var y=Math.sqrt(g),v=(h*h-f*f+r*g)/(2*f*e*y),_=(h*h-f*f-r*g)/(2*h*e*y),b=Math.log(Math.sqrt(v*v+1)-v),m=Math.log(Math.sqrt(_*_+1)-_);a=(m-b)/n,o=function(t){var r=t*a,i=ei(b),o=f/(e*y)*(i*function(t){return((t=Math.exp(2*t))-1)/(t+1)}(n*r+b)-function(t){return((t=Math.exp(t))-1/t)/2}(b));return[u+o*d,c+o*p,f*i/ei(n*r+b)]}}return o.duration=1e3*a*n/Math.SQRT2,o}return i.rho=function(n){var e=Math.max(.001,+n),r=e*e;return t(e,r,r*r)},i}(Math.SQRT2,2,4);function ii(t){return function(n,e){var r=t((n=He(n)).h,(e=He(e)).h),i=$r(n.s,e.s),o=$r(n.l,e.l),a=$r(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var oi=ii(Pr),ai=ii($r);function ui(t){return function(n,e){var r=t((n=dr(n)).h,(e=dr(e)).h),i=$r(n.c,e.c),o=$r(n.l,e.l),a=$r(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=a(t),n+""}}}var ci=ui(Pr),fi=ui($r);function si(t){return function n(e){function r(n,r){var i=t((n=Tr(n)).h,(r=Tr(r)).h),o=$r(n.s,r.s),a=$r(n.l,r.l),u=$r(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=a(Math.pow(t,e)),n.opacity=u(t),n+""}}return e=+e,r.gamma=n,r}(1)}var li=si(Pr),hi=si($r);function di(t,n){void 0===n&&(n=t,t=Gr);for(var e=0,r=n.length-1,i=n[0],o=new Array(r<0?0:r);e<r;)o[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return o[n](t-n)}}var pi,gi,yi=0,vi=0,_i=0,bi=1e3,mi=0,xi=0,wi=0,Mi="object"==typeof performance&&performance.now?performance:Date,Ti="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Ai(){return xi||(Ti(Si),xi=Mi.now()+wi)}function Si(){xi=0}function Ei(){this._call=this._time=this._next=null}function Ni(t,n,e){var r=new Ei;return r.restart(t,n,e),r}function ki(){Ai(),++yi;for(var t,n=pi;n;)(t=xi-n._time)>=0&&n._call.call(void 0,t),n=n._next;--yi}function Ci(){xi=(mi=Mi.now())+wi,yi=vi=0;try{ki()}finally{yi=0,function(){var t,n,e=pi,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:pi=n);gi=t,zi(r)}(),xi=0}}function Pi(){var t=Mi.now(),n=t-mi;n>bi&&(wi-=n,mi=t)}function zi(t){yi||(vi&&(vi=clearTimeout(vi)),t-xi>24?(t<1/0&&(vi=setTimeout(Ci,t-Mi.now()-wi)),_i&&(_i=clearInterval(_i))):(_i||(mi=Mi.now(),_i=setInterval(Pi,bi)),yi=1,Ti(Ci)))}function $i(t,n,e){var r=new Ei;return n=null==n?0:+n,r.restart((e=>{r.stop(),t(e+n)}),n,e),r}Ei.prototype=Ni.prototype={constructor:Ei,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Ai():+e)+(null==n?0:+n),this._next||gi===this||(gi?gi._next=this:pi=this,gi=this),this._call=t,this._time=e,zi()},stop:function(){this._call&&(this._call=null,this._time=1/0,zi())}};var Di=$t("start","end","cancel","interrupt"),Ri=[],Fi=0,qi=1,Ui=2,Ii=3,Oi=4,Bi=5,Yi=6;function Li(t,n,e,r,i,o){var a=t.__transition;if(a){if(e in a)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(t){e.state=qi,e.timer.restart(a,e.delay,e.time),e.delay<=t&&a(t-e.delay)}function a(o){var f,s,l,h;if(e.state!==qi)return c();for(f in i)if((h=i[f]).name===e.name){if(h.state===Ii)return $i(a);h.state===Oi?(h.state=Yi,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=Yi,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[f])}if($i((function(){e.state===Ii&&(e.state=Oi,e.timer.restart(u,e.delay,e.time),u(o))})),e.state=Ui,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Ui){for(e.state=Ii,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(c),e.state=Bi,1),o=-1,a=r.length;++o<a;)r[o].call(t,i);e.state===Bi&&(e.on.call("end",t,t.__data__,e.index,e.group),c())}function c(){for(var r in e.state=Yi,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Ni(o,0,e.time)}(t,e,{name:n,index:r,group:i,on:Di,tween:Ri,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:Fi})}function ji(t,n){var e=Xi(t,n);if(e.state>Fi)throw new Error("too late; already scheduled");return e}function Hi(t,n){var e=Xi(t,n);if(e.state>Ii)throw new Error("too late; already running");return e}function Xi(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function Gi(t,n){var e,r,i,o=t.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>Ui&&e.state<Bi,e.state=Yi,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete o[i]):a=!1;a&&delete t.__transition}}function Vi(t,n){var e,r;return function(){var i=Hi(this,t),o=i.tween;if(o!==e)for(var a=0,u=(r=e=o).length;a<u;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}i.tween=r}}function Wi(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=Hi(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=u;break}c===f&&i.push(u)}o.tween=i}}function Zi(t,n,e){var r=t._id;return t.each((function(){var t=Hi(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)})),function(t){return Xi(t,r).value[n]}}function Ki(t,n){var e;return("number"==typeof n?Yr:n instanceof ze?Dr:(e=ze(n))?(n=e,Dr):Xr)(t,n)}function Qi(t){return function(){this.removeAttribute(t)}}function Ji(t){return function(){this.removeAttributeNS(t.space,t.local)}}function to(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttribute(t);return a===o?null:a===r?i:i=n(r=a,e)}}function no(t,n,e){var r,i,o=e+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===o?null:a===r?i:i=n(r=a,e)}}function eo(t,n,e){var r,i,o;return function(){var a,u,c=e(this);if(null!=c)return(a=this.getAttribute(t))===(u=c+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,c));this.removeAttribute(t)}}function ro(t,n,e){var r,i,o;return function(){var a,u,c=e(this);if(null!=c)return(a=this.getAttributeNS(t.space,t.local))===(u=c+"")?null:a===r&&u===i?o:(i=u,o=n(r=a,c));this.removeAttributeNS(t.space,t.local)}}function io(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttributeNS(t.space,t.local,n.call(this,e))}}(t,i)),e}return i._value=n,i}function oo(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttribute(t,n.call(this,e))}}(t,i)),e}return i._value=n,i}function ao(t,n){return function(){ji(this,t).delay=+n.apply(this,arguments)}}function uo(t,n){return n=+n,function(){ji(this,t).delay=n}}function co(t,n){return function(){Hi(this,t).duration=+n.apply(this,arguments)}}function fo(t,n){return n=+n,function(){Hi(this,t).duration=n}}var so=Wn.prototype.constructor;function lo(t){return function(){this.style.removeProperty(t)}}var ho=0;function po(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function go(t){return Wn().transition(t)}function yo(){return++ho}var vo=Wn.prototype;po.prototype=go.prototype={constructor:po,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=jt(t));for(var r=this._groups,i=r.length,o=new Array(i),a=0;a<i;++a)for(var u,c,f=r[a],s=f.length,l=o[a]=new Array(s),h=0;h<s;++h)(u=f[h])&&(c=t.call(u,u.__data__,h,f))&&("__data__"in u&&(c.__data__=u.__data__),l[h]=c,Li(l[h],n,e,h,l,Xi(u,e)));return new po(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Gt(t));for(var r=this._groups,i=r.length,o=[],a=[],u=0;u<i;++u)for(var c,f=r[u],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=Xi(c,e),g=0,y=d.length;g<y;++g)(h=d[g])&&Li(h,n,e,g,d,p);o.push(d),a.push(c)}return new po(o,a,n,e)},selectChild:vo.selectChild,selectChildren:vo.selectChildren,filter:function(t){"function"!=typeof t&&(t=Vt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,a=n[i],u=a.length,c=r[i]=[],f=0;f<u;++f)(o=a[f])&&t.call(o,o.__data__,f,a)&&c.push(o);return new po(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var c,f=n[u],s=e[u],l=f.length,h=a[u]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;u<r;++u)a[u]=n[u];return new po(a,this._parents,this._name,this._id)},selection:function(){return new so(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=yo(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,f=0;f<c;++f)if(a=u[f]){var s=Xi(a,n);Li(a,t,e,f,u,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new po(r,this._parents,t,e)},call:vo.call,nodes:vo.nodes,node:vo.node,size:vo.size,empty:vo.empty,each:vo.each,on:function(t,n){var e=this._id;return arguments.length<2?Xi(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t}))}(n)?ji:Hi;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(n,e),a.on=i}}(e,t,n))},attr:function(t,n){var e=It(t),r="transform"===e?ni:Ki;return this.attrTween(t,"function"==typeof n?(e.local?ro:eo)(e,r,Zi(this,"attr."+t,n)):null==n?(e.local?Ji:Qi)(e):(e.local?no:to)(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=It(t);return this.tween(e,(r.local?io:oo)(r,n))},style:function(t,n,e){var r="transform"==(t+="")?ti:Ki;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=_n(this,t),a=(this.style.removeProperty(t),_n(this,t));return o===a?null:o===e&&a===r?i:i=n(e=o,r=a)}}(t,r)).on("end.style."+t,lo(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,o;return function(){var a=_n(this,t),u=e(this),c=u+"";return null==u&&(this.style.removeProperty(t),c=u=_n(this,t)),a===c?null:a===r&&c===i?o:(i=c,o=n(r=a,u))}}(t,r,Zi(this,"style."+t,n))).each(function(t,n){var e,r,i,o,a="style."+n,u="end."+a;return function(){var c=Hi(this,t),f=c.on,s=null==c.value[a]?o||(o=lo(n)):void 0;f===e&&i===s||(r=(e=f).copy()).on(u,i=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,o=e+"";return function(){var a=_n(this,t);return a===o?null:a===r?i:i=n(r=a,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){var r,i;function o(){var o=n.apply(this,arguments);return o!==i&&(r=(i=o)&&function(t,n,e){return function(r){this.style.setProperty(t,n.call(this,r),e)}}(t,o,e)),r}return o._value=n,o}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(Zi(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var n="text";if(arguments.length<1)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,function(t){var n,e;function r(){var r=t.apply(this,arguments);return r!==e&&(n=(e=r)&&function(t){return function(n){this.textContent=t.call(this,n)}}(r)),n}return r._value=t,r}(t))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=Xi(this.node(),e).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?Vi:Wi)(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?ao:uo)(n,t)):Xi(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?co:fo)(n,t)):Xi(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){Hi(this,t).ease=n}}(n,t)):Xi(this.node(),n).ease},easeVarying:function(t){if("function"!=typeof t)throw new Error;return this.each(function(t,n){return function(){var e=n.apply(this,arguments);if("function"!=typeof e)throw new Error;Hi(this,t).ease=e}}(this._id,t))},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise((function(o,a){var u={value:a},c={value:function(){0==--i&&o()}};e.each((function(){var e=Hi(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(u),n._.interrupt.push(u),n._.end.push(c)),e.on=n})),0===i&&o()}))},[Symbol.iterator]:vo[Symbol.iterator]};function _o(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function bo(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var mo=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),xo=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),wo=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Mo=Math.PI,To=Mo/2;function Ao(t){return(1-Math.cos(Mo*t))/2}function So(t){return 1.0009775171065494*(Math.pow(2,-10*t)-.0009765625)}function Eo(t){return((t*=2)<=1?So(1-t):2-So(t-1))/2}function No(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var ko=4/11,Co=6/11,Po=8/11,zo=3/4,$o=9/11,Do=10/11,Ro=15/16,Fo=21/22,qo=63/64,Uo=1/ko/ko;function Io(t){return(t=+t)<ko?Uo*t*t:t<Po?Uo*(t-=Co)*t+zo:t<Do?Uo*(t-=$o)*t+Ro:Uo*(t-=Fo)*t+qo}var Oo=1.70158,Bo=function t(n){function e(t){return(t=+t)*t*(n*(t-1)+t)}return n=+n,e.overshoot=t,e}(Oo),Yo=function t(n){function e(t){return--t*t*((t+1)*n+t)+1}return n=+n,e.overshoot=t,e}(Oo),Lo=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(Oo),jo=2*Math.PI,Ho=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=jo);function i(t){return n*So(- --t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*jo)},i.period=function(e){return t(n,e)},i}(1,.3),Xo=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=jo);function i(t){return 1-n*So(t=+t)*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*jo)},i.period=function(e){return t(n,e)},i}(1,.3),Go=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=jo);function i(t){return((t=2*t-1)<0?n*So(-t)*Math.sin((r-t)/e):2-n*So(t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*jo)},i.period=function(e){return t(n,e)},i}(1,.3),Vo={time:null,delay:0,duration:250,ease:bo};function Wo(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))throw new Error(`transition ${n} not found`);return e}Wn.prototype.interrupt=function(t){return this.each((function(){Gi(this,t)}))},Wn.prototype.transition=function(t){var n,e;t instanceof po?(n=t._id,t=t._name):(n=yo(),(e=Vo).time=Ai(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],c=u.length,f=0;f<c;++f)(a=u[f])&&Li(a,t,n,f,u,e||Wo(a,n));return new po(r,this._parents,t,n)};var Zo=[null];var Ko=t=>()=>t;function Qo(t,{sourceEvent:n,target:e,selection:r,mode:i,dispatch:o}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:n,enumerable:!0,configurable:!0},target:{value:e,enumerable:!0,configurable:!0},selection:{value:r,enumerable:!0,configurable:!0},mode:{value:i,enumerable:!0,configurable:!0},_:{value:o}})}function Jo(t){t.preventDefault(),t.stopImmediatePropagation()}var ta={name:"drag"},na={name:"space"},ea={name:"handle"},ra={name:"center"};const{abs:ia,max:oa,min:aa}=Math;function ua(t){return[+t[0],+t[1]]}function ca(t){return[ua(t[0]),ua(t[1])]}var fa={name:"x",handles:["w","e"].map(va),input:function(t,n){return null==t?null:[[+t[0],n[0][1]],[+t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},sa={name:"y",handles:["n","s"].map(va),input:function(t,n){return null==t?null:[[n[0][0],+t[0]],[n[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},la={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(va),input:function(t){return null==t?null:ca(t)},output:function(t){return t}},ha={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},da={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},pa={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},ga={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},ya={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function va(t){return{type:t}}function _a(t){return!t.ctrlKey&&!t.button}function ba(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function ma(){return navigator.maxTouchPoints||"ontouchstart"in this}function xa(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function wa(t){var n,e=ba,r=_a,i=ma,o=!0,a=$t("start","brush","end"),u=6;function c(n){var e=n.property("__brush",g).selectAll(".overlay").data([va("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",ha.overlay).merge(e).each((function(){var t=xa(this).extent;Zn(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])})),n.selectAll(".selection").data([va("selection")]).enter().append("rect").attr("class","selection").attr("cursor",ha.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=n.selectAll(".handle").data(t.handles,(function(t){return t.type}));r.exit().remove(),r.enter().append("rect").attr("class",(function(t){return"handle handle--"+t.type})).attr("cursor",(function(t){return ha[t.type]})),n.each(f).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",h).filter(i).on("touchstart.brush",h).on("touchmove.brush",d).on("touchend.brush touchcancel.brush",p).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function f(){var t=Zn(this),n=xa(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",(function(t){return"e"===t.type[t.type.length-1]?n[1][0]-u/2:n[0][0]-u/2})).attr("y",(function(t){return"s"===t.type[0]?n[1][1]-u/2:n[0][1]-u/2})).attr("width",(function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+u:u})).attr("height",(function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+u:u}))):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function s(t,n,e){var r=t.__brush.emitter;return!r||e&&r.clean?new l(t,n,e):r}function l(t,n,e){this.that=t,this.args=n,this.state=t.__brush,this.active=0,this.clean=e}function h(e){if((!n||e.touches)&&r.apply(this,arguments)){var i,a,u,c,l,h,d,p,g,y,v,_=this,b=e.target.__data__.type,m="selection"===(o&&e.metaKey?b="overlay":b)?ta:o&&e.altKey?ra:ea,x=t===sa?null:ga[b],w=t===fa?null:ya[b],M=xa(_),T=M.extent,A=M.selection,S=T[0][0],E=T[0][1],N=T[1][0],k=T[1][1],C=0,P=0,z=x&&w&&o&&e.shiftKey,$=Array.from(e.touches||[e],(t=>{const n=t.identifier;return(t=ne(t,_)).point0=t.slice(),t.identifier=n,t}));Gi(_);var D=s(_,arguments,!0).beforestart();if("overlay"===b){A&&(g=!0);const n=[$[0],$[1]||$[0]];M.selection=A=[[i=t===sa?S:aa(n[0][0],n[1][0]),u=t===fa?E:aa(n[0][1],n[1][1])],[l=t===sa?N:oa(n[0][0],n[1][0]),d=t===fa?k:oa(n[0][1],n[1][1])]],$.length>1&&I(e)}else i=A[0][0],u=A[0][1],l=A[1][0],d=A[1][1];a=i,c=u,h=l,p=d;var R=Zn(_).attr("pointer-events","none"),F=R.selectAll(".overlay").attr("cursor",ha[b]);if(e.touches)D.moved=U,D.ended=O;else{var q=Zn(e.view).on("mousemove.brush",U,!0).on("mouseup.brush",O,!0);o&&q.on("keydown.brush",(function(t){switch(t.keyCode){case 16:z=x&&w;break;case 18:m===ea&&(x&&(l=h-C*x,i=a+C*x),w&&(d=p-P*w,u=c+P*w),m=ra,I(t));break;case 32:m!==ea&&m!==ra||(x<0?l=h-C:x>0&&(i=a-C),w<0?d=p-P:w>0&&(u=c-P),m=na,F.attr("cursor",ha.selection),I(t));break;default:return}Jo(t)}),!0).on("keyup.brush",(function(t){switch(t.keyCode){case 16:z&&(y=v=z=!1,I(t));break;case 18:m===ra&&(x<0?l=h:x>0&&(i=a),w<0?d=p:w>0&&(u=c),m=ea,I(t));break;case 32:m===na&&(t.altKey?(x&&(l=h-C*x,i=a+C*x),w&&(d=p-P*w,u=c+P*w),m=ra):(x<0?l=h:x>0&&(i=a),w<0?d=p:w>0&&(u=c),m=ea),F.attr("cursor",ha[b]),I(t));break;default:return}Jo(t)}),!0),ae(e.view)}f.call(_),D.start(e,m.name)}function U(t){for(const n of t.changedTouches||[t])for(const t of $)t.identifier===n.identifier&&(t.cur=ne(n,_));if(z&&!y&&!v&&1===$.length){const t=$[0];ia(t.cur[0]-t[0])>ia(t.cur[1]-t[1])?v=!0:y=!0}for(const t of $)t.cur&&(t[0]=t.cur[0],t[1]=t.cur[1]);g=!0,Jo(t),I(t)}function I(t){const n=$[0],e=n.point0;var r;switch(C=n[0]-e[0],P=n[1]-e[1],m){case na:case ta:x&&(C=oa(S-i,aa(N-l,C)),a=i+C,h=l+C),w&&(P=oa(E-u,aa(k-d,P)),c=u+P,p=d+P);break;case ea:$[1]?(x&&(a=oa(S,aa(N,$[0][0])),h=oa(S,aa(N,$[1][0])),x=1),w&&(c=oa(E,aa(k,$[0][1])),p=oa(E,aa(k,$[1][1])),w=1)):(x<0?(C=oa(S-i,aa(N-i,C)),a=i+C,h=l):x>0&&(C=oa(S-l,aa(N-l,C)),a=i,h=l+C),w<0?(P=oa(E-u,aa(k-u,P)),c=u+P,p=d):w>0&&(P=oa(E-d,aa(k-d,P)),c=u,p=d+P));break;case ra:x&&(a=oa(S,aa(N,i-C*x)),h=oa(S,aa(N,l+C*x))),w&&(c=oa(E,aa(k,u-P*w)),p=oa(E,aa(k,d+P*w)))}h<a&&(x*=-1,r=i,i=l,l=r,r=a,a=h,h=r,b in da&&F.attr("cursor",ha[b=da[b]])),p<c&&(w*=-1,r=u,u=d,d=r,r=c,c=p,p=r,b in pa&&F.attr("cursor",ha[b=pa[b]])),M.selection&&(A=M.selection),y&&(a=A[0][0],h=A[1][0]),v&&(c=A[0][1],p=A[1][1]),A[0][0]===a&&A[0][1]===c&&A[1][0]===h&&A[1][1]===p||(M.selection=[[a,c],[h,p]],f.call(_),D.brush(t,m.name))}function O(t){if(function(t){t.stopImmediatePropagation()}(t),t.touches){if(t.touches.length)return;n&&clearTimeout(n),n=setTimeout((function(){n=null}),500)}else ue(t.view,g),q.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);R.attr("pointer-events","all"),F.attr("cursor",ha.overlay),M.selection&&(A=M.selection),function(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}(A)&&(M.selection=null,f.call(_)),D.end(t,m.name)}}function d(t){s(this,arguments).moved(t)}function p(t){s(this,arguments).ended(t)}function g(){var n=this.__brush||{selection:null};return n.extent=ca(e.apply(this,arguments)),n.dim=t,n}return c.move=function(n,e,r){n.tween?n.on("start.brush",(function(t){s(this,arguments).beforestart().start(t)})).on("interrupt.brush end.brush",(function(t){s(this,arguments).end(t)})).tween("brush",(function(){var n=this,r=n.__brush,i=s(n,arguments),o=r.selection,a=t.input("function"==typeof e?e.apply(this,arguments):e,r.extent),u=Gr(o,a);function c(t){r.selection=1===t&&null===a?null:u(t),f.call(n),i.brush()}return null!==o&&null!==a?c:c(1)})):n.each((function(){var n=this,i=arguments,o=n.__brush,a=t.input("function"==typeof e?e.apply(n,i):e,o.extent),u=s(n,i).beforestart();Gi(n),o.selection=null===a?null:a,f.call(n),u.start(r).brush(r).end(r)}))},c.clear=function(t,n){c.move(t,null,n)},l.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(t,n){return this.starting?(this.starting=!1,this.emit("start",t,n)):this.emit("brush",t),this},brush:function(t,n){return this.emit("brush",t,n),this},end:function(t,n){return 0==--this.active&&(delete this.state.emitter,this.emit("end",t,n)),this},emit:function(n,e,r){var i=Zn(this.that).datum();a.call(n,this.that,new Qo(n,{sourceEvent:e,target:c,selection:t.output(this.state.selection),mode:r,dispatch:a}),i)}},c.extent=function(t){return arguments.length?(e="function"==typeof t?t:Ko(ca(t)),c):e},c.filter=function(t){return arguments.length?(r="function"==typeof t?t:Ko(!!t),c):r},c.touchable=function(t){return arguments.length?(i="function"==typeof t?t:Ko(!!t),c):i},c.handleSize=function(t){return arguments.length?(u=+t,c):u},c.keyModifiers=function(t){return arguments.length?(o=!!t,c):o},c.on=function(){var t=a.on.apply(a,arguments);return t===a?c:t},c}var Ma=Math.abs,Ta=Math.cos,Aa=Math.sin,Sa=Math.PI,Ea=Sa/2,Na=2*Sa,ka=Math.max,Ca=1e-12;function Pa(t,n){return Array.from({length:n-t},((n,e)=>t+e))}function za(t,n){var e=0,r=null,i=null,o=null;function a(a){var u,c=a.length,f=new Array(c),s=Pa(0,c),l=new Array(c*c),h=new Array(c),d=0;a=Float64Array.from({length:c*c},n?(t,n)=>a[n%c][n/c|0]:(t,n)=>a[n/c|0][n%c]);for(let n=0;n<c;++n){let e=0;for(let r=0;r<c;++r)e+=a[n*c+r]+t*a[r*c+n];d+=f[n]=e}u=(d=ka(0,Na-e*c)/d)?e:Na/c;{let n=0;r&&s.sort(((t,n)=>r(f[t],f[n])));for(const e of s){const r=n;if(t){const t=Pa(1+~c,c).filter((t=>t<0?a[~t*c+e]:a[e*c+t]));i&&t.sort(((t,n)=>i(t<0?-a[~t*c+e]:a[e*c+t],n<0?-a[~n*c+e]:a[e*c+n])));for(const r of t)if(r<0){(l[~r*c+e]||(l[~r*c+e]={source:null,target:null})).target={index:e,startAngle:n,endAngle:n+=a[~r*c+e]*d,value:a[~r*c+e]}}else{(l[e*c+r]||(l[e*c+r]={source:null,target:null})).source={index:e,startAngle:n,endAngle:n+=a[e*c+r]*d,value:a[e*c+r]}}h[e]={index:e,startAngle:r,endAngle:n,value:f[e]}}else{const t=Pa(0,c).filter((t=>a[e*c+t]||a[t*c+e]));i&&t.sort(((t,n)=>i(a[e*c+t],a[e*c+n])));for(const r of t){let t;if(e<r?(t=l[e*c+r]||(l[e*c+r]={source:null,target:null}),t.source={index:e,startAngle:n,endAngle:n+=a[e*c+r]*d,value:a[e*c+r]}):(t=l[r*c+e]||(l[r*c+e]={source:null,target:null}),t.target={index:e,startAngle:n,endAngle:n+=a[e*c+r]*d,value:a[e*c+r]},e===r&&(t.source=t.target)),t.source&&t.target&&t.source.value<t.target.value){const n=t.source;t.source=t.target,t.target=n}}h[e]={index:e,startAngle:r,endAngle:n,value:f[e]}}n+=u}}return(l=Object.values(l)).groups=h,o?l.sort(o):l}return a.padAngle=function(t){return arguments.length?(e=ka(0,t),a):e},a.sortGroups=function(t){return arguments.length?(r=t,a):r},a.sortSubgroups=function(t){return arguments.length?(i=t,a):i},a.sortChords=function(t){return arguments.length?(null==t?o=null:(n=t,o=function(t,e){return n(t.source.value+t.target.value,e.source.value+e.target.value)})._=t,a):o&&o._;var n},a}const $a=Math.PI,Da=2*$a,Ra=1e-6,Fa=Da-Ra;function qa(t){this._+=t[0];for(let n=1,e=t.length;n<e;++n)this._+=arguments[n]+t[n]}let Ua=class{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=null==t?qa:function(t){let n=Math.floor(t);if(!(n>=0))throw new Error(`invalid digits: ${t}`);if(n>15)return qa;const e=10**n;return function(t){this._+=t[0];for(let n=1,r=t.length;n<r;++n)this._+=Math.round(arguments[n]*e)/e+t[n]}}(t)}moveTo(t,n){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,n){this._append`L${this._x1=+t},${this._y1=+n}`}quadraticCurveTo(t,n,e,r){this._append`Q${+t},${+n},${this._x1=+e},${this._y1=+r}`}bezierCurveTo(t,n,e,r,i,o){this._append`C${+t},${+n},${+e},${+r},${this._x1=+i},${this._y1=+o}`}arcTo(t,n,e,r,i){if(t=+t,n=+n,e=+e,r=+r,(i=+i)<0)throw new Error(`negative radius: ${i}`);let o=this._x1,a=this._y1,u=e-t,c=r-n,f=o-t,s=a-n,l=f*f+s*s;if(null===this._x1)this._append`M${this._x1=t},${this._y1=n}`;else if(l>Ra)if(Math.abs(s*u-c*f)>Ra&&i){let h=e-o,d=r-a,p=u*u+c*c,g=h*h+d*d,y=Math.sqrt(p),v=Math.sqrt(l),_=i*Math.tan(($a-Math.acos((p+l-g)/(2*y*v)))/2),b=_/v,m=_/y;Math.abs(b-1)>Ra&&this._append`L${t+b*f},${n+b*s}`,this._append`A${i},${i},0,0,${+(s*h>f*d)},${this._x1=t+m*u},${this._y1=n+m*c}`}else this._append`L${this._x1=t},${this._y1=n}`;else;}arc(t,n,e,r,i,o){if(t=+t,n=+n,o=!!o,(e=+e)<0)throw new Error(`negative radius: ${e}`);let a=e*Math.cos(r),u=e*Math.sin(r),c=t+a,f=n+u,s=1^o,l=o?r-i:i-r;null===this._x1?this._append`M${c},${f}`:(Math.abs(this._x1-c)>Ra||Math.abs(this._y1-f)>Ra)&&this._append`L${c},${f}`,e&&(l<0&&(l=l%Da+Da),l>Fa?this._append`A${e},${e},0,1,${s},${t-a},${n-u}A${e},${e},0,1,${s},${this._x1=c},${this._y1=f}`:l>Ra&&this._append`A${e},${e},0,${+(l>=$a)},${s},${this._x1=t+e*Math.cos(i)},${this._y1=n+e*Math.sin(i)}`)}rect(t,n,e,r){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}h${e=+e}v${+r}h${-e}Z`}toString(){return this._}};function Ia(){return new Ua}Ia.prototype=Ua.prototype;var Oa=Array.prototype.slice;function Ba(t){return function(){return t}}function Ya(t){return t.source}function La(t){return t.target}function ja(t){return t.radius}function Ha(t){return t.startAngle}function Xa(t){return t.endAngle}function Ga(){return 0}function Va(){return 10}function Wa(t){var n=Ya,e=La,r=ja,i=ja,o=Ha,a=Xa,u=Ga,c=null;function f(){var f,s=n.apply(this,arguments),l=e.apply(this,arguments),h=u.apply(this,arguments)/2,d=Oa.call(arguments),p=+r.apply(this,(d[0]=s,d)),g=o.apply(this,d)-Ea,y=a.apply(this,d)-Ea,v=+i.apply(this,(d[0]=l,d)),_=o.apply(this,d)-Ea,b=a.apply(this,d)-Ea;if(c||(c=f=Ia()),h>Ca&&(Ma(y-g)>2*h+Ca?y>g?(g+=h,y-=h):(g-=h,y+=h):g=y=(g+y)/2,Ma(b-_)>2*h+Ca?b>_?(_+=h,b-=h):(_-=h,b+=h):_=b=(_+b)/2),c.moveTo(p*Ta(g),p*Aa(g)),c.arc(0,0,p,g,y),g!==_||y!==b)if(t){var m=v-+t.apply(this,arguments),x=(_+b)/2;c.quadraticCurveTo(0,0,m*Ta(_),m*Aa(_)),c.lineTo(v*Ta(x),v*Aa(x)),c.lineTo(m*Ta(b),m*Aa(b))}else c.quadraticCurveTo(0,0,v*Ta(_),v*Aa(_)),c.arc(0,0,v,_,b);if(c.quadraticCurveTo(0,0,p*Ta(g),p*Aa(g)),c.closePath(),f)return c=null,f+""||null}return t&&(f.headRadius=function(n){return arguments.length?(t="function"==typeof n?n:Ba(+n),f):t}),f.radius=function(t){return arguments.length?(r=i="function"==typeof t?t:Ba(+t),f):r},f.sourceRadius=function(t){return arguments.length?(r="function"==typeof t?t:Ba(+t),f):r},f.targetRadius=function(t){return arguments.length?(i="function"==typeof t?t:Ba(+t),f):i},f.startAngle=function(t){return arguments.length?(o="function"==typeof t?t:Ba(+t),f):o},f.endAngle=function(t){return arguments.length?(a="function"==typeof t?t:Ba(+t),f):a},f.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:Ba(+t),f):u},f.source=function(t){return arguments.length?(n=t,f):n},f.target=function(t){return arguments.length?(e=t,f):e},f.context=function(t){return arguments.length?(c=null==t?null:t,f):c},f}var Za=Array.prototype.slice;function Ka(t,n){return t-n}var Qa=t=>()=>t;function Ja(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=tu(t,n[r]))return e;return 0}function tu(t,n){for(var e=n[0],r=n[1],i=-1,o=0,a=t.length,u=a-1;o<a;u=o++){var c=t[o],f=c[0],s=c[1],l=t[u],h=l[0],d=l[1];if(nu(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function nu(t,n,e){var r,i,o,a;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&(i=t[r=+(t[0]===n[0])],o=e[r],a=n[r],i<=o&&o<=a||a<=o&&o<=i)}function eu(){}var ru=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function iu(){var t=1,n=1,e=K,r=u;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(Ka);else{const e=M(t,ou);for(n=G(...Z(e[0],e[1],n),n);n[n.length-1]>=e[1];)n.pop();for(;n[1]<e[0];)n.shift()}return n.map((n=>o(t,n)))}function o(e,i){const o=null==i?NaN:+i;if(isNaN(o))throw new Error(`invalid value: ${i}`);var u=[],c=[];return function(e,r,i){var o,u,c,f,s,l,h=new Array,d=new Array;o=u=-1,f=au(e[0],r),ru[f<<1].forEach(p);for(;++o<t-1;)c=f,f=au(e[o+1],r),ru[c|f<<1].forEach(p);ru[f|0].forEach(p);for(;++u<n-1;){for(o=-1,f=au(e[u*t+t],r),s=au(e[u*t],r),ru[f<<1|s<<2].forEach(p);++o<t-1;)c=f,f=au(e[u*t+t+o+1],r),l=s,s=au(e[u*t+o+1],r),ru[c|f<<1|s<<2|l<<3].forEach(p);ru[f|s<<3].forEach(p)}o=-1,s=e[u*t]>=r,ru[s<<2].forEach(p);for(;++o<t-1;)l=s,s=au(e[u*t+o+1],r),ru[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+o,t[0][1]+u],c=[t[1][0]+o,t[1][1]+u],f=a(r),s=a(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}ru[s<<3].forEach(p)}(e,o,(function(t){r(t,e,o),function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r}(t)>0?u.push([t]):c.push(t)})),c.forEach((function(t){for(var n,e=0,r=u.length;e<r;++e)if(-1!==Ja((n=u[e])[0],t))return void n.push(t)})),{type:"MultiPolygon",value:i,coordinates:u}}function a(n){return 2*n[0]+n[1]*(t+1)*4}function u(e,r,i){e.forEach((function(e){var o=e[0],a=e[1],u=0|o,c=0|a,f=uu(r[c*t+u]);o>0&&o<t&&u===o&&(e[0]=cu(o,uu(r[c*t+u-1]),f,i)),a>0&&a<n&&c===a&&(e[1]=cu(a,uu(r[(c-1)*t+u]),f,i))}))}return i.contour=o,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.floor(e[0]),o=Math.floor(e[1]);if(!(r>=0&&o>=0))throw new Error("invalid size");return t=r,n=o,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?Qa(Za.call(t)):Qa(t),i):e},i.smooth=function(t){return arguments.length?(r=t?u:eu,i):r===u},i}function ou(t){return isFinite(t)?t:NaN}function au(t,n){return null!=t&&+t>=n}function uu(t){return null==t||isNaN(t=+t)?-1/0:t}function cu(t,n,e,r){const i=r-n,o=e-n,a=isFinite(i)||isFinite(o)?i/o:Math.sign(i)/Math.sign(o);return isNaN(a)?t:t+a-.5}function fu(t){return t[0]}function su(t){return t[1]}function lu(){return 1}const hu=134217729,du=33306690738754706e-32;function pu(t,n,e,r,i){let o,a,u,c,f=n[0],s=r[0],l=0,h=0;s>f==s>-f?(o=f,f=n[++l]):(o=s,s=r[++h]);let d=0;if(l<t&&h<e)for(s>f==s>-f?(a=f+o,u=o-(a-f),f=n[++l]):(a=s+o,u=o-(a-s),s=r[++h]),o=a,0!==u&&(i[d++]=u);l<t&&h<e;)s>f==s>-f?(a=o+f,c=a-o,u=o-(a-c)+(f-c),f=n[++l]):(a=o+s,c=a-o,u=o-(a-c)+(s-c),s=r[++h]),o=a,0!==u&&(i[d++]=u);for(;l<t;)a=o+f,c=a-o,u=o-(a-c)+(f-c),f=n[++l],o=a,0!==u&&(i[d++]=u);for(;h<e;)a=o+s,c=a-o,u=o-(a-c)+(s-c),s=r[++h],o=a,0!==u&&(i[d++]=u);return 0===o&&0!==d||(i[d++]=o),d}function gu(t){return new Float64Array(t)}const yu=22204460492503146e-32,vu=11093356479670487e-47,_u=gu(4),bu=gu(8),mu=gu(12),xu=gu(16),wu=gu(4);function Mu(t,n,e,r,i,o){const a=(n-o)*(e-i),u=(t-i)*(r-o),c=a-u,f=Math.abs(a+u);return Math.abs(c)>=33306690738754716e-32*f?c:-function(t,n,e,r,i,o,a){let u,c,f,s,l,h,d,p,g,y,v,_,b,m,x,w,M,T;const A=t-i,S=e-i,E=n-o,N=r-o;m=A*N,h=hu*A,d=h-(h-A),p=A-d,h=hu*N,g=h-(h-N),y=N-g,x=p*y-(m-d*g-p*g-d*y),w=E*S,h=hu*E,d=h-(h-E),p=E-d,h=hu*S,g=h-(h-S),y=S-g,M=p*y-(w-d*g-p*g-d*y),v=x-M,l=x-v,_u[0]=x-(v+l)+(l-M),_=m+v,l=_-m,b=m-(_-l)+(v-l),v=b-w,l=b-v,_u[1]=b-(v+l)+(l-w),T=_+v,l=T-_,_u[2]=_-(T-l)+(v-l),_u[3]=T;let k=function(t,n){let e=n[0];for(let r=1;r<t;r++)e+=n[r];return e}(4,_u),C=yu*a;if(k>=C||-k>=C)return k;if(l=t-A,u=t-(A+l)+(l-i),l=e-S,f=e-(S+l)+(l-i),l=n-E,c=n-(E+l)+(l-o),l=r-N,s=r-(N+l)+(l-o),0===u&&0===c&&0===f&&0===s)return k;if(C=vu*a+du*Math.abs(k),k+=A*s+N*u-(E*f+S*c),k>=C||-k>=C)return k;m=u*N,h=hu*u,d=h-(h-u),p=u-d,h=hu*N,g=h-(h-N),y=N-g,x=p*y-(m-d*g-p*g-d*y),w=c*S,h=hu*c,d=h-(h-c),p=c-d,h=hu*S,g=h-(h-S),y=S-g,M=p*y-(w-d*g-p*g-d*y),v=x-M,l=x-v,wu[0]=x-(v+l)+(l-M),_=m+v,l=_-m,b=m-(_-l)+(v-l),v=b-w,l=b-v,wu[1]=b-(v+l)+(l-w),T=_+v,l=T-_,wu[2]=_-(T-l)+(v-l),wu[3]=T;const P=pu(4,_u,4,wu,bu);m=A*s,h=hu*A,d=h-(h-A),p=A-d,h=hu*s,g=h-(h-s),y=s-g,x=p*y-(m-d*g-p*g-d*y),w=E*f,h=hu*E,d=h-(h-E),p=E-d,h=hu*f,g=h-(h-f),y=f-g,M=p*y-(w-d*g-p*g-d*y),v=x-M,l=x-v,wu[0]=x-(v+l)+(l-M),_=m+v,l=_-m,b=m-(_-l)+(v-l),v=b-w,l=b-v,wu[1]=b-(v+l)+(l-w),T=_+v,l=T-_,wu[2]=_-(T-l)+(v-l),wu[3]=T;const z=pu(P,bu,4,wu,mu);m=u*s,h=hu*u,d=h-(h-u),p=u-d,h=hu*s,g=h-(h-s),y=s-g,x=p*y-(m-d*g-p*g-d*y),w=c*f,h=hu*c,d=h-(h-c),p=c-d,h=hu*f,g=h-(h-f),y=f-g,M=p*y-(w-d*g-p*g-d*y),v=x-M,l=x-v,wu[0]=x-(v+l)+(l-M),_=m+v,l=_-m,b=m-(_-l)+(v-l),v=b-w,l=b-v,wu[1]=b-(v+l)+(l-w),T=_+v,l=T-_,wu[2]=_-(T-l)+(v-l),wu[3]=T;const $=pu(z,mu,4,wu,xu);return xu[$-1]}(t,n,e,r,i,o,f)}const Tu=Math.pow(2,-52),Au=new Uint32Array(512);class Su{static from(t,n=zu,e=$u){const r=t.length,i=new Float64Array(2*r);for(let o=0;o<r;o++){const r=t[o];i[2*o]=n(r),i[2*o+1]=e(r)}return new Su(i)}constructor(t){const n=t.length>>1;if(n>0&&"number"!=typeof t[0])throw new Error("Expected coords to contain numbers.");this.coords=t;const e=Math.max(2*n-5,0);this._triangles=new Uint32Array(3*e),this._halfedges=new Int32Array(3*e),this._hashSize=Math.ceil(Math.sqrt(n)),this._hullPrev=new Uint32Array(n),this._hullNext=new Uint32Array(n),this._hullTri=new Uint32Array(n),this._hullHash=new Int32Array(this._hashSize),this._ids=new Uint32Array(n),this._dists=new Float64Array(n),this.update()}update(){const{coords:t,_hullPrev:n,_hullNext:e,_hullTri:r,_hullHash:i}=this,o=t.length>>1;let a=1/0,u=1/0,c=-1/0,f=-1/0;for(let n=0;n<o;n++){const e=t[2*n],r=t[2*n+1];e<a&&(a=e),r<u&&(u=r),e>c&&(c=e),r>f&&(f=r),this._ids[n]=n}const s=(a+c)/2,l=(u+f)/2;let h,d,p;for(let n=0,e=1/0;n<o;n++){const r=Eu(s,l,t[2*n],t[2*n+1]);r<e&&(h=n,e=r)}const g=t[2*h],y=t[2*h+1];for(let n=0,e=1/0;n<o;n++){if(n===h)continue;const r=Eu(g,y,t[2*n],t[2*n+1]);r<e&&r>0&&(d=n,e=r)}let v=t[2*d],_=t[2*d+1],b=1/0;for(let n=0;n<o;n++){if(n===h||n===d)continue;const e=ku(g,y,v,_,t[2*n],t[2*n+1]);e<b&&(p=n,b=e)}let m=t[2*p],x=t[2*p+1];if(b===1/0){for(let n=0;n<o;n++)this._dists[n]=t[2*n]-t[0]||t[2*n+1]-t[1];Cu(this._ids,this._dists,0,o-1);const n=new Uint32Array(o);let e=0;for(let t=0,r=-1/0;t<o;t++){const i=this._ids[t],o=this._dists[i];o>r&&(n[e++]=i,r=o)}return this.hull=n.subarray(0,e),this.triangles=new Uint32Array(0),void(this.halfedges=new Uint32Array(0))}if(Mu(g,y,v,_,m,x)<0){const t=d,n=v,e=_;d=p,v=m,_=x,p=t,m=n,x=e}const w=function(t,n,e,r,i,o){const a=e-t,u=r-n,c=i-t,f=o-n,s=a*a+u*u,l=c*c+f*f,h=.5/(a*f-u*c),d=t+(f*s-u*l)*h,p=n+(a*l-c*s)*h;return{x:d,y:p}}(g,y,v,_,m,x);this._cx=w.x,this._cy=w.y;for(let n=0;n<o;n++)this._dists[n]=Eu(t[2*n],t[2*n+1],w.x,w.y);Cu(this._ids,this._dists,0,o-1),this._hullStart=h;let M=3;e[h]=n[p]=d,e[d]=n[h]=p,e[p]=n[d]=h,r[h]=0,r[d]=1,r[p]=2,i.fill(-1),i[this._hashKey(g,y)]=h,i[this._hashKey(v,_)]=d,i[this._hashKey(m,x)]=p,this.trianglesLen=0,this._addTriangle(h,d,p,-1,-1,-1);for(let o,a,u=0;u<this._ids.length;u++){const c=this._ids[u],f=t[2*c],s=t[2*c+1];if(u>0&&Math.abs(f-o)<=Tu&&Math.abs(s-a)<=Tu)continue;if(o=f,a=s,c===h||c===d||c===p)continue;let l=0;for(let t=0,n=this._hashKey(f,s);t<this._hashSize&&(l=i[(n+t)%this._hashSize],-1===l||l===e[l]);t++);l=n[l];let g,y=l;for(;g=e[y],Mu(f,s,t[2*y],t[2*y+1],t[2*g],t[2*g+1])>=0;)if(y=g,y===l){y=-1;break}if(-1===y)continue;let v=this._addTriangle(y,c,e[y],-1,-1,r[y]);r[c]=this._legalize(v+2),r[y]=v,M++;let _=e[y];for(;g=e[_],Mu(f,s,t[2*_],t[2*_+1],t[2*g],t[2*g+1])<0;)v=this._addTriangle(_,c,g,r[c],-1,r[_]),r[c]=this._legalize(v+2),e[_]=_,M--,_=g;if(y===l)for(;g=n[y],Mu(f,s,t[2*g],t[2*g+1],t[2*y],t[2*y+1])<0;)v=this._addTriangle(g,c,y,-1,r[y],r[g]),this._legalize(v+2),r[g]=v,e[y]=y,M--,y=g;this._hullStart=n[c]=y,e[y]=n[_]=c,e[c]=_,i[this._hashKey(f,s)]=c,i[this._hashKey(t[2*y],t[2*y+1])]=y}this.hull=new Uint32Array(M);for(let t=0,n=this._hullStart;t<M;t++)this.hull[t]=n,n=e[n];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(t,n){return Math.floor(function(t,n){const e=t/(Math.abs(t)+Math.abs(n));return(n>0?3-e:1+e)/4}(t-this._cx,n-this._cy)*this._hashSize)%this._hashSize}_legalize(t){const{_triangles:n,_halfedges:e,coords:r}=this;let i=0,o=0;for(;;){const a=e[t],u=t-t%3;if(o=u+(t+2)%3,-1===a){if(0===i)break;t=Au[--i];continue}const c=a-a%3,f=u+(t+1)%3,s=c+(a+2)%3,l=n[o],h=n[t],d=n[f],p=n[s];if(Nu(r[2*l],r[2*l+1],r[2*h],r[2*h+1],r[2*d],r[2*d+1],r[2*p],r[2*p+1])){n[t]=p,n[a]=l;const r=e[s];if(-1===r){let n=this._hullStart;do{if(this._hullTri[n]===s){this._hullTri[n]=t;break}n=this._hullPrev[n]}while(n!==this._hullStart)}this._link(t,r),this._link(a,e[o]),this._link(o,s);const u=c+(a+1)%3;i<Au.length&&(Au[i++]=u)}else{if(0===i)break;t=Au[--i]}}return o}_link(t,n){this._halfedges[t]=n,-1!==n&&(this._halfedges[n]=t)}_addTriangle(t,n,e,r,i,o){const a=this.trianglesLen;return this._triangles[a]=t,this._triangles[a+1]=n,this._triangles[a+2]=e,this._link(a,r),this._link(a+1,i),this._link(a+2,o),this.trianglesLen+=3,a}}function Eu(t,n,e,r){const i=t-e,o=n-r;return i*i+o*o}function Nu(t,n,e,r,i,o,a,u){const c=t-a,f=n-u,s=e-a,l=r-u,h=i-a,d=o-u,p=s*s+l*l,g=h*h+d*d;return c*(l*g-p*d)-f*(s*g-p*h)+(c*c+f*f)*(s*d-l*h)<0}function ku(t,n,e,r,i,o){const a=e-t,u=r-n,c=i-t,f=o-n,s=a*a+u*u,l=c*c+f*f,h=.5/(a*f-u*c),d=(f*s-u*l)*h,p=(a*l-c*s)*h;return d*d+p*p}function Cu(t,n,e,r){if(r-e<=20)for(let i=e+1;i<=r;i++){const r=t[i],o=n[r];let a=i-1;for(;a>=e&&n[t[a]]>o;)t[a+1]=t[a--];t[a+1]=r}else{let i=e+1,o=r;Pu(t,e+r>>1,i),n[t[e]]>n[t[r]]&&Pu(t,e,r),n[t[i]]>n[t[r]]&&Pu(t,i,r),n[t[e]]>n[t[i]]&&Pu(t,e,i);const a=t[i],u=n[a];for(;;){do{i++}while(n[t[i]]<u);do{o--}while(n[t[o]]>u);if(o<i)break;Pu(t,i,o)}t[e+1]=t[o],t[o]=a,r-i+1>=o-e?(Cu(t,n,i,r),Cu(t,n,e,o-1)):(Cu(t,n,e,o-1),Cu(t,n,i,r))}}function Pu(t,n,e){const r=t[n];t[n]=t[e],t[e]=r}function zu(t){return t[0]}function $u(t){return t[1]}const Du=1e-6;class Ru{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(t,n){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(t,n){this._+=`L${this._x1=+t},${this._y1=+n}`}arc(t,n,e){const r=(t=+t)+(e=+e),i=n=+n;if(e<0)throw new Error("negative radius");null===this._x1?this._+=`M${r},${i}`:(Math.abs(this._x1-r)>Du||Math.abs(this._y1-i)>Du)&&(this._+="L"+r+","+i),e&&(this._+=`A${e},${e},0,1,1,${t-e},${n}A${e},${e},0,1,1,${this._x1=r},${this._y1=i}`)}rect(t,n,e,r){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}h${+e}v${+r}h${-e}Z`}value(){return this._||null}}class Fu{constructor(){this._=[]}moveTo(t,n){this._.push([t,n])}closePath(){this._.push(this._[0].slice())}lineTo(t,n){this._.push([t,n])}value(){return this._.length?this._:null}}class qu{constructor(t,[n,e,r,i]=[0,0,960,500]){if(!((r=+r)>=(n=+n)&&(i=+i)>=(e=+e)))throw new Error("invalid bounds");this.delaunay=t,this._circumcenters=new Float64Array(2*t.points.length),this.vectors=new Float64Array(2*t.points.length),this.xmax=r,this.xmin=n,this.ymax=i,this.ymin=e,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){const{delaunay:{points:t,hull:n,triangles:e},vectors:r}=this;let i,o;const a=this.circumcenters=this._circumcenters.subarray(0,e.length/3*2);for(let r,u,c=0,f=0,s=e.length;c<s;c+=3,f+=2){const s=2*e[c],l=2*e[c+1],h=2*e[c+2],d=t[s],p=t[s+1],g=t[l],y=t[l+1],v=t[h],_=t[h+1],b=g-d,m=y-p,x=v-d,w=_-p,M=2*(b*w-m*x);if(Math.abs(M)<1e-9){if(void 0===i){i=o=0;for(const e of n)i+=t[2*e],o+=t[2*e+1];i/=n.length,o/=n.length}const e=1e9*Math.sign((i-d)*w-(o-p)*x);r=(d+v)/2-e*w,u=(p+_)/2+e*x}else{const t=1/M,n=b*b+m*m,e=x*x+w*w;r=d+(w*n-m*e)*t,u=p+(b*e-x*n)*t}a[f]=r,a[f+1]=u}let u,c,f,s=n[n.length-1],l=4*s,h=t[2*s],d=t[2*s+1];r.fill(0);for(let e=0;e<n.length;++e)s=n[e],u=l,c=h,f=d,l=4*s,h=t[2*s],d=t[2*s+1],r[u+2]=r[l]=f-d,r[u+3]=r[l+1]=h-c}render(t){const n=null==t?t=new Ru:void 0,{delaunay:{halfedges:e,inedges:r,hull:i},circumcenters:o,vectors:a}=this;if(i.length<=1)return null;for(let n=0,r=e.length;n<r;++n){const r=e[n];if(r<n)continue;const i=2*Math.floor(n/3),a=2*Math.floor(r/3),u=o[i],c=o[i+1],f=o[a],s=o[a+1];this._renderSegment(u,c,f,s,t)}let u,c=i[i.length-1];for(let n=0;n<i.length;++n){u=c,c=i[n];const e=2*Math.floor(r[c]/3),f=o[e],s=o[e+1],l=4*u,h=this._project(f,s,a[l+2],a[l+3]);h&&this._renderSegment(f,s,h[0],h[1],t)}return n&&n.value()}renderBounds(t){const n=null==t?t=new Ru:void 0;return t.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),n&&n.value()}renderCell(t,n){const e=null==n?n=new Ru:void 0,r=this._clip(t);if(null===r||!r.length)return;n.moveTo(r[0],r[1]);let i=r.length;for(;r[0]===r[i-2]&&r[1]===r[i-1]&&i>1;)i-=2;for(let t=2;t<i;t+=2)r[t]===r[t-2]&&r[t+1]===r[t-1]||n.lineTo(r[t],r[t+1]);return n.closePath(),e&&e.value()}*cellPolygons(){const{delaunay:{points:t}}=this;for(let n=0,e=t.length/2;n<e;++n){const t=this.cellPolygon(n);t&&(t.index=n,yield t)}}cellPolygon(t){const n=new Fu;return this.renderCell(t,n),n.value()}_renderSegment(t,n,e,r,i){let o;const a=this._regioncode(t,n),u=this._regioncode(e,r);0===a&&0===u?(i.moveTo(t,n),i.lineTo(e,r)):(o=this._clipSegment(t,n,e,r,a,u))&&(i.moveTo(o[0],o[1]),i.lineTo(o[2],o[3]))}contains(t,n,e){return(n=+n)==n&&(e=+e)==e&&this.delaunay._step(t,n,e)===t}*neighbors(t){const n=this._clip(t);if(n)for(const e of this.delaunay.neighbors(t)){const t=this._clip(e);if(t)t:for(let r=0,i=n.length;r<i;r+=2)for(let o=0,a=t.length;o<a;o+=2)if(n[r]===t[o]&&n[r+1]===t[o+1]&&n[(r+2)%i]===t[(o+a-2)%a]&&n[(r+3)%i]===t[(o+a-1)%a]){yield e;break t}}}_cell(t){const{circumcenters:n,delaunay:{inedges:e,halfedges:r,triangles:i}}=this,o=e[t];if(-1===o)return null;const a=[];let u=o;do{const e=Math.floor(u/3);if(a.push(n[2*e],n[2*e+1]),u=u%3==2?u-2:u+1,i[u]!==t)break;u=r[u]}while(u!==o&&-1!==u);return a}_clip(t){if(0===t&&1===this.delaunay.hull.length)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];const n=this._cell(t);if(null===n)return null;const{vectors:e}=this,r=4*t;return this._simplify(e[r]||e[r+1]?this._clipInfinite(t,n,e[r],e[r+1],e[r+2],e[r+3]):this._clipFinite(t,n))}_clipFinite(t,n){const e=n.length;let r,i,o,a,u=null,c=n[e-2],f=n[e-1],s=this._regioncode(c,f),l=0;for(let h=0;h<e;h+=2)if(r=c,i=f,c=n[h],f=n[h+1],o=s,s=this._regioncode(c,f),0===o&&0===s)a=l,l=0,u?u.push(c,f):u=[c,f];else{let n,e,h,d,p;if(0===o){if(null===(n=this._clipSegment(r,i,c,f,o,s)))continue;[e,h,d,p]=n}else{if(null===(n=this._clipSegment(c,f,r,i,s,o)))continue;[d,p,e,h]=n,a=l,l=this._edgecode(e,h),a&&l&&this._edge(t,a,l,u,u.length),u?u.push(e,h):u=[e,h]}a=l,l=this._edgecode(d,p),a&&l&&this._edge(t,a,l,u,u.length),u?u.push(d,p):u=[d,p]}if(u)a=l,l=this._edgecode(u[0],u[1]),a&&l&&this._edge(t,a,l,u,u.length);else if(this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return u}_clipSegment(t,n,e,r,i,o){const a=i<o;for(a&&([t,n,e,r,i,o]=[e,r,t,n,o,i]);;){if(0===i&&0===o)return a?[e,r,t,n]:[t,n,e,r];if(i&o)return null;let u,c,f=i||o;8&f?(u=t+(e-t)*(this.ymax-n)/(r-n),c=this.ymax):4&f?(u=t+(e-t)*(this.ymin-n)/(r-n),c=this.ymin):2&f?(c=n+(r-n)*(this.xmax-t)/(e-t),u=this.xmax):(c=n+(r-n)*(this.xmin-t)/(e-t),u=this.xmin),i?(t=u,n=c,i=this._regioncode(t,n)):(e=u,r=c,o=this._regioncode(e,r))}}_clipInfinite(t,n,e,r,i,o){let a,u=Array.from(n);if((a=this._project(u[0],u[1],e,r))&&u.unshift(a[0],a[1]),(a=this._project(u[u.length-2],u[u.length-1],i,o))&&u.push(a[0],a[1]),u=this._clipFinite(t,u))for(let n,e=0,r=u.length,i=this._edgecode(u[r-2],u[r-1]);e<r;e+=2)n=i,i=this._edgecode(u[e],u[e+1]),n&&i&&(e=this._edge(t,n,i,u,e),r=u.length);else this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(u=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return u}_edge(t,n,e,r,i){for(;n!==e;){let e,o;switch(n){case 5:n=4;continue;case 4:n=6,e=this.xmax,o=this.ymin;break;case 6:n=2;continue;case 2:n=10,e=this.xmax,o=this.ymax;break;case 10:n=8;continue;case 8:n=9,e=this.xmin,o=this.ymax;break;case 9:n=1;continue;case 1:n=5,e=this.xmin,o=this.ymin}r[i]===e&&r[i+1]===o||!this.contains(t,e,o)||(r.splice(i,0,e,o),i+=2)}return i}_project(t,n,e,r){let i,o,a,u=1/0;if(r<0){if(n<=this.ymin)return null;(i=(this.ymin-n)/r)<u&&(a=this.ymin,o=t+(u=i)*e)}else if(r>0){if(n>=this.ymax)return null;(i=(this.ymax-n)/r)<u&&(a=this.ymax,o=t+(u=i)*e)}if(e>0){if(t>=this.xmax)return null;(i=(this.xmax-t)/e)<u&&(o=this.xmax,a=n+(u=i)*r)}else if(e<0){if(t<=this.xmin)return null;(i=(this.xmin-t)/e)<u&&(o=this.xmin,a=n+(u=i)*r)}return[o,a]}_edgecode(t,n){return(t===this.xmin?1:t===this.xmax?2:0)|(n===this.ymin?4:n===this.ymax?8:0)}_regioncode(t,n){return(t<this.xmin?1:t>this.xmax?2:0)|(n<this.ymin?4:n>this.ymax?8:0)}_simplify(t){if(t&&t.length>4){for(let n=0;n<t.length;n+=2){const e=(n+2)%t.length,r=(n+4)%t.length;(t[n]===t[e]&&t[e]===t[r]||t[n+1]===t[e+1]&&t[e+1]===t[r+1])&&(t.splice(e,2),n-=2)}t.length||(t=null)}return t}}const Uu=2*Math.PI,Iu=Math.pow;function Ou(t){return t[0]}function Bu(t){return t[1]}function Yu(t,n,e){return[t+Math.sin(t+n)*e,n+Math.cos(t-n)*e]}class Lu{static from(t,n=Ou,e=Bu,r){return new Lu("length"in t?function(t,n,e,r){const i=t.length,o=new Float64Array(2*i);for(let a=0;a<i;++a){const i=t[a];o[2*a]=n.call(r,i,a,t),o[2*a+1]=e.call(r,i,a,t)}return o}(t,n,e,r):Float64Array.from(function*(t,n,e,r){let i=0;for(const o of t)yield n.call(r,o,i,t),yield e.call(r,o,i,t),++i}(t,n,e,r)))}constructor(t){this._delaunator=new Su(t),this.inedges=new Int32Array(t.length/2),this._hullIndex=new Int32Array(t.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const t=this._delaunator,n=this.points;if(t.hull&&t.hull.length>2&&function(t){const{triangles:n,coords:e}=t;for(let t=0;t<n.length;t+=3){const r=2*n[t],i=2*n[t+1],o=2*n[t+2];if((e[o]-e[r])*(e[i+1]-e[r+1])-(e[i]-e[r])*(e[o+1]-e[r+1])>1e-10)return!1}return!0}(t)){this.collinear=Int32Array.from({length:n.length/2},((t,n)=>n)).sort(((t,e)=>n[2*t]-n[2*e]||n[2*t+1]-n[2*e+1]));const t=this.collinear[0],e=this.collinear[this.collinear.length-1],r=[n[2*t],n[2*t+1],n[2*e],n[2*e+1]],i=1e-8*Math.hypot(r[3]-r[1],r[2]-r[0]);for(let t=0,e=n.length/2;t<e;++t){const e=Yu(n[2*t],n[2*t+1],i);n[2*t]=e[0],n[2*t+1]=e[1]}this._delaunator=new Su(n)}else delete this.collinear;const e=this.halfedges=this._delaunator.halfedges,r=this.hull=this._delaunator.hull,i=this.triangles=this._delaunator.triangles,o=this.inedges.fill(-1),a=this._hullIndex.fill(-1);for(let t=0,n=e.length;t<n;++t){const n=i[t%3==2?t-2:t+1];-1!==e[t]&&-1!==o[n]||(o[n]=t)}for(let t=0,n=r.length;t<n;++t)a[r[t]]=t;r.length<=2&&r.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=r[0],o[r[0]]=1,2===r.length&&(o[r[1]]=0,this.triangles[1]=r[1],this.triangles[2]=r[1]))}voronoi(t){return new qu(this,t)}*neighbors(t){const{inedges:n,hull:e,_hullIndex:r,halfedges:i,triangles:o,collinear:a}=this;if(a){const n=a.indexOf(t);return n>0&&(yield a[n-1]),void(n<a.length-1&&(yield a[n+1]))}const u=n[t];if(-1===u)return;let c=u,f=-1;do{if(yield f=o[c],c=c%3==2?c-2:c+1,o[c]!==t)return;if(c=i[c],-1===c){const n=e[(r[t]+1)%e.length];return void(n!==f&&(yield n))}}while(c!==u)}find(t,n,e=0){if((t=+t)!=t||(n=+n)!=n)return-1;const r=e;let i;for(;(i=this._step(e,t,n))>=0&&i!==e&&i!==r;)e=i;return i}_step(t,n,e){const{inedges:r,hull:i,_hullIndex:o,halfedges:a,triangles:u,points:c}=this;if(-1===r[t]||!c.length)return(t+1)%(c.length>>1);let f=t,s=Iu(n-c[2*t],2)+Iu(e-c[2*t+1],2);const l=r[t];let h=l;do{let r=u[h];const l=Iu(n-c[2*r],2)+Iu(e-c[2*r+1],2);if(l<s&&(s=l,f=r),h=h%3==2?h-2:h+1,u[h]!==t)break;if(h=a[h],-1===h){if(h=i[(o[t]+1)%i.length],h!==r&&Iu(n-c[2*h],2)+Iu(e-c[2*h+1],2)<s)return h;break}}while(h!==l);return f}render(t){const n=null==t?t=new Ru:void 0,{points:e,halfedges:r,triangles:i}=this;for(let n=0,o=r.length;n<o;++n){const o=r[n];if(o<n)continue;const a=2*i[n],u=2*i[o];t.moveTo(e[a],e[a+1]),t.lineTo(e[u],e[u+1])}return this.renderHull(t),n&&n.value()}renderPoints(t,n){void 0!==n||t&&"function"==typeof t.moveTo||(n=t,t=null),n=null==n?2:+n;const e=null==t?t=new Ru:void 0,{points:r}=this;for(let e=0,i=r.length;e<i;e+=2){const i=r[e],o=r[e+1];t.moveTo(i+n,o),t.arc(i,o,n,0,Uu)}return e&&e.value()}renderHull(t){const n=null==t?t=new Ru:void 0,{hull:e,points:r}=this,i=2*e[0],o=e.length;t.moveTo(r[i],r[i+1]);for(let n=1;n<o;++n){const i=2*e[n];t.lineTo(r[i],r[i+1])}return t.closePath(),n&&n.value()}hullPolygon(){const t=new Fu;return this.renderHull(t),t.value()}renderTriangle(t,n){const e=null==n?n=new Ru:void 0,{points:r,triangles:i}=this,o=2*i[t*=3],a=2*i[t+1],u=2*i[t+2];return n.moveTo(r[o],r[o+1]),n.lineTo(r[a],r[a+1]),n.lineTo(r[u],r[u+1]),n.closePath(),e&&e.value()}*trianglePolygons(){const{triangles:t}=this;for(let n=0,e=t.length/3;n<e;++n)yield this.trianglePolygon(n)}trianglePolygon(t){const n=new Fu;return this.renderTriangle(t,n),n.value()}}var ju={},Hu={},Xu=34,Gu=10,Vu=13;function Wu(t){return new Function("d","return {"+t.map((function(t,n){return JSON.stringify(t)+": d["+n+'] || ""'})).join(",")+"}")}function Zu(t){var n=Object.create(null),e=[];return t.forEach((function(t){for(var r in t)r in n||e.push(n[r]=r)})),e}function Ku(t,n){var e=t+"",r=e.length;return r<n?new Array(n-r+1).join(0)+e:e}function Qu(t){var n,e=t.getUTCHours(),r=t.getUTCMinutes(),i=t.getUTCSeconds(),o=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":((n=t.getUTCFullYear())<0?"-"+Ku(-n,6):n>9999?"+"+Ku(n,6):Ku(n,4))+"-"+Ku(t.getUTCMonth()+1,2)+"-"+Ku(t.getUTCDate(),2)+(o?"T"+Ku(e,2)+":"+Ku(r,2)+":"+Ku(i,2)+"."+Ku(o,3)+"Z":i?"T"+Ku(e,2)+":"+Ku(r,2)+":"+Ku(i,2)+"Z":r||e?"T"+Ku(e,2)+":"+Ku(r,2)+"Z":"")}function Ju(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],o=t.length,a=0,u=0,c=o<=0,f=!1;function s(){if(c)return Hu;if(f)return f=!1,ju;var n,r,i=a;if(t.charCodeAt(i)===Xu){for(;a++<o&&t.charCodeAt(a)!==Xu||t.charCodeAt(++a)===Xu;);return(n=a)>=o?c=!0:(r=t.charCodeAt(a++))===Gu?f=!0:r===Vu&&(f=!0,t.charCodeAt(a)===Gu&&++a),t.slice(i+1,n-1).replace(/""/g,'"')}for(;a<o;){if((r=t.charCodeAt(n=a++))===Gu)f=!0;else if(r===Vu)f=!0,t.charCodeAt(a)===Gu&&++a;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,o)}for(t.charCodeAt(o-1)===Gu&&--o,t.charCodeAt(o-1)===Vu&&--o;(r=s())!==Hu;){for(var l=[];r!==ju&&r!==Hu;)l.push(r),r=s();n&&null==(l=n(l,u++))||i.push(l)}return i}function i(n,e){return n.map((function(n){return e.map((function(t){return a(n[t])})).join(t)}))}function o(n){return n.map(a).join(t)}function a(t){return null==t?"":t instanceof Date?Qu(t):n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,(function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=Wu(t);return function(r,i){return n(e(r),i,t)}}(t,n):Wu(t)}));return o.columns=i||[],o},parseRows:r,format:function(n,e){return null==e&&(e=Zu(n)),[e.map(a).join(t)].concat(i(n,e)).join("\n")},formatBody:function(t,n){return null==n&&(n=Zu(t)),i(t,n).join("\n")},formatRows:function(t){return t.map(o).join("\n")},formatRow:o,formatValue:a}}var tc=Ju(","),nc=tc.parse,ec=tc.parseRows,rc=tc.format,ic=tc.formatBody,oc=tc.formatRows,ac=tc.formatRow,uc=tc.formatValue,cc=Ju("\t"),fc=cc.parse,sc=cc.parseRows,lc=cc.format,hc=cc.formatBody,dc=cc.formatRows,pc=cc.formatRow,gc=cc.formatValue;const yc=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();function vc(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}function _c(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}function bc(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}function mc(t,n){return fetch(t,n).then(bc)}function xc(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),mc(n,e).then((function(n){return t(n,r)}))}}var wc=xc(nc),Mc=xc(fc);function Tc(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);if(204!==t.status&&205!==t.status)return t.json()}function Ac(t){return(n,e)=>mc(n,e).then((n=>(new DOMParser).parseFromString(n,t)))}var Sc=Ac("application/xml"),Ec=Ac("text/html"),Nc=Ac("image/svg+xml");function kc(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,a,u,c,f,s,l,h,d=t._root,p={data:r},g=t._x0,y=t._y0,v=t._x1,_=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(o=(g+v)/2))?g=o:v=o,(s=e>=(a=(y+_)/2))?y=a:_=a,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(u=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===u&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(o=(g+v)/2))?g=o:v=o,(s=e>=(a=(y+_)/2))?y=a:_=a}while((l=s<<1|f)==(h=(c>=a)<<1|u>=o));return i[h]=d,i[l]=p,t}function Cc(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i}function Pc(t){return t[0]}function zc(t){return t[1]}function $c(t,n,e){var r=new Dc(null==n?Pc:n,null==e?zc:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function Dc(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function Rc(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var Fc=$c.prototype=Dc.prototype;function qc(t){return function(){return t}}function Uc(t){return 1e-6*(t()-.5)}function Ic(t){return t.x+t.vx}function Oc(t){return t.y+t.vy}function Bc(t){return t.index}function Yc(t,n){var e=t.get(n);if(!e)throw new Error("node not found: "+n);return e}Fc.copy=function(){var t,n,e=new Dc(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=Rc(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=Rc(n));return e},Fc.add=function(t){const n=+this._x.call(null,t),e=+this._y.call(null,t);return kc(this.cover(n,e),n,e,t)},Fc.addAll=function(t){var n,e,r,i,o=t.length,a=new Array(o),u=new Array(o),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(a[e]=r,u[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));if(c>s||f>l)return this;for(this.cover(c,f).cover(s,l),e=0;e<o;++e)kc(this,a[e],u[e],t[e]);return this},Fc.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{for(var a,u,c=i-e||1,f=this._root;e>t||t>=i||r>n||n>=o;)switch(u=(n<r)<<1|t<e,(a=new Array(4))[u]=f,f=a,c*=2,u){case 0:i=e+c,o=r+c;break;case 1:e=i-c,o=r+c;break;case 2:i=e+c,r=o-c;break;case 3:e=i-c,r=o-c}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},Fc.data=function(){var t=[];return this.visit((function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)})),t},Fc.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Fc.find=function(t,n,e){var r,i,o,a,u,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],g=this._root;for(g&&p.push(new Cc(g,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(g=c.node)||(i=c.x0)>h||(o=c.y0)>d||(a=c.x1)<s||(u=c.y1)<l))if(g.length){var y=(i+a)/2,v=(o+u)/2;p.push(new Cc(g[3],y,v,a,u),new Cc(g[2],i,v,y,u),new Cc(g[1],y,o,a,v),new Cc(g[0],i,o,y,v)),(f=(n>=v)<<1|t>=y)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var _=t-+this._x.call(null,g.data),b=n-+this._y.call(null,g.data),m=_*_+b*b;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=g.data}}return r},Fc.remove=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(a=+this._y.call(null,t)))return this;var n,e,r,i,o,a,u,c,f,s,l,h,d=this._root,p=this._x0,g=this._y0,y=this._x1,v=this._y1;if(!d)return this;if(d.length)for(;;){if((f=o>=(u=(p+y)/2))?p=u:y=u,(s=a>=(c=(g+v)/2))?g=c:v=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},Fc.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},Fc.root=function(){return this._root},Fc.size=function(){var t=0;return this.visit((function(n){if(!n.length)do{++t}while(n=n.next)})),t},Fc.visit=function(t){var n,e,r,i,o,a,u=[],c=this._root;for(c&&u.push(new Cc(c,this._x0,this._y0,this._x1,this._y1));n=u.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,a=n.y1)&&c.length){var f=(r+o)/2,s=(i+a)/2;(e=c[3])&&u.push(new Cc(e,f,s,o,a)),(e=c[2])&&u.push(new Cc(e,r,s,f,a)),(e=c[1])&&u.push(new Cc(e,f,i,o,s)),(e=c[0])&&u.push(new Cc(e,r,i,f,s))}return this},Fc.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new Cc(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,a=n.x0,u=n.y0,c=n.x1,f=n.y1,s=(a+c)/2,l=(u+f)/2;(o=i[0])&&e.push(new Cc(o,a,u,s,l)),(o=i[1])&&e.push(new Cc(o,s,u,c,l)),(o=i[2])&&e.push(new Cc(o,a,l,s,f)),(o=i[3])&&e.push(new Cc(o,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},Fc.x=function(t){return arguments.length?(this._x=t,this):this._x},Fc.y=function(t){return arguments.length?(this._y=t,this):this._y};const Lc=1664525,jc=1013904223,Hc=4294967296;function Xc(t){return t.x}function Gc(t){return t.y}var Vc=Math.PI*(3-Math.sqrt(5));function Wc(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function Zc(t){return(t=Wc(Math.abs(t)))?t[1]:NaN}var Kc,Qc=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Jc(t){if(!(n=Qc.exec(t)))throw new Error("invalid format: "+t);var n;return new tf({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function tf(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function nf(t,n){var e=Wc(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}Jc.prototype=tf.prototype,tf.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var ef={"%":(t,n)=>(100*t).toFixed(n),b:t=>Math.round(t).toString(2),c:t=>t+"",d:function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)},e:(t,n)=>t.toExponential(n),f:(t,n)=>t.toFixed(n),g:(t,n)=>t.toPrecision(n),o:t=>Math.round(t).toString(8),p:(t,n)=>nf(100*t,n),r:nf,s:function(t,n){var e=Wc(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(Kc=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,a=r.length;return o===a?r:o>a?r+new Array(o-a+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Wc(t,Math.max(0,n+o-1))[0]},X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function rf(t){return t}var of,af=Array.prototype.map,uf=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function cf(t){var n,e,r=void 0===t.grouping||void 0===t.thousands?rf:(n=af.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,o=[],a=0,u=n[0],c=0;i>0&&u>0&&(c+u+1>r&&(u=Math.max(1,r-c)),o.push(t.substring(i-=u,i+u)),!((c+=u+1)>r));)u=n[a=(a+1)%n.length];return o.reverse().join(e)}),i=void 0===t.currency?"":t.currency[0]+"",o=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",u=void 0===t.numerals?rf:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(af.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",f=void 0===t.minus?"−":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function l(t){var n=(t=Jc(t)).fill,e=t.align,l=t.sign,h=t.symbol,d=t.zero,p=t.width,g=t.comma,y=t.precision,v=t.trim,_=t.type;"n"===_?(g=!0,_="g"):ef[_]||(void 0===y&&(y=12),v=!0,_="g"),(d||"0"===n&&"="===e)&&(d=!0,n="0",e="=");var b="$"===h?i:"#"===h&&/[boxX]/.test(_)?"0"+_.toLowerCase():"",m="$"===h?o:/[%p]/.test(_)?c:"",x=ef[_],w=/[defgprs%]/.test(_);function M(t){var i,o,c,h=b,M=m;if("c"===_)M=x(t)+M,t="";else{var T=(t=+t)<0||1/t<0;if(t=isNaN(t)?s:x(Math.abs(t),y),v&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),T&&0==+t&&"+"!==l&&(T=!1),h=(T?"("===l?l:f:"-"===l||"("===l?"":l)+h,M=("s"===_?uf[8+Kc/3]:"")+M+(T&&"("===l?")":""),w)for(i=-1,o=t.length;++i<o;)if(48>(c=t.charCodeAt(i))||c>57){M=(46===c?a+t.slice(i+1):t.slice(i))+M,t=t.slice(0,i);break}}g&&!d&&(t=r(t,1/0));var A=h.length+t.length+M.length,S=A<p?new Array(p-A+1).join(n):"";switch(g&&d&&(t=r(S+t,S.length?p-M.length:1/0),S=""),e){case"<":t=h+t+M+S;break;case"=":t=h+S+t+M;break;case"^":t=S.slice(0,A=S.length>>1)+h+t+M+S.slice(A);break;default:t=S+h+t+M}return u(t)}return y=void 0===y?6:/[gprs]/.test(_)?Math.max(1,Math.min(21,y)):Math.max(0,Math.min(20,y)),M.toString=function(){return t+""},M}return{format:l,formatPrefix:function(t,n){var e=l(((t=Jc(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Zc(n)/3))),i=Math.pow(10,-r),o=uf[8+r/3];return function(t){return e(i*t)+o}}}}function ff(n){return of=cf(n),t.format=of.format,t.formatPrefix=of.formatPrefix,of}function sf(t){return Math.max(0,-Zc(Math.abs(t)))}function lf(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Zc(n)/3)))-Zc(Math.abs(t)))}function hf(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Zc(n)-Zc(t))+1}t.format=void 0,t.formatPrefix=void 0,ff({thousands:",",grouping:[3],currency:["$",""]});var df=1e-6,pf=1e-12,gf=Math.PI,yf=gf/2,vf=gf/4,_f=2*gf,bf=180/gf,mf=gf/180,xf=Math.abs,wf=Math.atan,Mf=Math.atan2,Tf=Math.cos,Af=Math.ceil,Sf=Math.exp,Ef=Math.hypot,Nf=Math.log,kf=Math.pow,Cf=Math.sin,Pf=Math.sign||function(t){return t>0?1:t<0?-1:0},zf=Math.sqrt,$f=Math.tan;function Df(t){return t>1?0:t<-1?gf:Math.acos(t)}function Rf(t){return t>1?yf:t<-1?-yf:Math.asin(t)}function Ff(t){return(t=Cf(t/2))*t}function qf(){}function Uf(t,n){t&&Of.hasOwnProperty(t.type)&&Of[t.type](t,n)}var If={Feature:function(t,n){Uf(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)Uf(e[r].geometry,n)}},Of={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Bf(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Bf(e[r],n,0)},Polygon:function(t,n){Yf(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Yf(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)Uf(e[r],n)}};function Bf(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Yf(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Bf(t[e],n,1);n.polygonEnd()}function Lf(t,n){t&&If.hasOwnProperty(t.type)?If[t.type](t,n):Uf(t,n)}var jf,Hf,Xf,Gf,Vf,Wf,Zf,Kf,Qf,Jf,ts,ns,es,rs,is,os,as=new T,us=new T,cs={point:qf,lineStart:qf,lineEnd:qf,polygonStart:function(){as=new T,cs.lineStart=fs,cs.lineEnd=ss},polygonEnd:function(){var t=+as;us.add(t<0?_f+t:t),this.lineStart=this.lineEnd=this.point=qf},sphere:function(){us.add(_f)}};function fs(){cs.point=ls}function ss(){hs(jf,Hf)}function ls(t,n){cs.point=hs,jf=t,Hf=n,Xf=t*=mf,Gf=Tf(n=(n*=mf)/2+vf),Vf=Cf(n)}function hs(t,n){var e=(t*=mf)-Xf,r=e>=0?1:-1,i=r*e,o=Tf(n=(n*=mf)/2+vf),a=Cf(n),u=Vf*a,c=Gf*o+u*Tf(i),f=u*r*Cf(i);as.add(Mf(f,c)),Xf=t,Gf=o,Vf=a}function ds(t){return[Mf(t[1],t[0]),Rf(t[2])]}function ps(t){var n=t[0],e=t[1],r=Tf(e);return[r*Tf(n),r*Cf(n),Cf(e)]}function gs(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function ys(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function vs(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function _s(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function bs(t){var n=zf(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var ms,xs,ws,Ms,Ts,As,Ss,Es,Ns,ks,Cs,Ps,zs,$s,Ds,Rs,Fs={point:qs,lineStart:Is,lineEnd:Os,polygonStart:function(){Fs.point=Bs,Fs.lineStart=Ys,Fs.lineEnd=Ls,rs=new T,cs.polygonStart()},polygonEnd:function(){cs.polygonEnd(),Fs.point=qs,Fs.lineStart=Is,Fs.lineEnd=Os,as<0?(Wf=-(Kf=180),Zf=-(Qf=90)):rs>df?Qf=90:rs<-df&&(Zf=-90),os[0]=Wf,os[1]=Kf},sphere:function(){Wf=-(Kf=180),Zf=-(Qf=90)}};function qs(t,n){is.push(os=[Wf=t,Kf=t]),n<Zf&&(Zf=n),n>Qf&&(Qf=n)}function Us(t,n){var e=ps([t*mf,n*mf]);if(es){var r=ys(es,e),i=ys([r[1],-r[0],0],r);bs(i),i=ds(i);var o,a=t-Jf,u=a>0?1:-1,c=i[0]*bf*u,f=xf(a)>180;f^(u*Jf<c&&c<u*t)?(o=i[1]*bf)>Qf&&(Qf=o):f^(u*Jf<(c=(c+360)%360-180)&&c<u*t)?(o=-i[1]*bf)<Zf&&(Zf=o):(n<Zf&&(Zf=n),n>Qf&&(Qf=n)),f?t<Jf?js(Wf,t)>js(Wf,Kf)&&(Kf=t):js(t,Kf)>js(Wf,Kf)&&(Wf=t):Kf>=Wf?(t<Wf&&(Wf=t),t>Kf&&(Kf=t)):t>Jf?js(Wf,t)>js(Wf,Kf)&&(Kf=t):js(t,Kf)>js(Wf,Kf)&&(Wf=t)}else is.push(os=[Wf=t,Kf=t]);n<Zf&&(Zf=n),n>Qf&&(Qf=n),es=e,Jf=t}function Is(){Fs.point=Us}function Os(){os[0]=Wf,os[1]=Kf,Fs.point=qs,es=null}function Bs(t,n){if(es){var e=t-Jf;rs.add(xf(e)>180?e+(e>0?360:-360):e)}else ts=t,ns=n;cs.point(t,n),Us(t,n)}function Ys(){cs.lineStart()}function Ls(){Bs(ts,ns),cs.lineEnd(),xf(rs)>df&&(Wf=-(Kf=180)),os[0]=Wf,os[1]=Kf,es=null}function js(t,n){return(n-=t)<0?n+360:n}function Hs(t,n){return t[0]-n[0]}function Xs(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var Gs={sphere:qf,point:Vs,lineStart:Zs,lineEnd:Js,polygonStart:function(){Gs.lineStart=tl,Gs.lineEnd=nl},polygonEnd:function(){Gs.lineStart=Zs,Gs.lineEnd=Js}};function Vs(t,n){t*=mf;var e=Tf(n*=mf);Ws(e*Tf(t),e*Cf(t),Cf(n))}function Ws(t,n,e){++ms,ws+=(t-ws)/ms,Ms+=(n-Ms)/ms,Ts+=(e-Ts)/ms}function Zs(){Gs.point=Ks}function Ks(t,n){t*=mf;var e=Tf(n*=mf);$s=e*Tf(t),Ds=e*Cf(t),Rs=Cf(n),Gs.point=Qs,Ws($s,Ds,Rs)}function Qs(t,n){t*=mf;var e=Tf(n*=mf),r=e*Tf(t),i=e*Cf(t),o=Cf(n),a=Mf(zf((a=Ds*o-Rs*i)*a+(a=Rs*r-$s*o)*a+(a=$s*i-Ds*r)*a),$s*r+Ds*i+Rs*o);xs+=a,As+=a*($s+($s=r)),Ss+=a*(Ds+(Ds=i)),Es+=a*(Rs+(Rs=o)),Ws($s,Ds,Rs)}function Js(){Gs.point=Vs}function tl(){Gs.point=el}function nl(){rl(Ps,zs),Gs.point=Vs}function el(t,n){Ps=t,zs=n,t*=mf,n*=mf,Gs.point=rl;var e=Tf(n);$s=e*Tf(t),Ds=e*Cf(t),Rs=Cf(n),Ws($s,Ds,Rs)}function rl(t,n){t*=mf;var e=Tf(n*=mf),r=e*Tf(t),i=e*Cf(t),o=Cf(n),a=Ds*o-Rs*i,u=Rs*r-$s*o,c=$s*i-Ds*r,f=Ef(a,u,c),s=Rf(f),l=f&&-s/f;Ns.add(l*a),ks.add(l*u),Cs.add(l*c),xs+=s,As+=s*($s+($s=r)),Ss+=s*(Ds+(Ds=i)),Es+=s*(Rs+(Rs=o)),Ws($s,Ds,Rs)}function il(t){return function(){return t}}function ol(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e}function al(t,n){return xf(t)>gf&&(t-=Math.round(t/_f)*_f),[t,n]}function ul(t,n,e){return(t%=_f)?n||e?ol(fl(t),sl(n,e)):fl(t):n||e?sl(n,e):al}function cl(t){return function(n,e){return xf(n+=t)>gf&&(n-=Math.round(n/_f)*_f),[n,e]}}function fl(t){var n=cl(t);return n.invert=cl(-t),n}function sl(t,n){var e=Tf(t),r=Cf(t),i=Tf(n),o=Cf(n);function a(t,n){var a=Tf(n),u=Tf(t)*a,c=Cf(t)*a,f=Cf(n),s=f*e+u*r;return[Mf(c*i-s*o,u*e-f*r),Rf(s*i+c*o)]}return a.invert=function(t,n){var a=Tf(n),u=Tf(t)*a,c=Cf(t)*a,f=Cf(n),s=f*i-c*o;return[Mf(c*i+f*o,u*e+s*r),Rf(s*e-u*r)]},a}function ll(t){function n(n){return(n=t(n[0]*mf,n[1]*mf))[0]*=bf,n[1]*=bf,n}return t=ul(t[0]*mf,t[1]*mf,t.length>2?t[2]*mf:0),n.invert=function(n){return(n=t.invert(n[0]*mf,n[1]*mf))[0]*=bf,n[1]*=bf,n},n}function hl(t,n,e,r,i,o){if(e){var a=Tf(n),u=Cf(n),c=r*e;null==i?(i=n+r*_f,o=n-c/2):(i=dl(a,i),o=dl(a,o),(r>0?i<o:i>o)&&(i+=r*_f));for(var f,s=i;r>0?s>o:s<o;s-=c)f=ds([a,-u*Tf(s),-u*Cf(s)]),t.point(f[0],f[1])}}function dl(t,n){(n=ps(n))[0]-=t,bs(n);var e=Df(-n[1]);return((-n[2]<0?-e:e)+_f-df)%_f}function pl(){var t,n=[];return{point:function(n,e,r){t.push([n,e,r])},lineStart:function(){n.push(t=[])},lineEnd:qf,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}}function gl(t,n){return xf(t[0]-n[0])<df&&xf(t[1]-n[1])<df}function yl(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function vl(t,n,e,r,i){var o,a,u=[],c=[];if(t.forEach((function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],a=t[n];if(gl(r,a)){if(!r[2]&&!a[2]){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);return void i.lineEnd()}a[0]+=2*df}u.push(e=new yl(r,t,null,!0)),c.push(e.o=new yl(r,null,e,!1)),u.push(e=new yl(a,t,null,!1)),c.push(e.o=new yl(a,null,e,!0))}})),u.length){for(c.sort(n),_l(u),_l(c),o=0,a=c.length;o<a;++o)c[o].e=e=!e;for(var f,s,l=u[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,a=f.length;o<a;++o)i.point((s=f[o])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,o=f.length-1;o>=0;--o)i.point((s=f[o])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}}function _l(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}function bl(t){return xf(t[0])<=gf?t[0]:Pf(t[0])*((xf(t[0])+gf)%_f-gf)}function ml(t,n){var e=bl(n),r=n[1],i=Cf(r),o=[Cf(e),-Tf(e),0],a=0,u=0,c=new T;1===i?r=yf+df:-1===i&&(r=-yf-df);for(var f=0,s=t.length;f<s;++f)if(h=(l=t[f]).length)for(var l,h,d=l[h-1],p=bl(d),g=d[1]/2+vf,y=Cf(g),v=Tf(g),_=0;_<h;++_,p=m,y=w,v=M,d=b){var b=l[_],m=bl(b),x=b[1]/2+vf,w=Cf(x),M=Tf(x),A=m-p,S=A>=0?1:-1,E=S*A,N=E>gf,k=y*w;if(c.add(Mf(k*S*Cf(E),v*M+k*Tf(E))),a+=N?A+S*_f:A,N^p>=e^m>=e){var C=ys(ps(d),ps(b));bs(C);var P=ys(o,C);bs(P);var z=(N^A>=0?-1:1)*Rf(P[2]);(r>z||r===z&&(C[0]||C[1]))&&(u+=N^A>=0?1:-1)}}return(a<-df||a<df&&c<-pf)^1&u}function xl(t,n,e,r){return function(i){var o,a,u,c=n(i),f=pl(),s=n(f),l=!1,h={point:d,lineStart:g,lineEnd:y,polygonStart:function(){h.point=v,h.lineStart=_,h.lineEnd=b,a=[],o=[]},polygonEnd:function(){h.point=d,h.lineStart=g,h.lineEnd=y,a=ft(a);var t=ml(o,r);a.length?(l||(i.polygonStart(),l=!0),vl(a,Ml,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),a=o=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function g(){h.point=p,c.lineStart()}function y(){h.point=d,c.lineEnd()}function v(t,n){u.push([t,n]),s.point(t,n)}function _(){s.lineStart(),u=[]}function b(){v(u[0][0],u[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(u.pop(),o.push(u),u=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),a.push(h.filter(wl))}return h}}function wl(t){return t.length>1}function Ml(t,n){return((t=t.x)[0]<0?t[1]-yf-df:yf-t[1])-((n=n.x)[0]<0?n[1]-yf-df:yf-n[1])}al.invert=al;var Tl=xl((function(){return!0}),(function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,a){var u=o>0?gf:-gf,c=xf(o-e);xf(c-gf)<df?(t.point(e,r=(r+a)/2>0?yf:-yf),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),t.point(o,r),n=0):i!==u&&c>=gf&&(xf(e-i)<df&&(e-=i*df),xf(o-u)<df&&(o-=u*df),r=function(t,n,e,r){var i,o,a=Cf(t-e);return xf(a)>df?wf((Cf(n)*(o=Tf(r))*Cf(e)-Cf(r)*(i=Tf(n))*Cf(t))/(i*o*a)):(n+r)/2}(e,r,o,a),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(u,r),n=0),t.point(e=o,r=a),i=u},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}}),(function(t,n,e,r){var i;if(null==t)i=e*yf,r.point(-gf,i),r.point(0,i),r.point(gf,i),r.point(gf,0),r.point(gf,-i),r.point(0,-i),r.point(-gf,-i),r.point(-gf,0),r.point(-gf,i);else if(xf(t[0]-n[0])>df){var o=t[0]<n[0]?gf:-gf;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])}),[-gf,-yf]);function Al(t){var n=Tf(t),e=2*mf,r=n>0,i=xf(n)>df;function o(t,e){return Tf(t)*Tf(e)>n}function a(t,e,r){var i=[1,0,0],o=ys(ps(t),ps(e)),a=gs(o,o),u=o[0],c=a-u*u;if(!c)return!r&&t;var f=n*a/c,s=-n*u/c,l=ys(i,o),h=_s(i,f);vs(h,_s(o,s));var d=l,p=gs(h,d),g=gs(d,d),y=p*p-g*(gs(h,h)-1);if(!(y<0)){var v=zf(y),_=_s(d,(-p-v)/g);if(vs(_,h),_=ds(_),!r)return _;var b,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(b=m,m=x,x=b);var T=x-m,A=xf(T-gf)<df;if(!A&&M<w&&(b=w,w=M,M=b),A||T<df?A?w+M>0^_[1]<(xf(_[0]-m)<df?w:M):w<=_[1]&&_[1]<=M:T>gf^(m<=_[0]&&_[0]<=x)){var S=_s(d,(-p+v)/g);return vs(S,h),[_,ds(S)]}}}function u(n,e){var i=r?t:gf-t,o=0;return n<-i?o|=1:n>i&&(o|=2),e<-i?o|=4:e>i&&(o|=8),o}return xl(o,(function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],g=o(l,h),y=r?g?0:u(l,h):g?u(l+(l<0?gf:-gf),h):0;if(!n&&(f=c=g)&&t.lineStart(),g!==c&&(!(d=a(n,p))||gl(n,d)||gl(p,d))&&(p[2]=1),g!==c)s=0,g?(t.lineStart(),d=a(p,n),t.point(d[0],d[1])):(d=a(n,p),t.point(d[0],d[1],2),t.lineEnd()),n=d;else if(i&&n&&r^g){var v;y&e||!(v=a(p,n,!0))||(s=0,r?(t.lineStart(),t.point(v[0][0],v[0][1]),t.point(v[1][0],v[1][1]),t.lineEnd()):(t.point(v[1][0],v[1][1]),t.lineEnd(),t.lineStart(),t.point(v[0][0],v[0][1],3)))}!g||n&&gl(n,p)||t.point(p[0],p[1]),n=p,c=g,e=y},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}}),(function(n,r,i,o){hl(o,t,e,i,n,r)}),r?[0,-t]:[-gf,t-gf])}var Sl,El,Nl,kl,Cl=1e9,Pl=-Cl;function zl(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,u,f){var s=0,l=0;if(null==i||(s=a(i,u))!==(l=a(o,u))||c(i,o)<0^u>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+u+4)%4)!==l);else f.point(o[0],o[1])}function a(r,i){return xf(r[0]-t)<df?i>0?0:3:xf(r[0]-e)<df?i>0?2:1:xf(r[1]-n)<df?i>0?1:0:i>0?3:2}function u(t,n){return c(t.x,n.x)}function c(t,n){var e=a(t,1),r=a(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(a){var c,f,s,l,h,d,p,g,y,v,_,b=a,m=pl(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);v=!0,y=!1,p=g=NaN},lineEnd:function(){c&&(M(l,h),d&&y&&m.rejoin(),c.push(m.result()));x.point=w,y&&b.lineEnd()},polygonStart:function(){b=m,c=[],f=[],_=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var o,a,u=f[e],c=1,s=u.length,l=u[0],h=l[0],d=l[1];c<s;++c)o=h,a=d,h=(l=u[c])[0],d=l[1],a<=r?d>r&&(h-o)*(r-a)>(d-a)*(t-o)&&++n:d<=r&&(h-o)*(r-a)<(d-a)*(t-o)&&--n;return n}(),e=_&&n,i=(c=ft(c)).length;(e||i)&&(a.polygonStart(),e&&(a.lineStart(),o(null,null,1,a),a.lineEnd()),i&&vl(c,u,n,o,a),a.polygonEnd());b=a,c=f=s=null}};function w(t,n){i(t,n)&&b.point(t,n)}function M(o,a){var u=i(o,a);if(f&&s.push([o,a]),v)l=o,h=a,d=u,v=!1,u&&(b.lineStart(),b.point(o,a));else if(u&&y)b.point(o,a);else{var c=[p=Math.max(Pl,Math.min(Cl,p)),g=Math.max(Pl,Math.min(Cl,g))],m=[o=Math.max(Pl,Math.min(Cl,o)),a=Math.max(Pl,Math.min(Cl,a))];!function(t,n,e,r,i,o){var a,u=t[0],c=t[1],f=0,s=1,l=n[0]-u,h=n[1]-c;if(a=e-u,l||!(a>0)){if(a/=l,l<0){if(a<f)return;a<s&&(s=a)}else if(l>0){if(a>s)return;a>f&&(f=a)}if(a=i-u,l||!(a<0)){if(a/=l,l<0){if(a>s)return;a>f&&(f=a)}else if(l>0){if(a<f)return;a<s&&(s=a)}if(a=r-c,h||!(a>0)){if(a/=h,h<0){if(a<f)return;a<s&&(s=a)}else if(h>0){if(a>s)return;a>f&&(f=a)}if(a=o-c,h||!(a<0)){if(a/=h,h<0){if(a>s)return;a>f&&(f=a)}else if(h>0){if(a<f)return;a<s&&(s=a)}return f>0&&(t[0]=u+f*l,t[1]=c+f*h),s<1&&(n[0]=u+s*l,n[1]=c+s*h),!0}}}}}(c,m,t,n,e,r)?u&&(b.lineStart(),b.point(o,a),_=!1):(y||(b.lineStart(),b.point(c[0],c[1])),b.point(m[0],m[1]),u||b.lineEnd(),_=!1)}p=o,g=a,y=u}return x}}var $l={sphere:qf,point:qf,lineStart:function(){$l.point=Rl,$l.lineEnd=Dl},lineEnd:qf,polygonStart:qf,polygonEnd:qf};function Dl(){$l.point=$l.lineEnd=qf}function Rl(t,n){El=t*=mf,Nl=Cf(n*=mf),kl=Tf(n),$l.point=Fl}function Fl(t,n){t*=mf;var e=Cf(n*=mf),r=Tf(n),i=xf(t-El),o=Tf(i),a=r*Cf(i),u=kl*e-Nl*r*o,c=Nl*e+kl*r*o;Sl.add(Mf(zf(a*a+u*u),c)),El=t,Nl=e,kl=r}function ql(t){return Sl=new T,Lf(t,$l),+Sl}var Ul=[null,null],Il={type:"LineString",coordinates:Ul};function Ol(t,n){return Ul[0]=t,Ul[1]=n,ql(Il)}var Bl={Feature:function(t,n){return Ll(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(Ll(e[r].geometry,n))return!0;return!1}},Yl={Sphere:function(){return!0},Point:function(t,n){return jl(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(jl(e[r],n))return!0;return!1},LineString:function(t,n){return Hl(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Hl(e[r],n))return!0;return!1},Polygon:function(t,n){return Xl(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Xl(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(Ll(e[r],n))return!0;return!1}};function Ll(t,n){return!(!t||!Yl.hasOwnProperty(t.type))&&Yl[t.type](t,n)}function jl(t,n){return 0===Ol(t,n)}function Hl(t,n){for(var e,r,i,o=0,a=t.length;o<a;o++){if(0===(r=Ol(t[o],n)))return!0;if(o>0&&(i=Ol(t[o],t[o-1]))>0&&e<=i&&r<=i&&(e+r-i)*(1-Math.pow((e-r)/i,2))<pf*i)return!0;e=r}return!1}function Xl(t,n){return!!ml(t.map(Gl),Vl(n))}function Gl(t){return(t=t.map(Vl)).pop(),t}function Vl(t){return[t[0]*mf,t[1]*mf]}function Wl(t,n,e){var r=lt(t,n-df,e).concat(n);return function(t){return r.map((function(n){return[t,n]}))}}function Zl(t,n,e){var r=lt(t,n-df,e).concat(n);return function(t){return r.map((function(n){return[n,t]}))}}function Kl(){var t,n,e,r,i,o,a,u,c,f,s,l,h=10,d=h,p=90,g=360,y=2.5;function v(){return{type:"MultiLineString",coordinates:_()}}function _(){return lt(Af(r/p)*p,e,p).map(s).concat(lt(Af(u/g)*g,a,g).map(l)).concat(lt(Af(n/h)*h,t,h).filter((function(t){return xf(t%p)>df})).map(c)).concat(lt(Af(o/d)*d,i,d).filter((function(t){return xf(t%g)>df})).map(f))}return v.lines=function(){return _().map((function(t){return{type:"LineString",coordinates:t}}))},v.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(a).slice(1),s(e).reverse().slice(1),l(u).reverse().slice(1))]}},v.extent=function(t){return arguments.length?v.extentMajor(t).extentMinor(t):v.extentMinor()},v.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],u=+t[0][1],a=+t[1][1],r>e&&(t=r,r=e,e=t),u>a&&(t=u,u=a,a=t),v.precision(y)):[[r,u],[e,a]]},v.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),o>i&&(e=o,o=i,i=e),v.precision(y)):[[n,o],[t,i]]},v.step=function(t){return arguments.length?v.stepMajor(t).stepMinor(t):v.stepMinor()},v.stepMajor=function(t){return arguments.length?(p=+t[0],g=+t[1],v):[p,g]},v.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],v):[h,d]},v.precision=function(h){return arguments.length?(y=+h,c=Wl(o,i,90),f=Zl(n,t,y),s=Wl(u,a,90),l=Zl(r,e,y),v):y},v.extentMajor([[-180,-90+df],[180,90-df]]).extentMinor([[-180,-80-df],[180,80+df]])}var Ql,Jl,th,nh,eh=t=>t,rh=new T,ih=new T,oh={point:qf,lineStart:qf,lineEnd:qf,polygonStart:function(){oh.lineStart=ah,oh.lineEnd=fh},polygonEnd:function(){oh.lineStart=oh.lineEnd=oh.point=qf,rh.add(xf(ih)),ih=new T},result:function(){var t=rh/2;return rh=new T,t}};function ah(){oh.point=uh}function uh(t,n){oh.point=ch,Ql=th=t,Jl=nh=n}function ch(t,n){ih.add(nh*t-th*n),th=t,nh=n}function fh(){ch(Ql,Jl)}var sh=oh,lh=1/0,hh=lh,dh=-lh,ph=dh,gh={point:function(t,n){t<lh&&(lh=t);t>dh&&(dh=t);n<hh&&(hh=n);n>ph&&(ph=n)},lineStart:qf,lineEnd:qf,polygonStart:qf,polygonEnd:qf,result:function(){var t=[[lh,hh],[dh,ph]];return dh=ph=-(hh=lh=1/0),t}};var yh,vh,_h,bh,mh=gh,xh=0,wh=0,Mh=0,Th=0,Ah=0,Sh=0,Eh=0,Nh=0,kh=0,Ch={point:Ph,lineStart:zh,lineEnd:Rh,polygonStart:function(){Ch.lineStart=Fh,Ch.lineEnd=qh},polygonEnd:function(){Ch.point=Ph,Ch.lineStart=zh,Ch.lineEnd=Rh},result:function(){var t=kh?[Eh/kh,Nh/kh]:Sh?[Th/Sh,Ah/Sh]:Mh?[xh/Mh,wh/Mh]:[NaN,NaN];return xh=wh=Mh=Th=Ah=Sh=Eh=Nh=kh=0,t}};function Ph(t,n){xh+=t,wh+=n,++Mh}function zh(){Ch.point=$h}function $h(t,n){Ch.point=Dh,Ph(_h=t,bh=n)}function Dh(t,n){var e=t-_h,r=n-bh,i=zf(e*e+r*r);Th+=i*(_h+t)/2,Ah+=i*(bh+n)/2,Sh+=i,Ph(_h=t,bh=n)}function Rh(){Ch.point=Ph}function Fh(){Ch.point=Uh}function qh(){Ih(yh,vh)}function Uh(t,n){Ch.point=Ih,Ph(yh=_h=t,vh=bh=n)}function Ih(t,n){var e=t-_h,r=n-bh,i=zf(e*e+r*r);Th+=i*(_h+t)/2,Ah+=i*(bh+n)/2,Sh+=i,Eh+=(i=bh*t-_h*n)*(_h+t),Nh+=i*(bh+n),kh+=3*i,Ph(_h=t,bh=n)}var Oh=Ch;function Bh(t){this._context=t}Bh.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,_f)}},result:qf};var Yh,Lh,jh,Hh,Xh,Gh=new T,Vh={point:qf,lineStart:function(){Vh.point=Wh},lineEnd:function(){Yh&&Zh(Lh,jh),Vh.point=qf},polygonStart:function(){Yh=!0},polygonEnd:function(){Yh=null},result:function(){var t=+Gh;return Gh=new T,t}};function Wh(t,n){Vh.point=Zh,Lh=Hh=t,jh=Xh=n}function Zh(t,n){Hh-=t,Xh-=n,Gh.add(zf(Hh*Hh+Xh*Xh)),Hh=t,Xh=n}var Kh=Vh;let Qh,Jh,td,nd;class ed{constructor(t){this._append=null==t?rd:function(t){const n=Math.floor(t);if(!(n>=0))throw new RangeError(`invalid digits: ${t}`);if(n>15)return rd;if(n!==Qh){const t=10**n;Qh=n,Jh=function(n){let e=1;this._+=n[0];for(const r=n.length;e<r;++e)this._+=Math.round(arguments[e]*t)/t+n[e]}}return Jh}(t),this._radius=4.5,this._=""}pointRadius(t){return this._radius=+t,this}polygonStart(){this._line=0}polygonEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){0===this._line&&(this._+="Z"),this._point=NaN}point(t,n){switch(this._point){case 0:this._append`M${t},${n}`,this._point=1;break;case 1:this._append`L${t},${n}`;break;default:if(this._append`M${t},${n}`,this._radius!==td||this._append!==Jh){const t=this._radius,n=this._;this._="",this._append`m0,${t}a${t},${t} 0 1,1 0,${-2*t}a${t},${t} 0 1,1 0,${2*t}z`,td=t,Jh=this._append,nd=this._,this._=n}this._+=nd}}result(){const t=this._;return this._="",t.length?t:null}}function rd(t){let n=1;this._+=t[0];for(const e=t.length;n<e;++n)this._+=arguments[n]+t[n]}function id(t){return function(n){var e=new od;for(var r in t)e[r]=t[r];return e.stream=n,e}}function od(){}function ad(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Lf(e,t.stream(mh)),n(mh.result()),null!=r&&t.clipExtent(r),t}function ud(t,n,e){return ad(t,(function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),a=+n[0][0]+(r-o*(e[1][0]+e[0][0]))/2,u=+n[0][1]+(i-o*(e[1][1]+e[0][1]))/2;t.scale(150*o).translate([a,u])}),e)}function cd(t,n,e){return ud(t,[[0,0],n],e)}function fd(t,n,e){return ad(t,(function(e){var r=+n,i=r/(e[1][0]-e[0][0]),o=(r-i*(e[1][0]+e[0][0]))/2,a=-i*e[0][1];t.scale(150*i).translate([o,a])}),e)}function sd(t,n,e){return ad(t,(function(e){var r=+n,i=r/(e[1][1]-e[0][1]),o=-i*e[0][0],a=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([o,a])}),e)}od.prototype={constructor:od,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var ld=16,hd=Tf(30*mf);function dd(t,n){return+n?function(t,n){function e(r,i,o,a,u,c,f,s,l,h,d,p,g,y){var v=f-r,_=s-i,b=v*v+_*_;if(b>4*n&&g--){var m=a+h,x=u+d,w=c+p,M=zf(m*m+x*x+w*w),T=Rf(w/=M),A=xf(xf(w)-1)<df||xf(o-l)<df?(o+l)/2:Mf(x,m),S=t(A,T),E=S[0],N=S[1],k=E-r,C=N-i,P=_*k-v*C;(P*P/b>n||xf((v*k+_*C)/b-.5)>.3||a*h+u*d+c*p<hd)&&(e(r,i,o,a,u,c,E,N,A,m/=M,x/=M,w,g,y),y.point(E,N),e(E,N,A,m,x,w,f,s,l,h,d,p,g,y))}}return function(n){var r,i,o,a,u,c,f,s,l,h,d,p,g={point:y,lineStart:v,lineEnd:b,polygonStart:function(){n.polygonStart(),g.lineStart=m},polygonEnd:function(){n.polygonEnd(),g.lineStart=v}};function y(e,r){e=t(e,r),n.point(e[0],e[1])}function v(){s=NaN,g.point=_,n.lineStart()}function _(r,i){var o=ps([r,i]),a=t(r,i);e(s,l,f,h,d,p,s=a[0],l=a[1],f=r,h=o[0],d=o[1],p=o[2],ld,n),n.point(s,l)}function b(){g.point=y,n.lineEnd()}function m(){v(),g.point=x,g.lineEnd=w}function x(t,n){_(r=t,n),i=s,o=l,a=h,u=d,c=p,g.point=_}function w(){e(s,l,f,h,d,p,i,o,r,a,u,c,ld,n),g.lineEnd=b,b()}return g}}(t,n):function(t){return id({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)}var pd=id({point:function(t,n){this.stream.point(t*mf,n*mf)}});function gd(t,n,e,r,i,o){if(!o)return function(t,n,e,r,i){function o(o,a){return[n+t*(o*=r),e-t*(a*=i)]}return o.invert=function(o,a){return[(o-n)/t*r,(e-a)/t*i]},o}(t,n,e,r,i);var a=Tf(o),u=Cf(o),c=a*t,f=u*t,s=a/t,l=u/t,h=(u*e-a*n)/t,d=(u*n+a*e)/t;function p(t,o){return[c*(t*=r)-f*(o*=i)+n,e-f*t-c*o]}return p.invert=function(t,n){return[r*(s*t-l*n+h),i*(d-l*t-s*n)]},p}function yd(t){return vd((function(){return t}))()}function vd(t){var n,e,r,i,o,a,u,c,f,s,l=150,h=480,d=250,p=0,g=0,y=0,v=0,_=0,b=0,m=1,x=1,w=null,M=Tl,T=null,A=eh,S=.5;function E(t){return c(t[0]*mf,t[1]*mf)}function N(t){return(t=c.invert(t[0],t[1]))&&[t[0]*bf,t[1]*bf]}function k(){var t=gd(l,0,0,m,x,b).apply(null,n(p,g)),r=gd(l,h-t[0],d-t[1],m,x,b);return e=ul(y,v,_),u=ol(n,r),c=ol(e,u),a=dd(u,S),C()}function C(){return f=s=null,E}return E.stream=function(t){return f&&s===t?f:f=pd(function(t){return id({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(M(a(A(s=t)))))},E.preclip=function(t){return arguments.length?(M=t,w=void 0,C()):M},E.postclip=function(t){return arguments.length?(A=t,T=r=i=o=null,C()):A},E.clipAngle=function(t){return arguments.length?(M=+t?Al(w=t*mf):(w=null,Tl),C()):w*bf},E.clipExtent=function(t){return arguments.length?(A=null==t?(T=r=i=o=null,eh):zl(T=+t[0][0],r=+t[0][1],i=+t[1][0],o=+t[1][1]),C()):null==T?null:[[T,r],[i,o]]},E.scale=function(t){return arguments.length?(l=+t,k()):l},E.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],k()):[h,d]},E.center=function(t){return arguments.length?(p=t[0]%360*mf,g=t[1]%360*mf,k()):[p*bf,g*bf]},E.rotate=function(t){return arguments.length?(y=t[0]%360*mf,v=t[1]%360*mf,_=t.length>2?t[2]%360*mf:0,k()):[y*bf,v*bf,_*bf]},E.angle=function(t){return arguments.length?(b=t%360*mf,k()):b*bf},E.reflectX=function(t){return arguments.length?(m=t?-1:1,k()):m<0},E.reflectY=function(t){return arguments.length?(x=t?-1:1,k()):x<0},E.precision=function(t){return arguments.length?(a=dd(u,S=t*t),C()):zf(S)},E.fitExtent=function(t,n){return ud(E,t,n)},E.fitSize=function(t,n){return cd(E,t,n)},E.fitWidth=function(t,n){return fd(E,t,n)},E.fitHeight=function(t,n){return sd(E,t,n)},function(){return n=t.apply(this,arguments),E.invert=n.invert&&N,k()}}function _d(t){var n=0,e=gf/3,r=vd(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*mf,e=t[1]*mf):[n*bf,e*bf]},i}function bd(t,n){var e=Cf(t),r=(e+Cf(n))/2;if(xf(r)<df)return function(t){var n=Tf(t);function e(t,e){return[t*n,Cf(e)/n]}return e.invert=function(t,e){return[t/n,Rf(e*n)]},e}(t);var i=1+e*(2*r-e),o=zf(i)/r;function a(t,n){var e=zf(i-2*r*Cf(n))/r;return[e*Cf(t*=r),o-e*Tf(t)]}return a.invert=function(t,n){var e=o-n,a=Mf(t,xf(e))*Pf(e);return e*r<0&&(a-=gf*Pf(t)*Pf(e)),[a/r,Rf((i-(t*t+e*e)*r*r)/(2*r))]},a}function md(){return _d(bd).scale(155.424).center([0,33.6442])}function xd(){return md().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function wd(t){return function(n,e){var r=Tf(n),i=Tf(e),o=t(r*i);return o===1/0?[2,0]:[o*i*Cf(n),o*Cf(e)]}}function Md(t){return function(n,e){var r=zf(n*n+e*e),i=t(r),o=Cf(i),a=Tf(i);return[Mf(n*o,r*a),Rf(r&&e*o/r)]}}var Td=wd((function(t){return zf(2/(1+t))}));Td.invert=Md((function(t){return 2*Rf(t/2)}));var Ad=wd((function(t){return(t=Df(t))&&t/Cf(t)}));function Sd(t,n){return[t,Nf($f((yf+n)/2))]}function Ed(t){var n,e,r,i=yd(t),o=i.center,a=i.scale,u=i.translate,c=i.clipExtent,f=null;function s(){var o=gf*a(),u=i(ll(i.rotate()).invert([0,0]));return c(null==f?[[u[0]-o,u[1]-o],[u[0]+o,u[1]+o]]:t===Sd?[[Math.max(u[0]-o,f),n],[Math.min(u[0]+o,e),r]]:[[f,Math.max(u[1]-o,n)],[e,Math.min(u[1]+o,r)]])}return i.scale=function(t){return arguments.length?(a(t),s()):a()},i.translate=function(t){return arguments.length?(u(t),s()):u()},i.center=function(t){return arguments.length?(o(t),s()):o()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function Nd(t){return $f((yf+t)/2)}function kd(t,n){var e=Tf(t),r=t===n?Cf(t):Nf(e/Tf(n))/Nf(Nd(n)/Nd(t)),i=e*kf(Nd(t),r)/r;if(!r)return Sd;function o(t,n){i>0?n<-yf+df&&(n=-yf+df):n>yf-df&&(n=yf-df);var e=i/kf(Nd(n),r);return[e*Cf(r*t),i-e*Tf(r*t)]}return o.invert=function(t,n){var e=i-n,o=Pf(r)*zf(t*t+e*e),a=Mf(t,xf(e))*Pf(e);return e*r<0&&(a-=gf*Pf(t)*Pf(e)),[a/r,2*wf(kf(i/o,1/r))-yf]},o}function Cd(t,n){return[t,n]}function Pd(t,n){var e=Tf(t),r=t===n?Cf(t):(e-Tf(n))/(n-t),i=e/r+t;if(xf(r)<df)return Cd;function o(t,n){var e=i-n,o=r*t;return[e*Cf(o),i-e*Tf(o)]}return o.invert=function(t,n){var e=i-n,o=Mf(t,xf(e))*Pf(e);return e*r<0&&(o-=gf*Pf(t)*Pf(e)),[o/r,i-Pf(r)*zf(t*t+e*e)]},o}Ad.invert=Md((function(t){return t})),Sd.invert=function(t,n){return[t,2*wf(Sf(n))-yf]},Cd.invert=Cd;var zd=1.340264,$d=-.081106,Dd=893e-6,Rd=.003796,Fd=zf(3)/2;function qd(t,n){var e=Rf(Fd*Cf(n)),r=e*e,i=r*r*r;return[t*Tf(e)/(Fd*(zd+3*$d*r+i*(7*Dd+9*Rd*r))),e*(zd+$d*r+i*(Dd+Rd*r))]}function Ud(t,n){var e=Tf(n),r=Tf(t)*e;return[e*Cf(t)/r,Cf(n)/r]}function Id(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}function Od(t,n){return[Tf(n)*Cf(t),Cf(n)]}function Bd(t,n){var e=Tf(n),r=1+Tf(t)*e;return[e*Cf(t)/r,Cf(n)/r]}function Yd(t,n){return[Nf($f((yf+n)/2)),-t]}function Ld(t,n){return t.parent===n.parent?1:2}function jd(t,n){return t+n.x}function Hd(t,n){return Math.max(t,n.y)}function Xd(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function Gd(t,n){t instanceof Map?(t=[void 0,t],void 0===n&&(n=Wd)):void 0===n&&(n=Vd);for(var e,r,i,o,a,u=new Qd(t),c=[u];e=c.pop();)if((i=n(e.data))&&(a=(i=Array.from(i)).length))for(e.children=i,o=a-1;o>=0;--o)c.push(r=i[o]=new Qd(i[o])),r.parent=e,r.depth=e.depth+1;return u.eachBefore(Kd)}function Vd(t){return t.children}function Wd(t){return Array.isArray(t)?t[1]:null}function Zd(t){void 0!==t.data.value&&(t.value=t.data.value),t.data=t.data.data}function Kd(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function Qd(t){this.data=t,this.depth=this.height=0,this.parent=null}function Jd(t){return null==t?null:tp(t)}function tp(t){if("function"!=typeof t)throw new Error;return t}function np(){return 0}function ep(t){return function(){return t}}qd.invert=function(t,n){for(var e,r=n,i=r*r,o=i*i*i,a=0;a<12&&(o=(i=(r-=e=(r*(zd+$d*i+o*(Dd+Rd*i))-n)/(zd+3*$d*i+o*(7*Dd+9*Rd*i)))*r)*i*i,!(xf(e)<pf));++a);return[Fd*t*(zd+3*$d*i+o*(7*Dd+9*Rd*i))/Tf(r),Rf(Cf(r)/Fd)]},Ud.invert=Md(wf),Id.invert=function(t,n){var e,r=n,i=25;do{var o=r*r,a=o*o;r-=e=(r*(1.007226+o*(.015085+a*(.028874*o-.044475-.005916*a)))-n)/(1.007226+o*(.045255+a*(.259866*o-.311325-.005916*11*a)))}while(xf(e)>df&&--i>0);return[t/(.8707+(o=r*r)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),r]},Od.invert=Md(Rf),Bd.invert=Md((function(t){return 2*wf(t)})),Yd.invert=function(t,n){return[-n,2*wf(Sf(t))-yf]},Qd.prototype=Gd.prototype={constructor:Qd,count:function(){return this.eachAfter(Xd)},each:function(t,n){let e=-1;for(const r of this)t.call(n,r,++e,this);return this},eachAfter:function(t,n){for(var e,r,i,o=this,a=[o],u=[],c=-1;o=a.pop();)if(u.push(o),e=o.children)for(r=0,i=e.length;r<i;++r)a.push(e[r]);for(;o=u.pop();)t.call(n,o,++c,this);return this},eachBefore:function(t,n){for(var e,r,i=this,o=[i],a=-1;i=o.pop();)if(t.call(n,i,++a,this),e=i.children)for(r=e.length-1;r>=0;--r)o.push(e[r]);return this},find:function(t,n){let e=-1;for(const r of this)if(t.call(n,r,++e,this))return r},sum:function(t){return this.eachAfter((function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e}))},sort:function(t){return this.eachBefore((function(n){n.children&&n.children.sort(t)}))},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;t=e.pop(),n=r.pop();for(;t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){return Array.from(this)},leaves:function(){var t=[];return this.eachBefore((function(n){n.children||t.push(n)})),t},links:function(){var t=this,n=[];return t.each((function(e){e!==t&&n.push({source:e.parent,target:e})})),n},copy:function(){return Gd(this).eachBefore(Zd)},[Symbol.iterator]:function*(){var t,n,e,r,i=this,o=[i];do{for(t=o.reverse(),o=[];i=t.pop();)if(yield i,n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e])}while(o.length)}};const rp=1664525,ip=1013904223,op=4294967296;function ap(){let t=1;return()=>(t=(rp*t+ip)%op)/op}function up(t,n){for(var e,r,i=0,o=(t=function(t,n){let e,r,i=t.length;for(;i;)r=n()*i--|0,e=t[i],t[i]=t[r],t[r]=e;return t}(Array.from(t),n)).length,a=[];i<o;)e=t[i],r&&sp(r,e)?++i:(r=hp(a=cp(a,e)),i=0);return r}function cp(t,n){var e,r;if(lp(n,t))return[n];for(e=0;e<t.length;++e)if(fp(n,t[e])&&lp(dp(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(fp(dp(t[e],t[r]),n)&&fp(dp(t[e],n),t[r])&&fp(dp(t[r],n),t[e])&&lp(pp(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function fp(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function sp(t,n){var e=t.r-n.r+1e-9*Math.max(t.r,n.r,1),r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function lp(t,n){for(var e=0;e<n.length;++e)if(!sp(t,n[e]))return!1;return!0}function hp(t){switch(t.length){case 1:return function(t){return{x:t.x,y:t.y,r:t.r}}(t[0]);case 2:return dp(t[0],t[1]);case 3:return pp(t[0],t[1],t[2])}}function dp(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,a=n.y,u=n.r,c=o-e,f=a-r,s=u-i,l=Math.sqrt(c*c+f*f);return{x:(e+o+c/l*s)/2,y:(r+a+f/l*s)/2,r:(l+i+u)/2}}function pp(t,n,e){var r=t.x,i=t.y,o=t.r,a=n.x,u=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-a,d=r-f,p=i-u,g=i-s,y=c-o,v=l-o,_=r*r+i*i-o*o,b=_-a*a-u*u+c*c,m=_-f*f-s*s+l*l,x=d*p-h*g,w=(p*m-g*b)/(2*x)-r,M=(g*y-p*v)/x,T=(d*b-h*m)/(2*x)-i,A=(h*v-d*y)/x,S=M*M+A*A-1,E=2*(o+w*M+T*A),N=w*w+T*T-o*o,k=-(Math.abs(S)>1e-6?(E+Math.sqrt(E*E-4*S*N))/(2*S):N/E);return{x:r+w+M*k,y:i+T+A*k,r:k}}function gp(t,n,e){var r,i,o,a,u=t.x-n.x,c=t.y-n.y,f=u*u+c*c;f?(i=n.r+e.r,i*=i,a=t.r+e.r,i>(a*=a)?(r=(f+a-i)/(2*f),o=Math.sqrt(Math.max(0,a/f-r*r)),e.x=t.x-r*u-o*c,e.y=t.y-r*c+o*u):(r=(f+i-a)/(2*f),o=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*u-o*c,e.y=n.y+r*c+o*u)):(e.x=n.x+e.r,e.y=n.y)}function yp(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function vp(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,o=(n.y*e.r+e.y*n.r)/r;return i*i+o*o}function _p(t){this._=t,this.next=null,this.previous=null}function bp(t,n){if(!(o=(t=function(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}(t)).length))return 0;var e,r,i,o,a,u,c,f,s,l,h;if((e=t[0]).x=0,e.y=0,!(o>1))return e.r;if(r=t[1],e.x=-r.r,r.x=e.r,r.y=0,!(o>2))return e.r+r.r;gp(r,e,i=t[2]),e=new _p(e),r=new _p(r),i=new _p(i),e.next=i.previous=r,r.next=e.previous=i,i.next=r.previous=e;t:for(c=3;c<o;++c){gp(e._,r._,i=t[c]),i=new _p(i),f=r.next,s=e.previous,l=r._.r,h=e._.r;do{if(l<=h){if(yp(f._,i._)){r=f,e.next=r,r.previous=e,--c;continue t}l+=f._.r,f=f.next}else{if(yp(s._,i._)){(e=s).next=r,r.previous=e,--c;continue t}h+=s._.r,s=s.previous}}while(f!==s.next);for(i.previous=e,i.next=r,e.next=r.previous=r=i,a=vp(e);(i=i.next)!==r;)(u=vp(i))<a&&(e=i,a=u);r=e.next}for(e=[r._],i=r;(i=i.next)!==r;)e.push(i._);for(i=up(e,n),c=0;c<o;++c)(e=t[c]).x-=i.x,e.y-=i.y;return i.r}function mp(t){return Math.sqrt(t.value)}function xp(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function wp(t,n,e){return function(r){if(i=r.children){var i,o,a,u=i.length,c=t(r)*n||0;if(c)for(o=0;o<u;++o)i[o].r+=c;if(a=bp(i,e),c)for(o=0;o<u;++o)i[o].r-=c;r.r=a+c}}}function Mp(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}function Tp(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}function Ap(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,f=t.value&&(r-n)/t.value;++u<c;)(o=a[u]).y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*f}var Sp={depth:-1},Ep={},Np={};function kp(t){return t.id}function Cp(t){return t.parentId}function Pp(t){let n=t.length;if(n<2)return"";for(;--n>1&&!zp(t,n););return t.slice(0,n)}function zp(t,n){if("/"===t[n]){let e=0;for(;n>0&&"\\"===t[--n];)++e;if(!(1&e))return!0}return!1}function $p(t,n){return t.parent===n.parent?1:2}function Dp(t){var n=t.children;return n?n[0]:t.t}function Rp(t){var n=t.children;return n?n[n.length-1]:t.t}function Fp(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function qp(t,n,e){return t.a.parent===n.parent?t.a:e}function Up(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function Ip(t,n,e,r,i){for(var o,a=t.children,u=-1,c=a.length,f=t.value&&(i-e)/t.value;++u<c;)(o=a[u]).x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*f}Up.prototype=Object.create(Qd.prototype);var Op=(1+Math.sqrt(5))/2;function Bp(t,n,e,r,i,o){for(var a,u,c,f,s,l,h,d,p,g,y,v=[],_=n.children,b=0,m=0,x=_.length,w=n.value;b<x;){c=i-e,f=o-r;do{s=_[m++].value}while(!s&&m<x);for(l=h=s,y=s*s*(g=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/y,y/l);m<x;++m){if(s+=u=_[m].value,u<l&&(l=u),u>h&&(h=u),y=s*s*g,(d=Math.max(h/y,y/l))>p){s-=u;break}p=d}v.push(a={value:s,dice:c<f,children:_.slice(b,m)}),a.dice?Ap(a,e,r,i,w?r+=f*s/w:o):Ip(a,e,r,w?e+=c*s/w:i,o),w-=s,b=m}return v}var Yp=function t(n){function e(t,e,r,i,o){Bp(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Op);var Lp=function t(n){function e(t,e,r,i,o){if((a=t._squarify)&&a.ratio===n)for(var a,u,c,f,s,l=-1,h=a.length,d=t.value;++l<h;){for(c=(u=a[l]).children,f=u.value=0,s=c.length;f<s;++f)u.value+=c[f].value;u.dice?Ap(u,e,r,i,d?r+=(o-r)*u.value/d:o):Ip(u,e,r,d?e+=(i-e)*u.value/d:i,o),d-=u.value}else t._squarify=a=Bp(n,t,e,r,i,o),a.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Op);function jp(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])}function Hp(t,n){return t[0]-n[0]||t[1]-n[1]}function Xp(t){const n=t.length,e=[0,1];let r,i=2;for(r=2;r<n;++r){for(;i>1&&jp(t[e[i-2]],t[e[i-1]],t[r])<=0;)--i;e[i++]=r}return e.slice(0,i)}var Gp=Math.random,Vp=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(Gp),Wp=function t(n){function e(t,e){return arguments.length<2&&(e=t,t=0),t=Math.floor(t),e=Math.floor(e)-t,function(){return Math.floor(n()*e+t)}}return e.source=t,e}(Gp),Zp=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var o;if(null!=r)o=r,r=null;else do{r=2*n()-1,o=2*n()-1,i=r*r+o*o}while(!i||i>1);return t+e*o*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(Gp),Kp=function t(n){var e=Zp.source(n);function r(){var t=e.apply(this,arguments);return function(){return Math.exp(t())}}return r.source=t,r}(Gp),Qp=function t(n){function e(t){return(t=+t)<=0?()=>0:function(){for(var e=0,r=t;r>1;--r)e+=n();return e+r*n()}}return e.source=t,e}(Gp),Jp=function t(n){var e=Qp.source(n);function r(t){if(0==(t=+t))return n;var r=e(t);return function(){return r()/t}}return r.source=t,r}(Gp),tg=function t(n){function e(t){return function(){return-Math.log1p(-n())/t}}return e.source=t,e}(Gp),ng=function t(n){function e(t){if((t=+t)<0)throw new RangeError("invalid alpha");return t=1/-t,function(){return Math.pow(1-n(),t)}}return e.source=t,e}(Gp),eg=function t(n){function e(t){if((t=+t)<0||t>1)throw new RangeError("invalid p");return function(){return Math.floor(n()+t)}}return e.source=t,e}(Gp),rg=function t(n){function e(t){if((t=+t)<0||t>1)throw new RangeError("invalid p");return 0===t?()=>1/0:1===t?()=>1:(t=Math.log1p(-t),function(){return 1+Math.floor(Math.log1p(-n())/t)})}return e.source=t,e}(Gp),ig=function t(n){var e=Zp.source(n)();function r(t,r){if((t=+t)<0)throw new RangeError("invalid k");if(0===t)return()=>0;if(r=null==r?1:+r,1===t)return()=>-Math.log1p(-n())*r;var i=(t<1?t+1:t)-1/3,o=1/(3*Math.sqrt(i)),a=t<1?()=>Math.pow(n(),1/t):()=>1;return function(){do{do{var t=e(),u=1+o*t}while(u<=0);u*=u*u;var c=1-n()}while(c>=1-.0331*t*t*t*t&&Math.log(c)>=.5*t*t+i*(1-u+Math.log(u)));return i*u*a()*r}}return r.source=t,r}(Gp),og=function t(n){var e=ig.source(n);function r(t,n){var r=e(t),i=e(n);return function(){var t=r();return 0===t?0:t/(t+i())}}return r.source=t,r}(Gp),ag=function t(n){var e=rg.source(n),r=og.source(n);function i(t,n){return t=+t,(n=+n)>=1?()=>t:n<=0?()=>0:function(){for(var i=0,o=t,a=n;o*a>16&&o*(1-a)>16;){var u=Math.floor((o+1)*a),c=r(u,o-u+1)();c<=a?(i+=u,o-=u,a=(a-c)/(1-c)):(o=u-1,a/=c)}for(var f=a<.5,s=e(f?a:1-a),l=s(),h=0;l<=o;++h)l+=s();return i+(f?h:o-h)}}return i.source=t,i}(Gp),ug=function t(n){function e(t,e,r){var i;return 0==(t=+t)?i=t=>-Math.log(t):(t=1/t,i=n=>Math.pow(n,t)),e=null==e?0:+e,r=null==r?1:+r,function(){return e+r*i(-Math.log1p(-n()))}}return e.source=t,e}(Gp),cg=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,function(){return t+e*Math.tan(Math.PI*n())}}return e.source=t,e}(Gp),fg=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,function(){var r=n();return t+e*Math.log(r/(1-r))}}return e.source=t,e}(Gp),sg=function t(n){var e=ig.source(n),r=ag.source(n);function i(t){return function(){for(var i=0,o=t;o>16;){var a=Math.floor(.875*o),u=e(a)();if(u>o)return i+r(a-1,o/u)();i+=a,o-=u}for(var c=-Math.log1p(-n()),f=0;c<=o;++f)c-=Math.log1p(-n());return i+f}}return i.source=t,i}(Gp);const lg=1/4294967296;function hg(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}function dg(t,n){switch(arguments.length){case 0:break;case 1:"function"==typeof t?this.interpolator(t):this.range(t);break;default:this.domain(t),"function"==typeof n?this.interpolator(n):this.range(n)}return this}const pg=Symbol("implicit");function gg(){var t=new InternMap,n=[],e=[],r=pg;function i(i){let o=t.get(i);if(void 0===o){if(r!==pg)return r;t.set(i,o=n.push(i)-1)}return e[o%e.length]}return i.domain=function(e){if(!arguments.length)return n.slice();n=[],t=new InternMap;for(const r of e)t.has(r)||t.set(r,n.push(r)-1);return i},i.range=function(t){return arguments.length?(e=Array.from(t),i):e.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return gg(n,e).unknown(r)},hg.apply(i,arguments),i}function yg(){var t,n,e=gg().unknown(void 0),r=e.domain,i=e.range,o=0,a=1,u=!1,c=0,f=0,s=.5;function l(){var e=r().length,l=a<o,h=l?a:o,d=l?o:a;t=(d-h)/Math.max(1,e-c+2*f),u&&(t=Math.floor(t)),h+=(d-h-t*(e-c))*s,n=t*(1-c),u&&(h=Math.round(h),n=Math.round(n));var p=lt(e).map((function(n){return h+t*n}));return i(l?p.reverse():p)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),l()):r()},e.range=function(t){return arguments.length?([o,a]=t,o=+o,a=+a,l()):[o,a]},e.rangeRound=function(t){return[o,a]=t,o=+o,a=+a,u=!0,l()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(u=!!t,l()):u},e.padding=function(t){return arguments.length?(c=Math.min(1,f=+t),l()):c},e.paddingInner=function(t){return arguments.length?(c=Math.min(1,t),l()):c},e.paddingOuter=function(t){return arguments.length?(f=+t,l()):f},e.align=function(t){return arguments.length?(s=Math.max(0,Math.min(1,t)),l()):s},e.copy=function(){return yg(r(),[o,a]).round(u).paddingInner(c).paddingOuter(f).align(s)},hg.apply(l(),arguments)}function vg(t){var n=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return vg(n())},t}function _g(t){return+t}var bg=[0,1];function mg(t){return t}function xg(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:function(t){return function(){return t}}(isNaN(n)?NaN:.5)}function wg(t,n,e){var r=t[0],i=t[1],o=n[0],a=n[1];return i<r?(r=xg(i,r),o=e(a,o)):(r=xg(r,i),o=e(o,a)),function(t){return o(r(t))}}function Mg(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),o=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<r;)i[a]=xg(t[a],t[a+1]),o[a]=e(n[a],n[a+1]);return function(n){var e=s(t,n,1,r)-1;return o[e](i[e](n))}}function Tg(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function Ag(){var t,n,e,r,i,o,a=bg,u=bg,c=Gr,f=mg;function s(){var t=Math.min(a.length,u.length);return f!==mg&&(f=function(t,n){var e;return t>n&&(e=t,t=n,n=e),function(e){return Math.max(t,Math.min(n,e))}}(a[0],a[t-1])),r=t>2?Mg:wg,i=o=null,l}function l(n){return null==n||isNaN(n=+n)?e:(i||(i=r(a.map(t),u,c)))(t(f(n)))}return l.invert=function(e){return f(n((o||(o=r(u,a.map(t),Yr)))(e)))},l.domain=function(t){return arguments.length?(a=Array.from(t,_g),s()):a.slice()},l.range=function(t){return arguments.length?(u=Array.from(t),s()):u.slice()},l.rangeRound=function(t){return u=Array.from(t),c=Vr,s()},l.clamp=function(t){return arguments.length?(f=!!t||mg,s()):f!==mg},l.interpolate=function(t){return arguments.length?(c=t,s()):c},l.unknown=function(t){return arguments.length?(e=t,l):e},function(e,r){return t=e,n=r,s()}}function Sg(){return Ag()(mg,mg)}function Eg(n,e,r,i){var o,a=W(n,e,r);switch((i=Jc(null==i?",f":i)).type){case"s":var u=Math.max(Math.abs(n),Math.abs(e));return null!=i.precision||isNaN(o=lf(a,u))||(i.precision=o),t.formatPrefix(i,u);case"":case"e":case"g":case"p":case"r":null!=i.precision||isNaN(o=hf(a,Math.max(Math.abs(n),Math.abs(e))))||(i.precision=o-("e"===i.type));break;case"f":case"%":null!=i.precision||isNaN(o=sf(a))||(i.precision=o-2*("%"===i.type))}return t.format(i)}function Ng(t){var n=t.domain;return t.ticks=function(t){var e=n();return G(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return Eg(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i,o=n(),a=0,u=o.length-1,c=o[a],f=o[u],s=10;for(f<c&&(i=c,c=f,f=i,i=a,a=u,u=i);s-- >0;){if((i=V(c,f,e))===r)return o[a]=c,o[u]=f,n(o);if(i>0)c=Math.floor(c/i)*i,f=Math.ceil(f/i)*i;else{if(!(i<0))break;c=Math.ceil(c*i)/i,f=Math.floor(f*i)/i}r=i}return t},t}function kg(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],a=t[i];return a<o&&(e=r,r=i,i=e,e=o,o=a,a=e),t[r]=n.floor(o),t[i]=n.ceil(a),t}function Cg(t){return Math.log(t)}function Pg(t){return Math.exp(t)}function zg(t){return-Math.log(-t)}function $g(t){return-Math.exp(-t)}function Dg(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Rg(t){return(n,e)=>-t(-n,e)}function Fg(n){const e=n(Cg,Pg),r=e.domain;let i,o,a=10;function u(){return i=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),n=>Math.log(n)/t)}(a),o=function(t){return 10===t?Dg:t===Math.E?Math.exp:n=>Math.pow(t,n)}(a),r()[0]<0?(i=Rg(i),o=Rg(o),n(zg,$g)):n(Cg,Pg),e}return e.base=function(t){return arguments.length?(a=+t,u()):a},e.domain=function(t){return arguments.length?(r(t),u()):r()},e.ticks=t=>{const n=r();let e=n[0],u=n[n.length-1];const c=u<e;c&&([e,u]=[u,e]);let f,s,l=i(e),h=i(u);const d=null==t?10:+t;let p=[];if(!(a%1)&&h-l<d){if(l=Math.floor(l),h=Math.ceil(h),e>0){for(;l<=h;++l)for(f=1;f<a;++f)if(s=l<0?f/o(-l):f*o(l),!(s<e)){if(s>u)break;p.push(s)}}else for(;l<=h;++l)for(f=a-1;f>=1;--f)if(s=l>0?f/o(-l):f*o(l),!(s<e)){if(s>u)break;p.push(s)}2*p.length<d&&(p=G(e,u,d))}else p=G(l,h,Math.min(h-l,d)).map(o);return c?p.reverse():p},e.tickFormat=(n,r)=>{if(null==n&&(n=10),null==r&&(r=10===a?"s":","),"function"!=typeof r&&(a%1||null!=(r=Jc(r)).precision||(r.trim=!0),r=t.format(r)),n===1/0)return r;const u=Math.max(1,a*n/e.ticks().length);return t=>{let n=t/o(Math.round(i(t)));return n*a<a-.5&&(n*=a),n<=u?r(t):""}},e.nice=()=>r(kg(r(),{floor:t=>o(Math.floor(i(t))),ceil:t=>o(Math.ceil(i(t)))})),e}function qg(t){return function(n){return Math.sign(n)*Math.log1p(Math.abs(n/t))}}function Ug(t){return function(n){return Math.sign(n)*Math.expm1(Math.abs(n))*t}}function Ig(t){var n=1,e=t(qg(n),Ug(n));return e.constant=function(e){return arguments.length?t(qg(n=+e),Ug(n)):n},Ng(e)}function Og(t){return function(n){return n<0?-Math.pow(-n,t):Math.pow(n,t)}}function Bg(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function Yg(t){return t<0?-t*t:t*t}function Lg(t){var n=t(mg,mg),e=1;return n.exponent=function(n){return arguments.length?1===(e=+n)?t(mg,mg):.5===e?t(Bg,Yg):t(Og(e),Og(1/e)):e},Ng(n)}function jg(){var t=Lg(Ag());return t.copy=function(){return Tg(t,jg()).exponent(t.exponent())},hg.apply(t,arguments),t}function Hg(t){return Math.sign(t)*t*t}const Xg=new Date,Gg=new Date;function Vg(t,n,e,r){function i(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return i.floor=n=>(t(n=new Date(+n)),n),i.ceil=e=>(t(e=new Date(e-1)),n(e,1),t(e),e),i.round=t=>{const n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=(t,e)=>(n(t=new Date(+t),null==e?1:Math.floor(e)),t),i.range=(e,r,o)=>{const a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;let u;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=e=>Vg((n=>{if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)}),((t,r)=>{if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})),e&&(i.count=(n,r)=>(Xg.setTime(+n),Gg.setTime(+r),t(Xg),t(Gg),Math.floor(e(Xg,Gg))),i.every=t=>(t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?n=>r(n)%t==0:n=>i.count(0,n)%t==0):i:null)),i}const Wg=Vg((()=>{}),((t,n)=>{t.setTime(+t+n)}),((t,n)=>n-t));Wg.every=t=>(t=Math.floor(t),isFinite(t)&&t>0?t>1?Vg((n=>{n.setTime(Math.floor(n/t)*t)}),((n,e)=>{n.setTime(+n+e*t)}),((n,e)=>(e-n)/t)):Wg:null);const Zg=Wg.range,Kg=1e3,Qg=6e4,Jg=36e5,ty=864e5,ny=6048e5,ey=2592e6,ry=31536e6,iy=Vg((t=>{t.setTime(t-t.getMilliseconds())}),((t,n)=>{t.setTime(+t+n*Kg)}),((t,n)=>(n-t)/Kg),(t=>t.getUTCSeconds())),oy=iy.range,ay=Vg((t=>{t.setTime(t-t.getMilliseconds()-t.getSeconds()*Kg)}),((t,n)=>{t.setTime(+t+n*Qg)}),((t,n)=>(n-t)/Qg),(t=>t.getMinutes())),uy=ay.range,cy=Vg((t=>{t.setUTCSeconds(0,0)}),((t,n)=>{t.setTime(+t+n*Qg)}),((t,n)=>(n-t)/Qg),(t=>t.getUTCMinutes())),fy=cy.range,sy=Vg((t=>{t.setTime(t-t.getMilliseconds()-t.getSeconds()*Kg-t.getMinutes()*Qg)}),((t,n)=>{t.setTime(+t+n*Jg)}),((t,n)=>(n-t)/Jg),(t=>t.getHours())),ly=sy.range,hy=Vg((t=>{t.setUTCMinutes(0,0,0)}),((t,n)=>{t.setTime(+t+n*Jg)}),((t,n)=>(n-t)/Jg),(t=>t.getUTCHours())),dy=hy.range,py=Vg((t=>t.setHours(0,0,0,0)),((t,n)=>t.setDate(t.getDate()+n)),((t,n)=>(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Qg)/ty),(t=>t.getDate()-1)),gy=py.range,yy=Vg((t=>{t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCDate(t.getUTCDate()+n)}),((t,n)=>(n-t)/ty),(t=>t.getUTCDate()-1)),vy=yy.range,_y=Vg((t=>{t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCDate(t.getUTCDate()+n)}),((t,n)=>(n-t)/ty),(t=>Math.floor(t/ty))),by=_y.range;function my(t){return Vg((n=>{n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)}),((t,n)=>{t.setDate(t.getDate()+7*n)}),((t,n)=>(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Qg)/ny))}const xy=my(0),wy=my(1),My=my(2),Ty=my(3),Ay=my(4),Sy=my(5),Ey=my(6),Ny=xy.range,ky=wy.range,Cy=My.range,Py=Ty.range,zy=Ay.range,$y=Sy.range,Dy=Ey.range;function Ry(t){return Vg((n=>{n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCDate(t.getUTCDate()+7*n)}),((t,n)=>(n-t)/ny))}const Fy=Ry(0),qy=Ry(1),Uy=Ry(2),Iy=Ry(3),Oy=Ry(4),By=Ry(5),Yy=Ry(6),Ly=Fy.range,jy=qy.range,Hy=Uy.range,Xy=Iy.range,Gy=Oy.range,Vy=By.range,Wy=Yy.range,Zy=Vg((t=>{t.setDate(1),t.setHours(0,0,0,0)}),((t,n)=>{t.setMonth(t.getMonth()+n)}),((t,n)=>n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())),(t=>t.getMonth())),Ky=Zy.range,Qy=Vg((t=>{t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCMonth(t.getUTCMonth()+n)}),((t,n)=>n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())),(t=>t.getUTCMonth())),Jy=Qy.range,tv=Vg((t=>{t.setMonth(0,1),t.setHours(0,0,0,0)}),((t,n)=>{t.setFullYear(t.getFullYear()+n)}),((t,n)=>n.getFullYear()-t.getFullYear()),(t=>t.getFullYear()));tv.every=t=>isFinite(t=Math.floor(t))&&t>0?Vg((n=>{n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)}),((n,e)=>{n.setFullYear(n.getFullYear()+e*t)})):null;const nv=tv.range,ev=Vg((t=>{t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCFullYear(t.getUTCFullYear()+n)}),((t,n)=>n.getUTCFullYear()-t.getUTCFullYear()),(t=>t.getUTCFullYear()));ev.every=t=>isFinite(t=Math.floor(t))&&t>0?Vg((n=>{n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)}),((n,e)=>{n.setUTCFullYear(n.getUTCFullYear()+e*t)})):null;const rv=ev.range;function iv(t,n,e,i,o,a){const u=[[iy,1,Kg],[iy,5,5e3],[iy,15,15e3],[iy,30,3e4],[a,1,Qg],[a,5,3e5],[a,15,9e5],[a,30,18e5],[o,1,Jg],[o,3,108e5],[o,6,216e5],[o,12,432e5],[i,1,ty],[i,2,1728e5],[e,1,ny],[n,1,ey],[n,3,7776e6],[t,1,ry]];function c(n,e,i){const o=Math.abs(e-n)/i,a=r((([,,t])=>t)).right(u,o);if(a===u.length)return t.every(W(n/ry,e/ry,i));if(0===a)return Wg.every(Math.max(W(n,e,i),1));const[c,f]=u[o/u[a-1][2]<u[a][2]/o?a-1:a];return c.every(f)}return[function(t,n,e){const r=n<t;r&&([t,n]=[n,t]);const i=e&&"function"==typeof e.range?e:c(t,n,e),o=i?i.range(t,+n+1):[];return r?o.reverse():o},c]}const[ov,av]=iv(ev,Qy,Fy,_y,hy,cy),[uv,cv]=iv(tv,Zy,xy,py,sy,ay);function fv(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function sv(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function lv(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}function hv(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,a=t.shortDays,u=t.months,c=t.shortMonths,f=mv(i),s=xv(i),l=mv(o),h=xv(o),d=mv(a),p=xv(a),g=mv(u),y=xv(u),v=mv(c),_=xv(c),b={a:function(t){return a[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return u[t.getMonth()]},c:null,d:Yv,e:Yv,f:Gv,g:i_,G:a_,H:Lv,I:jv,j:Hv,L:Xv,m:Vv,M:Wv,p:function(t){return i[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:k_,s:C_,S:Zv,u:Kv,U:Qv,V:t_,w:n_,W:e_,x:null,X:null,y:r_,Y:o_,Z:u_,"%":N_},m={a:function(t){return a[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return u[t.getUTCMonth()]},c:null,d:c_,e:c_,f:d_,g:T_,G:S_,H:f_,I:s_,j:l_,L:h_,m:p_,M:g_,p:function(t){return i[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:k_,s:C_,S:y_,u:v_,U:__,V:m_,w:x_,W:w_,x:null,X:null,y:M_,Y:A_,Z:E_,"%":N_},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p.get(r[0].toLowerCase()),e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h.get(r[0].toLowerCase()),e+r[0].length):-1},b:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=_.get(r[0].toLowerCase()),e+r[0].length):-1},B:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=y.get(r[0].toLowerCase()),e+r[0].length):-1},c:function(t,e,r){return T(t,n,e,r)},d:zv,e:zv,f:Uv,g:Nv,G:Ev,H:Dv,I:Dv,j:$v,L:qv,m:Pv,M:Rv,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s.get(r[0].toLowerCase()),e+r[0].length):-1},q:Cv,Q:Ov,s:Bv,S:Fv,u:Mv,U:Tv,V:Av,w:wv,W:Sv,x:function(t,n,r){return T(t,e,n,r)},X:function(t,n,e){return T(t,r,n,e)},y:Nv,Y:Ev,Z:kv,"%":Iv};function w(t,n){return function(e){var r,i,o,a=[],u=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++u<f;)37===t.charCodeAt(u)&&(a.push(t.slice(c,u)),null!=(i=pv[r=t.charAt(++u)])?r=t.charAt(++u):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),a.push(r),c=u+1);return a.push(t.slice(c,u)),a.join("")}}function M(t,n){return function(e){var r,i,o=lv(1900,void 0,1);if(T(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("s"in o)return new Date(1e3*o.s+("L"in o?o.L:0));if(n&&!("Z"in o)&&(o.Z=0),"p"in o&&(o.H=o.H%12+12*o.p),void 0===o.m&&(o.m="q"in o?o.q:0),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(i=(r=sv(lv(o.y,0,1))).getUTCDay(),r=i>4||0===i?qy.ceil(r):qy(r),r=yy.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(i=(r=fv(lv(o.y,0,1))).getDay(),r=i>4||0===i?wy.ceil(r):wy(r),r=py.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?sv(lv(o.y,0,1)).getUTCDay():fv(lv(o.y,0,1)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,sv(o)):fv(o)}}function T(t,n,e,r){for(var i,o,a=0,u=n.length,c=e.length;a<u;){if(r>=c)return-1;if(37===(i=n.charCodeAt(a++))){if(i=n.charAt(a++),!(o=x[i in pv?n.charAt(a++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return b.x=w(e,b),b.X=w(r,b),b.c=w(n,b),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",b);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t+="",!0);return n.toString=function(){return t},n}}}var dv,pv={"-":"",_:" ",0:"0"},gv=/^\s*\d+/,yv=/^%/,vv=/[\\^$*+?|[\]().{}]/g;function _v(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function bv(t){return t.replace(vv,"\\$&")}function mv(t){return new RegExp("^(?:"+t.map(bv).join("|")+")","i")}function xv(t){return new Map(t.map(((t,n)=>[t.toLowerCase(),n])))}function wv(t,n,e){var r=gv.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Mv(t,n,e){var r=gv.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Tv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function Av(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Sv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Ev(t,n,e){var r=gv.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Nv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function kv(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Cv(t,n,e){var r=gv.exec(n.slice(e,e+1));return r?(t.q=3*r[0]-3,e+r[0].length):-1}function Pv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function zv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function $v(t,n,e){var r=gv.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Dv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Rv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Fv(t,n,e){var r=gv.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function qv(t,n,e){var r=gv.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Uv(t,n,e){var r=gv.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Iv(t,n,e){var r=yv.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Ov(t,n,e){var r=gv.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Bv(t,n,e){var r=gv.exec(n.slice(e));return r?(t.s=+r[0],e+r[0].length):-1}function Yv(t,n){return _v(t.getDate(),n,2)}function Lv(t,n){return _v(t.getHours(),n,2)}function jv(t,n){return _v(t.getHours()%12||12,n,2)}function Hv(t,n){return _v(1+py.count(tv(t),t),n,3)}function Xv(t,n){return _v(t.getMilliseconds(),n,3)}function Gv(t,n){return Xv(t,n)+"000"}function Vv(t,n){return _v(t.getMonth()+1,n,2)}function Wv(t,n){return _v(t.getMinutes(),n,2)}function Zv(t,n){return _v(t.getSeconds(),n,2)}function Kv(t){var n=t.getDay();return 0===n?7:n}function Qv(t,n){return _v(xy.count(tv(t)-1,t),n,2)}function Jv(t){var n=t.getDay();return n>=4||0===n?Ay(t):Ay.ceil(t)}function t_(t,n){return t=Jv(t),_v(Ay.count(tv(t),t)+(4===tv(t).getDay()),n,2)}function n_(t){return t.getDay()}function e_(t,n){return _v(wy.count(tv(t)-1,t),n,2)}function r_(t,n){return _v(t.getFullYear()%100,n,2)}function i_(t,n){return _v((t=Jv(t)).getFullYear()%100,n,2)}function o_(t,n){return _v(t.getFullYear()%1e4,n,4)}function a_(t,n){var e=t.getDay();return _v((t=e>=4||0===e?Ay(t):Ay.ceil(t)).getFullYear()%1e4,n,4)}function u_(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+_v(n/60|0,"0",2)+_v(n%60,"0",2)}function c_(t,n){return _v(t.getUTCDate(),n,2)}function f_(t,n){return _v(t.getUTCHours(),n,2)}function s_(t,n){return _v(t.getUTCHours()%12||12,n,2)}function l_(t,n){return _v(1+yy.count(ev(t),t),n,3)}function h_(t,n){return _v(t.getUTCMilliseconds(),n,3)}function d_(t,n){return h_(t,n)+"000"}function p_(t,n){return _v(t.getUTCMonth()+1,n,2)}function g_(t,n){return _v(t.getUTCMinutes(),n,2)}function y_(t,n){return _v(t.getUTCSeconds(),n,2)}function v_(t){var n=t.getUTCDay();return 0===n?7:n}function __(t,n){return _v(Fy.count(ev(t)-1,t),n,2)}function b_(t){var n=t.getUTCDay();return n>=4||0===n?Oy(t):Oy.ceil(t)}function m_(t,n){return t=b_(t),_v(Oy.count(ev(t),t)+(4===ev(t).getUTCDay()),n,2)}function x_(t){return t.getUTCDay()}function w_(t,n){return _v(qy.count(ev(t)-1,t),n,2)}function M_(t,n){return _v(t.getUTCFullYear()%100,n,2)}function T_(t,n){return _v((t=b_(t)).getUTCFullYear()%100,n,2)}function A_(t,n){return _v(t.getUTCFullYear()%1e4,n,4)}function S_(t,n){var e=t.getUTCDay();return _v((t=e>=4||0===e?Oy(t):Oy.ceil(t)).getUTCFullYear()%1e4,n,4)}function E_(){return"+0000"}function N_(){return"%"}function k_(t){return+t}function C_(t){return Math.floor(+t/1e3)}function P_(n){return dv=hv(n),t.timeFormat=dv.format,t.timeParse=dv.parse,t.utcFormat=dv.utcFormat,t.utcParse=dv.utcParse,dv}t.timeFormat=void 0,t.timeParse=void 0,t.utcFormat=void 0,t.utcParse=void 0,P_({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var z_="%Y-%m-%dT%H:%M:%S.%LZ";var $_=Date.prototype.toISOString?function(t){return t.toISOString()}:t.utcFormat(z_),D_=$_;var R_=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:t.utcParse(z_),F_=R_;function q_(t){return new Date(t)}function U_(t){return t instanceof Date?+t:+new Date(+t)}function I_(t,n,e,r,i,o,a,u,c,f){var s=Sg(),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),g=f("%I:%M"),y=f("%I %p"),v=f("%a %d"),_=f("%b %d"),b=f("%B"),m=f("%Y");function x(t){return(c(t)<t?d:u(t)<t?p:a(t)<t?g:o(t)<t?y:r(t)<t?i(t)<t?v:_:e(t)<t?b:m)(t)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(Array.from(t,U_)):h().map(q_)},s.ticks=function(n){var e=h();return t(e[0],e[e.length-1],null==n?10:n)},s.tickFormat=function(t,n){return null==n?x:f(n)},s.nice=function(t){var e=h();return t&&"function"==typeof t.range||(t=n(e[0],e[e.length-1],null==t?10:t)),t?h(kg(e,t)):s},s.copy=function(){return Tg(s,I_(t,n,e,r,i,o,a,u,c,f))},s}function O_(){var t,n,e,r,i,o=0,a=1,u=mg,c=!1;function f(n){return null==n||isNaN(n=+n)?i:u(0===e?.5:(n=(r(n)-t)*e,c?Math.max(0,Math.min(1,n)):n))}function s(t){return function(n){var e,r;return arguments.length?([e,r]=n,u=t(e,r),f):[u(0),u(1)]}}return f.domain=function(i){return arguments.length?([o,a]=i,t=r(o=+o),n=r(a=+a),e=t===n?0:1/(n-t),f):[o,a]},f.clamp=function(t){return arguments.length?(c=!!t,f):c},f.interpolator=function(t){return arguments.length?(u=t,f):u},f.range=s(Gr),f.rangeRound=s(Vr),f.unknown=function(t){return arguments.length?(i=t,f):i},function(i){return r=i,t=i(o),n=i(a),e=t===n?0:1/(n-t),f}}function B_(t,n){return n.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function Y_(){var t=Lg(O_());return t.copy=function(){return B_(t,Y_()).exponent(t.exponent())},dg.apply(t,arguments)}function L_(){var t,n,e,r,i,o,a,u=0,c=.5,f=1,s=1,l=mg,h=!1;function d(t){return isNaN(t=+t)?a:(t=.5+((t=+o(t))-n)*(s*t<s*n?r:i),l(h?Math.max(0,Math.min(1,t)):t))}function p(t){return function(n){var e,r,i;return arguments.length?([e,r,i]=n,l=di(t,[e,r,i]),d):[l(0),l(.5),l(1)]}}return d.domain=function(a){return arguments.length?([u,c,f]=a,t=o(u=+u),n=o(c=+c),e=o(f=+f),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),s=n<t?-1:1,d):[u,c,f]},d.clamp=function(t){return arguments.length?(h=!!t,d):h},d.interpolator=function(t){return arguments.length?(l=t,d):l},d.range=p(Gr),d.rangeRound=p(Vr),d.unknown=function(t){return arguments.length?(a=t,d):a},function(a){return o=a,t=a(u),n=a(c),e=a(f),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),s=n<t?-1:1,d}}function j_(){var t=Lg(L_());return t.copy=function(){return B_(t,j_()).exponent(t.exponent())},dg.apply(t,arguments)}function H_(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e}var X_=H_("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),G_=H_("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),V_=H_("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),W_=H_("4269d0efb118ff725c6cc5b03ca951ff8ab7a463f297bbf59c6b4e9498a0"),Z_=H_("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),K_=H_("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Q_=H_("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),J_=H_("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),tb=H_("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),nb=H_("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),eb=H_("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"),rb=t=>Fr(t[t.length-1]),ib=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(H_),ob=rb(ib),ab=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(H_),ub=rb(ab),cb=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(H_),fb=rb(cb),sb=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(H_),lb=rb(sb),hb=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(H_),db=rb(hb),pb=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(H_),gb=rb(pb),yb=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(H_),vb=rb(yb),_b=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(H_),bb=rb(_b),mb=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(H_),xb=rb(mb),wb=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(H_),Mb=rb(wb),Tb=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(H_),Ab=rb(Tb),Sb=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(H_),Eb=rb(Sb),Nb=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(H_),kb=rb(Nb),Cb=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(H_),Pb=rb(Cb),zb=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(H_),$b=rb(zb),Db=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(H_),Rb=rb(Db),Fb=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(H_),qb=rb(Fb),Ub=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(H_),Ib=rb(Ub),Ob=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(H_),Bb=rb(Ob),Yb=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(H_),Lb=rb(Yb),jb=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(H_),Hb=rb(jb),Xb=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(H_),Gb=rb(Xb),Vb=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(H_),Wb=rb(Vb),Zb=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(H_),Kb=rb(Zb),Qb=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(H_),Jb=rb(Qb),tm=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(H_),nm=rb(tm),em=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(H_),rm=rb(em);var im=hi(Tr(300,.5,0),Tr(-240,.5,1)),om=hi(Tr(-100,.75,.35),Tr(80,1.5,.8)),am=hi(Tr(260,.75,.35),Tr(80,1.5,.8)),um=Tr();var cm=Fe(),fm=Math.PI/3,sm=2*Math.PI/3;function lm(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var hm=lm(H_("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),dm=lm(H_("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),pm=lm(H_("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),gm=lm(H_("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function ym(t){return function(){return t}}const vm=Math.abs,_m=Math.atan2,bm=Math.cos,mm=Math.max,xm=Math.min,wm=Math.sin,Mm=Math.sqrt,Tm=1e-12,Am=Math.PI,Sm=Am/2,Em=2*Am;function Nm(t){return t>=1?Sm:t<=-1?-Sm:Math.asin(t)}function km(t){let n=3;return t.digits=function(e){if(!arguments.length)return n;if(null==e)n=null;else{const t=Math.floor(e);if(!(t>=0))throw new RangeError(`invalid digits: ${e}`);n=t}return t},()=>new Ua(n)}function Cm(t){return t.innerRadius}function Pm(t){return t.outerRadius}function zm(t){return t.startAngle}function $m(t){return t.endAngle}function Dm(t){return t&&t.padAngle}function Rm(t,n,e,r,i,o,a){var u=t-e,c=n-r,f=(a?o:-o)/Mm(u*u+c*c),s=f*c,l=-f*u,h=t+s,d=n+l,p=e+s,g=r+l,y=(h+p)/2,v=(d+g)/2,_=p-h,b=g-d,m=_*_+b*b,x=i-o,w=h*g-p*d,M=(b<0?-1:1)*Mm(mm(0,x*x*m-w*w)),T=(w*b-_*M)/m,A=(-w*_-b*M)/m,S=(w*b+_*M)/m,E=(-w*_+b*M)/m,N=T-y,k=A-v,C=S-y,P=E-v;return N*N+k*k>C*C+P*P&&(T=S,A=E),{cx:T,cy:A,x01:-s,y01:-l,x11:T*(i/x-1),y11:A*(i/x-1)}}var Fm=Array.prototype.slice;function qm(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}function Um(t){this._context=t}function Im(t){return new Um(t)}function Om(t){return t[0]}function Bm(t){return t[1]}function Ym(t,n){var e=ym(!0),r=null,i=Im,o=null,a=km(u);function u(u){var c,f,s,l=(u=qm(u)).length,h=!1;for(null==r&&(o=i(s=a())),c=0;c<=l;++c)!(c<l&&e(f=u[c],c,u))===h&&((h=!h)?o.lineStart():o.lineEnd()),h&&o.point(+t(f,c,u),+n(f,c,u));if(s)return o=null,s+""||null}return t="function"==typeof t?t:void 0===t?Om:ym(t),n="function"==typeof n?n:void 0===n?Bm:ym(n),u.x=function(n){return arguments.length?(t="function"==typeof n?n:ym(+n),u):t},u.y=function(t){return arguments.length?(n="function"==typeof t?t:ym(+t),u):n},u.defined=function(t){return arguments.length?(e="function"==typeof t?t:ym(!!t),u):e},u.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),u):i},u.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),u):r},u}function Lm(t,n,e){var r=null,i=ym(!0),o=null,a=Im,u=null,c=km(f);function f(f){var s,l,h,d,p,g=(f=qm(f)).length,y=!1,v=new Array(g),_=new Array(g);for(null==o&&(u=a(p=c())),s=0;s<=g;++s){if(!(s<g&&i(d=f[s],s,f))===y)if(y=!y)l=s,u.areaStart(),u.lineStart();else{for(u.lineEnd(),u.lineStart(),h=s-1;h>=l;--h)u.point(v[h],_[h]);u.lineEnd(),u.areaEnd()}y&&(v[s]=+t(d,s,f),_[s]=+n(d,s,f),u.point(r?+r(d,s,f):v[s],e?+e(d,s,f):_[s]))}if(p)return u=null,p+""||null}function s(){return Ym().defined(i).curve(a).context(o)}return t="function"==typeof t?t:void 0===t?Om:ym(+t),n="function"==typeof n?n:ym(void 0===n?0:+n),e="function"==typeof e?e:void 0===e?Bm:ym(+e),f.x=function(n){return arguments.length?(t="function"==typeof n?n:ym(+n),r=null,f):t},f.x0=function(n){return arguments.length?(t="function"==typeof n?n:ym(+n),f):t},f.x1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:ym(+t),f):r},f.y=function(t){return arguments.length?(n="function"==typeof t?t:ym(+t),e=null,f):n},f.y0=function(t){return arguments.length?(n="function"==typeof t?t:ym(+t),f):n},f.y1=function(t){return arguments.length?(e=null==t?null:"function"==typeof t?t:ym(+t),f):e},f.lineX0=f.lineY0=function(){return s().x(t).y(n)},f.lineY1=function(){return s().x(t).y(e)},f.lineX1=function(){return s().x(r).y(n)},f.defined=function(t){return arguments.length?(i="function"==typeof t?t:ym(!!t),f):i},f.curve=function(t){return arguments.length?(a=t,null!=o&&(u=a(o)),f):a},f.context=function(t){return arguments.length?(null==t?o=u=null:u=a(o=t),f):o},f}function jm(t,n){return n<t?-1:n>t?1:n>=t?0:NaN}function Hm(t){return t}Um.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var Xm=Vm(Im);function Gm(t){this._curve=t}function Vm(t){function n(n){return new Gm(t(n))}return n._curve=t,n}function Wm(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(Vm(t)):n()._curve},t}function Zm(){return Wm(Ym().curve(Xm))}function Km(){var t=Lm().curve(Xm),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Wm(e())},delete t.lineX0,t.lineEndAngle=function(){return Wm(r())},delete t.lineX1,t.lineInnerRadius=function(){return Wm(i())},delete t.lineY0,t.lineOuterRadius=function(){return Wm(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(Vm(t)):n()._curve},t}function Qm(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]}Gm.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};class Jm{constructor(t,n){this._context=t,this._x=n}areaStart(){this._line=0}areaEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line}point(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._x?this._context.bezierCurveTo(this._x0=(this._x0+t)/2,this._y0,this._x0,n,t,n):this._context.bezierCurveTo(this._x0,this._y0=(this._y0+n)/2,t,this._y0,t,n)}this._x0=t,this._y0=n}}class tx{constructor(t){this._context=t}lineStart(){this._point=0}lineEnd(){}point(t,n){if(t=+t,n=+n,0===this._point)this._point=1;else{const e=Qm(this._x0,this._y0),r=Qm(this._x0,this._y0=(this._y0+n)/2),i=Qm(t,this._y0),o=Qm(t,n);this._context.moveTo(...e),this._context.bezierCurveTo(...r,...i,...o)}this._x0=t,this._y0=n}}function nx(t){return new Jm(t,!0)}function ex(t){return new Jm(t,!1)}function rx(t){return new tx(t)}function ix(t){return t.source}function ox(t){return t.target}function ax(t){let n=ix,e=ox,r=Om,i=Bm,o=null,a=null,u=km(c);function c(){let c;const f=Fm.call(arguments),s=n.apply(this,f),l=e.apply(this,f);if(null==o&&(a=t(c=u())),a.lineStart(),f[0]=s,a.point(+r.apply(this,f),+i.apply(this,f)),f[0]=l,a.point(+r.apply(this,f),+i.apply(this,f)),a.lineEnd(),c)return a=null,c+""||null}return c.source=function(t){return arguments.length?(n=t,c):n},c.target=function(t){return arguments.length?(e=t,c):e},c.x=function(t){return arguments.length?(r="function"==typeof t?t:ym(+t),c):r},c.y=function(t){return arguments.length?(i="function"==typeof t?t:ym(+t),c):i},c.context=function(n){return arguments.length?(null==n?o=a=null:a=t(o=n),c):o},c}const ux=Mm(3);var cx={draw(t,n){const e=.59436*Mm(n+xm(n/28,.75)),r=e/2,i=r*ux;t.moveTo(0,e),t.lineTo(0,-e),t.moveTo(-i,-r),t.lineTo(i,r),t.moveTo(-i,r),t.lineTo(i,-r)}},fx={draw(t,n){const e=Mm(n/Am);t.moveTo(e,0),t.arc(0,0,e,0,Em)}},sx={draw(t,n){const e=Mm(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}};const lx=Mm(1/3),hx=2*lx;var dx={draw(t,n){const e=Mm(n/hx),r=e*lx;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},px={draw(t,n){const e=.62625*Mm(n);t.moveTo(0,-e),t.lineTo(e,0),t.lineTo(0,e),t.lineTo(-e,0),t.closePath()}},gx={draw(t,n){const e=.87559*Mm(n-xm(n/7,2));t.moveTo(-e,0),t.lineTo(e,0),t.moveTo(0,e),t.lineTo(0,-e)}},yx={draw(t,n){const e=Mm(n),r=-e/2;t.rect(r,r,e,e)}},vx={draw(t,n){const e=.4431*Mm(n);t.moveTo(e,e),t.lineTo(e,-e),t.lineTo(-e,-e),t.lineTo(-e,e),t.closePath()}};const _x=wm(Am/10)/wm(7*Am/10),bx=wm(Em/10)*_x,mx=-bm(Em/10)*_x;var xx={draw(t,n){const e=Mm(.8908130915292852*n),r=bx*e,i=mx*e;t.moveTo(0,-e),t.lineTo(r,i);for(let n=1;n<5;++n){const o=Em*n/5,a=bm(o),u=wm(o);t.lineTo(u*e,-a*e),t.lineTo(a*r-u*i,u*r+a*i)}t.closePath()}};const wx=Mm(3);var Mx={draw(t,n){const e=-Mm(n/(3*wx));t.moveTo(0,2*e),t.lineTo(-wx*e,-e),t.lineTo(wx*e,-e),t.closePath()}};const Tx=Mm(3);var Ax={draw(t,n){const e=.6824*Mm(n),r=e/2,i=e*Tx/2;t.moveTo(0,-e),t.lineTo(i,r),t.lineTo(-i,r),t.closePath()}};const Sx=-.5,Ex=Mm(3)/2,Nx=1/Mm(12),kx=3*(Nx/2+1);var Cx={draw(t,n){const e=Mm(n/kx),r=e/2,i=e*Nx,o=r,a=e*Nx+e,u=-o,c=a;t.moveTo(r,i),t.lineTo(o,a),t.lineTo(u,c),t.lineTo(Sx*r-Ex*i,Ex*r+Sx*i),t.lineTo(Sx*o-Ex*a,Ex*o+Sx*a),t.lineTo(Sx*u-Ex*c,Ex*u+Sx*c),t.lineTo(Sx*r+Ex*i,Sx*i-Ex*r),t.lineTo(Sx*o+Ex*a,Sx*a-Ex*o),t.lineTo(Sx*u+Ex*c,Sx*c-Ex*u),t.closePath()}},Px={draw(t,n){const e=.6189*Mm(n-xm(n/6,1.7));t.moveTo(-e,-e),t.lineTo(e,e),t.moveTo(-e,e),t.lineTo(e,-e)}};const zx=[fx,sx,dx,yx,xx,Mx,Cx],$x=[fx,gx,Px,Ax,cx,vx,px];function Dx(){}function Rx(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function Fx(t){this._context=t}function qx(t){this._context=t}function Ux(t){this._context=t}function Ix(t,n){this._basis=new Fx(t),this._beta=n}Fx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Rx(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Rx(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},qx.prototype={areaStart:Dx,areaEnd:Dx,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Rx(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},Ux.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Rx(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},Ix.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],a=t[e]-i,u=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*a),this._beta*n[c]+(1-this._beta)*(o+r*u));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Ox=function t(n){function e(t){return 1===n?new Fx(t):new Ix(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function Bx(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Yx(t,n){this._context=t,this._k=(1-n)/6}Yx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Bx(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Bx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Lx=function t(n){function e(t){return new Yx(t,n)}return e.tension=function(n){return t(+n)},e}(0);function jx(t,n){this._context=t,this._k=(1-n)/6}jx.prototype={areaStart:Dx,areaEnd:Dx,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Bx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Hx=function t(n){function e(t){return new jx(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Xx(t,n){this._context=t,this._k=(1-n)/6}Xx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Bx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Gx=function t(n){function e(t){return new Xx(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Vx(t,n,e){var r=t._x1,i=t._y1,o=t._x2,a=t._y2;if(t._l01_a>Tm){var u=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*u-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*u-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>Tm){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*f+t._x1*t._l23_2a-n*t._l12_2a)/s,a=(a*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,o,a,t._x2,t._y2)}function Wx(t,n){this._context=t,this._alpha=n}Wx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Vx(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Zx=function t(n){function e(t){return n?new Wx(t,n):new Yx(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Kx(t,n){this._context=t,this._alpha=n}Kx.prototype={areaStart:Dx,areaEnd:Dx,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Vx(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Qx=function t(n){function e(t){return n?new Kx(t,n):new jx(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Jx(t,n){this._context=t,this._alpha=n}Jx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Vx(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var tw=function t(n){function e(t){return n?new Jx(t,n):new Xx(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function nw(t){this._context=t}function ew(t){return t<0?-1:1}function rw(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),a=(e-t._y1)/(i||r<0&&-0),u=(o*i+a*r)/(r+i);return(ew(o)+ew(a))*Math.min(Math.abs(o),Math.abs(a),.5*Math.abs(u))||0}function iw(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function ow(t,n,e){var r=t._x0,i=t._y0,o=t._x1,a=t._y1,u=(o-r)/3;t._context.bezierCurveTo(r+u,i+u*n,o-u,a-u*e,o,a)}function aw(t){this._context=t}function uw(t){this._context=new cw(t)}function cw(t){this._context=t}function fw(t){this._context=t}function sw(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),a=new Array(r);for(i[0]=0,o[0]=2,a[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,a[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,a[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,a[n]-=e*a[n-1];for(i[r-1]=a[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(a[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}function lw(t,n){this._context=t,this._t=n}function hw(t,n){if((i=t.length)>1)for(var e,r,i,o=1,a=t[n[0]],u=a.length;o<i;++o)for(r=a,a=t[n[o]],e=0;e<u;++e)a[e][1]+=a[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]}function dw(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e}function pw(t,n){return t[n]}function gw(t){const n=[];return n.key=t,n}function yw(t){var n=t.map(vw);return dw(t).sort((function(t,e){return n[t]-n[e]}))}function vw(t){for(var n,e=-1,r=0,i=t.length,o=-1/0;++e<i;)(n=+t[e][1])>o&&(o=n,r=e);return r}function _w(t){var n=t.map(bw);return dw(t).sort((function(t,e){return n[t]-n[e]}))}function bw(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}nw.prototype={areaStart:Dx,areaEnd:Dx,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}},aw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:ow(this,this._t0,iw(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,ow(this,iw(this,e=rw(this,t,n)),e);break;default:ow(this,this._t0,e=rw(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(uw.prototype=Object.create(aw.prototype)).point=function(t,n){aw.prototype.point.call(this,n,t)},cw.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},fw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=sw(t),i=sw(n),o=0,a=1;a<e;++o,++a)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[a],n[a]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},lw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var mw=t=>()=>t;function xw(t,{sourceEvent:n,target:e,transform:r,dispatch:i}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:n,enumerable:!0,configurable:!0},target:{value:e,enumerable:!0,configurable:!0},transform:{value:r,enumerable:!0,configurable:!0},_:{value:i}})}function ww(t,n,e){this.k=t,this.x=n,this.y=e}ww.prototype={constructor:ww,scale:function(t){return 1===t?this:new ww(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new ww(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Mw=new ww(1,0,0);function Tw(t){for(;!t.__zoom;)if(!(t=t.parentNode))return Mw;return t.__zoom}function Aw(t){t.stopImmediatePropagation()}function Sw(t){t.preventDefault(),t.stopImmediatePropagation()}function Ew(t){return!(t.ctrlKey&&"wheel"!==t.type||t.button)}function Nw(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t).hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]:[[0,0],[t.clientWidth,t.clientHeight]]}function kw(){return this.__zoom||Mw}function Cw(t){return-t.deltaY*(1===t.deltaMode?.05:t.deltaMode?1:.002)*(t.ctrlKey?10:1)}function Pw(){return navigator.maxTouchPoints||"ontouchstart"in this}function zw(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],o=t.invertY(n[0][1])-e[0][1],a=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),a>o?(o+a)/2:Math.min(0,o)||Math.max(0,a))}Tw.prototype=ww.prototype,t.Adder=T,t.Delaunay=Lu,t.FormatSpecifier=tf,t.InternMap=InternMap,t.InternSet=InternSet,t.Node=Qd,t.Path=Ua,t.Voronoi=qu,t.ZoomTransform=ww,t.active=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>qi&&e.name===n)return new po([[t]],Zo,n,+r);return null},t.arc=function(){var t=Cm,n=Pm,e=ym(0),r=null,i=zm,o=$m,a=Dm,u=null,c=km(f);function f(){var f,s,l=+t.apply(this,arguments),h=+n.apply(this,arguments),d=i.apply(this,arguments)-Sm,p=o.apply(this,arguments)-Sm,g=vm(p-d),y=p>d;if(u||(u=f=c()),h<l&&(s=h,h=l,l=s),h>Tm)if(g>Em-Tm)u.moveTo(h*bm(d),h*wm(d)),u.arc(0,0,h,d,p,!y),l>Tm&&(u.moveTo(l*bm(p),l*wm(p)),u.arc(0,0,l,p,d,y));else{var v,_,b=d,m=p,x=d,w=p,M=g,T=g,A=a.apply(this,arguments)/2,S=A>Tm&&(r?+r.apply(this,arguments):Mm(l*l+h*h)),E=xm(vm(h-l)/2,+e.apply(this,arguments)),N=E,k=E;if(S>Tm){var C=Nm(S/l*wm(A)),P=Nm(S/h*wm(A));(M-=2*C)>Tm?(x+=C*=y?1:-1,w-=C):(M=0,x=w=(d+p)/2),(T-=2*P)>Tm?(b+=P*=y?1:-1,m-=P):(T=0,b=m=(d+p)/2)}var z=h*bm(b),$=h*wm(b),D=l*bm(w),R=l*wm(w);if(E>Tm){var F,q=h*bm(m),U=h*wm(m),I=l*bm(x),O=l*wm(x);if(g<Am)if(F=function(t,n,e,r,i,o,a,u){var c=e-t,f=r-n,s=a-i,l=u-o,h=l*c-s*f;if(!(h*h<Tm))return[t+(h=(s*(n-o)-l*(t-i))/h)*c,n+h*f]}(z,$,I,O,q,U,D,R)){var B=z-F[0],Y=$-F[1],L=q-F[0],j=U-F[1],H=1/wm(function(t){return t>1?0:t<-1?Am:Math.acos(t)}((B*L+Y*j)/(Mm(B*B+Y*Y)*Mm(L*L+j*j)))/2),X=Mm(F[0]*F[0]+F[1]*F[1]);N=xm(E,(l-X)/(H-1)),k=xm(E,(h-X)/(H+1))}else N=k=0}T>Tm?k>Tm?(v=Rm(I,O,z,$,h,k,y),_=Rm(q,U,D,R,h,k,y),u.moveTo(v.cx+v.x01,v.cy+v.y01),k<E?u.arc(v.cx,v.cy,k,_m(v.y01,v.x01),_m(_.y01,_.x01),!y):(u.arc(v.cx,v.cy,k,_m(v.y01,v.x01),_m(v.y11,v.x11),!y),u.arc(0,0,h,_m(v.cy+v.y11,v.cx+v.x11),_m(_.cy+_.y11,_.cx+_.x11),!y),u.arc(_.cx,_.cy,k,_m(_.y11,_.x11),_m(_.y01,_.x01),!y))):(u.moveTo(z,$),u.arc(0,0,h,b,m,!y)):u.moveTo(z,$),l>Tm&&M>Tm?N>Tm?(v=Rm(D,R,q,U,l,-N,y),_=Rm(z,$,I,O,l,-N,y),u.lineTo(v.cx+v.x01,v.cy+v.y01),N<E?u.arc(v.cx,v.cy,N,_m(v.y01,v.x01),_m(_.y01,_.x01),!y):(u.arc(v.cx,v.cy,N,_m(v.y01,v.x01),_m(v.y11,v.x11),!y),u.arc(0,0,l,_m(v.cy+v.y11,v.cx+v.x11),_m(_.cy+_.y11,_.cx+_.x11),y),u.arc(_.cx,_.cy,N,_m(_.y11,_.x11),_m(_.y01,_.x01),!y))):u.arc(0,0,l,w,x,y):u.lineTo(D,R)}else u.moveTo(0,0);if(u.closePath(),f)return u=null,f+""||null}return f.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-Am/2;return[bm(r)*e,wm(r)*e]},f.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:ym(+n),f):t},f.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:ym(+t),f):n},f.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:ym(+t),f):e},f.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:ym(+t),f):r},f.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:ym(+t),f):i},f.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:ym(+t),f):o},f.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:ym(+t),f):a},f.context=function(t){return arguments.length?(u=null==t?null:t,f):u},f},t.area=Lm,t.areaRadial=Km,t.ascending=n,t.autoType=function(t){for(var n in t){var e,r,i=t[n].trim();if(i)if("true"===i)i=!0;else if("false"===i)i=!1;else if("NaN"===i)i=NaN;else if(isNaN(e=+i)){if(!(r=i.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;yc&&r[4]&&!r[7]&&(i=i.replace(/-/g,"/").replace(/T/," ")),i=new Date(i)}else i=e;else i=null;t[n]=i}return t},t.axisBottom=function(t){return Pt(Mt,t)},t.axisLeft=function(t){return Pt(Tt,t)},t.axisRight=function(t){return Pt(wt,t)},t.axisTop=function(t){return Pt(xt,t)},t.bin=Q,t.bisect=s,t.bisectCenter=f,t.bisectLeft=c,t.bisectRight=u,t.bisector=r,t.blob=function(t,n){return fetch(t,n).then(vc)},t.blur=function(t,n){if(!((n=+n)>=0))throw new RangeError("invalid r");let e=t.length;if(!((e=Math.floor(e))>=0))throw new RangeError("invalid length");if(!e||!n)return t;const r=y(n),i=t.slice();return r(t,i,0,e,1),r(i,t,0,e,1),r(t,i,0,e,1),t},t.blur2=l,t.blurImage=h,t.brush=function(){return wa(la)},t.brushSelection=function(t){var n=t.__brush;return n?n.dim.output(n.selection):null},t.brushX=function(){return wa(fa)},t.brushY=function(){return wa(sa)},t.buffer=function(t,n){return fetch(t,n).then(_c)},t.chord=function(){return za(!1,!1)},t.chordDirected=function(){return za(!0,!1)},t.chordTranspose=function(){return za(!1,!0)},t.cluster=function(){var t=Ld,n=1,e=1,r=!1;function i(i){var o,a=0;i.eachAfter((function(n){var e=n.children;e?(n.x=function(t){return t.reduce(jd,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Hd,0)}(e)):(n.x=o?a+=t(n,o):0,n.y=0,o=n)}));var u=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=u.x-t(u,c)/2,s=c.x+t(c,u)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.color=ze,t.contourDensity=function(){var t=fu,n=su,e=lu,r=960,i=500,o=20,a=2,u=3*o,c=r+2*u>>a,f=i+2*u>>a,s=Qa(20);function h(r){var i=new Float32Array(c*f),s=Math.pow(2,-a),h=-1;for(const o of r){var d=(t(o,++h,r)+u)*s,p=(n(o,h,r)+u)*s,g=+e(o,h,r);if(g&&d>=0&&d<c&&p>=0&&p<f){var y=Math.floor(d),v=Math.floor(p),_=d-y-.5,b=p-v-.5;i[y+v*c]+=(1-_)*(1-b)*g,i[y+1+v*c]+=_*(1-b)*g,i[y+1+(v+1)*c]+=_*b*g,i[y+(v+1)*c]+=(1-_)*b*g}}return l({data:i,width:c,height:f},o*s),i}function d(t){var n=h(t),e=s(n),r=Math.pow(2,2*a);return Array.isArray(e)||(e=G(Number.MIN_VALUE,J(n)/r,e)),iu().size([c,f]).thresholds(e.map((t=>t*r)))(n).map(((t,n)=>(t.value=+e[n],p(t))))}function p(t){return t.coordinates.forEach(g),t}function g(t){t.forEach(y)}function y(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,a)-u,t[1]=t[1]*Math.pow(2,a)-u}function _(){return c=r+2*(u=3*o)>>a,f=i+2*u>>a,d}return d.contours=function(t){var n=h(t),e=iu().size([c,f]),r=Math.pow(2,2*a),i=t=>{t=+t;var i=p(e.contour(n,t*r));return i.value=t,i};return Object.defineProperty(i,"max",{get:()=>J(n)/r}),i},d.x=function(n){return arguments.length?(t="function"==typeof n?n:Qa(+n),d):t},d.y=function(t){return arguments.length?(n="function"==typeof t?t:Qa(+t),d):n},d.weight=function(t){return arguments.length?(e="function"==typeof t?t:Qa(+t),d):e},d.size=function(t){if(!arguments.length)return[r,i];var n=+t[0],e=+t[1];if(!(n>=0&&e>=0))throw new Error("invalid size");return r=n,i=e,_()},d.cellSize=function(t){if(!arguments.length)return 1<<a;if(!((t=+t)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(t)/Math.LN2),_()},d.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?Qa(Za.call(t)):Qa(t),d):s},d.bandwidth=function(t){if(!arguments.length)return Math.sqrt(o*(o+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return o=(Math.sqrt(4*t*t+1)-1)/2,_()},d},t.contours=iu,t.count=v,t.create=function(t){return Zn(Yt(t).call(document.documentElement))},t.creator=Yt,t.cross=function(...t){const n="function"==typeof t[t.length-1]&&function(t){return n=>t(...n)}(t.pop()),e=(t=t.map(m)).map(_),r=t.length-1,i=new Array(r+1).fill(0),o=[];if(r<0||e.some(b))return o;for(;;){o.push(i.map(((n,e)=>t[e][n])));let a=r;for(;++i[a]===e[a];){if(0===a)return n?o.map(n):o;i[a--]=0}}},t.csv=wc,t.csvFormat=rc,t.csvFormatBody=ic,t.csvFormatRow=ac,t.csvFormatRows=oc,t.csvFormatValue=uc,t.csvParse=nc,t.csvParseRows=ec,t.cubehelix=Tr,t.cumsum=function(t,n){var e=0,r=0;return Float64Array.from(t,void 0===n?t=>e+=+t||0:i=>e+=+n(i,r++,t)||0)},t.curveBasis=function(t){return new Fx(t)},t.curveBasisClosed=function(t){return new qx(t)},t.curveBasisOpen=function(t){return new Ux(t)},t.curveBumpX=nx,t.curveBumpY=ex,t.curveBundle=Ox,t.curveCardinal=Lx,t.curveCardinalClosed=Hx,t.curveCardinalOpen=Gx,t.curveCatmullRom=Zx,t.curveCatmullRomClosed=Qx,t.curveCatmullRomOpen=tw,t.curveLinear=Im,t.curveLinearClosed=function(t){return new nw(t)},t.curveMonotoneX=function(t){return new aw(t)},t.curveMonotoneY=function(t){return new uw(t)},t.curveNatural=function(t){return new fw(t)},t.curveStep=function(t){return new lw(t,.5)},t.curveStepAfter=function(t){return new lw(t,1)},t.curveStepBefore=function(t){return new lw(t,0)},t.descending=e,t.deviation=w,t.difference=function(t,...n){t=new InternSet(t);for(const e of n)for(const n of e)t.delete(n);return t},t.disjoint=function(t,n){const e=n[Symbol.iterator](),r=new InternSet;for(const n of t){if(r.has(n))return!1;let t,i;for(;({value:t,done:i}=e.next())&&!i;){if(Object.is(n,t))return!1;r.add(t)}}return!0},t.dispatch=$t,t.drag=function(){var t,n,e,r,i=se,o=le,a=he,u=de,c={},f=$t("start","drag","end"),s=0,l=0;function h(t){t.on("mousedown.drag",d).filter(u).on("touchstart.drag",y).on("touchmove.drag",v,ee).on("touchend.drag touchcancel.drag",_).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function d(a,u){if(!r&&i.call(this,a,u)){var c=b(this,o.call(this,a,u),a,u,"mouse");c&&(Zn(a.view).on("mousemove.drag",p,re).on("mouseup.drag",g,re),ae(a.view),ie(a),e=!1,t=a.clientX,n=a.clientY,c("start",a))}}function p(r){if(oe(r),!e){var i=r.clientX-t,o=r.clientY-n;e=i*i+o*o>l}c.mouse("drag",r)}function g(t){Zn(t.view).on("mousemove.drag mouseup.drag",null),ue(t.view,e),oe(t),c.mouse("end",t)}function y(t,n){if(i.call(this,t,n)){var e,r,a=t.changedTouches,u=o.call(this,t,n),c=a.length;for(e=0;e<c;++e)(r=b(this,u,t,n,a[e].identifier,a[e]))&&(ie(t),r("start",t,a[e]))}}function v(t){var n,e,r=t.changedTouches,i=r.length;for(n=0;n<i;++n)(e=c[r[n].identifier])&&(oe(t),e("drag",t,r[n]))}function _(t){var n,e,i=t.changedTouches,o=i.length;for(r&&clearTimeout(r),r=setTimeout((function(){r=null}),500),n=0;n<o;++n)(e=c[i[n].identifier])&&(ie(t),e("end",t,i[n]))}function b(t,n,e,r,i,o){var u,l,d,p=f.copy(),g=ne(o||e,n);if(null!=(d=a.call(t,new fe("beforestart",{sourceEvent:e,target:h,identifier:i,active:s,x:g[0],y:g[1],dx:0,dy:0,dispatch:p}),r)))return u=d.x-g[0]||0,l=d.y-g[1]||0,function e(o,a,f){var y,v=g;switch(o){case"start":c[i]=e,y=s++;break;case"end":delete c[i],--s;case"drag":g=ne(f||a,n),y=s}p.call(o,t,new fe(o,{sourceEvent:a,subject:d,target:h,identifier:i,active:y,x:g[0]+u,y:g[1]+l,dx:g[0]-v[0],dy:g[1]-v[1],dispatch:p}),r)}}return h.filter=function(t){return arguments.length?(i="function"==typeof t?t:ce(!!t),h):i},h.container=function(t){return arguments.length?(o="function"==typeof t?t:ce(t),h):o},h.subject=function(t){return arguments.length?(a="function"==typeof t?t:ce(t),h):a},h.touchable=function(t){return arguments.length?(u="function"==typeof t?t:ce(!!t),h):u},h.on=function(){var t=f.on.apply(f,arguments);return t===f?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},t.dragDisable=ae,t.dragEnable=ue,t.dsv=function(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=Ju(t);return mc(n,e).then((function(t){return i.parse(t,r)}))},t.dsvFormat=Ju,t.easeBack=Lo,t.easeBackIn=Bo,t.easeBackInOut=Lo,t.easeBackOut=Yo,t.easeBounce=Io,t.easeBounceIn=function(t){return 1-Io(1-t)},t.easeBounceInOut=function(t){return((t*=2)<=1?1-Io(1-t):Io(t-1)+1)/2},t.easeBounceOut=Io,t.easeCircle=No,t.easeCircleIn=function(t){return 1-Math.sqrt(1-t*t)},t.easeCircleInOut=No,t.easeCircleOut=function(t){return Math.sqrt(1- --t*t)},t.easeCubic=bo,t.easeCubicIn=function(t){return t*t*t},t.easeCubicInOut=bo,t.easeCubicOut=function(t){return--t*t*t+1},t.easeElastic=Xo,t.easeElasticIn=Ho,t.easeElasticInOut=Go,t.easeElasticOut=Xo,t.easeExp=Eo,t.easeExpIn=function(t){return So(1-+t)},t.easeExpInOut=Eo,t.easeExpOut=function(t){return 1-So(t)},t.easeLinear=t=>+t,t.easePoly=wo,t.easePolyIn=mo,t.easePolyInOut=wo,t.easePolyOut=xo,t.easeQuad=_o,t.easeQuadIn=function(t){return t*t},t.easeQuadInOut=_o,t.easeQuadOut=function(t){return t*(2-t)},t.easeSin=Ao,t.easeSinIn=function(t){return 1==+t?1:1-Math.cos(t*To)},t.easeSinInOut=Ao,t.easeSinOut=function(t){return Math.sin(t*To)},t.every=function(t,n){if("function"!=typeof n)throw new TypeError("test is not a function");let e=-1;for(const r of t)if(!n(r,++e,t))return!1;return!0},t.extent=M,t.fcumsum=function(t,n){const e=new T;let r=-1;return Float64Array.from(t,void 0===n?t=>e.add(+t||0):i=>e.add(+n(i,++r,t)||0))},t.filter=function(t,n){if("function"!=typeof n)throw new TypeError("test is not a function");const e=[];let r=-1;for(const i of t)n(i,++r,t)&&e.push(i);return e},t.flatGroup=function(t,...n){return z(P(t,...n),n)},t.flatRollup=function(t,n,...e){return z(D(t,n,...e),e)},t.forceCenter=function(t,n){var e,r=1;function i(){var i,o,a=e.length,u=0,c=0;for(i=0;i<a;++i)u+=(o=e[i]).x,c+=o.y;for(u=(u/a-t)*r,c=(c/a-n)*r,i=0;i<a;++i)(o=e[i]).x-=u,o.y-=c}return null==t&&(t=0),null==n&&(n=0),i.initialize=function(t){e=t},i.x=function(n){return arguments.length?(t=+n,i):t},i.y=function(t){return arguments.length?(n=+t,i):n},i.strength=function(t){return arguments.length?(r=+t,i):r},i},t.forceCollide=function(t){var n,e,r,i=1,o=1;function a(){for(var t,a,c,f,s,l,h,d=n.length,p=0;p<o;++p)for(a=$c(n,Ic,Oc).visitAfter(u),t=0;t<d;++t)c=n[t],l=e[c.index],h=l*l,f=c.x+c.vx,s=c.y+c.vy,a.visit(g);function g(t,n,e,o,a){var u=t.data,d=t.r,p=l+d;if(!u)return n>f+p||o<f-p||e>s+p||a<s-p;if(u.index>c.index){var g=f-u.x-u.vx,y=s-u.y-u.vy,v=g*g+y*y;v<p*p&&(0===g&&(v+=(g=Uc(r))*g),0===y&&(v+=(y=Uc(r))*y),v=(p-(v=Math.sqrt(v)))/v*i,c.vx+=(g*=v)*(p=(d*=d)/(h+d)),c.vy+=(y*=v)*p,u.vx-=g*(p=1-p),u.vy-=y*p)}}}function u(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function c(){if(n){var r,i,o=n.length;for(e=new Array(o),r=0;r<o;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=qc(null==t?1:+t)),a.initialize=function(t,e){n=t,r=e,c()},a.iterations=function(t){return arguments.length?(o=+t,a):o},a.strength=function(t){return arguments.length?(i=+t,a):i},a.radius=function(n){return arguments.length?(t="function"==typeof n?n:qc(+n),c(),a):t},a},t.forceLink=function(t){var n,e,r,i,o,a,u=Bc,c=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},f=qc(30),s=1;function l(r){for(var i=0,u=t.length;i<s;++i)for(var c,f,l,h,d,p,g,y=0;y<u;++y)f=(c=t[y]).source,h=(l=c.target).x+l.vx-f.x-f.vx||Uc(a),d=l.y+l.vy-f.y-f.vy||Uc(a),h*=p=((p=Math.sqrt(h*h+d*d))-e[y])/p*r*n[y],d*=p,l.vx-=h*(g=o[y]),l.vy-=d*g,f.vx+=h*(g=1-g),f.vy+=d*g}function h(){if(r){var a,c,f=r.length,s=t.length,l=new Map(r.map(((t,n)=>[u(t,n,r),t])));for(a=0,i=new Array(f);a<s;++a)(c=t[a]).index=a,"object"!=typeof c.source&&(c.source=Yc(l,c.source)),"object"!=typeof c.target&&(c.target=Yc(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(a=0,o=new Array(s);a<s;++a)c=t[a],o[a]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),d(),e=new Array(s),p()}}function d(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+c(t[e],e,t)}function p(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+f(t[n],n,t)}return null==t&&(t=[]),l.initialize=function(t,n){r=t,a=n,h()},l.links=function(n){return arguments.length?(t=n,h(),l):t},l.id=function(t){return arguments.length?(u=t,l):u},l.iterations=function(t){return arguments.length?(s=+t,l):s},l.strength=function(t){return arguments.length?(c="function"==typeof t?t:qc(+t),d(),l):c},l.distance=function(t){return arguments.length?(f="function"==typeof t?t:qc(+t),p(),l):f},l},t.forceManyBody=function(){var t,n,e,r,i,o=qc(-30),a=1,u=1/0,c=.81;function f(e){var i,o=t.length,a=$c(t,Xc,Gc).visitAfter(l);for(r=e,i=0;i<o;++i)n=t[i],a.visit(h)}function s(){if(t){var n,e,r=t.length;for(i=new Array(r),n=0;n<r;++n)e=t[n],i[e.index]=+o(e,n,t)}}function l(t){var n,e,r,o,a,u=0,c=0;if(t.length){for(r=o=a=0;a<4;++a)(n=t[a])&&(e=Math.abs(n.value))&&(u+=n.value,c+=e,r+=e*n.x,o+=e*n.y);t.x=r/c,t.y=o/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{u+=i[n.data.index]}while(n=n.next)}t.value=u}function h(t,o,f,s){if(!t.value)return!0;var l=t.x-n.x,h=t.y-n.y,d=s-o,p=l*l+h*h;if(d*d/c<p)return p<u&&(0===l&&(p+=(l=Uc(e))*l),0===h&&(p+=(h=Uc(e))*h),p<a&&(p=Math.sqrt(a*p)),n.vx+=l*t.value*r/p,n.vy+=h*t.value*r/p),!0;if(!(t.length||p>=u)){(t.data!==n||t.next)&&(0===l&&(p+=(l=Uc(e))*l),0===h&&(p+=(h=Uc(e))*h),p<a&&(p=Math.sqrt(a*p)));do{t.data!==n&&(d=i[t.data.index]*r/p,n.vx+=l*d,n.vy+=h*d)}while(t=t.next)}}return f.initialize=function(n,r){t=n,e=r,s()},f.strength=function(t){return arguments.length?(o="function"==typeof t?t:qc(+t),s(),f):o},f.distanceMin=function(t){return arguments.length?(a=t*t,f):Math.sqrt(a)},f.distanceMax=function(t){return arguments.length?(u=t*t,f):Math.sqrt(u)},f.theta=function(t){return arguments.length?(c=t*t,f):Math.sqrt(c)},f},t.forceRadial=function(t,n,e){var r,i,o,a=qc(.1);function u(t){for(var a=0,u=r.length;a<u;++a){var c=r[a],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(o[a]-l)*i[a]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)o[n]=+t(r[n],n,r),i[n]=isNaN(o[n])?0:+a(r[n],n,r)}}return"function"!=typeof t&&(t=qc(+t)),null==n&&(n=0),null==e&&(e=0),u.initialize=function(t){r=t,c()},u.strength=function(t){return arguments.length?(a="function"==typeof t?t:qc(+t),c(),u):a},u.radius=function(n){return arguments.length?(t="function"==typeof n?n:qc(+n),c(),u):t},u.x=function(t){return arguments.length?(n=+t,u):n},u.y=function(t){return arguments.length?(e=+t,u):e},u},t.forceSimulation=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),o=0,a=.6,u=new Map,c=Ni(l),f=$t("tick","end"),s=function(){let t=1;return()=>(t=(Lc*t+jc)%Hc)/Hc}();function l(){h(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function h(r){var c,f,s=t.length;void 0===r&&(r=1);for(var l=0;l<r;++l)for(e+=(o-e)*i,u.forEach((function(t){t(e)})),c=0;c<s;++c)null==(f=t[c]).fx?f.x+=f.vx*=a:(f.x=f.fx,f.vx=0),null==f.fy?f.y+=f.vy*=a:(f.y=f.fy,f.vy=0);return n}function d(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,null!=n.fx&&(n.x=n.fx),null!=n.fy&&(n.y=n.fy),isNaN(n.x)||isNaN(n.y)){var i=10*Math.sqrt(.5+e),o=e*Vc;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function p(n){return n.initialize&&n.initialize(t,s),n}return null==t&&(t=[]),d(),n={tick:h,restart:function(){return c.restart(l),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,d(),u.forEach(p),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(o=+t,n):o},velocityDecay:function(t){return arguments.length?(a=1-t,n):1-a},randomSource:function(t){return arguments.length?(s=t,u.forEach(p),n):s},force:function(t,e){return arguments.length>1?(null==e?u.delete(t):u.set(t,p(e)),n):u.get(t)},find:function(n,e,r){var i,o,a,u,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(a=(i=n-(u=t[f]).x)*i+(o=e-u.y)*o)<r&&(c=u,r=a);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},t.forceX=function(t){var n,e,r,i=qc(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vx+=(r[o]-i.x)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=qc(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:qc(+t),a(),o):i},o.x=function(n){return arguments.length?(t="function"==typeof n?n:qc(+n),a(),o):t},o},t.forceY=function(t){var n,e,r,i=qc(.1);function o(t){for(var i,o=0,a=n.length;o<a;++o)(i=n[o]).vy+=(r[o]-i.y)*e[o]*t}function a(){if(n){var o,a=n.length;for(e=new Array(a),r=new Array(a),o=0;o<a;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=qc(null==t?0:+t)),o.initialize=function(t){n=t,a()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:qc(+t),a(),o):i},o.y=function(n){return arguments.length?(t="function"==typeof n?n:qc(+n),a(),o):t},o},t.formatDefaultLocale=ff,t.formatLocale=cf,t.formatSpecifier=Jc,t.fsum=function(t,n){const e=new T;if(void 0===n)for(let n of t)(n=+n)&&e.add(n);else{let r=-1;for(let i of t)(i=+n(i,++r,t))&&e.add(i)}return+e},t.geoAlbers=xd,t.geoAlbersUsa=function(){var t,n,e,r,i,o,a=xd(),u=md().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=md().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){o=[t,n]}};function s(t){var n=t[0],a=t[1];return o=null,e.point(n,a),o||(r.point(n,a),o)||(i.point(n,a),o)}function l(){return t=n=null,s}return s.invert=function(t){var n=a.scale(),e=a.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?u:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:a).invert(t)},s.stream=function(e){return t&&n===e?t:(r=[a.stream(n=e),u.stream(e),c.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},s.precision=function(t){return arguments.length?(a.precision(t),u.precision(t),c.precision(t),l()):a.precision()},s.scale=function(t){return arguments.length?(a.scale(t),u.scale(.35*t),c.scale(t),s.translate(a.translate())):a.scale()},s.translate=function(t){if(!arguments.length)return a.translate();var n=a.scale(),o=+t[0],s=+t[1];return e=a.translate(t).clipExtent([[o-.455*n,s-.238*n],[o+.455*n,s+.238*n]]).stream(f),r=u.translate([o-.307*n,s+.201*n]).clipExtent([[o-.425*n+df,s+.12*n+df],[o-.214*n-df,s+.234*n-df]]).stream(f),i=c.translate([o-.205*n,s+.212*n]).clipExtent([[o-.214*n+df,s+.166*n+df],[o-.115*n-df,s+.234*n-df]]).stream(f),l()},s.fitExtent=function(t,n){return ud(s,t,n)},s.fitSize=function(t,n){return cd(s,t,n)},s.fitWidth=function(t,n){return fd(s,t,n)},s.fitHeight=function(t,n){return sd(s,t,n)},s.scale(1070)},t.geoArea=function(t){return us=new T,Lf(t,cs),2*us},t.geoAzimuthalEqualArea=function(){return yd(Td).scale(124.75).clipAngle(179.999)},t.geoAzimuthalEqualAreaRaw=Td,t.geoAzimuthalEquidistant=function(){return yd(Ad).scale(79.4188).clipAngle(179.999)},t.geoAzimuthalEquidistantRaw=Ad,t.geoBounds=function(t){var n,e,r,i,o,a,u;if(Qf=Kf=-(Wf=Zf=1/0),is=[],Lf(t,Fs),e=is.length){for(is.sort(Hs),n=1,o=[r=is[0]];n<e;++n)Xs(r,(i=is[n])[0])||Xs(r,i[1])?(js(r[0],i[1])>js(r[0],r[1])&&(r[1]=i[1]),js(i[0],r[1])>js(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(a=-1/0,n=0,r=o[e=o.length-1];n<=e;r=i,++n)i=o[n],(u=js(r[1],i[0]))>a&&(a=u,Wf=i[0],Kf=r[1])}return is=os=null,Wf===1/0||Zf===1/0?[[NaN,NaN],[NaN,NaN]]:[[Wf,Zf],[Kf,Qf]]},t.geoCentroid=function(t){ms=xs=ws=Ms=Ts=As=Ss=Es=0,Ns=new T,ks=new T,Cs=new T,Lf(t,Gs);var n=+Ns,e=+ks,r=+Cs,i=Ef(n,e,r);return i<pf&&(n=As,e=Ss,r=Es,xs<df&&(n=ws,e=Ms,r=Ts),(i=Ef(n,e,r))<pf)?[NaN,NaN]:[Mf(e,n)*bf,Rf(r/i)*bf]},t.geoCircle=function(){var t,n,e=il([0,0]),r=il(90),i=il(2),o={point:function(e,r){t.push(e=n(e,r)),e[0]*=bf,e[1]*=bf}};function a(){var a=e.apply(this,arguments),u=r.apply(this,arguments)*mf,c=i.apply(this,arguments)*mf;return t=[],n=ul(-a[0]*mf,-a[1]*mf,0).invert,hl(o,u,c,1),a={type:"Polygon",coordinates:[t]},t=n=null,a}return a.center=function(t){return arguments.length?(e="function"==typeof t?t:il([+t[0],+t[1]]),a):e},a.radius=function(t){return arguments.length?(r="function"==typeof t?t:il(+t),a):r},a.precision=function(t){return arguments.length?(i="function"==typeof t?t:il(+t),a):i},a},t.geoClipAntimeridian=Tl,t.geoClipCircle=Al,t.geoClipExtent=function(){var t,n,e,r=0,i=0,o=960,a=500;return e={stream:function(e){return t&&n===e?t:t=zl(r,i,o,a)(n=e)},extent:function(u){return arguments.length?(r=+u[0][0],i=+u[0][1],o=+u[1][0],a=+u[1][1],t=n=null,e):[[r,i],[o,a]]}}},t.geoClipRectangle=zl,t.geoConicConformal=function(){return _d(kd).scale(109.5).parallels([30,30])},t.geoConicConformalRaw=kd,t.geoConicEqualArea=md,t.geoConicEqualAreaRaw=bd,t.geoConicEquidistant=function(){return _d(Pd).scale(131.154).center([0,13.9389])},t.geoConicEquidistantRaw=Pd,t.geoContains=function(t,n){return(t&&Bl.hasOwnProperty(t.type)?Bl[t.type]:Ll)(t,n)},t.geoDistance=Ol,t.geoEqualEarth=function(){return yd(qd).scale(177.158)},t.geoEqualEarthRaw=qd,t.geoEquirectangular=function(){return yd(Cd).scale(152.63)},t.geoEquirectangularRaw=Cd,t.geoGnomonic=function(){return yd(Ud).scale(144.049).clipAngle(60)},t.geoGnomonicRaw=Ud,t.geoGraticule=Kl,t.geoGraticule10=function(){return Kl()()},t.geoIdentity=function(){var t,n,e,r,i,o,a,u=1,c=0,f=0,s=1,l=1,h=0,d=null,p=1,g=1,y=id({point:function(t,n){var e=b([t,n]);this.stream.point(e[0],e[1])}}),v=eh;function _(){return p=u*s,g=u*l,o=a=null,b}function b(e){var r=e[0]*p,i=e[1]*g;if(h){var o=i*t-r*n;r=r*t+i*n,i=o}return[r+c,i+f]}return b.invert=function(e){var r=e[0]-c,i=e[1]-f;if(h){var o=i*t+r*n;r=r*t-i*n,i=o}return[r/p,i/g]},b.stream=function(t){return o&&a===t?o:o=y(v(a=t))},b.postclip=function(t){return arguments.length?(v=t,d=e=r=i=null,_()):v},b.clipExtent=function(t){return arguments.length?(v=null==t?(d=e=r=i=null,eh):zl(d=+t[0][0],e=+t[0][1],r=+t[1][0],i=+t[1][1]),_()):null==d?null:[[d,e],[r,i]]},b.scale=function(t){return arguments.length?(u=+t,_()):u},b.translate=function(t){return arguments.length?(c=+t[0],f=+t[1],_()):[c,f]},b.angle=function(e){return arguments.length?(n=Cf(h=e%360*mf),t=Tf(h),_()):h*bf},b.reflectX=function(t){return arguments.length?(s=t?-1:1,_()):s<0},b.reflectY=function(t){return arguments.length?(l=t?-1:1,_()):l<0},b.fitExtent=function(t,n){return ud(b,t,n)},b.fitSize=function(t,n){return cd(b,t,n)},b.fitWidth=function(t,n){return fd(b,t,n)},b.fitHeight=function(t,n){return sd(b,t,n)},b},t.geoInterpolate=function(t,n){var e=t[0]*mf,r=t[1]*mf,i=n[0]*mf,o=n[1]*mf,a=Tf(r),u=Cf(r),c=Tf(o),f=Cf(o),s=a*Tf(e),l=a*Cf(e),h=c*Tf(i),d=c*Cf(i),p=2*Rf(zf(Ff(o-r)+a*c*Ff(i-e))),g=Cf(p),y=p?function(t){var n=Cf(t*=p)/g,e=Cf(p-t)/g,r=e*s+n*h,i=e*l+n*d,o=e*u+n*f;return[Mf(i,r)*bf,Mf(o,zf(r*r+i*i))*bf]}:function(){return[e*bf,r*bf]};return y.distance=p,y},t.geoLength=ql,t.geoMercator=function(){return Ed(Sd).scale(961/_f)},t.geoMercatorRaw=Sd,t.geoNaturalEarth1=function(){return yd(Id).scale(175.295)},t.geoNaturalEarth1Raw=Id,t.geoOrthographic=function(){return yd(Od).scale(249.5).clipAngle(90+df)},t.geoOrthographicRaw=Od,t.geoPath=function(t,n){let e,r,i=3,o=4.5;function a(t){return t&&("function"==typeof o&&r.pointRadius(+o.apply(this,arguments)),Lf(t,e(r))),r.result()}return a.area=function(t){return Lf(t,e(sh)),sh.result()},a.measure=function(t){return Lf(t,e(Kh)),Kh.result()},a.bounds=function(t){return Lf(t,e(mh)),mh.result()},a.centroid=function(t){return Lf(t,e(Oh)),Oh.result()},a.projection=function(n){return arguments.length?(e=null==n?(t=null,eh):(t=n).stream,a):t},a.context=function(t){return arguments.length?(r=null==t?(n=null,new ed(i)):new Bh(n=t),"function"!=typeof o&&r.pointRadius(o),a):n},a.pointRadius=function(t){return arguments.length?(o="function"==typeof t?t:(r.pointRadius(+t),+t),a):o},a.digits=function(t){if(!arguments.length)return i;if(null==t)i=null;else{const n=Math.floor(t);if(!(n>=0))throw new RangeError(`invalid digits: ${t}`);i=n}return null===n&&(r=new ed(i)),a},a.projection(t).digits(i).context(n)},t.geoProjection=yd,t.geoProjectionMutator=vd,t.geoRotation=ll,t.geoStereographic=function(){return yd(Bd).scale(250).clipAngle(142)},t.geoStereographicRaw=Bd,t.geoStream=Lf,t.geoTransform=function(t){return{stream:id(t)}},t.geoTransverseMercator=function(){var t=Ed(Yd),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)},t.geoTransverseMercatorRaw=Yd,t.gray=function(t,n){return new ur(t,0,0,null==n?1:n)},t.greatest=ot,t.greatestIndex=function(t,e=n){if(1===e.length)return tt(t,e);let r,i=-1,o=-1;for(const n of t)++o,(i<0?0===e(n,n):e(n,r)>0)&&(r=n,i=o);return i},t.group=C,t.groupSort=function(t,e,r){return(2!==e.length?U($(t,e,r),(([t,e],[r,i])=>n(e,i)||n(t,r))):U(C(t,r),(([t,r],[i,o])=>e(r,o)||n(t,i)))).map((([t])=>t))},t.groups=P,t.hcl=dr,t.hierarchy=Gd,t.histogram=Q,t.hsl=He,t.html=Ec,t.image=function(t,n){return new Promise((function(e,r){var i=new Image;for(var o in n)i[o]=n[o];i.onerror=r,i.onload=function(){e(i)},i.src=t}))},t.index=function(t,...n){return F(t,k,R,n)},t.indexes=function(t,...n){return F(t,Array.from,R,n)},t.interpolate=Gr,t.interpolateArray=function(t,n){return(Ir(n)?Ur:Or)(t,n)},t.interpolateBasis=Er,t.interpolateBasisClosed=Nr,t.interpolateBlues=Gb,t.interpolateBrBG=ob,t.interpolateBuGn=Mb,t.interpolateBuPu=Ab,t.interpolateCividis=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-2710.57*t)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-67.37*t)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-2475.67*t)))))))+")"},t.interpolateCool=am,t.interpolateCubehelix=li,t.interpolateCubehelixDefault=im,t.interpolateCubehelixLong=hi,t.interpolateDate=Br,t.interpolateDiscrete=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},t.interpolateGnBu=Eb,t.interpolateGreens=Wb,t.interpolateGreys=Kb,t.interpolateHcl=ci,t.interpolateHclLong=fi,t.interpolateHsl=oi,t.interpolateHslLong=ai,t.interpolateHue=function(t,n){var e=Pr(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},t.interpolateInferno=pm,t.interpolateLab=function(t,n){var e=$r((t=ar(t)).l,(n=ar(n)).l),r=$r(t.a,n.a),i=$r(t.b,n.b),o=$r(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}},t.interpolateMagma=dm,t.interpolateNumber=Yr,t.interpolateNumberArray=Ur,t.interpolateObject=Lr,t.interpolateOrRd=kb,t.interpolateOranges=rm,t.interpolatePRGn=ub,t.interpolatePiYG=fb,t.interpolatePlasma=gm,t.interpolatePuBu=$b,t.interpolatePuBuGn=Pb,t.interpolatePuOr=lb,t.interpolatePuRd=Rb,t.interpolatePurples=Jb,t.interpolateRainbow=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return um.h=360*t-100,um.s=1.5-1.5*n,um.l=.8-.9*n,um+""},t.interpolateRdBu=db,t.interpolateRdGy=gb,t.interpolateRdPu=qb,t.interpolateRdYlBu=vb,t.interpolateRdYlGn=bb,t.interpolateReds=nm,t.interpolateRgb=Dr,t.interpolateRgbBasis=Fr,t.interpolateRgbBasisClosed=qr,t.interpolateRound=Vr,t.interpolateSinebow=function(t){var n;return t=(.5-t)*Math.PI,cm.r=255*(n=Math.sin(t))*n,cm.g=255*(n=Math.sin(t+fm))*n,cm.b=255*(n=Math.sin(t+sm))*n,cm+""},t.interpolateSpectral=xb,t.interpolateString=Xr,t.interpolateTransformCss=ti,t.interpolateTransformSvg=ni,t.interpolateTurbo=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-14825.05*t)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+707.56*t)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-6838.66*t)))))))+")"},t.interpolateViridis=hm,t.interpolateWarm=om,t.interpolateYlGn=Bb,t.interpolateYlGnBu=Ib,t.interpolateYlOrBr=Lb,t.interpolateYlOrRd=Hb,t.interpolateZoom=ri,t.interrupt=Gi,t.intersection=function(t,...n){t=new InternSet(t),n=n.map(vt);t:for(const e of t)for(const r of n)if(!r.has(e)){t.delete(e);continue t}return t},t.interval=function(t,n,e){var r=new Ei,i=n;return null==n?(r.restart(t,n,e),r):(r._restart=r.restart,r.restart=function(t,n,e){n=+n,e=null==e?Ai():+e,r._restart((function o(a){a+=i,r._restart(o,i+=n,e),t(a)}),n,e)},r.restart(t,n,e),r)},t.isoFormat=D_,t.isoParse=F_,t.json=function(t,n){return fetch(t,n).then(Tc)},t.lab=ar,t.lch=function(t,n,e,r){return 1===arguments.length?hr(t):new pr(e,n,t,null==r?1:r)},t.least=function(t,e=n){let r,i=!1;if(1===e.length){let o;for(const a of t){const t=e(a);(i?n(t,o)<0:0===n(t,t))&&(r=a,o=t,i=!0)}}else for(const n of t)(i?e(n,r)<0:0===e(n,n))&&(r=n,i=!0);return r},t.leastIndex=ht,t.line=Ym,t.lineRadial=Zm,t.link=ax,t.linkHorizontal=function(){return ax(nx)},t.linkRadial=function(){const t=ax(rx);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t},t.linkVertical=function(){return ax(ex)},t.local=Qn,t.map=function(t,n){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");if("function"!=typeof n)throw new TypeError("mapper is not a function");return Array.from(t,((e,r)=>n(e,r,t)))},t.matcher=Vt,t.max=J,t.maxIndex=tt,t.mean=function(t,n){let e=0,r=0;if(void 0===n)for(let n of t)null!=n&&(n=+n)>=n&&(++e,r+=n);else{let i=-1;for(let o of t)null!=(o=n(o,++i,t))&&(o=+o)>=o&&(++e,r+=o)}if(e)return r/e},t.median=function(t,n){return at(t,.5,n)},t.medianIndex=function(t,n){return ct(t,.5,n)},t.merge=ft,t.min=nt,t.minIndex=et,t.mode=function(t,n){const e=new InternMap;if(void 0===n)for(let n of t)null!=n&&n>=n&&e.set(n,(e.get(n)||0)+1);else{let r=-1;for(let i of t)null!=(i=n(i,++r,t))&&i>=i&&e.set(i,(e.get(i)||0)+1)}let r,i=0;for(const[t,n]of e)n>i&&(i=n,r=t);return r},t.namespace=It,t.namespaces=Ut,t.nice=Z,t.now=Ai,t.pack=function(){var t=null,n=1,e=1,r=np;function i(i){const o=ap();return i.x=n/2,i.y=e/2,t?i.eachBefore(xp(t)).eachAfter(wp(r,.5,o)).eachBefore(Mp(1)):i.eachBefore(xp(mp)).eachAfter(wp(np,1,o)).eachAfter(wp(r,i.r/Math.min(n,e),o)).eachBefore(Mp(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=Jd(n),i):t},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:ep(+t),i):r},i},t.packEnclose=function(t){return up(t,ap())},t.packSiblings=function(t){return bp(t,ap()),t},t.pairs=function(t,n=st){const e=[];let r,i=!1;for(const o of t)i&&e.push(n(r,o)),r=o,i=!0;return e},t.partition=function(){var t=1,n=1,e=0,r=!1;function i(i){var o=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/o,i.eachBefore(function(t,n){return function(r){r.children&&Ap(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,o=r.y0,a=r.x1-e,u=r.y1-e;a<i&&(i=a=(i+a)/2),u<o&&(o=u=(o+u)/2),r.x0=i,r.y0=o,r.x1=a,r.y1=u}}(n,o)),r&&i.eachBefore(Tp),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},t.path=Ia,t.pathRound=function(t=3){return new Ua(+t)},t.permute=q,t.pie=function(){var t=Hm,n=jm,e=null,r=ym(0),i=ym(Em),o=ym(0);function a(a){var u,c,f,s,l,h=(a=qm(a)).length,d=0,p=new Array(h),g=new Array(h),y=+r.apply(this,arguments),v=Math.min(Em,Math.max(-Em,i.apply(this,arguments)-y)),_=Math.min(Math.abs(v)/h,o.apply(this,arguments)),b=_*(v<0?-1:1);for(u=0;u<h;++u)(l=g[p[u]=u]=+t(a[u],u,a))>0&&(d+=l);for(null!=n?p.sort((function(t,e){return n(g[t],g[e])})):null!=e&&p.sort((function(t,n){return e(a[t],a[n])})),u=0,f=d?(v-h*b)/d:0;u<h;++u,y=s)c=p[u],s=y+((l=g[c])>0?l*f:0)+b,g[c]={data:a[c],index:u,value:l,startAngle:y,endAngle:s,padAngle:_};return g}return a.value=function(n){return arguments.length?(t="function"==typeof n?n:ym(+n),a):t},a.sortValues=function(t){return arguments.length?(n=t,e=null,a):n},a.sort=function(t){return arguments.length?(e=t,n=null,a):e},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:ym(+t),a):r},a.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:ym(+t),a):i},a.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:ym(+t),a):o},a},t.piecewise=di,t.pointRadial=Qm,t.pointer=ne,t.pointers=function(t,n){return t.target&&(t=te(t),void 0===n&&(n=t.currentTarget),t=t.touches||[t]),Array.from(t,(t=>ne(t,n)))},t.polygonArea=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},t.polygonCentroid=function(t){for(var n,e,r=-1,i=t.length,o=0,a=0,u=t[i-1],c=0;++r<i;)n=u,u=t[r],c+=e=n[0]*u[1]-u[0]*n[1],o+=(n[0]+u[0])*e,a+=(n[1]+u[1])*e;return[o/(c*=3),a/c]},t.polygonContains=function(t,n){for(var e,r,i=t.length,o=t[i-1],a=n[0],u=n[1],c=o[0],f=o[1],s=!1,l=0;l<i;++l)e=(o=t[l])[0],(r=o[1])>u!=f>u&&a<(c-e)*(u-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},t.polygonHull=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(Hp),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=Xp(r),a=Xp(i),u=a[0]===o[0],c=a[a.length-1]===o[o.length-1],f=[];for(n=o.length-1;n>=0;--n)f.push(t[r[o[n]][2]]);for(n=+u;n<a.length-c;++n)f.push(t[r[a[n]][2]]);return f},t.polygonLength=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],a=o[0],u=o[1],c=0;++r<i;)n=a,e=u,n-=a=(o=t[r])[0],e-=u=o[1],c+=Math.hypot(n,e);return c},t.precisionFixed=sf,t.precisionPrefix=lf,t.precisionRound=hf,t.quadtree=$c,t.quantile=at,t.quantileIndex=ct,t.quantileSorted=ut,t.quantize=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},t.quickselect=rt,t.radialArea=Km,t.radialLine=Zm,t.randomBates=Jp,t.randomBernoulli=eg,t.randomBeta=og,t.randomBinomial=ag,t.randomCauchy=cg,t.randomExponential=tg,t.randomGamma=ig,t.randomGeometric=rg,t.randomInt=Wp,t.randomIrwinHall=Qp,t.randomLcg=function(t=Math.random()){let n=0|(0<=t&&t<1?t/lg:Math.abs(t));return()=>(n=1664525*n+1013904223|0,lg*(n>>>0))},t.randomLogNormal=Kp,t.randomLogistic=fg,t.randomNormal=Zp,t.randomPareto=ng,t.randomPoisson=sg,t.randomUniform=Vp,t.randomWeibull=ug,t.range=lt,t.rank=function(t,e=n){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");let r=Array.from(t);const i=new Float64Array(r.length);2!==e.length&&(r=r.map(e),e=n);const o=(t,n)=>e(r[t],r[n]);let a,u;return(t=Uint32Array.from(r,((t,n)=>n))).sort(e===n?(t,n)=>O(r[t],r[n]):I(o)),t.forEach(((t,n)=>{const e=o(t,void 0===a?t:a);e>=0?((void 0===a||e>0)&&(a=t,u=n),i[t]=u):i[t]=NaN})),i},t.reduce=function(t,n,e){if("function"!=typeof n)throw new TypeError("reducer is not a function");const r=t[Symbol.iterator]();let i,o,a=-1;if(arguments.length<3){if(({done:i,value:e}=r.next()),i)return;++a}for(;({done:i,value:o}=r.next()),!i;)e=n(e,o,++a,t);return e},t.reverse=function(t){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");return Array.from(t).reverse()},t.rgb=Fe,t.ribbon=function(){return Wa()},t.ribbonArrow=function(){return Wa(Va)},t.rollup=$,t.rollups=D,t.scaleBand=yg,t.scaleDiverging=function t(){var n=Ng(L_()(mg));return n.copy=function(){return B_(n,t())},dg.apply(n,arguments)},t.scaleDivergingLog=function t(){var n=Fg(L_()).domain([.1,1,10]);return n.copy=function(){return B_(n,t()).base(n.base())},dg.apply(n,arguments)},t.scaleDivergingPow=j_,t.scaleDivergingSqrt=function(){return j_.apply(null,arguments).exponent(.5)},t.scaleDivergingSymlog=function t(){var n=Ig(L_());return n.copy=function(){return B_(n,t()).constant(n.constant())},dg.apply(n,arguments)},t.scaleIdentity=function t(n){var e;function r(t){return null==t||isNaN(t=+t)?e:t}return r.invert=r,r.domain=r.range=function(t){return arguments.length?(n=Array.from(t,_g),r):n.slice()},r.unknown=function(t){return arguments.length?(e=t,r):e},r.copy=function(){return t(n).unknown(e)},n=arguments.length?Array.from(n,_g):[0,1],Ng(r)},t.scaleImplicit=pg,t.scaleLinear=function t(){var n=Sg();return n.copy=function(){return Tg(n,t())},hg.apply(n,arguments),Ng(n)},t.scaleLog=function t(){const n=Fg(Ag()).domain([1,10]);return n.copy=()=>Tg(n,t()).base(n.base()),hg.apply(n,arguments),n},t.scaleOrdinal=gg,t.scalePoint=function(){return vg(yg.apply(null,arguments).paddingInner(1))},t.scalePow=jg,t.scaleQuantile=function t(){var e,r=[],i=[],o=[];function a(){var t=0,n=Math.max(1,i.length);for(o=new Array(n-1);++t<n;)o[t-1]=ut(r,t/n);return u}function u(t){return null==t||isNaN(t=+t)?e:i[s(o,t)]}return u.invertExtent=function(t){var n=i.indexOf(t);return n<0?[NaN,NaN]:[n>0?o[n-1]:r[0],n<o.length?o[n]:r[r.length-1]]},u.domain=function(t){if(!arguments.length)return r.slice();r=[];for(let n of t)null==n||isNaN(n=+n)||r.push(n);return r.sort(n),a()},u.range=function(t){return arguments.length?(i=Array.from(t),a()):i.slice()},u.unknown=function(t){return arguments.length?(e=t,u):e},u.quantiles=function(){return o.slice()},u.copy=function(){return t().domain(r).range(i).unknown(e)},hg.apply(u,arguments)},t.scaleQuantize=function t(){var n,e=0,r=1,i=1,o=[.5],a=[0,1];function u(t){return null!=t&&t<=t?a[s(o,t,0,i)]:n}function c(){var t=-1;for(o=new Array(i);++t<i;)o[t]=((t+1)*r-(t-i)*e)/(i+1);return u}return u.domain=function(t){return arguments.length?([e,r]=t,e=+e,r=+r,c()):[e,r]},u.range=function(t){return arguments.length?(i=(a=Array.from(t)).length-1,c()):a.slice()},u.invertExtent=function(t){var n=a.indexOf(t);return n<0?[NaN,NaN]:n<1?[e,o[0]]:n>=i?[o[i-1],r]:[o[n-1],o[n]]},u.unknown=function(t){return arguments.length?(n=t,u):u},u.thresholds=function(){return o.slice()},u.copy=function(){return t().domain([e,r]).range(a).unknown(n)},hg.apply(Ng(u),arguments)},t.scaleRadial=function t(){var n,e=Sg(),r=[0,1],i=!1;function o(t){var r=function(t){return Math.sign(t)*Math.sqrt(Math.abs(t))}(e(t));return isNaN(r)?n:i?Math.round(r):r}return o.invert=function(t){return e.invert(Hg(t))},o.domain=function(t){return arguments.length?(e.domain(t),o):e.domain()},o.range=function(t){return arguments.length?(e.range((r=Array.from(t,_g)).map(Hg)),o):r.slice()},o.rangeRound=function(t){return o.range(t).round(!0)},o.round=function(t){return arguments.length?(i=!!t,o):i},o.clamp=function(t){return arguments.length?(e.clamp(t),o):e.clamp()},o.unknown=function(t){return arguments.length?(n=t,o):n},o.copy=function(){return t(e.domain(),r).round(i).clamp(e.clamp()).unknown(n)},hg.apply(o,arguments),Ng(o)},t.scaleSequential=function t(){var n=Ng(O_()(mg));return n.copy=function(){return B_(n,t())},dg.apply(n,arguments)},t.scaleSequentialLog=function t(){var n=Fg(O_()).domain([1,10]);return n.copy=function(){return B_(n,t()).base(n.base())},dg.apply(n,arguments)},t.scaleSequentialPow=Y_,t.scaleSequentialQuantile=function t(){var e=[],r=mg;function i(t){if(null!=t&&!isNaN(t=+t))return r((s(e,t,1)-1)/(e.length-1))}return i.domain=function(t){if(!arguments.length)return e.slice();e=[];for(let n of t)null==n||isNaN(n=+n)||e.push(n);return e.sort(n),i},i.interpolator=function(t){return arguments.length?(r=t,i):r},i.range=function(){return e.map(((t,n)=>r(n/(e.length-1))))},i.quantiles=function(t){return Array.from({length:t+1},((n,r)=>at(e,r/t)))},i.copy=function(){return t(r).domain(e)},dg.apply(i,arguments)},t.scaleSequentialSqrt=function(){return Y_.apply(null,arguments).exponent(.5)},t.scaleSequentialSymlog=function t(){var n=Ig(O_());return n.copy=function(){return B_(n,t()).constant(n.constant())},dg.apply(n,arguments)},t.scaleSqrt=function(){return jg.apply(null,arguments).exponent(.5)},t.scaleSymlog=function t(){var n=Ig(Ag());return n.copy=function(){return Tg(n,t()).constant(n.constant())},hg.apply(n,arguments)},t.scaleThreshold=function t(){var n,e=[.5],r=[0,1],i=1;function o(t){return null!=t&&t<=t?r[s(e,t,0,i)]:n}return o.domain=function(t){return arguments.length?(e=Array.from(t),i=Math.min(e.length,r.length-1),o):e.slice()},o.range=function(t){return arguments.length?(r=Array.from(t),i=Math.min(e.length,r.length-1),o):r.slice()},o.invertExtent=function(t){var n=r.indexOf(t);return[e[n-1],e[n]]},o.unknown=function(t){return arguments.length?(n=t,o):n},o.copy=function(){return t().domain(e).range(r).unknown(n)},hg.apply(o,arguments)},t.scaleTime=function(){return hg.apply(I_(uv,cv,tv,Zy,xy,py,sy,ay,iy,t.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},t.scaleUtc=function(){return hg.apply(I_(ov,av,ev,Qy,Fy,yy,hy,cy,iy,t.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)},t.scan=function(t,n){const e=ht(t,n);return e<0?void 0:e},t.schemeAccent=G_,t.schemeBlues=Xb,t.schemeBrBG=ib,t.schemeBuGn=wb,t.schemeBuPu=Tb,t.schemeCategory10=X_,t.schemeDark2=V_,t.schemeGnBu=Sb,t.schemeGreens=Vb,t.schemeGreys=Zb,t.schemeObservable10=W_,t.schemeOrRd=Nb,t.schemeOranges=em,t.schemePRGn=ab,t.schemePaired=Z_,t.schemePastel1=K_,t.schemePastel2=Q_,t.schemePiYG=cb,t.schemePuBu=zb,t.schemePuBuGn=Cb,t.schemePuOr=sb,t.schemePuRd=Db,t.schemePurples=Qb,t.schemeRdBu=hb,t.schemeRdGy=pb,t.schemeRdPu=Fb,t.schemeRdYlBu=yb,t.schemeRdYlGn=_b,t.schemeReds=tm,t.schemeSet1=J_,t.schemeSet2=tb,t.schemeSet3=nb,t.schemeSpectral=mb,t.schemeTableau10=eb,t.schemeYlGn=Ob,t.schemeYlGnBu=Ub,t.schemeYlOrBr=Yb,t.schemeYlOrRd=jb,t.select=Zn,t.selectAll=function(t){return"string"==typeof t?new Vn([document.querySelectorAll(t)],[document.documentElement]):new Vn([Ht(t)],Gn)},t.selection=Wn,t.selector=jt,t.selectorAll=Gt,t.shuffle=dt,t.shuffler=pt,t.some=function(t,n){if("function"!=typeof n)throw new TypeError("test is not a function");let e=-1;for(const r of t)if(n(r,++e,t))return!0;return!1},t.sort=U,t.stack=function(){var t=ym([]),n=dw,e=hw,r=pw;function i(i){var o,a,u=Array.from(t.apply(this,arguments),gw),c=u.length,f=-1;for(const t of i)for(o=0,++f;o<c;++o)(u[o][f]=[0,+r(t,u[o].key,f,i)]).data=t;for(o=0,a=qm(n(u));o<c;++o)u[a[o]].index=o;return e(u,a),u}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:ym(Array.from(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:ym(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?dw:"function"==typeof t?t:ym(Array.from(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?hw:t,i):e},i},t.stackOffsetDiverging=function(t,n){if((u=t.length)>0)for(var e,r,i,o,a,u,c=0,f=t[n[0]].length;c<f;++c)for(o=a=0,e=0;e<u;++e)(i=(r=t[n[e]][c])[1]-r[0])>0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=a,r[0]=a+=i):(r[0]=0,r[1]=i)},t.stackOffsetExpand=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,a=t[0].length;o<a;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}hw(t,n)}},t.stackOffsetNone=hw,t.stackOffsetSilhouette=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var a=0,u=0;a<e;++a)u+=t[a][r][1]||0;i[r][1]+=i[r][0]=-u/2}hw(t,n)}},t.stackOffsetWiggle=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,a=1;a<r;++a){for(var u=0,c=0,f=0;u<i;++u){for(var s=t[n[u]],l=s[a][1]||0,h=(l-(s[a-1][1]||0))/2,d=0;d<u;++d){var p=t[n[d]];h+=(p[a][1]||0)-(p[a-1][1]||0)}c+=l,f+=h*l}e[a-1][1]+=e[a-1][0]=o,c&&(o-=f/c)}e[a-1][1]+=e[a-1][0]=o,hw(t,n)}},t.stackOrderAppearance=yw,t.stackOrderAscending=_w,t.stackOrderDescending=function(t){return _w(t).reverse()},t.stackOrderInsideOut=function(t){var n,e,r=t.length,i=t.map(bw),o=yw(t),a=0,u=0,c=[],f=[];for(n=0;n<r;++n)e=o[n],a<u?(a+=i[e],c.push(e)):(u+=i[e],f.push(e));return f.reverse().concat(c)},t.stackOrderNone=dw,t.stackOrderReverse=function(t){return dw(t).reverse()},t.stratify=function(){var t,n=kp,e=Cp;function r(r){var i,o,a,u,c,f,s,l,h=Array.from(r),d=n,p=e,g=new Map;if(null!=t){const n=h.map(((n,e)=>function(t){t=`${t}`;let n=t.length;zp(t,n-1)&&!zp(t,n-2)&&(t=t.slice(0,-1));return"/"===t[0]?t:`/${t}`}(t(n,e,r)))),e=n.map(Pp),i=new Set(n).add("");for(const t of e)i.has(t)||(i.add(t),n.push(t),e.push(Pp(t)),h.push(Np));d=(t,e)=>n[e],p=(t,n)=>e[n]}for(a=0,i=h.length;a<i;++a)o=h[a],f=h[a]=new Qd(o),null!=(s=d(o,a,r))&&(s+="")&&(l=f.id=s,g.set(l,g.has(l)?Ep:f)),null!=(s=p(o,a,r))&&(s+="")&&(f.parent=s);for(a=0;a<i;++a)if(s=(f=h[a]).parent){if(!(c=g.get(s)))throw new Error("missing: "+s);if(c===Ep)throw new Error("ambiguous: "+s);c.children?c.children.push(f):c.children=[f],f.parent=c}else{if(u)throw new Error("multiple roots");u=f}if(!u)throw new Error("no root");if(null!=t){for(;u.data===Np&&1===u.children.length;)u=u.children[0],--i;for(let t=h.length-1;t>=0&&(f=h[t]).data===Np;--t)f.data=null}if(u.parent=Sp,u.eachBefore((function(t){t.depth=t.parent.depth+1,--i})).eachBefore(Kd),u.parent=null,i>0)throw new Error("cycle");return u}return r.id=function(t){return arguments.length?(n=Jd(t),r):n},r.parentId=function(t){return arguments.length?(e=Jd(t),r):e},r.path=function(n){return arguments.length?(t=Jd(n),r):t},r},t.style=_n,t.subset=function(t,n){return _t(n,t)},t.sum=function(t,n){let e=0;if(void 0===n)for(let n of t)(n=+n)&&(e+=n);else{let r=-1;for(let i of t)(i=+n(i,++r,t))&&(e+=i)}return e},t.superset=_t,t.svg=Nc,t.symbol=function(t,n){let e=null,r=km(i);function i(){let i;if(e||(e=i=r()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),i)return e=null,i+""||null}return t="function"==typeof t?t:ym(t||fx),n="function"==typeof n?n:ym(void 0===n?64:+n),i.type=function(n){return arguments.length?(t="function"==typeof n?n:ym(n),i):t},i.size=function(t){return arguments.length?(n="function"==typeof t?t:ym(+t),i):n},i.context=function(t){return arguments.length?(e=null==t?null:t,i):e},i},t.symbolAsterisk=cx,t.symbolCircle=fx,t.symbolCross=sx,t.symbolDiamond=dx,t.symbolDiamond2=px,t.symbolPlus=gx,t.symbolSquare=yx,t.symbolSquare2=vx,t.symbolStar=xx,t.symbolTimes=Px,t.symbolTriangle=Mx,t.symbolTriangle2=Ax,t.symbolWye=Cx,t.symbolX=Px,t.symbols=zx,t.symbolsFill=zx,t.symbolsStroke=$x,t.text=mc,t.thresholdFreedmanDiaconis=function(t,n,e){const r=v(t),i=at(t,.75)-at(t,.25);return r&&i?Math.ceil((e-n)/(2*i*Math.pow(r,-1/3))):1},t.thresholdScott=function(t,n,e){const r=v(t),i=w(t);return r&&i?Math.ceil((e-n)*Math.cbrt(r)/(3.49*i)):1},t.thresholdSturges=K,t.tickFormat=Eg,t.tickIncrement=V,t.tickStep=W,t.ticks=G,t.timeDay=py,t.timeDays=gy,t.timeFormatDefaultLocale=P_,t.timeFormatLocale=hv,t.timeFriday=Sy,t.timeFridays=$y,t.timeHour=sy,t.timeHours=ly,t.timeInterval=Vg,t.timeMillisecond=Wg,t.timeMilliseconds=Zg,t.timeMinute=ay,t.timeMinutes=uy,t.timeMonday=wy,t.timeMondays=ky,t.timeMonth=Zy,t.timeMonths=Ky,t.timeSaturday=Ey,t.timeSaturdays=Dy,t.timeSecond=iy,t.timeSeconds=oy,t.timeSunday=xy,t.timeSundays=Ny,t.timeThursday=Ay,t.timeThursdays=zy,t.timeTickInterval=cv,t.timeTicks=uv,t.timeTuesday=My,t.timeTuesdays=Cy,t.timeWednesday=Ty,t.timeWednesdays=Py,t.timeWeek=xy,t.timeWeeks=Ny,t.timeYear=tv,t.timeYears=nv,t.timeout=$i,t.timer=Ni,t.timerFlush=ki,t.transition=go,t.transpose=gt,t.tree=function(){var t=$p,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,o,a=new Up(t,0),u=[a];n=u.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)u.push(e=n.children[i]=new Up(r[i],i)),e.parent=n;return(a.parent=new Up(null,0)).children=[a],a}(i);if(c.eachAfter(o),c.parent.m=-c.z,c.eachBefore(a),r)i.eachBefore(u);else{var f=i,s=i,l=i;i.eachBefore((function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)}));var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),g=e/(l.depth||1);i.eachBefore((function(t){t.x=(t.x+d)*p,t.y=t.depth*g}))}return i}function o(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)(n=i[o]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,a=n,u=e,c=o.parent.children[0],f=o.m,s=a.m,l=u.m,h=c.m;u=Rp(u),o=Dp(o),u&&o;)c=Dp(c),(a=Rp(a)).a=n,(i=u.z+l-o.z-f+t(u._,o._))>0&&(Fp(qp(u,n,r),n,i),f+=i,s+=i),l+=u.m,f+=o.m,h+=c.m,s+=a.m;u&&!Rp(a)&&(a.t=u,a.m+=l-s),o&&!Dp(c)&&(c.t=o,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function a(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function u(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},t.treemap=function(){var t=Yp,n=!1,e=1,r=1,i=[0],o=np,a=np,u=np,c=np,f=np;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(Tp),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=o(n)/2,r+=f(n)-e,s+=a(n)-e,(l-=u(n)-e)<r&&(r=l=(r+l)/2),(h-=c(n)-e)<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=tp(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(o="function"==typeof t?t:ep(+t),s):o},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(a="function"==typeof t?t:ep(+t),s):a},s.paddingRight=function(t){return arguments.length?(u="function"==typeof t?t:ep(+t),s):u},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:ep(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:ep(+t),s):f},s},t.treemapBinary=function(t,n,e,r,i){var o,a,u=t.children,c=u.length,f=new Array(c+1);for(f[0]=a=o=0;o<c;++o)f[o+1]=a+=u[o].value;!function t(n,e,r,i,o,a,c){if(n>=e-1){var s=u[n];return s.x0=i,s.y0=o,s.x1=a,void(s.y1=c)}var l=f[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var g=d+p>>>1;f[g]<h?d=g+1:p=g}h-f[d-1]<f[d]-h&&n+1<d&&--d;var y=f[d]-l,v=r-y;if(a-i>c-o){var _=r?(i*v+a*y)/r:a;t(n,d,y,i,o,_,c),t(d,e,v,_,o,a,c)}else{var b=r?(o*v+c*y)/r:c;t(n,d,y,i,o,a,b),t(d,e,v,i,b,a,c)}}(0,c,t.value,n,e,r,i)},t.treemapDice=Ap,t.treemapResquarify=Lp,t.treemapSlice=Ip,t.treemapSliceDice=function(t,n,e,r,i){(1&t.depth?Ip:Ap)(t,n,e,r,i)},t.treemapSquarify=Yp,t.tsv=Mc,t.tsvFormat=lc,t.tsvFormatBody=hc,t.tsvFormatRow=pc,t.tsvFormatRows=dc,t.tsvFormatValue=gc,t.tsvParse=fc,t.tsvParseRows=sc,t.union=function(...t){const n=new InternSet;for(const e of t)for(const t of e)n.add(t);return n},t.unixDay=_y,t.unixDays=by,t.utcDay=yy,t.utcDays=vy,t.utcFriday=By,t.utcFridays=Vy,t.utcHour=hy,t.utcHours=dy,t.utcMillisecond=Wg,t.utcMilliseconds=Zg,t.utcMinute=cy,t.utcMinutes=fy,t.utcMonday=qy,t.utcMondays=jy,t.utcMonth=Qy,t.utcMonths=Jy,t.utcSaturday=Yy,t.utcSaturdays=Wy,t.utcSecond=iy,t.utcSeconds=oy,t.utcSunday=Fy,t.utcSundays=Ly,t.utcThursday=Oy,t.utcThursdays=Gy,t.utcTickInterval=av,t.utcTicks=ov,t.utcTuesday=Uy,t.utcTuesdays=Hy,t.utcWednesday=Iy,t.utcWednesdays=Xy,t.utcWeek=Fy,t.utcWeeks=Ly,t.utcYear=ev,t.utcYears=rv,t.variance=x,t.version="7.9.0",t.window=pn,t.xml=Sc,t.zip=function(){return gt(arguments)},t.zoom=function(){var t,n,e,r=Ew,i=Nw,o=zw,a=Cw,u=Pw,c=[0,1/0],f=[[-1/0,-1/0],[1/0,1/0]],s=250,l=ri,h=$t("start","zoom","end"),d=500,p=150,g=0,y=10;function v(t){t.property("__zoom",kw).on("wheel.zoom",T,{passive:!1}).on("mousedown.zoom",A).on("dblclick.zoom",S).filter(u).on("touchstart.zoom",E).on("touchmove.zoom",N).on("touchend.zoom touchcancel.zoom",k).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function _(t,n){return(n=Math.max(c[0],Math.min(c[1],n)))===t.k?t:new ww(n,t.x,t.y)}function b(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new ww(t.k,r,i)}function m(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function x(t,n,e,r){t.on("start.zoom",(function(){w(this,arguments).event(r).start()})).on("interrupt.zoom end.zoom",(function(){w(this,arguments).event(r).end()})).tween("zoom",(function(){var t=this,o=arguments,a=w(t,o).event(r),u=i.apply(t,o),c=null==e?m(u):"function"==typeof e?e.apply(t,o):e,f=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),s=t.__zoom,h="function"==typeof n?n.apply(t,o):n,d=l(s.invert(c).concat(f/s.k),h.invert(c).concat(f/h.k));return function(t){if(1===t)t=h;else{var n=d(t),e=f/n[2];t=new ww(e,c[0]-n[0]*e,c[1]-n[1]*e)}a.zoom(null,t)}}))}function w(t,n,e){return!e&&t.__zooming||new M(t,n)}function M(t,n){this.that=t,this.args=n,this.active=0,this.sourceEvent=null,this.extent=i.apply(t,n),this.taps=0}function T(t,...n){if(r.apply(this,arguments)){var e=w(this,n).event(t),i=this.__zoom,u=Math.max(c[0],Math.min(c[1],i.k*Math.pow(2,a.apply(this,arguments)))),s=ne(t);if(e.wheel)e.mouse[0][0]===s[0]&&e.mouse[0][1]===s[1]||(e.mouse[1]=i.invert(e.mouse[0]=s)),clearTimeout(e.wheel);else{if(i.k===u)return;e.mouse=[s,i.invert(s)],Gi(this),e.start()}Sw(t),e.wheel=setTimeout((function(){e.wheel=null,e.end()}),p),e.zoom("mouse",o(b(_(i,u),e.mouse[0],e.mouse[1]),e.extent,f))}}function A(t,...n){if(!e&&r.apply(this,arguments)){var i=t.currentTarget,a=w(this,n,!0).event(t),u=Zn(t.view).on("mousemove.zoom",(function(t){if(Sw(t),!a.moved){var n=t.clientX-s,e=t.clientY-l;a.moved=n*n+e*e>g}a.event(t).zoom("mouse",o(b(a.that.__zoom,a.mouse[0]=ne(t,i),a.mouse[1]),a.extent,f))}),!0).on("mouseup.zoom",(function(t){u.on("mousemove.zoom mouseup.zoom",null),ue(t.view,a.moved),Sw(t),a.event(t).end()}),!0),c=ne(t,i),s=t.clientX,l=t.clientY;ae(t.view),Aw(t),a.mouse=[c,this.__zoom.invert(c)],Gi(this),a.start()}}function S(t,...n){if(r.apply(this,arguments)){var e=this.__zoom,a=ne(t.changedTouches?t.changedTouches[0]:t,this),u=e.invert(a),c=e.k*(t.shiftKey?.5:2),l=o(b(_(e,c),a,u),i.apply(this,n),f);Sw(t),s>0?Zn(this).transition().duration(s).call(x,l,a,t):Zn(this).call(v.transform,l,a,t)}}function E(e,...i){if(r.apply(this,arguments)){var o,a,u,c,f=e.touches,s=f.length,l=w(this,i,e.changedTouches.length===s).event(e);for(Aw(e),a=0;a<s;++a)c=[c=ne(u=f[a],this),this.__zoom.invert(c),u.identifier],l.touch0?l.touch1||l.touch0[2]===c[2]||(l.touch1=c,l.taps=0):(l.touch0=c,o=!0,l.taps=1+!!t);t&&(t=clearTimeout(t)),o&&(l.taps<2&&(n=c[0],t=setTimeout((function(){t=null}),d)),Gi(this),l.start())}}function N(t,...n){if(this.__zooming){var e,r,i,a,u=w(this,n).event(t),c=t.changedTouches,s=c.length;for(Sw(t),e=0;e<s;++e)i=ne(r=c[e],this),u.touch0&&u.touch0[2]===r.identifier?u.touch0[0]=i:u.touch1&&u.touch1[2]===r.identifier&&(u.touch1[0]=i);if(r=u.that.__zoom,u.touch1){var l=u.touch0[0],h=u.touch0[1],d=u.touch1[0],p=u.touch1[1],g=(g=d[0]-l[0])*g+(g=d[1]-l[1])*g,y=(y=p[0]-h[0])*y+(y=p[1]-h[1])*y;r=_(r,Math.sqrt(g/y)),i=[(l[0]+d[0])/2,(l[1]+d[1])/2],a=[(h[0]+p[0])/2,(h[1]+p[1])/2]}else{if(!u.touch0)return;i=u.touch0[0],a=u.touch0[1]}u.zoom("touch",o(b(r,i,a),u.extent,f))}}function k(t,...r){if(this.__zooming){var i,o,a=w(this,r).event(t),u=t.changedTouches,c=u.length;for(Aw(t),e&&clearTimeout(e),e=setTimeout((function(){e=null}),d),i=0;i<c;++i)o=u[i],a.touch0&&a.touch0[2]===o.identifier?delete a.touch0:a.touch1&&a.touch1[2]===o.identifier&&delete a.touch1;if(a.touch1&&!a.touch0&&(a.touch0=a.touch1,delete a.touch1),a.touch0)a.touch0[1]=this.__zoom.invert(a.touch0[0]);else if(a.end(),2===a.taps&&(o=ne(o,this),Math.hypot(n[0]-o[0],n[1]-o[1])<y)){var f=Zn(this).on("dblclick.zoom");f&&f.apply(this,arguments)}}}return v.transform=function(t,n,e,r){var i=t.selection?t.selection():t;i.property("__zoom",kw),t!==i?x(t,n,e,r):i.interrupt().each((function(){w(this,arguments).event(r).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()}))},v.scaleBy=function(t,n,e,r){v.scaleTo(t,(function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)}),e,r)},v.scaleTo=function(t,n,e,r){v.transform(t,(function(){var t=i.apply(this,arguments),r=this.__zoom,a=null==e?m(t):"function"==typeof e?e.apply(this,arguments):e,u=r.invert(a),c="function"==typeof n?n.apply(this,arguments):n;return o(b(_(r,c),a,u),t,f)}),e,r)},v.translateBy=function(t,n,e,r){v.transform(t,(function(){return o(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),i.apply(this,arguments),f)}),null,r)},v.translateTo=function(t,n,e,r,a){v.transform(t,(function(){var t=i.apply(this,arguments),a=this.__zoom,u=null==r?m(t):"function"==typeof r?r.apply(this,arguments):r;return o(Mw.translate(u[0],u[1]).scale(a.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,f)}),r,a)},M.prototype={event:function(t){return t&&(this.sourceEvent=t),this},start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(t){var n=Zn(this.that).datum();h.call(t,this.that,new xw(t,{sourceEvent:this.sourceEvent,target:v,type:t,transform:this.that.__zoom,dispatch:h}),n)}},v.wheelDelta=function(t){return arguments.length?(a="function"==typeof t?t:mw(+t),v):a},v.filter=function(t){return arguments.length?(r="function"==typeof t?t:mw(!!t),v):r},v.touchable=function(t){return arguments.length?(u="function"==typeof t?t:mw(!!t),v):u},v.extent=function(t){return arguments.length?(i="function"==typeof t?t:mw([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),v):i},v.scaleExtent=function(t){return arguments.length?(c[0]=+t[0],c[1]=+t[1],v):[c[0],c[1]]},v.translateExtent=function(t){return arguments.length?(f[0][0]=+t[0][0],f[1][0]=+t[1][0],f[0][1]=+t[0][1],f[1][1]=+t[1][1],v):[[f[0][0],f[0][1]],[f[1][0],f[1][1]]]},v.constrain=function(t){return arguments.length?(o=t,v):o},v.duration=function(t){return arguments.length?(s=+t,v):s},v.interpolate=function(t){return arguments.length?(l=t,v):l},v.on=function(){var t=h.on.apply(h,arguments);return t===h?v:t},v.clickDistance=function(t){return arguments.length?(g=(t=+t)*t,v):Math.sqrt(g)},v.tapDistance=function(t){return arguments.length?(y=+t,v):y},v},t.zoomIdentity=Mw,t.zoomTransform=Tw}));
", "name": "unpkg_com_d3_min_js"}, "https://unpkg.com/jquery@3.7.1/dist/jquery.min.js": {"encoded_content": "/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(ie,e){"use strict";var oe=[],r=Object.getPrototypeOf,ae=oe.slice,g=oe.flat?function(e){return oe.flat.call(e)}:function(e){return oe.concat.apply([],e)},s=oe.push,se=oe.indexOf,n={},i=n.toString,ue=n.hasOwnProperty,o=ue.toString,a=o.call(Object),le={},v=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},y=function(e){return null!=e&&e===e.window},C=ie.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function m(e,t,n){var r,i,o=(n=n||C).createElement("script");if(o.text=e,t)for(r in u)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[i.call(e)]||"object":typeof e}var t="3.7.1",l=/HTML$/i,ce=function(e,t){return new ce.fn.init(e,t)};function c(e){var t=!!e&&"length"in e&&e.length,n=x(e);return!v(e)&&!y(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}function fe(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}ce.fn=ce.prototype={jquery:t,constructor:ce,length:0,toArray:function(){return ae.call(this)},get:function(e){return null==e?ae.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=ce.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return ce.each(this,e)},map:function(n){return this.pushStack(ce.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(ae.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(ce.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(ce.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:s,sort:oe.sort,splice:oe.splice},ce.extend=ce.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||v(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],"__proto__"!==t&&a!==r&&(l&&r&&(ce.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||ce.isPlainObject(n)?n:{},i=!1,a[t]=ce.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},ce.extend({expando:"jQuery"+(t+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==i.call(e))&&(!(t=r(e))||"function"==typeof(n=ue.call(t,"constructor")&&t.constructor)&&o.call(n)===a)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){m(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(c(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},text:function(e){var t,n="",r=0,i=e.nodeType;if(!i)while(t=e[r++])n+=ce.text(t);return 1===i||11===i?e.textContent:9===i?e.documentElement.textContent:3===i||4===i?e.nodeValue:n},makeArray:function(e,t){var n=t||[];return null!=e&&(c(Object(e))?ce.merge(n,"string"==typeof e?[e]:e):s.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:se.call(t,e,n)},isXMLDoc:function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!l.test(t||n&&n.nodeName||"HTML")},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(c(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:le}),"function"==typeof Symbol&&(ce.fn[Symbol.iterator]=oe[Symbol.iterator]),ce.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var pe=oe.pop,de=oe.sort,he=oe.splice,ge="[\\x20\\t\\r\\n\\f]",ve=new RegExp("^"+ge+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ge+"+$","g");ce.contains=function(e,t){var n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(e.contains?e.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))};var f=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function p(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e}ce.escapeSelector=function(e){return(e+"").replace(f,p)};var ye=C,me=s;!function(){var e,b,w,o,a,T,r,C,d,i,k=me,S=ce.expando,E=0,n=0,s=W(),c=W(),u=W(),h=W(),l=function(e,t){return e===t&&(a=!0),0},f="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",t="(?:\\\\[\\da-fA-F]{1,6}"+ge+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",p="\\["+ge+"*("+t+")(?:"+ge+"*([*^$|!~]?=)"+ge+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+t+"))|)"+ge+"*\\]",g=":("+t+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+p+")*)|.*)\\)|)",v=new RegExp(ge+"+","g"),y=new RegExp("^"+ge+"*,"+ge+"*"),m=new RegExp("^"+ge+"*([>+~]|"+ge+")"+ge+"*"),x=new RegExp(ge+"|>"),j=new RegExp(g),A=new RegExp("^"+t+"$"),D={ID:new RegExp("^#("+t+")"),CLASS:new RegExp("^\\.("+t+")"),TAG:new RegExp("^("+t+"|[*])"),ATTR:new RegExp("^"+p),PSEUDO:new RegExp("^"+g),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ge+"*(even|odd|(([+-]|)(\\d*)n|)"+ge+"*(?:([+-]|)"+ge+"*(\\d+)|))"+ge+"*\\)|)","i"),bool:new RegExp("^(?:"+f+")$","i"),needsContext:new RegExp("^"+ge+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ge+"*((?:-\\d)?\\d*)"+ge+"*\\)|)(?=[^-]|$)","i")},N=/^(?:input|select|textarea|button)$/i,q=/^h\d$/i,L=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,H=/[+~]/,O=new RegExp("\\\\[\\da-fA-F]{1,6}"+ge+"?|\\\\([^\\r\\n\\f])","g"),P=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},M=function(){V()},R=J(function(e){return!0===e.disabled&&fe(e,"fieldset")},{dir:"parentNode",next:"legend"});try{k.apply(oe=ae.call(ye.childNodes),ye.childNodes),oe[ye.childNodes.length].nodeType}catch(e){k={apply:function(e,t){me.apply(e,ae.call(t))},call:function(e){me.apply(e,ae.call(arguments,1))}}}function I(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(V(e),e=e||T,C)){if(11!==p&&(u=L.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return k.call(n,a),n}else if(f&&(a=f.getElementById(i))&&I.contains(e,a)&&a.id===i)return k.call(n,a),n}else{if(u[2])return k.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&e.getElementsByClassName)return k.apply(n,e.getElementsByClassName(i)),n}if(!(h[t+" "]||d&&d.test(t))){if(c=t,f=e,1===p&&(x.test(t)||m.test(t))){(f=H.test(t)&&U(e.parentNode)||e)==e&&le.scope||((s=e.getAttribute("id"))?s=ce.escapeSelector(s):e.setAttribute("id",s=S)),o=(l=Y(t)).length;while(o--)l[o]=(s?"#"+s:":scope")+" "+Q(l[o]);c=l.join(",")}try{return k.apply(n,f.querySelectorAll(c)),n}catch(e){h(t,!0)}finally{s===S&&e.removeAttribute("id")}}}return re(t.replace(ve,"$1"),e,n,r)}function W(){var r=[];return function e(t,n){return r.push(t+" ")>b.cacheLength&&delete e[r.shift()],e[t+" "]=n}}function F(e){return e[S]=!0,e}function $(e){var t=T.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function B(t){return function(e){return fe(e,"input")&&e.type===t}}function _(t){return function(e){return(fe(e,"input")||fe(e,"button"))&&e.type===t}}function z(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&R(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function X(a){return F(function(o){return o=+o,F(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function U(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function V(e){var t,n=e?e.ownerDocument||e:ye;return n!=T&&9===n.nodeType&&n.documentElement&&(r=(T=n).documentElement,C=!ce.isXMLDoc(T),i=r.matches||r.webkitMatchesSelector||r.msMatchesSelector,r.msMatchesSelector&&ye!=T&&(t=T.defaultView)&&t.top!==t&&t.addEventListener("unload",M),le.getById=$(function(e){return r.appendChild(e).id=ce.expando,!T.getElementsByName||!T.getElementsByName(ce.expando).length}),le.disconnectedMatch=$(function(e){return i.call(e,"*")}),le.scope=$(function(){return T.querySelectorAll(":scope")}),le.cssHas=$(function(){try{return T.querySelector(":has(*,:jqfake)"),!1}catch(e){return!0}}),le.getById?(b.filter.ID=function(e){var t=e.replace(O,P);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&C){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(O,P);return function(e){var t="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&C){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),b.find.TAG=function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):t.querySelectorAll(e)},b.find.CLASS=function(e,t){if("undefined"!=typeof t.getElementsByClassName&&C)return t.getElementsByClassName(e)},d=[],$(function(e){var t;r.appendChild(e).innerHTML="<a id='"+S+"' href='' disabled='disabled'></a><select id='"+S+"-\r\\' disabled='disabled'><option selected=''></option></select>",e.querySelectorAll("[selected]").length||d.push("\\["+ge+"*(?:value|"+f+")"),e.querySelectorAll("[id~="+S+"-]").length||d.push("~="),e.querySelectorAll("a#"+S+"+*").length||d.push(".#.+[+~]"),e.querySelectorAll(":checked").length||d.push(":checked"),(t=T.createElement("input")).setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),r.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&d.push(":enabled",":disabled"),(t=T.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||d.push("\\["+ge+"*name"+ge+"*="+ge+"*(?:''|\"\")")}),le.cssHas||d.push(":has"),d=d.length&&new RegExp(d.join("|")),l=function(e,t){if(e===t)return a=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!le.sortDetached&&t.compareDocumentPosition(e)===n?e===T||e.ownerDocument==ye&&I.contains(ye,e)?-1:t===T||t.ownerDocument==ye&&I.contains(ye,t)?1:o?se.call(o,e)-se.call(o,t):0:4&n?-1:1)}),T}for(e in I.matches=function(e,t){return I(e,null,null,t)},I.matchesSelector=function(e,t){if(V(e),C&&!h[t+" "]&&(!d||!d.test(t)))try{var n=i.call(e,t);if(n||le.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){h(t,!0)}return 0<I(t,T,null,[e]).length},I.contains=function(e,t){return(e.ownerDocument||e)!=T&&V(e),ce.contains(e,t)},I.attr=function(e,t){(e.ownerDocument||e)!=T&&V(e);var n=b.attrHandle[t.toLowerCase()],r=n&&ue.call(b.attrHandle,t.toLowerCase())?n(e,t,!C):void 0;return void 0!==r?r:e.getAttribute(t)},I.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ce.uniqueSort=function(e){var t,n=[],r=0,i=0;if(a=!le.sortStable,o=!le.sortStable&&ae.call(e,0),de.call(e,l),a){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)he.call(e,n[r],1)}return o=null,e},ce.fn.uniqueSort=function(){return this.pushStack(ce.uniqueSort(ae.apply(this)))},(b=ce.expr={cacheLength:50,createPseudo:F,match:D,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(O,P),e[3]=(e[3]||e[4]||e[5]||"").replace(O,P),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||I.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&I.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return D.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&j.test(n)&&(t=Y(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(O,P).toLowerCase();return"*"===e?function(){return!0}:function(e){return fe(e,t)}},CLASS:function(e){var t=s[e+" "];return t||(t=new RegExp("(^|"+ge+")"+e+"("+ge+"|$)"))&&s(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=I.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t.replace(v," ")+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(d,e,t,h,g){var v="nth"!==d.slice(0,3),y="last"!==d.slice(-4),m="of-type"===e;return 1===h&&0===g?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u=v!==y?"nextSibling":"previousSibling",l=e.parentNode,c=m&&e.nodeName.toLowerCase(),f=!n&&!m,p=!1;if(l){if(v){while(u){o=e;while(o=o[u])if(m?fe(o,c):1===o.nodeType)return!1;s=u="only"===d&&!s&&"nextSibling"}return!0}if(s=[y?l.firstChild:l.lastChild],y&&f){p=(a=(r=(i=l[S]||(l[S]={}))[d]||[])[0]===E&&r[1])&&r[2],o=a&&l.childNodes[a];while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if(1===o.nodeType&&++p&&o===e){i[d]=[E,a,p];break}}else if(f&&(p=a=(r=(i=e[S]||(e[S]={}))[d]||[])[0]===E&&r[1]),!1===p)while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if((m?fe(o,c):1===o.nodeType)&&++p&&(f&&((i=o[S]||(o[S]={}))[d]=[E,p]),o===e))break;return(p-=g)===h||p%h==0&&0<=p/h}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||I.error("unsupported pseudo: "+e);return a[S]?a(o):1<a.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?F(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=se.call(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:F(function(e){var r=[],i=[],s=ne(e.replace(ve,"$1"));return s[S]?F(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:F(function(t){return function(e){return 0<I(t,e).length}}),contains:F(function(t){return t=t.replace(O,P),function(e){return-1<(e.textContent||ce.text(e)).indexOf(t)}}),lang:F(function(n){return A.test(n||"")||I.error("unsupported lang: "+n),n=n.replace(O,P).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=ie.location&&ie.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===r},focus:function(e){return e===function(){try{return T.activeElement}catch(e){}}()&&T.hasFocus()&&!!(e.type||e.href||~e.tabIndex)},enabled:z(!1),disabled:z(!0),checked:function(e){return fe(e,"input")&&!!e.checked||fe(e,"option")&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return q.test(e.nodeName)},input:function(e){return N.test(e.nodeName)},button:function(e){return fe(e,"input")&&"button"===e.type||fe(e,"button")},text:function(e){var t;return fe(e,"input")&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:X(function(){return[0]}),last:X(function(e,t){return[t-1]}),eq:X(function(e,t,n){return[n<0?n+t:n]}),even:X(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:X(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:X(function(e,t,n){var r;for(r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:X(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=B(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=_(e);function G(){}function Y(e,t){var n,r,i,o,a,s,u,l=c[e+" "];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=y.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=m.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(ve," ")}),a=a.slice(n.length)),b.filter)!(r=D[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?I.error(e):c(e,s).slice(0)}function Q(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function J(a,e,t){var s=e.dir,u=e.next,l=u||s,c=t&&"parentNode"===l,f=n++;return e.first?function(e,t,n){while(e=e[s])if(1===e.nodeType||c)return a(e,t,n);return!1}:function(e,t,n){var r,i,o=[E,f];if(n){while(e=e[s])if((1===e.nodeType||c)&&a(e,t,n))return!0}else while(e=e[s])if(1===e.nodeType||c)if(i=e[S]||(e[S]={}),u&&fe(e,u))e=e[s]||e;else{if((r=i[l])&&r[0]===E&&r[1]===f)return o[2]=r[2];if((i[l]=o)[2]=a(e,t,n))return!0}return!1}}function K(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Z(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function ee(d,h,g,v,y,e){return v&&!v[S]&&(v=ee(v)),y&&!y[S]&&(y=ee(y,e)),F(function(e,t,n,r){var i,o,a,s,u=[],l=[],c=t.length,f=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)I(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),p=!d||!e&&h?f:Z(f,u,d,n,r);if(g?g(p,s=y||(e?d:c||v)?[]:t,n,r):s=p,v){i=Z(s,l),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(s[l[o]]=!(p[l[o]]=a))}if(e){if(y||d){if(y){i=[],o=s.length;while(o--)(a=s[o])&&i.push(p[o]=a);y(null,s=[],i,r)}o=s.length;while(o--)(a=s[o])&&-1<(i=y?se.call(e,a):u[o])&&(e[i]=!(t[i]=a))}}else s=Z(s===t?s.splice(c,s.length):s),y?y(null,t,s,r):k.apply(t,s)})}function te(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[" "],s=o?1:0,u=J(function(e){return e===i},a,!0),l=J(function(e){return-1<se.call(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!=w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[J(K(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return ee(1<s&&K(c),1<s&&Q(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(ve,"$1"),t,s<n&&te(e.slice(s,n)),n<r&&te(e=e.slice(n)),n<r&&Q(e))}c.push(t)}return K(c)}function ne(e,t){var n,v,y,m,x,r,i=[],o=[],a=u[e+" "];if(!a){t||(t=Y(e)),n=t.length;while(n--)(a=te(t[n]))[S]?i.push(a):o.push(a);(a=u(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l="0",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG("*",i),h=E+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==T||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==T||(V(o),n=!C);while(s=v[a++])if(s(o,t||T,n)){k.call(r,o);break}i&&(E=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=pe.call(r));f=Z(f)}k.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&ce.uniqueSort(r)}return i&&(E=h,w=p),c},m?F(r):r))).selector=e}return a}function re(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,c=!r&&Y(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&C&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(O,P),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=D.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(O,P),H.test(o[0].type)&&U(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&Q(o)))return k.apply(n,r),n;break}}}return(l||ne(e,c))(r,t,!C,n,!t||H.test(e)&&U(t.parentNode)||t),n}G.prototype=b.filters=b.pseudos,b.setFilters=new G,le.sortStable=S.split("").sort(l).join("")===S,V(),le.sortDetached=$(function(e){return 1&e.compareDocumentPosition(T.createElement("fieldset"))}),ce.find=I,ce.expr[":"]=ce.expr.pseudos,ce.unique=ce.uniqueSort,I.compile=ne,I.select=re,I.setDocument=V,I.tokenize=Y,I.escape=ce.escapeSelector,I.getText=ce.text,I.isXML=ce.isXMLDoc,I.selectors=ce.expr,I.support=ce.support,I.uniqueSort=ce.uniqueSort}();var d=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&ce(e).is(n))break;r.push(e)}return r},h=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},b=ce.expr.match.needsContext,w=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function T(e,n,r){return v(n)?ce.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?ce.grep(e,function(e){return e===n!==r}):"string"!=typeof n?ce.grep(e,function(e){return-1<se.call(n,e)!==r}):ce.filter(n,e,r)}ce.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?ce.find.matchesSelector(r,e)?[r]:[]:ce.find.matches(e,ce.grep(t,function(e){return 1===e.nodeType}))},ce.fn.extend({find:function(e){var t,n,r=this.length,i=this;if("string"!=typeof e)return this.pushStack(ce(e).filter(function(){for(t=0;t<r;t++)if(ce.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)ce.find(e,i[t],n);return 1<r?ce.uniqueSort(n):n},filter:function(e){return this.pushStack(T(this,e||[],!1))},not:function(e){return this.pushStack(T(this,e||[],!0))},is:function(e){return!!T(this,"string"==typeof e&&b.test(e)?ce(e):e||[],!1).length}});var k,S=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(ce.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||k,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:S.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof ce?t[0]:t,ce.merge(this,ce.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),w.test(r[1])&&ce.isPlainObject(t))for(r in t)v(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=C.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):v(e)?void 0!==n.ready?n.ready(e):e(ce):ce.makeArray(e,this)}).prototype=ce.fn,k=ce(C);var E=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function A(e,t){while((e=e[t])&&1!==e.nodeType);return e}ce.fn.extend({has:function(e){var t=ce(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(ce.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a="string"!=typeof e&&ce(e);if(!b.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&ce.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?ce.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?se.call(ce(e),this[0]):se.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(ce.uniqueSort(ce.merge(this.get(),ce(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ce.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return d(e,"parentNode")},parentsUntil:function(e,t,n){return d(e,"parentNode",n)},next:function(e){return A(e,"nextSibling")},prev:function(e){return A(e,"previousSibling")},nextAll:function(e){return d(e,"nextSibling")},prevAll:function(e){return d(e,"previousSibling")},nextUntil:function(e,t,n){return d(e,"nextSibling",n)},prevUntil:function(e,t,n){return d(e,"previousSibling",n)},siblings:function(e){return h((e.parentNode||{}).firstChild,e)},children:function(e){return h(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(fe(e,"template")&&(e=e.content||e),ce.merge([],e.childNodes))}},function(r,i){ce.fn[r]=function(e,t){var n=ce.map(this,i,e);return"Until"!==r.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=ce.filter(t,n)),1<this.length&&(j[r]||ce.uniqueSort(n),E.test(r)&&n.reverse()),this.pushStack(n)}});var D=/[^\x20\t\r\n\f]+/g;function N(e){return e}function q(e){throw e}function L(e,t,n,r){var i;try{e&&v(i=e.promise)?i.call(e).done(t).fail(n):e&&v(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}ce.Callbacks=function(r){var e,n;r="string"==typeof r?(e=r,n={},ce.each(e.match(D)||[],function(e,t){n[t]=!0}),n):ce.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:"")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){ce.each(e,function(e,t){v(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&"string"!==x(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return ce.each(arguments,function(e,t){var n;while(-1<(n=ce.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<ce.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t="",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},ce.extend({Deferred:function(e){var o=[["notify","progress",ce.Callbacks("memory"),ce.Callbacks("memory"),2],["resolve","done",ce.Callbacks("once memory"),ce.Callbacks("once memory"),0,"resolved"],["reject","fail",ce.Callbacks("once memory"),ce.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},"catch":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return ce.Deferred(function(r){ce.each(o,function(e,t){var n=v(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&v(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,v(t)?s?t.call(e,l(u,o,N,s),l(u,o,q,s)):(u++,t.call(e,l(u,o,N,s),l(u,o,q,s),l(u,o,N,o.notifyWith))):(a!==N&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){ce.Deferred.exceptionHook&&ce.Deferred.exceptionHook(e,t.error),u<=i+1&&(a!==q&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(ce.Deferred.getErrorHook?t.error=ce.Deferred.getErrorHook():ce.Deferred.getStackHook&&(t.error=ce.Deferred.getStackHook()),ie.setTimeout(t))}}return ce.Deferred(function(e){o[0][3].add(l(0,e,v(r)?r:N,e.notifyWith)),o[1][3].add(l(0,e,v(t)?t:N)),o[2][3].add(l(0,e,v(n)?n:q))}).promise()},promise:function(e){return null!=e?ce.extend(e,a):a}},s={};return ce.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=ae.call(arguments),o=ce.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?ae.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(L(e,o.done(a(t)).resolve,o.reject,!n),"pending"===o.state()||v(i[t]&&i[t].then)))return o.then();while(t--)L(i[t],a(t),o.reject);return o.promise()}});var H=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;ce.Deferred.exceptionHook=function(e,t){ie.console&&ie.console.warn&&e&&H.test(e.name)&&ie.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},ce.readyException=function(e){ie.setTimeout(function(){throw e})};var O=ce.Deferred();function P(){C.removeEventListener("DOMContentLoaded",P),ie.removeEventListener("load",P),ce.ready()}ce.fn.ready=function(e){return O.then(e)["catch"](function(e){ce.readyException(e)}),this},ce.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--ce.readyWait:ce.isReady)||(ce.isReady=!0)!==e&&0<--ce.readyWait||O.resolveWith(C,[ce])}}),ce.ready.then=O.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?ie.setTimeout(ce.ready):(C.addEventListener("DOMContentLoaded",P),ie.addEventListener("load",P));var M=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===x(n))for(s in i=!0,n)M(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,v(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(ce(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},R=/^-ms-/,I=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function F(e){return e.replace(R,"ms-").replace(I,W)}var $=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function B(){this.expando=ce.expando+B.uid++}B.uid=1,B.prototype={cache:function(e){var t=e[this.expando];return t||(t={},$(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[F(t)]=n;else for(r in t)i[F(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][F(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(F):(t=F(t))in r?[t]:t.match(D)||[]).length;while(n--)delete r[t[n]]}(void 0===t||ce.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!ce.isEmptyObject(t)}};var _=new B,z=new B,X=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,U=/[A-Z]/g;function V(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(U,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:X.test(i)?JSON.parse(i):i)}catch(e){}z.set(e,t,n)}else n=void 0;return n}ce.extend({hasData:function(e){return z.hasData(e)||_.hasData(e)},data:function(e,t,n){return z.access(e,t,n)},removeData:function(e,t){z.remove(e,t)},_data:function(e,t,n){return _.access(e,t,n)},_removeData:function(e,t){_.remove(e,t)}}),ce.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=z.get(o),1===o.nodeType&&!_.get(o,"hasDataAttrs"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf("data-")&&(r=F(r.slice(5)),V(o,r,i[r]));_.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof n?this.each(function(){z.set(this,n)}):M(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=z.get(o,n))?t:void 0!==(t=V(o,n))?t:void 0;this.each(function(){z.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){z.remove(this,e)})}}),ce.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=_.get(e,t),n&&(!r||Array.isArray(n)?r=_.access(e,t,ce.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=ce.queue(e,t),r=n.length,i=n.shift(),o=ce._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){ce.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return _.get(e,n)||_.access(e,n,{empty:ce.Callbacks("once memory").add(function(){_.remove(e,[t+"queue",n])})})}}),ce.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?ce.queue(this[0],t):void 0===n?this:this.each(function(){var e=ce.queue(this,t,n);ce._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&ce.dequeue(this,t)})},dequeue:function(e){return this.each(function(){ce.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=ce.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};"string"!=typeof e&&(t=e,e=void 0),e=e||"fx";while(a--)(n=_.get(o[a],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var G=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Y=new RegExp("^(?:([+-])=|)("+G+")([a-z%]*)$","i"),Q=["Top","Right","Bottom","Left"],J=C.documentElement,K=function(e){return ce.contains(e.ownerDocument,e)},Z={composed:!0};J.getRootNode&&(K=function(e){return ce.contains(e.ownerDocument,e)||e.getRootNode(Z)===e.ownerDocument});var ee=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&K(e)&&"none"===ce.css(e,"display")};function te(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return ce.css(e,t,"")},u=s(),l=n&&n[3]||(ce.cssNumber[t]?"":"px"),c=e.nodeType&&(ce.cssNumber[t]||"px"!==l&&+u)&&Y.exec(ce.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)ce.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,ce.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ne={};function re(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?("none"===n&&(l[c]=_.get(r,"display")||null,l[c]||(r.style.display="")),""===r.style.display&&ee(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ne[s])||(o=a.body.appendChild(a.createElement(s)),u=ce.css(o,"display"),o.parentNode.removeChild(o),"none"===u&&(u="block"),ne[s]=u)))):"none"!==n&&(l[c]="none",_.set(r,"display",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}ce.fn.extend({show:function(){return re(this,!0)},hide:function(){return re(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ee(this)?ce(this).show():ce(this).hide()})}});var xe,be,we=/^(?:checkbox|radio)$/i,Te=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,Ce=/^$|^module$|\/(?:java|ecma)script/i;xe=C.createDocumentFragment().appendChild(C.createElement("div")),(be=C.createElement("input")).setAttribute("type","radio"),be.setAttribute("checked","checked"),be.setAttribute("name","t"),xe.appendChild(be),le.checkClone=xe.cloneNode(!0).cloneNode(!0).lastChild.checked,xe.innerHTML="<textarea>x</textarea>",le.noCloneChecked=!!xe.cloneNode(!0).lastChild.defaultValue,xe.innerHTML="<option></option>",le.option=!!xe.lastChild;var ke={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function Se(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&fe(e,t)?ce.merge([e],n):n}function Ee(e,t){for(var n=0,r=e.length;n<r;n++)_.set(e[n],"globalEval",!t||_.get(t[n],"globalEval"))}ke.tbody=ke.tfoot=ke.colgroup=ke.caption=ke.thead,ke.th=ke.td,le.option||(ke.optgroup=ke.option=[1,"<select multiple='multiple'>","</select>"]);var je=/<|&#?\w+;/;function Ae(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if("object"===x(o))ce.merge(p,o.nodeType?[o]:o);else if(je.test(o)){a=a||f.appendChild(t.createElement("div")),s=(Te.exec(o)||["",""])[1].toLowerCase(),u=ke[s]||ke._default,a.innerHTML=u[1]+ce.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;ce.merge(p,a.childNodes),(a=f.firstChild).textContent=""}else p.push(t.createTextNode(o));f.textContent="",d=0;while(o=p[d++])if(r&&-1<ce.inArray(o,r))i&&i.push(o);else if(l=K(o),a=Se(f.appendChild(o),"script"),l&&Ee(a),n){c=0;while(o=a[c++])Ce.test(o.type||"")&&n.push(o)}return f}var De=/^([^.]*)(?:\.(.+)|)/;function Ne(){return!0}function qe(){return!1}function Le(e,t,n,r,i,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)Le(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=qe;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return ce().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=ce.guid++)),e.each(function(){ce.event.add(this,t,i,r,n)})}function He(e,r,t){t?(_.set(e,r,!1),ce.event.add(e,r,{namespace:!1,handler:function(e){var t,n=_.get(this,r);if(1&e.isTrigger&&this[r]){if(n)(ce.event.special[r]||{}).delegateType&&e.stopPropagation();else if(n=ae.call(arguments),_.set(this,r,n),this[r](),t=_.get(this,r),_.set(this,r,!1),n!==t)return e.stopImmediatePropagation(),e.preventDefault(),t}else n&&(_.set(this,r,ce.event.trigger(n[0],n.slice(1),this)),e.stopPropagation(),e.isImmediatePropagationStopped=Ne)}})):void 0===_.get(e,r)&&ce.event.add(e,r,Ne)}ce.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.get(t);if($(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&ce.find.matchesSelector(J,i),n.guid||(n.guid=ce.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return"undefined"!=typeof ce&&ce.event.triggered!==e.type?ce.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(D)||[""]).length;while(l--)d=g=(s=De.exec(e[l])||[])[1],h=(s[2]||"").split(".").sort(),d&&(f=ce.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=ce.event.special[d]||{},c=ce.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&ce.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),ce.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.hasData(e)&&_.get(e);if(v&&(u=v.events)){l=(t=(t||"").match(D)||[""]).length;while(l--)if(d=g=(s=De.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){f=ce.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||ce.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)ce.event.remove(e,d+t[l],n,r,!0);ce.isEmptyObject(u)&&_.remove(e,"handle events")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=ce.event.fix(e),l=(_.get(this,"events")||Object.create(null))[u.type]||[],c=ce.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=ce.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((ce.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!("click"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+" "]&&(a[i]=r.needsContext?-1<ce(i,this).index(l):ce.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(ce.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[ce.expando]?e:new ce.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,"input")&&He(t,"click",!0),!1},trigger:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,"input")&&He(t,"click"),!0},_default:function(e){var t=e.target;return we.test(t.type)&&t.click&&fe(t,"input")&&_.get(t,"click")||fe(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},ce.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},ce.Event=function(e,t){if(!(this instanceof ce.Event))return new ce.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ne:qe,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&ce.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[ce.expando]=!0},ce.Event.prototype={constructor:ce.Event,isDefaultPrevented:qe,isPropagationStopped:qe,isImmediatePropagationStopped:qe,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ne,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ne,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ne,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},ce.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},ce.event.addProp),ce.each({focus:"focusin",blur:"focusout"},function(r,i){function o(e){if(C.documentMode){var t=_.get(this,"handle"),n=ce.event.fix(e);n.type="focusin"===e.type?"focus":"blur",n.isSimulated=!0,t(e),n.target===n.currentTarget&&t(n)}else ce.event.simulate(i,e.target,ce.event.fix(e))}ce.event.special[r]={setup:function(){var e;if(He(this,r,!0),!C.documentMode)return!1;(e=_.get(this,i))||this.addEventListener(i,o),_.set(this,i,(e||0)+1)},trigger:function(){return He(this,r),!0},teardown:function(){var e;if(!C.documentMode)return!1;(e=_.get(this,i)-1)?_.set(this,i,e):(this.removeEventListener(i,o),_.remove(this,i))},_default:function(e){return _.get(e.target,r)},delegateType:i},ce.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i);n||(C.documentMode?this.addEventListener(i,o):e.addEventListener(r,o,!0)),_.set(t,i,(n||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i)-1;n?_.set(t,i,n):(C.documentMode?this.removeEventListener(i,o):e.removeEventListener(r,o,!0),_.remove(t,i))}}}),ce.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){ce.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||ce.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),ce.fn.extend({on:function(e,t,n,r){return Le(this,e,t,n,r)},one:function(e,t,n,r){return Le(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,ce(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=qe),this.each(function(){ce.event.remove(this,e,n,t)})}});var Oe=/<script|<style|<link/i,Pe=/checked\s*(?:[^=]|=\s*.checked.)/i,Me=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function Re(e,t){return fe(e,"table")&&fe(11!==t.nodeType?t:t.firstChild,"tr")&&ce(e).children("tbody")[0]||e}function Ie(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function We(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Fe(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(_.hasData(e)&&(s=_.get(e).events))for(i in _.remove(t,"handle events"),s)for(n=0,r=s[i].length;n<r;n++)ce.event.add(t,i,s[i][n]);z.hasData(e)&&(o=z.access(e),a=ce.extend({},o),z.set(t,a))}}function $e(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=v(d);if(h||1<f&&"string"==typeof d&&!le.checkClone&&Pe.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),$e(t,r,i,o)});if(f&&(t=(e=Ae(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=ce.map(Se(e,"script"),Ie)).length;c<f;c++)u=e,c!==p&&(u=ce.clone(u,!0,!0),s&&ce.merge(a,Se(u,"script"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,ce.map(a,We),c=0;c<s;c++)u=a[c],Ce.test(u.type||"")&&!_.access(u,"globalEval")&&ce.contains(l,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?ce._evalUrl&&!u.noModule&&ce._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")},l):m(u.textContent.replace(Me,""),u,l))}return n}function Be(e,t,n){for(var r,i=t?ce.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||ce.cleanData(Se(r)),r.parentNode&&(n&&K(r)&&Ee(Se(r,"script")),r.parentNode.removeChild(r));return e}ce.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=K(e);if(!(le.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ce.isXMLDoc(e)))for(a=Se(c),r=0,i=(o=Se(e)).length;r<i;r++)s=o[r],u=a[r],void 0,"input"===(l=u.nodeName.toLowerCase())&&we.test(s.type)?u.checked=s.checked:"input"!==l&&"textarea"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||Se(e),a=a||Se(c),r=0,i=o.length;r<i;r++)Fe(o[r],a[r]);else Fe(e,c);return 0<(a=Se(c,"script")).length&&Ee(a,!f&&Se(e,"script")),c},cleanData:function(e){for(var t,n,r,i=ce.event.special,o=0;void 0!==(n=e[o]);o++)if($(n)){if(t=n[_.expando]){if(t.events)for(r in t.events)i[r]?ce.event.remove(n,r):ce.removeEvent(n,r,t.handle);n[_.expando]=void 0}n[z.expando]&&(n[z.expando]=void 0)}}}),ce.fn.extend({detach:function(e){return Be(this,e,!0)},remove:function(e){return Be(this,e)},text:function(e){return M(this,function(e){return void 0===e?ce.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return $e(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Re(this,e).appendChild(e)})},prepend:function(){return $e(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Re(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(ce.cleanData(Se(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return ce.clone(this,e,t)})},html:function(e){return M(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Oe.test(e)&&!ke[(Te.exec(e)||["",""])[1].toLowerCase()]){e=ce.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(ce.cleanData(Se(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return $e(this,arguments,function(e){var t=this.parentNode;ce.inArray(this,n)<0&&(ce.cleanData(Se(this)),t&&t.replaceChild(e,this))},n)}}),ce.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){ce.fn[e]=function(e){for(var t,n=[],r=ce(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),ce(r[o])[a](t),s.apply(n,t.get());return this.pushStack(n)}});var _e=new RegExp("^("+G+")(?!px)[a-z%]+$","i"),ze=/^--/,Xe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=ie),t.getComputedStyle(e)},Ue=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Ve=new RegExp(Q.join("|"),"i");function Ge(e,t,n){var r,i,o,a,s=ze.test(t),u=e.style;return(n=n||Xe(e))&&(a=n.getPropertyValue(t)||n[t],s&&a&&(a=a.replace(ve,"$1")||void 0),""!==a||K(e)||(a=ce.style(e,t)),!le.pixelBoxStyles()&&_e.test(a)&&Ve.test(t)&&(r=u.width,i=u.minWidth,o=u.maxWidth,u.minWidth=u.maxWidth=u.width=a,a=n.width,u.width=r,u.minWidth=i,u.maxWidth=o)),void 0!==a?a+"":a}function Ye(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",J.appendChild(u).appendChild(l);var e=ie.getComputedStyle(l);n="1%"!==e.top,s=12===t(e.marginLeft),l.style.right="60%",o=36===t(e.right),r=36===t(e.width),l.style.position="absolute",i=12===t(l.offsetWidth/3),J.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=C.createElement("div"),l=C.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",le.clearCloneStyle="content-box"===l.style.backgroundClip,ce.extend(le,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=C.createElement("table"),t=C.createElement("tr"),n=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="box-sizing:content-box;border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",J.appendChild(e).appendChild(t).appendChild(n),r=ie.getComputedStyle(t),a=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,J.removeChild(e)),a}}))}();var Qe=["Webkit","Moz","ms"],Je=C.createElement("div").style,Ke={};function Ze(e){var t=ce.cssProps[e]||Ke[e];return t||(e in Je?e:Ke[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Qe.length;while(n--)if((e=Qe[n]+t)in Je)return e}(e)||e)}var et=/^(none|table(?!-c[ea]).+)/,tt={position:"absolute",visibility:"hidden",display:"block"},nt={letterSpacing:"0",fontWeight:"400"};function rt(e,t,n){var r=Y.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function it(e,t,n,r,i,o){var a="width"===t?1:0,s=0,u=0,l=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=ce.css(e,n+Q[a],!0,i)),r?("content"===n&&(u-=ce.css(e,"padding"+Q[a],!0,i)),"margin"!==n&&(u-=ce.css(e,"border"+Q[a]+"Width",!0,i))):(u+=ce.css(e,"padding"+Q[a],!0,i),"padding"!==n?u+=ce.css(e,"border"+Q[a]+"Width",!0,i):s+=ce.css(e,"border"+Q[a]+"Width",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u+l}function ot(e,t,n){var r=Xe(e),i=(!le.boxSizingReliable()||n)&&"border-box"===ce.css(e,"boxSizing",!1,r),o=i,a=Ge(e,t,r),s="offset"+t[0].toUpperCase()+t.slice(1);if(_e.test(a)){if(!n)return a;a="auto"}return(!le.boxSizingReliable()&&i||!le.reliableTrDimensions()&&fe(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===ce.css(e,"display",!1,r))&&e.getClientRects().length&&(i="border-box"===ce.css(e,"boxSizing",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+it(e,t,n||(i?"border":"content"),o,r,a)+"px"}function at(e,t,n,r,i){return new at.prototype.init(e,t,n,r,i)}ce.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Ge(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,aspectRatio:!0,borderImageSlice:!0,columnCount:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,scale:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeMiterlimit:!0,strokeOpacity:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=F(t),u=ze.test(t),l=e.style;if(u||(t=Ze(s)),a=ce.cssHooks[t]||ce.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];"string"===(o=typeof n)&&(i=Y.exec(n))&&i[1]&&(n=te(e,t,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(ce.cssNumber[s]?"":"px")),le.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=F(t);return ze.test(t)||(t=Ze(s)),(a=ce.cssHooks[t]||ce.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Ge(e,t,r)),"normal"===i&&t in nt&&(i=nt[t]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),ce.each(["height","width"],function(e,u){ce.cssHooks[u]={get:function(e,t,n){if(t)return!et.test(ce.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,u,n):Ue(e,tt,function(){return ot(e,u,n)})},set:function(e,t,n){var r,i=Xe(e),o=!le.scrollboxSize()&&"absolute"===i.position,a=(o||n)&&"border-box"===ce.css(e,"boxSizing",!1,i),s=n?it(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-it(e,u,"border",!1,i)-.5)),s&&(r=Y.exec(t))&&"px"!==(r[3]||"px")&&(e.style[u]=t,t=ce.css(e,u)),rt(0,t,s)}}}),ce.cssHooks.marginLeft=Ye(le.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ge(e,"marginLeft"))||e.getBoundingClientRect().left-Ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),ce.each({margin:"",padding:"",border:"Width"},function(i,o){ce.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+Q[t]+o]=r[t]||r[t-2]||r[0];return n}},"margin"!==i&&(ce.cssHooks[i+o].set=rt)}),ce.fn.extend({css:function(e,t){return M(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Xe(e),i=t.length;a<i;a++)o[t[a]]=ce.css(e,t[a],!1,r);return o}return void 0!==n?ce.style(e,t,n):ce.css(e,t)},e,t,1<arguments.length)}}),((ce.Tween=at).prototype={constructor:at,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||ce.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(ce.cssNumber[n]?"":"px")},cur:function(){var e=at.propHooks[this.prop];return e&&e.get?e.get(this):at.propHooks._default.get(this)},run:function(e){var t,n=at.propHooks[this.prop];return this.options.duration?this.pos=t=ce.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):at.propHooks._default.set(this),this}}).init.prototype=at.prototype,(at.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=ce.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){ce.fx.step[e.prop]?ce.fx.step[e.prop](e):1!==e.elem.nodeType||!ce.cssHooks[e.prop]&&null==e.elem.style[Ze(e.prop)]?e.elem[e.prop]=e.now:ce.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=at.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ce.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},ce.fx=at.prototype.init,ce.fx.step={};var st,ut,lt,ct,ft=/^(?:toggle|show|hide)$/,pt=/queueHooks$/;function dt(){ut&&(!1===C.hidden&&ie.requestAnimationFrame?ie.requestAnimationFrame(dt):ie.setTimeout(dt,ce.fx.interval),ce.fx.tick())}function ht(){return ie.setTimeout(function(){st=void 0}),st=Date.now()}function gt(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i["margin"+(n=Q[r])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function vt(e,t,n){for(var r,i=(yt.tweeners[t]||[]).concat(yt.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function yt(o,e,t){var n,a,r=0,i=yt.prefilters.length,s=ce.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=st||ht(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:ce.extend({},e),opts:ce.extend(!0,{specialEasing:{},easing:ce.easing._default},t),originalProperties:e,originalOptions:t,startTime:st||ht(),duration:t.duration,tweens:[],createTween:function(e,t){var n=ce.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=F(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=ce.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=yt.prefilters[r].call(l,o,c,l.opts))return v(n.stop)&&(ce._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return ce.map(c,vt,l),v(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),ce.fx.timer(ce.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}ce.Animation=ce.extend(yt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return te(n.elem,e,Y.exec(t),n),n}]},tweener:function(e,t){v(e)?(t=e,e=["*"]):e=e.match(D);for(var n,r=0,i=e.length;r<i;r++)n=e[r],yt.tweeners[n]=yt.tweeners[n]||[],yt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f="width"in t||"height"in t,p=this,d={},h=e.style,g=e.nodeType&&ee(e),v=_.get(e,"fxshow");for(r in n.queue||(null==(a=ce._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,ce.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[r],ft.test(i)){if(delete t[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||ce.style(e,r)}if((u=!ce.isEmptyObject(t))||!ce.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=_.get(e,"display")),"none"===(c=ce.css(e,"display"))&&(l?c=l:(re([e],!0),l=e.style.display||l,c=ce.css(e,"display"),re([e]))),("inline"===c||"inline-block"===c&&null!=l)&&"none"===ce.css(e,"float")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?"hidden"in v&&(g=v.hidden):v=_.access(e,"fxshow",{display:l}),o&&(v.hidden=!g),g&&re([e],!0),p.done(function(){for(r in g||re([e]),_.remove(e,"fxshow"),d)ce.style(e,r,d[r])})),u=vt(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?yt.prefilters.unshift(e):yt.prefilters.push(e)}}),ce.speed=function(e,t,n){var r=e&&"object"==typeof e?ce.extend({},e):{complete:n||!n&&t||v(e)&&e,duration:e,easing:n&&t||t&&!v(t)&&t};return ce.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in ce.fx.speeds?r.duration=ce.fx.speeds[r.duration]:r.duration=ce.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){v(r.old)&&r.old.call(this),r.queue&&ce.dequeue(this,r.queue)},r},ce.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ee).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=ce.isEmptyObject(t),o=ce.speed(e,n,r),a=function(){var e=yt(this,ce.extend({},t),o);(i||_.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return"string"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=ce.timers,r=_.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&pt.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||ce.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=_.get(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=ce.timers,o=n?n.length:0;for(t.finish=!0,ce.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),ce.each(["toggle","show","hide"],function(e,r){var i=ce.fn[r];ce.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(gt(r,!0),e,t,n)}}),ce.each({slideDown:gt("show"),slideUp:gt("hide"),slideToggle:gt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){ce.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),ce.timers=[],ce.fx.tick=function(){var e,t=0,n=ce.timers;for(st=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||ce.fx.stop(),st=void 0},ce.fx.timer=function(e){ce.timers.push(e),ce.fx.start()},ce.fx.interval=13,ce.fx.start=function(){ut||(ut=!0,dt())},ce.fx.stop=function(){ut=null},ce.fx.speeds={slow:600,fast:200,_default:400},ce.fn.delay=function(r,e){return r=ce.fx&&ce.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=ie.setTimeout(e,r);t.stop=function(){ie.clearTimeout(n)}})},lt=C.createElement("input"),ct=C.createElement("select").appendChild(C.createElement("option")),lt.type="checkbox",le.checkOn=""!==lt.value,le.optSelected=ct.selected,(lt=C.createElement("input")).value="t",lt.type="radio",le.radioValue="t"===lt.value;var mt,xt=ce.expr.attrHandle;ce.fn.extend({attr:function(e,t){return M(this,ce.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){ce.removeAttr(this,e)})}}),ce.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?ce.prop(e,t,n):(1===o&&ce.isXMLDoc(e)||(i=ce.attrHooks[t.toLowerCase()]||(ce.expr.match.bool.test(t)?mt:void 0)),void 0!==n?null===n?void ce.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:null==(r=ce.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!le.radioValue&&"radio"===t&&fe(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(D);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),mt={set:function(e,t,n){return!1===t?ce.removeAttr(e,n):e.setAttribute(n,n),n}},ce.each(ce.expr.match.bool.source.match(/\w+/g),function(e,t){var a=xt[t]||ce.find.attr;xt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=xt[o],xt[o]=r,r=null!=a(e,t,n)?o:null,xt[o]=i),r}});var bt=/^(?:input|select|textarea|button)$/i,wt=/^(?:a|area)$/i;function Tt(e){return(e.match(D)||[]).join(" ")}function Ct(e){return e.getAttribute&&e.getAttribute("class")||""}function kt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(D)||[]}ce.fn.extend({prop:function(e,t){return M(this,ce.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[ce.propFix[e]||e]})}}),ce.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&ce.isXMLDoc(e)||(t=ce.propFix[t]||t,i=ce.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=ce.find.attr(e,"tabindex");return t?parseInt(t,10):bt.test(e.nodeName)||wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),le.optSelected||(ce.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),ce.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ce.propFix[this.toLowerCase()]=this}),ce.fn.extend({addClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).addClass(t.call(this,e,Ct(this)))}):(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&" "+Tt(r)+" "){for(o=0;o<e.length;o++)i=e[o],n.indexOf(" "+i+" ")<0&&(n+=i+" ");a=Tt(n),r!==a&&this.setAttribute("class",a)}}):this},removeClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).removeClass(t.call(this,e,Ct(this)))}):arguments.length?(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&" "+Tt(r)+" "){for(o=0;o<e.length;o++){i=e[o];while(-1<n.indexOf(" "+i+" "))n=n.replace(" "+i+" "," ")}a=Tt(n),r!==a&&this.setAttribute("class",a)}}):this:this.attr("class","")},toggleClass:function(t,n){var e,r,i,o,a=typeof t,s="string"===a||Array.isArray(t);return v(t)?this.each(function(e){ce(this).toggleClass(t.call(this,e,Ct(this),n),n)}):"boolean"==typeof n&&s?n?this.addClass(t):this.removeClass(t):(e=kt(t),this.each(function(){if(s)for(o=ce(this),i=0;i<e.length;i++)r=e[i],o.hasClass(r)?o.removeClass(r):o.addClass(r);else void 0!==t&&"boolean"!==a||((r=Ct(this))&&_.set(this,"__className__",r),this.setAttribute&&this.setAttribute("class",r||!1===t?"":_.get(this,"__className__")||""))}))},hasClass:function(e){var t,n,r=0;t=" "+e+" ";while(n=this[r++])if(1===n.nodeType&&-1<(" "+Tt(Ct(n))+" ").indexOf(t))return!0;return!1}});var St=/\r/g;ce.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=v(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,ce(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=ce.map(t,function(e){return null==e?"":e+""})),(r=ce.valHooks[this.type]||ce.valHooks[this.nodeName.toLowerCase()])&&"set"in r&&void 0!==r.set(this,t,"value")||(this.value=t))})):t?(r=ce.valHooks[t.type]||ce.valHooks[t.nodeName.toLowerCase()])&&"get"in r&&void 0!==(e=r.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(St,""):null==e?"":e:void 0}}),ce.extend({valHooks:{option:{get:function(e){var t=ce.find.attr(e,"value");return null!=t?t:Tt(ce.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!fe(n.parentNode,"optgroup"))){if(t=ce(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=ce.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<ce.inArray(ce.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),ce.each(["radio","checkbox"],function(){ce.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<ce.inArray(ce(e).val(),t)}},le.checkOn||(ce.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Et=ie.location,jt={guid:Date.now()},At=/\?/;ce.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new ie.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||ce.error("Invalid XML: "+(n?ce.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t};var Dt=/^(?:focusinfocus|focusoutblur)$/,Nt=function(e){e.stopPropagation()};ce.extend(ce.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||C],d=ue.call(e,"type")?e.type:e,h=ue.call(e,"namespace")?e.namespace.split("."):[];if(o=f=a=n=n||C,3!==n.nodeType&&8!==n.nodeType&&!Dt.test(d+ce.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,(e=e[ce.expando]?e:new ce.Event(d,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:ce.makeArray(t,[e]),c=ce.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!y(n)){for(s=c.delegateType||d,Dt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||C)&&p.push(a.defaultView||a.parentWindow||ie)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(_.get(o,"events")||Object.create(null))[e.type]&&_.get(o,"handle"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&$(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!$(n)||u&&v(n[d])&&!y(n)&&((a=n[u])&&(n[u]=null),ce.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,Nt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,Nt),ce.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=ce.extend(new ce.Event,n,{type:e,isSimulated:!0});ce.event.trigger(r,null,t)}}),ce.fn.extend({trigger:function(e,t){return this.each(function(){ce.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return ce.event.trigger(e,t,n,!0)}});var qt=/\[\]$/,Lt=/\r?\n/g,Ht=/^(?:submit|button|image|reset|file)$/i,Ot=/^(?:input|select|textarea|keygen)/i;function Pt(n,e,r,i){var t;if(Array.isArray(e))ce.each(e,function(e,t){r||qt.test(n)?i(n,t):Pt(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,r,i)});else if(r||"object"!==x(e))i(n,e);else for(t in e)Pt(n+"["+t+"]",e[t],r,i)}ce.param=function(e,t){var n,r=[],i=function(e,t){var n=v(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!ce.isPlainObject(e))ce.each(e,function(){i(this.name,this.value)});else for(n in e)Pt(n,e[n],t,i);return r.join("&")},ce.fn.extend({serialize:function(){return ce.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ce.prop(this,"elements");return e?ce.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ce(this).is(":disabled")&&Ot.test(this.nodeName)&&!Ht.test(e)&&(this.checked||!we.test(e))}).map(function(e,t){var n=ce(this).val();return null==n?null:Array.isArray(n)?ce.map(n,function(e){return{name:t.name,value:e.replace(Lt,"\r\n")}}):{name:t.name,value:n.replace(Lt,"\r\n")}}).get()}});var Mt=/%20/g,Rt=/#.*$/,It=/([?&])_=[^&]*/,Wt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ft=/^(?:GET|HEAD)$/,$t=/^\/\//,Bt={},_t={},zt="*/".concat("*"),Xt=C.createElement("a");function Ut(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(D)||[];if(v(t))while(n=i[r++])"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Vt(t,i,o,a){var s={},u=t===_t;function l(e){var r;return s[e]=!0,ce.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function Gt(e,t){var n,r,i=ce.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&ce.extend(!0,e,r),e}Xt.href=Et.href,ce.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":zt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":ce.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Gt(Gt(e,ce.ajaxSettings),t):Gt(ce.ajaxSettings,e)},ajaxPrefilter:Ut(Bt),ajaxTransport:Ut(_t),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=ce.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?ce(y):ce.event,x=ce.Deferred(),b=ce.Callbacks("once memory"),w=v.statusCode||{},a={},s={},u="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Wt.exec(p))n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2])}t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Et.href)+"").replace($t,Et.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(D)||[""],null==v.crossDomain){r=C.createElement("a");try{r.href=v.url,r.href=r.href,v.crossDomain=Xt.protocol+"//"+Xt.host!=r.protocol+"//"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=ce.param(v.data,v.traditional)),Vt(Bt,v,t,T),h)return T;for(i in(g=ce.event&&v.global)&&0==ce.active++&&ce.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Ft.test(v.type),f=v.url.replace(Rt,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(Mt,"+")):(o=v.url.slice(f.length),v.data&&(v.processData||"string"==typeof v.data)&&(f+=(At.test(f)?"&":"?")+v.data,delete v.data),!1===v.cache&&(f=f.replace(It,"$1"),o=(At.test(f)?"&":"?")+"_="+jt.guid+++o),v.url=f+o),v.ifModified&&(ce.lastModified[f]&&T.setRequestHeader("If-Modified-Since",ce.lastModified[f]),ce.etag[f]&&T.setRequestHeader("If-None-Match",ce.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+zt+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Vt(_t,v,t,T)){if(T.readyState=1,g&&m.trigger("ajaxSend",[T,v]),h)return T;v.async&&0<v.timeout&&(d=ie.setTimeout(function(){T.abort("timeout")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&ie.clearTimeout(d),c=void 0,p=r||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<ce.inArray("script",v.dataTypes)&&ce.inArray("json",v.dataTypes)<0&&(v.converters["text script"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=l[u+" "+o]||l["* "+o]))for(i in l)if((s=i.split(" "))[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader("Last-Modified"))&&(ce.lastModified[f]=u),(u=T.getResponseHeader("etag"))&&(ce.etag[f]=u)),204===e||"HEAD"===v.type?l="nocontent":304===e?l="notmodified":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+"",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?"ajaxSuccess":"ajaxError",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger("ajaxComplete",[T,v]),--ce.active||ce.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return ce.get(e,t,n,"json")},getScript:function(e,t){return ce.get(e,void 0,t,"script")}}),ce.each(["get","post"],function(e,i){ce[i]=function(e,t,n,r){return v(t)&&(r=r||n,n=t,t=void 0),ce.ajax(ce.extend({url:e,type:i,dataType:r,data:t,success:n},ce.isPlainObject(e)&&e))}}),ce.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),ce._evalUrl=function(e,t,n){return ce.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){ce.globalEval(e,t,n)}})},ce.fn.extend({wrapAll:function(e){var t;return this[0]&&(v(e)&&(e=e.call(this[0])),t=ce(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return v(n)?this.each(function(e){ce(this).wrapInner(n.call(this,e))}):this.each(function(){var e=ce(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=v(t);return this.each(function(e){ce(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){ce(this).replaceWith(this.childNodes)}),this}}),ce.expr.pseudos.hidden=function(e){return!ce.expr.pseudos.visible(e)},ce.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},ce.ajaxSettings.xhr=function(){try{return new ie.XMLHttpRequest}catch(e){}};var Yt={0:200,1223:204},Qt=ce.ajaxSettings.xhr();le.cors=!!Qt&&"withCredentials"in Qt,le.ajax=Qt=!!Qt,ce.ajaxTransport(function(i){var o,a;if(le.cors||Qt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===e?r.abort():"error"===e?"number"!=typeof r.status?t(0,"error"):t(r.status,r.statusText):t(Yt[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o("error"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&ie.setTimeout(function(){o&&a()})},o=o("abort");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),ce.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),ce.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return ce.globalEval(e),e}}}),ce.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),ce.ajaxTransport("script",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=ce("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){r.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(r[0])},abort:function(){i&&i()}}});var Jt,Kt=[],Zt=/(=)\?(?=&|$)|\?\?/;ce.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Kt.pop()||ce.expando+"_"+jt.guid++;return this[e]=!0,e}}),ce.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Zt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Zt.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=v(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Zt,"$1"+r):!1!==e.jsonp&&(e.url+=(At.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||ce.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=ie[r],ie[r]=function(){o=arguments},n.always(function(){void 0===i?ce(ie).removeProp(r):ie[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(r)),o&&v(i)&&i(o[0]),o=i=void 0}),"script"}),le.createHTMLDocument=((Jt=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Jt.childNodes.length),ce.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(le.createHTMLDocument?((r=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(r)):t=C),o=!n&&[],(i=w.exec(e))?[t.createElement(i[1])]:(i=Ae([e],t,o),o&&o.length&&ce(o).remove(),ce.merge([],i.childNodes)));var r,i,o},ce.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(" ");return-1<s&&(r=Tt(e.slice(s)),e=e.slice(0,s)),v(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),0<a.length&&ce.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?ce("<div>").append(ce.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},ce.expr.pseudos.animated=function(t){return ce.grep(ce.timers,function(e){return t===e.elem}).length},ce.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=ce.css(e,"position"),c=ce(e),f={};"static"===l&&(e.style.position="relative"),s=c.offset(),o=ce.css(e,"top"),u=ce.css(e,"left"),("absolute"===l||"fixed"===l)&&-1<(o+u).indexOf("auto")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),v(t)&&(t=t.call(e,n,ce.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):c.css(f)}},ce.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ce.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if("fixed"===ce.css(r,"position"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&"static"===ce.css(e,"position"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=ce(e).offset()).top+=ce.css(e,"borderTopWidth",!0),i.left+=ce.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-ce.css(r,"marginTop",!0),left:t.left-i.left-ce.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&"static"===ce.css(e,"position"))e=e.offsetParent;return e||J})}}),ce.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o="pageYOffset"===i;ce.fn[t]=function(e){return M(this,function(e,t,n){var r;if(y(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),ce.each(["top","left"],function(e,n){ce.cssHooks[n]=Ye(le.pixelPosition,function(e,t){if(t)return t=Ge(e,n),_e.test(t)?ce(e).position()[n]+"px":t})}),ce.each({Height:"height",Width:"width"},function(a,s){ce.each({padding:"inner"+a,content:s,"":"outer"+a},function(r,o){ce.fn[o]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return M(this,function(e,t,n){var r;return y(e)?0===o.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+a],r["scroll"+a],e.body["offset"+a],r["offset"+a],r["client"+a])):void 0===n?ce.css(e,t,i):ce.style(e,t,n,i)},s,n?e:void 0,n)}})}),ce.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){ce.fn[t]=function(e){return this.on(t,e)}}),ce.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.on("mouseenter",e).on("mouseleave",t||e)}}),ce.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){ce.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var en=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;ce.proxy=function(e,t){var n,r,i;if("string"==typeof t&&(n=e[t],t=e,e=n),v(e))return r=ae.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(ae.call(arguments)))}).guid=e.guid=e.guid||ce.guid++,i},ce.holdReady=function(e){e?ce.readyWait++:ce.ready(!0)},ce.isArray=Array.isArray,ce.parseJSON=JSON.parse,ce.nodeName=fe,ce.isFunction=v,ce.isWindow=y,ce.camelCase=F,ce.type=x,ce.now=Date.now,ce.isNumeric=function(e){var t=ce.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},ce.trim=function(e){return null==e?"":(e+"").replace(en,"$1")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return ce});var tn=ie.jQuery,nn=ie.$;return ce.noConflict=function(e){return ie.$===ce&&(ie.$=nn),e&&ie.jQuery===ce&&(ie.jQuery=tn),ce},"undefined"==typeof e&&(ie.jQuery=ie.$=ce),ce});
", "name": "unpkg_com_jquery_min_js"}, "https://unpkg.com/d3-cloud@1.2.7/build/d3.layout.cloud.js": {"encoded_content": "KGZ1bmN0aW9uKGYpe2lmKHR5cGVvZiBleHBvcnRzPT09Im9iamVjdCImJnR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSJmdW5jdGlvbiImJmRlZmluZS5hbWQpe2RlZmluZShbXSxmKX1lbHNle3ZhciBnO2lmKHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIil7Zz13aW5kb3d9ZWxzZSBpZih0eXBlb2YgZ2xvYmFsIT09InVuZGVmaW5lZCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT0idW5kZWZpbmVkIil7Zz1zZWxmfWVsc2V7Zz10aGlzfWc9KGcuZDN8fChnLmQzID0ge30pKTtnPShnLmxheW91dHx8KGcubGF5b3V0ID0ge30pKTtnLmNsb3VkID0gZigpfX0pKGZ1bmN0aW9uKCl7dmFyIGRlZmluZSxtb2R1bGUsZXhwb3J0cztyZXR1cm4gKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitpKyInIik7dGhyb3cgYS5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsKLy8gV29yZCBjbG91ZCBsYXlvdXQgYnkgSmFzb24gRGF2aWVzLCBodHRwczovL3d3dy5qYXNvbmRhdmllcy5jb20vd29yZGNsb3VkLwovLyBBbGdvcml0aG0gZHVlIHRvIEpvbmF0aGFuIEZlaW5iZXJnLCBodHRwczovL3MzLmFtYXpvbmF3cy5jb20vc3RhdGljLm1yZmVpbmJlcmcuY29tL2J2X2NoMDMucGRmCgpjb25zdCBkaXNwYXRjaCA9IHJlcXVpcmUoImQzLWRpc3BhdGNoIikuZGlzcGF0Y2g7Cgpjb25zdCBSQURJQU5TID0gTWF0aC5QSSAvIDE4MDsKCmNvbnN0IFNQSVJBTFMgPSB7CiAgYXJjaGltZWRlYW46IGFyY2hpbWVkZWFuU3BpcmFsLAogIHJlY3Rhbmd1bGFyOiByZWN0YW5ndWxhclNwaXJhbAp9OwoKY29uc3QgY3cgPSAxIDw8IDExID4+IDU7CmNvbnN0IGNoID0gMSA8PCAxMTsKCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7CiAgdmFyIHNpemUgPSBbMjU2LCAyNTZdLAogICAgICB0ZXh0ID0gY2xvdWRUZXh0LAogICAgICBmb250ID0gY2xvdWRGb250LAogICAgICBmb250U2l6ZSA9IGNsb3VkRm9udFNpemUsCiAgICAgIGZvbnRTdHlsZSA9IGNsb3VkRm9udE5vcm1hbCwKICAgICAgZm9udFdlaWdodCA9IGNsb3VkRm9udE5vcm1hbCwKICAgICAgcm90YXRlID0gY2xvdWRSb3RhdGUsCiAgICAgIHBhZGRpbmcgPSBjbG91ZFBhZGRpbmcsCiAgICAgIHNwaXJhbCA9IGFyY2hpbWVkZWFuU3BpcmFsLAogICAgICB3b3JkcyA9IFtdLAogICAgICB0aW1lSW50ZXJ2YWwgPSBJbmZpbml0eSwKICAgICAgZXZlbnQgPSBkaXNwYXRjaCgid29yZCIsICJlbmQiKSwKICAgICAgdGltZXIgPSBudWxsLAogICAgICByYW5kb20gPSBNYXRoLnJhbmRvbSwKICAgICAgY2xvdWQgPSB7fSwKICAgICAgY2FudmFzID0gY2xvdWRDYW52YXM7CgogIGNsb3VkLmNhbnZhcyA9IGZ1bmN0aW9uKF8pIHsKICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNhbnZhcyA9IGZ1bmN0b3IoXyksIGNsb3VkKSA6IGNhbnZhczsKICB9OwoKICBjbG91ZC5zdGFydCA9IGZ1bmN0aW9uKCkgewogICAgdmFyIGNvbnRleHRBbmRSYXRpbyA9IGdldENvbnRleHQoY2FudmFzKCkpLAogICAgICAgIGJvYXJkID0gemVyb0FycmF5KChzaXplWzBdID4+IDUpICogc2l6ZVsxXSksCiAgICAgICAgYm91bmRzID0gbnVsbCwKICAgICAgICBuID0gd29yZHMubGVuZ3RoLAogICAgICAgIGkgPSAtMSwKICAgICAgICB0YWdzID0gW10sCiAgICAgICAgZGF0YSA9IHdvcmRzLm1hcChmdW5jdGlvbihkLCBpKSB7CiAgICAgICAgICBkLnRleHQgPSB0ZXh0LmNhbGwodGhpcywgZCwgaSk7CiAgICAgICAgICBkLmZvbnQgPSBmb250LmNhbGwodGhpcywgZCwgaSk7CiAgICAgICAgICBkLnN0eWxlID0gZm9udFN0eWxlLmNhbGwodGhpcywgZCwgaSk7CiAgICAgICAgICBkLndlaWdodCA9IGZvbnRXZWlnaHQuY2FsbCh0aGlzLCBkLCBpKTsKICAgICAgICAgIGQucm90YXRlID0gcm90YXRlLmNhbGwodGhpcywgZCwgaSk7CiAgICAgICAgICBkLnNpemUgPSB+fmZvbnRTaXplLmNhbGwodGhpcywgZCwgaSk7CiAgICAgICAgICBkLnBhZGRpbmcgPSBwYWRkaW5nLmNhbGwodGhpcywgZCwgaSk7CiAgICAgICAgICByZXR1cm4gZDsKICAgICAgICB9KS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHsgcmV0dXJuIGIuc2l6ZSAtIGEuc2l6ZTsgfSk7CgogICAgaWYgKHRpbWVyKSBjbGVhckludGVydmFsKHRpbWVyKTsKICAgIHRpbWVyID0gc2V0SW50ZXJ2YWwoc3RlcCwgMCk7CiAgICBzdGVwKCk7CgogICAgcmV0dXJuIGNsb3VkOwoKICAgIGZ1bmN0aW9uIHN0ZXAoKSB7CiAgICAgIHZhciBzdGFydCA9IERhdGUubm93KCk7CiAgICAgIHdoaWxlIChEYXRlLm5vdygpIC0gc3RhcnQgPCB0aW1lSW50ZXJ2YWwgJiYgKytpIDwgbiAmJiB0aW1lcikgewogICAgICAgIHZhciBkID0gZGF0YVtpXTsKICAgICAgICBkLnggPSAoc2l6ZVswXSAqIChyYW5kb20oKSArIC41KSkgPj4gMTsKICAgICAgICBkLnkgPSAoc2l6ZVsxXSAqIChyYW5kb20oKSArIC41KSkgPj4gMTsKICAgICAgICBjbG91ZFNwcml0ZShjb250ZXh0QW5kUmF0aW8sIGQsIGRhdGEsIGkpOwogICAgICAgIGlmIChkLmhhc1RleHQgJiYgcGxhY2UoYm9hcmQsIGQsIGJvdW5kcykpIHsKICAgICAgICAgIHRhZ3MucHVzaChkKTsKICAgICAgICAgIGV2ZW50LmNhbGwoIndvcmQiLCBjbG91ZCwgZCk7CiAgICAgICAgICBpZiAoYm91bmRzKSBjbG91ZEJvdW5kcyhib3VuZHMsIGQpOwogICAgICAgICAgZWxzZSBib3VuZHMgPSBbe3g6IGQueCArIGQueDAsIHk6IGQueSArIGQueTB9LCB7eDogZC54ICsgZC54MSwgeTogZC55ICsgZC55MX1dOwogICAgICAgICAgLy8gVGVtcG9yYXJ5IGhhY2sKICAgICAgICAgIGQueCAtPSBzaXplWzBdID4+IDE7CiAgICAgICAgICBkLnkgLT0gc2l6ZVsxXSA+PiAxOwogICAgICAgIH0KICAgICAgfQogICAgICBpZiAoaSA+PSBuKSB7CiAgICAgICAgY2xvdWQuc3RvcCgpOwogICAgICAgIGV2ZW50LmNhbGwoImVuZCIsIGNsb3VkLCB0YWdzLCBib3VuZHMpOwogICAgICB9CiAgICB9CiAgfQoKICBjbG91ZC5zdG9wID0gZnVuY3Rpb24oKSB7CiAgICBpZiAodGltZXIpIHsKICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7CiAgICAgIHRpbWVyID0gbnVsbDsKICAgIH0KICAgIGZvciAoY29uc3QgZCBvZiB3b3JkcykgewogICAgICBkZWxldGUgZC5zcHJpdGU7CiAgICB9CiAgICByZXR1cm4gY2xvdWQ7CiAgfTsKCiAgZnVuY3Rpb24gZ2V0Q29udGV4dChjYW52YXMpIHsKICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCgiMmQiLCB7d2lsbFJlYWRGcmVxdWVudGx5OiB0cnVlfSk7CgogICAgY2FudmFzLndpZHRoID0gY2FudmFzLmhlaWdodCA9IDE7CiAgICBjb25zdCByYXRpbyA9IE1hdGguc3FydChjb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCAxLCAxKS5kYXRhLmxlbmd0aCA+PiAyKTsKICAgIGNhbnZhcy53aWR0aCA9IChjdyA8PCA1KSAvIHJhdGlvOwogICAgY2FudmFzLmhlaWdodCA9IGNoIC8gcmF0aW87CgogICAgY29udGV4dC5maWxsU3R5bGUgPSBjb250ZXh0LnN0cm9rZVN0eWxlID0gInJlZCI7CgogICAgcmV0dXJuIHtjb250ZXh0LCByYXRpb307CiAgfQoKICBmdW5jdGlvbiBwbGFjZShib2FyZCwgdGFnLCBib3VuZHMpIHsKICAgIHZhciBwZXJpbWV0ZXIgPSBbe3g6IDAsIHk6IDB9LCB7eDogc2l6ZVswXSwgeTogc2l6ZVsxXX1dLAogICAgICAgIHN0YXJ0WCA9IHRhZy54LAogICAgICAgIHN0YXJ0WSA9IHRhZy55LAogICAgICAgIG1heERlbHRhID0gTWF0aC5zcXJ0KHNpemVbMF0gKiBzaXplWzBdICsgc2l6ZVsxXSAqIHNpemVbMV0pLAogICAgICAgIHMgPSBzcGlyYWwoc2l6ZSksCiAgICAgICAgZHQgPSByYW5kb20oKSA8IC41ID8gMSA6IC0xLAogICAgICAgIHQgPSAtZHQsCiAgICAgICAgZHhkeSwKICAgICAgICBkeCwKICAgICAgICBkeTsKCiAgICB3aGlsZSAoZHhkeSA9IHModCArPSBkdCkpIHsKICAgICAgZHggPSB+fmR4ZHlbMF07CiAgICAgIGR5ID0gfn5keGR5WzFdOwoKICAgICAgaWYgKE1hdGgubWluKE1hdGguYWJzKGR4KSwgTWF0aC5hYnMoZHkpKSA+PSBtYXhEZWx0YSkgYnJlYWs7CgogICAgICB0YWcueCA9IHN0YXJ0WCArIGR4OwogICAgICB0YWcueSA9IHN0YXJ0WSArIGR5OwoKICAgICAgaWYgKHRhZy54ICsgdGFnLngwIDwgMCB8fCB0YWcueSArIHRhZy55MCA8IDAgfHwKICAgICAgICAgIHRhZy54ICsgdGFnLngxID4gc2l6ZVswXSB8fCB0YWcueSArIHRhZy55MSA+IHNpemVbMV0pIGNvbnRpbnVlOwogICAgICAvLyBUT0RPIG9ubHkgY2hlY2sgZm9yIGNvbGxpc2lvbnMgd2l0aGluIGN1cnJlbnQgYm91bmRzLgogICAgICBpZiAoIWJvdW5kcyB8fCBjb2xsaWRlUmVjdHModGFnLCBib3VuZHMpKSB7CiAgICAgICAgaWYgKCFjbG91ZENvbGxpZGUodGFnLCBib2FyZCwgc2l6ZVswXSkpIHsKICAgICAgICAgIHZhciBzcHJpdGUgPSB0YWcuc3ByaXRlLAogICAgICAgICAgICAgIHcgPSB0YWcud2lkdGggPj4gNSwKICAgICAgICAgICAgICBzdyA9IHNpemVbMF0gPj4gNSwKICAgICAgICAgICAgICBseCA9IHRhZy54IC0gKHcgPDwgNCksCiAgICAgICAgICAgICAgc3ggPSBseCAmIDB4N2YsCiAgICAgICAgICAgICAgbXN4ID0gMzIgLSBzeCwKICAgICAgICAgICAgICBoID0gdGFnLnkxIC0gdGFnLnkwLAogICAgICAgICAgICAgIHggPSAodGFnLnkgKyB0YWcueTApICogc3cgKyAobHggPj4gNSksCiAgICAgICAgICAgICAgbGFzdDsKICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaDsgaisrKSB7CiAgICAgICAgICAgIGxhc3QgPSAwOwogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8PSB3OyBpKyspIHsKICAgICAgICAgICAgICBib2FyZFt4ICsgaV0gfD0gKGxhc3QgPDwgbXN4KSB8IChpIDwgdyA/IChsYXN0ID0gc3ByaXRlW2ogKiB3ICsgaV0pID4+PiBzeCA6IDApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHggKz0gc3c7CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBmYWxzZTsKICB9CgogIGNsb3VkLnRpbWVJbnRlcnZhbCA9IGZ1bmN0aW9uKF8pIHsKICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpbWVJbnRlcnZhbCA9IF8gPT0gbnVsbCA/IEluZmluaXR5IDogXywgY2xvdWQpIDogdGltZUludGVydmFsOwogIH07CgogIGNsb3VkLndvcmRzID0gZnVuY3Rpb24oXykgewogICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAod29yZHMgPSBfLCBjbG91ZCkgOiB3b3JkczsKICB9OwoKICBjbG91ZC5zaXplID0gZnVuY3Rpb24oXykgewogICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2l6ZSA9IFsrX1swXSwgK19bMV1dLCBjbG91ZCkgOiBzaXplOwogIH07CgogIGNsb3VkLmZvbnQgPSBmdW5jdGlvbihfKSB7CiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmb250ID0gZnVuY3RvcihfKSwgY2xvdWQpIDogZm9udDsKICB9OwoKICBjbG91ZC5mb250U3R5bGUgPSBmdW5jdGlvbihfKSB7CiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmb250U3R5bGUgPSBmdW5jdG9yKF8pLCBjbG91ZCkgOiBmb250U3R5bGU7CiAgfTsKCiAgY2xvdWQuZm9udFdlaWdodCA9IGZ1bmN0aW9uKF8pIHsKICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZvbnRXZWlnaHQgPSBmdW5jdG9yKF8pLCBjbG91ZCkgOiBmb250V2VpZ2h0OwogIH07CgogIGNsb3VkLnJvdGF0ZSA9IGZ1bmN0aW9uKF8pIHsKICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdGF0ZSA9IGZ1bmN0b3IoXyksIGNsb3VkKSA6IHJvdGF0ZTsKICB9OwoKICBjbG91ZC50ZXh0ID0gZnVuY3Rpb24oXykgewogICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGV4dCA9IGZ1bmN0b3IoXyksIGNsb3VkKSA6IHRleHQ7CiAgfTsKCiAgY2xvdWQuc3BpcmFsID0gZnVuY3Rpb24oXykgewogICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3BpcmFsID0gU1BJUkFMU1tfXSB8fCBfLCBjbG91ZCkgOiBzcGlyYWw7CiAgfTsKCiAgY2xvdWQuZm9udFNpemUgPSBmdW5jdGlvbihfKSB7CiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmb250U2l6ZSA9IGZ1bmN0b3IoXyksIGNsb3VkKSA6IGZvbnRTaXplOwogIH07CgogIGNsb3VkLnBhZGRpbmcgPSBmdW5jdGlvbihfKSB7CiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nID0gZnVuY3RvcihfKSwgY2xvdWQpIDogcGFkZGluZzsKICB9OwoKICBjbG91ZC5yYW5kb20gPSBmdW5jdGlvbihfKSB7CiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5kb20gPSBfLCBjbG91ZCkgOiByYW5kb207CiAgfTsKCiAgY2xvdWQub24gPSBmdW5jdGlvbigpIHsKICAgIHZhciB2YWx1ZSA9IGV2ZW50Lm9uLmFwcGx5KGV2ZW50LCBhcmd1bWVudHMpOwogICAgcmV0dXJuIHZhbHVlID09PSBldmVudCA/IGNsb3VkIDogdmFsdWU7CiAgfTsKCiAgcmV0dXJuIGNsb3VkOwp9OwoKZnVuY3Rpb24gY2xvdWRUZXh0KGQpIHsKICByZXR1cm4gZC50ZXh0Owp9CgpmdW5jdGlvbiBjbG91ZEZvbnQoKSB7CiAgcmV0dXJuICJzZXJpZiI7Cn0KCmZ1bmN0aW9uIGNsb3VkRm9udE5vcm1hbCgpIHsKICByZXR1cm4gIm5vcm1hbCI7Cn0KCmZ1bmN0aW9uIGNsb3VkRm9udFNpemUoZCkgewogIHJldHVybiBNYXRoLnNxcnQoZC52YWx1ZSk7Cn0KCmZ1bmN0aW9uIGNsb3VkUm90YXRlKCkgewogIHJldHVybiAofn4ocmFuZG9tKCkgKiA2KSAtIDMpICogMzA7Cn0KCmZ1bmN0aW9uIGNsb3VkUGFkZGluZygpIHsKICByZXR1cm4gMTsKfQoKLy8gRmV0Y2hlcyBhIG1vbm9jaHJvbWUgc3ByaXRlIGJpdG1hcCBmb3IgdGhlIHNwZWNpZmllZCB0ZXh0LgovLyBMb2FkIGluIGJhdGNoZXMgZm9yIHNwZWVkLgpmdW5jdGlvbiBjbG91ZFNwcml0ZShjb250ZXh0QW5kUmF0aW8sIGQsIGRhdGEsIGRpKSB7CiAgaWYgKGQuc3ByaXRlKSByZXR1cm47CiAgdmFyIGMgPSBjb250ZXh0QW5kUmF0aW8uY29udGV4dCwKICAgICAgcmF0aW8gPSBjb250ZXh0QW5kUmF0aW8ucmF0aW87CgogIGMuY2xlYXJSZWN0KDAsIDAsIChjdyA8PCA1KSAvIHJhdGlvLCBjaCAvIHJhdGlvKTsKICB2YXIgeCA9IDAsCiAgICAgIHkgPSAwLAogICAgICBtYXhoID0gMCwKICAgICAgbiA9IGRhdGEubGVuZ3RoOwogIC0tZGk7CiAgd2hpbGUgKCsrZGkgPCBuKSB7CiAgICBkID0gZGF0YVtkaV07CiAgICBjLnNhdmUoKTsKICAgIGMuZm9udCA9IGQuc3R5bGUgKyAiICIgKyBkLndlaWdodCArICIgIiArIH5+KChkLnNpemUgKyAxKSAvIHJhdGlvKSArICJweCAiICsgZC5mb250OwogICAgY29uc3QgbWV0cmljcyA9IGMubWVhc3VyZVRleHQoZC50ZXh0KTsKICAgIGNvbnN0IGFuY2hvciA9IC1NYXRoLmZsb29yKG1ldHJpY3Mud2lkdGggLyAyKTsKICAgIGxldCB3ID0gKG1ldHJpY3Mud2lkdGggKyAxKSAqIHJhdGlvOwogICAgbGV0IGggPSBkLnNpemUgPDwgMTsKICAgIGlmIChkLnJvdGF0ZSkgewogICAgICB2YXIgc3IgPSBNYXRoLnNpbihkLnJvdGF0ZSAqIFJBRElBTlMpLAogICAgICAgICAgY3IgPSBNYXRoLmNvcyhkLnJvdGF0ZSAqIFJBRElBTlMpLAogICAgICAgICAgd2NyID0gdyAqIGNyLAogICAgICAgICAgd3NyID0gdyAqIHNyLAogICAgICAgICAgaGNyID0gaCAqIGNyLAogICAgICAgICAgaHNyID0gaCAqIHNyOwogICAgICB3ID0gKE1hdGgubWF4KE1hdGguYWJzKHdjciArIGhzciksIE1hdGguYWJzKHdjciAtIGhzcikpICsgMHgxZikgPj4gNSA8PCA1OwogICAgICBoID0gfn5NYXRoLm1heChNYXRoLmFicyh3c3IgKyBoY3IpLCBNYXRoLmFicyh3c3IgLSBoY3IpKTsKICAgIH0gZWxzZSB7CiAgICAgIHcgPSAodyArIDB4MWYpID4+IDUgPDwgNTsKICAgIH0KICAgIGlmIChoID4gbWF4aCkgbWF4aCA9IGg7CiAgICBpZiAoeCArIHcgPj0gKGN3IDw8IDUpKSB7CiAgICAgIHggPSAwOwogICAgICB5ICs9IG1heGg7CiAgICAgIG1heGggPSAwOwogICAgfQogICAgaWYgKHkgKyBoID49IGNoKSBicmVhazsKICAgIGMudHJhbnNsYXRlKCh4ICsgKHcgPj4gMSkpIC8gcmF0aW8sICh5ICsgKGggPj4gMSkpIC8gcmF0aW8pOwogICAgaWYgKGQucm90YXRlKSBjLnJvdGF0ZShkLnJvdGF0ZSAqIFJBRElBTlMpOwogICAgYy5maWxsVGV4dChkLnRleHQsIGFuY2hvciwgMCk7CiAgICBpZiAoZC5wYWRkaW5nKSBjLmxpbmVXaWR0aCA9IDIgKiBkLnBhZGRpbmcsIGMuc3Ryb2tlVGV4dChkLnRleHQsIGFuY2hvciwgMCk7CiAgICBjLnJlc3RvcmUoKTsKICAgIGQud2lkdGggPSB3OwogICAgZC5oZWlnaHQgPSBoOwogICAgZC54b2ZmID0geDsKICAgIGQueW9mZiA9IHk7CiAgICBkLngxID0gdyA+PiAxOwogICAgZC55MSA9IGggPj4gMTsKICAgIGQueDAgPSAtZC54MTsKICAgIGQueTAgPSAtZC55MTsKICAgIGQuaGFzVGV4dCA9IHRydWU7CiAgICB4ICs9IHc7CiAgfQogIHZhciBwaXhlbHMgPSBjLmdldEltYWdlRGF0YSgwLCAwLCAoY3cgPDwgNSkgLyByYXRpbywgY2ggLyByYXRpbykuZGF0YSwKICAgICAgc3ByaXRlID0gW107CiAgd2hpbGUgKC0tZGkgPj0gMCkgewogICAgZCA9IGRhdGFbZGldOwogICAgaWYgKCFkLmhhc1RleHQpIGNvbnRpbnVlOwogICAgdmFyIHcgPSBkLndpZHRoLAogICAgICAgIHczMiA9IHcgPj4gNSwKICAgICAgICBoID0gZC55MSAtIGQueTA7CiAgICAvLyBaZXJvIHRoZSBidWZmZXIKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaCAqIHczMjsgaSsrKSBzcHJpdGVbaV0gPSAwOwogICAgeCA9IGQueG9mZjsKICAgIGlmICh4ID09IG51bGwpIHJldHVybjsKICAgIHkgPSBkLnlvZmY7CiAgICB2YXIgc2VlbiA9IDAsCiAgICAgICAgc2VlblJvdyA9IC0xOwogICAgZm9yICh2YXIgaiA9IDA7IGogPCBoOyBqKyspIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB3OyBpKyspIHsKICAgICAgICB2YXIgayA9IHczMiAqIGogKyAoaSA+PiA1KSwKICAgICAgICAgICAgbSA9IHBpeGVsc1soKHkgKyBqKSAqIChjdyA8PCA1KSArICh4ICsgaSkpIDw8IDJdID8gMSA8PCAoMzEgLSAoaSAlIDMyKSkgOiAwOwogICAgICAgIHNwcml0ZVtrXSB8PSBtOwogICAgICAgIHNlZW4gfD0gbTsKICAgICAgfQogICAgICBpZiAoc2Vlbikgc2VlblJvdyA9IGo7CiAgICAgIGVsc2UgewogICAgICAgIGQueTArKzsKICAgICAgICBoLS07CiAgICAgICAgai0tOwogICAgICAgIHkrKzsKICAgICAgfQogICAgfQogICAgZC55MSA9IGQueTAgKyBzZWVuUm93OwogICAgZC5zcHJpdGUgPSBzcHJpdGUuc2xpY2UoMCwgKGQueTEgLSBkLnkwKSAqIHczMik7CiAgfQp9CgovLyBVc2UgbWFzay1iYXNlZCBjb2xsaXNpb24gZGV0ZWN0aW9uLgpmdW5jdGlvbiBjbG91ZENvbGxpZGUodGFnLCBib2FyZCwgc3cpIHsKICBzdyA+Pj0gNTsKICB2YXIgc3ByaXRlID0gdGFnLnNwcml0ZSwKICAgICAgdyA9IHRhZy53aWR0aCA+PiA1LAogICAgICBseCA9IHRhZy54IC0gKHcgPDwgNCksCiAgICAgIHN4ID0gbHggJiAweDdmLAogICAgICBtc3ggPSAzMiAtIHN4LAogICAgICBoID0gdGFnLnkxIC0gdGFnLnkwLAogICAgICB4ID0gKHRhZy55ICsgdGFnLnkwKSAqIHN3ICsgKGx4ID4+IDUpLAogICAgICBsYXN0OwogIGZvciAodmFyIGogPSAwOyBqIDwgaDsgaisrKSB7CiAgICBsYXN0ID0gMDsKICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IHc7IGkrKykgewogICAgICBpZiAoKChsYXN0IDw8IG1zeCkgfCAoaSA8IHcgPyAobGFzdCA9IHNwcml0ZVtqICogdyArIGldKSA+Pj4gc3ggOiAwKSkKICAgICAgICAgICYgYm9hcmRbeCArIGldKSByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHggKz0gc3c7CiAgfQogIHJldHVybiBmYWxzZTsKfQoKZnVuY3Rpb24gY2xvdWRCb3VuZHMoYm91bmRzLCBkKSB7CiAgdmFyIGIwID0gYm91bmRzWzBdLAogICAgICBiMSA9IGJvdW5kc1sxXTsKICBpZiAoZC54ICsgZC54MCA8IGIwLngpIGIwLnggPSBkLnggKyBkLngwOwogIGlmIChkLnkgKyBkLnkwIDwgYjAueSkgYjAueSA9IGQueSArIGQueTA7CiAgaWYgKGQueCArIGQueDEgPiBiMS54KSBiMS54ID0gZC54ICsgZC54MTsKICBpZiAoZC55ICsgZC55MSA+IGIxLnkpIGIxLnkgPSBkLnkgKyBkLnkxOwp9CgpmdW5jdGlvbiBjb2xsaWRlUmVjdHMoYSwgYikgewogIHJldHVybiBhLnggKyBhLngxID4gYlswXS54ICYmIGEueCArIGEueDAgPCBiWzFdLnggJiYgYS55ICsgYS55MSA+IGJbMF0ueSAmJiBhLnkgKyBhLnkwIDwgYlsxXS55Owp9CgpmdW5jdGlvbiBhcmNoaW1lZGVhblNwaXJhbChzaXplKSB7CiAgdmFyIGUgPSBzaXplWzBdIC8gc2l6ZVsxXTsKICByZXR1cm4gZnVuY3Rpb24odCkgewogICAgcmV0dXJuIFtlICogKHQgKj0gLjEpICogTWF0aC5jb3ModCksIHQgKiBNYXRoLnNpbih0KV07CiAgfTsKfQoKZnVuY3Rpb24gcmVjdGFuZ3VsYXJTcGlyYWwoc2l6ZSkgewogIHZhciBkeSA9IDQsCiAgICAgIGR4ID0gZHkgKiBzaXplWzBdIC8gc2l6ZVsxXSwKICAgICAgeCA9IDAsCiAgICAgIHkgPSAwOwogIHJldHVybiBmdW5jdGlvbih0KSB7CiAgICB2YXIgc2lnbiA9IHQgPCAwID8gLTEgOiAxOwogICAgLy8gU2VlIHRyaWFuZ3VsYXIgbnVtYmVyczogVF9uID0gbiAqIChuICsgMSkgLyAyLgogICAgc3dpdGNoICgoTWF0aC5zcXJ0KDEgKyA0ICogc2lnbiAqIHQpIC0gc2lnbikgJiAzKSB7CiAgICAgIGNhc2UgMDogIHggKz0gZHg7IGJyZWFrOwogICAgICBjYXNlIDE6ICB5ICs9IGR5OyBicmVhazsKICAgICAgY2FzZSAyOiAgeCAtPSBkeDsgYnJlYWs7CiAgICAgIGRlZmF1bHQ6IHkgLT0gZHk7IGJyZWFrOwogICAgfQogICAgcmV0dXJuIFt4LCB5XTsKICB9Owp9CgovLyBUT0RPIHJldXNlIGFycmF5cz8KZnVuY3Rpb24gemVyb0FycmF5KG4pIHsKICB2YXIgYSA9IFtdLAogICAgICBpID0gLTE7CiAgd2hpbGUgKCsraSA8IG4pIGFbaV0gPSAwOwogIHJldHVybiBhOwp9CgpmdW5jdGlvbiBjbG91ZENhbnZhcygpIHsKICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7Cn0KCmZ1bmN0aW9uIGZ1bmN0b3IoZCkgewogIHJldHVybiB0eXBlb2YgZCA9PT0gImZ1bmN0aW9uIiA/IGQgOiBmdW5jdGlvbigpIHsgcmV0dXJuIGQ7IH07Cn0KCn0seyJkMy1kaXNwYXRjaCI6Mn1dLDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpewovLyBodHRwczovL2QzanMub3JnL2QzLWRpc3BhdGNoLyB2MS4wLjYgQ29weXJpZ2h0IDIwMTkgTWlrZSBCb3N0b2NrCihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7CnR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IGZhY3RvcnkoZXhwb3J0cykgOgp0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWydleHBvcnRzJ10sIGZhY3RvcnkpIDoKKGdsb2JhbCA9IGdsb2JhbCB8fCBzZWxmLCBmYWN0b3J5KGdsb2JhbC5kMyA9IGdsb2JhbC5kMyB8fCB7fSkpOwp9KHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzKSB7ICd1c2Ugc3RyaWN0JzsKCnZhciBub29wID0ge3ZhbHVlOiBmdW5jdGlvbigpIHt9fTsKCmZ1bmN0aW9uIGRpc3BhdGNoKCkgewogIGZvciAodmFyIGkgPSAwLCBuID0gYXJndW1lbnRzLmxlbmd0aCwgXyA9IHt9LCB0OyBpIDwgbjsgKytpKSB7CiAgICBpZiAoISh0ID0gYXJndW1lbnRzW2ldICsgIiIpIHx8ICh0IGluIF8pIHx8IC9bXHMuXS8udGVzdCh0KSkgdGhyb3cgbmV3IEVycm9yKCJpbGxlZ2FsIHR5cGU6ICIgKyB0KTsKICAgIF9bdF0gPSBbXTsKICB9CiAgcmV0dXJuIG5ldyBEaXNwYXRjaChfKTsKfQoKZnVuY3Rpb24gRGlzcGF0Y2goXykgewogIHRoaXMuXyA9IF87Cn0KCmZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcywgdHlwZXMpIHsKICByZXR1cm4gdHlwZW5hbWVzLnRyaW0oKS5zcGxpdCgvXnxccysvKS5tYXAoZnVuY3Rpb24odCkgewogICAgdmFyIG5hbWUgPSAiIiwgaSA9IHQuaW5kZXhPZigiLiIpOwogICAgaWYgKGkgPj0gMCkgbmFtZSA9IHQuc2xpY2UoaSArIDEpLCB0ID0gdC5zbGljZSgwLCBpKTsKICAgIGlmICh0ICYmICF0eXBlcy5oYXNPd25Qcm9wZXJ0eSh0KSkgdGhyb3cgbmV3IEVycm9yKCJ1bmtub3duIHR5cGU6ICIgKyB0KTsKICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07CiAgfSk7Cn0KCkRpc3BhdGNoLnByb3RvdHlwZSA9IGRpc3BhdGNoLnByb3RvdHlwZSA9IHsKICBjb25zdHJ1Y3RvcjogRGlzcGF0Y2gsCiAgb246IGZ1bmN0aW9uKHR5cGVuYW1lLCBjYWxsYmFjaykgewogICAgdmFyIF8gPSB0aGlzLl8sCiAgICAgICAgVCA9IHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lICsgIiIsIF8pLAogICAgICAgIHQsCiAgICAgICAgaSA9IC0xLAogICAgICAgIG4gPSBULmxlbmd0aDsKCiAgICAvLyBJZiBubyBjYWxsYmFjayB3YXMgc3BlY2lmaWVkLCByZXR1cm4gdGhlIGNhbGxiYWNrIG9mIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLgogICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7CiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKHQgPSAodHlwZW5hbWUgPSBUW2ldKS50eXBlKSAmJiAodCA9IGdldChfW3RdLCB0eXBlbmFtZS5uYW1lKSkpIHJldHVybiB0OwogICAgICByZXR1cm47CiAgICB9CgogICAgLy8gSWYgYSB0eXBlIHdhcyBzcGVjaWZpZWQsIHNldCB0aGUgY2FsbGJhY2sgZm9yIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLgogICAgLy8gT3RoZXJ3aXNlLCBpZiBhIG51bGwgY2FsbGJhY2sgd2FzIHNwZWNpZmllZCwgcmVtb3ZlIGNhbGxiYWNrcyBvZiB0aGUgZ2l2ZW4gbmFtZS4KICAgIGlmIChjYWxsYmFjayAhPSBudWxsICYmIHR5cGVvZiBjYWxsYmFjayAhPT0gImZ1bmN0aW9uIikgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGNhbGxiYWNrOiAiICsgY2FsbGJhY2spOwogICAgd2hpbGUgKCsraSA8IG4pIHsKICAgICAgaWYgKHQgPSAodHlwZW5hbWUgPSBUW2ldKS50eXBlKSBfW3RdID0gc2V0KF9bdF0sIHR5cGVuYW1lLm5hbWUsIGNhbGxiYWNrKTsKICAgICAgZWxzZSBpZiAoY2FsbGJhY2sgPT0gbnVsbCkgZm9yICh0IGluIF8pIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgbnVsbCk7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfSwKICBjb3B5OiBmdW5jdGlvbigpIHsKICAgIHZhciBjb3B5ID0ge30sIF8gPSB0aGlzLl87CiAgICBmb3IgKHZhciB0IGluIF8pIGNvcHlbdF0gPSBfW3RdLnNsaWNlKCk7CiAgICByZXR1cm4gbmV3IERpc3BhdGNoKGNvcHkpOwogIH0sCiAgY2FsbDogZnVuY3Rpb24odHlwZSwgdGhhdCkgewogICAgaWYgKChuID0gYXJndW1lbnRzLmxlbmd0aCAtIDIpID4gMCkgZm9yICh2YXIgYXJncyA9IG5ldyBBcnJheShuKSwgaSA9IDAsIG4sIHQ7IGkgPCBuOyArK2kpIGFyZ3NbaV0gPSBhcmd1bWVudHNbaSArIDJdOwogICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcigidW5rbm93biB0eXBlOiAiICsgdHlwZSk7CiAgICBmb3IgKHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7CiAgfSwKICBhcHBseTogZnVuY3Rpb24odHlwZSwgdGhhdCwgYXJncykgewogICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcigidW5rbm93biB0eXBlOiAiICsgdHlwZSk7CiAgICBmb3IgKHZhciB0ID0gdGhpcy5fW3R5cGVdLCBpID0gMCwgbiA9IHQubGVuZ3RoOyBpIDwgbjsgKytpKSB0W2ldLnZhbHVlLmFwcGx5KHRoYXQsIGFyZ3MpOwogIH0KfTsKCmZ1bmN0aW9uIGdldCh0eXBlLCBuYW1lKSB7CiAgZm9yICh2YXIgaSA9IDAsIG4gPSB0eXBlLmxlbmd0aCwgYzsgaSA8IG47ICsraSkgewogICAgaWYgKChjID0gdHlwZVtpXSkubmFtZSA9PT0gbmFtZSkgewogICAgICByZXR1cm4gYy52YWx1ZTsKICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHNldCh0eXBlLCBuYW1lLCBjYWxsYmFjaykgewogIGZvciAodmFyIGkgPSAwLCBuID0gdHlwZS5sZW5ndGg7IGkgPCBuOyArK2kpIHsKICAgIGlmICh0eXBlW2ldLm5hbWUgPT09IG5hbWUpIHsKICAgICAgdHlwZVtpXSA9IG5vb3AsIHR5cGUgPSB0eXBlLnNsaWNlKDAsIGkpLmNvbmNhdCh0eXBlLnNsaWNlKGkgKyAxKSk7CiAgICAgIGJyZWFrOwogICAgfQogIH0KICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgdHlwZS5wdXNoKHtuYW1lOiBuYW1lLCB2YWx1ZTogY2FsbGJhY2t9KTsKICByZXR1cm4gdHlwZTsKfQoKZXhwb3J0cy5kaXNwYXRjaCA9IGRpc3BhdGNoOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTsKCn0pKTsKCn0se31dfSx7fSxbMV0pKDEpCn0pOwo=", "name": "unpkg_com_d3_layout_cloud_js"}}